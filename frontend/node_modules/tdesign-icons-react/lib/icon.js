'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('./_chunks/dep-e42770e2.js');
var React = require('react');
var util_useSizeProps = require('./util/use-size-props.js');
var util_checkUrlAndLoad = require('./util/check-url-and-load.js');
require('./util/use-common-classname.js');
require('./util/use-config.js');
require('./util/config-context.js');

var _excluded = ["icon", "id", "className", "size", "style"];
function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
function render(node, id, rootProps) {
  return /*#__PURE__*/React.createElement(node.tag, _objectSpread(_objectSpread({
    key: id
  }, node.attrs), rootProps), (node.children || []).map(function (child, index) {
    return render(child, "".concat(id, "-").concat(node.tag, "-").concat(index));
  }));
}
var IconBase = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var icon = props.icon,
    id = props.id,
    className = props.className,
    size = props.size,
    style = props.style,
    restProps = index._objectWithoutProperties(props, _excluded);
  var _useSizeProps = util_useSizeProps['default'](size),
    sizeClassName = _useSizeProps.className,
    sizeStyle = _useSizeProps.style;
  var cls = index.classNames("t-icon", "t-icon-".concat(id), className, sizeClassName);
  React.useEffect(function () {
    util_checkUrlAndLoad.loadStylesheet();
  }, []);
  return render(icon, "".concat(id), _objectSpread({
    ref: ref,
    className: cls,
    style: _objectSpread(_objectSpread({}, style), sizeStyle)
  }, restProps));
});

exports.IconBase = IconBase;
//# sourceMappingURL=icon.js.map
