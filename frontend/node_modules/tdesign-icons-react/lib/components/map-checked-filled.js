'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-e42770e2.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M6.5 2.71741L1 5.92575V21.5001L6.5 19.2328V2.71741zM8.5 18.9097L13.5 21.8625V21.6904C12.2673 20.5075 11.5 18.8434 11.5 17 11.5 15.1566 12.2673 13.4925 13.5 12.3096V5.09051L8.5 2.1377V18.9097zM21 2.50012V11.2322C20.1025 10.7644 19.0821 10.5 18 10.5 17.1141 10.5 16.2696 10.6772 15.5 10.9982V4.76744L21 2.50012z"
    }
  }, {
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M16.5864 21.6572L23.6575 14.5861L22.2432 13.1719L16.5864 18.8287L13.758 16.0003L12.3437 17.4145L16.5864 21.6572Z"
    }
  }]
};
var MapCheckedFilledIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "map-checked-filled",
    ref: ref,
    icon: element
  }));
});
MapCheckedFilledIcon.displayName = "MapCheckedFilledIcon";

exports.default = MapCheckedFilledIcon;
//# sourceMappingURL=map-checked-filled.js.map
