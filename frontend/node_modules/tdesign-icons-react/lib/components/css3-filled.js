'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-e42770e2.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M22.059 1L20.9614 20.2076L12.0002 23.568L3.03898 20.2076L1.94141 1H22.059ZM6.26746 15.4632L6.26764 15.4665L6.38163 17.4612L11.9998 19.568L17.6179 17.4612L18.0227 10.3768L10.9321 10.3768L18.2221 6.88688L18.33 5H5.48242L5.74635 7.01163L12.0007 7H13.3541L5.98542 10.5276L6.09109 12.3768L15.9052 12.3768L15.6955 16.0461L11.9998 17.432L8.30403 16.0461L8.26464 15.3568L8.20278 14.0734H6.19261L6.26746 15.4632Z"
    }
  }]
};
var Css3FilledIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "css3-filled",
    ref: ref,
    icon: element
  }));
});
Css3FilledIcon.displayName = "Css3FilledIcon";

exports.default = Css3FilledIcon;
//# sourceMappingURL=css3-filled.js.map
