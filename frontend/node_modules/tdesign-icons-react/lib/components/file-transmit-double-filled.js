'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-e42770e2.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M4.79575 16.2884L6.08705 15.0001L4.79575 13.7115L6.20847 12.2958L8.91859 15.0002L6.20835 17.7043L4.79575 16.2884Z"
    }
  }, {
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M0 3H7.41421L11 6.58579V3H18.4142L24 8.58579V21H0V3ZM11 19V11H5V5H2V19H11ZM7 5.41421V9H10.5858L7 5.41421ZM18 5.5V9H21.5L18 5.5ZM19.2041 16.2883L17.9128 14.9999L19.2041 13.7113L17.7914 12.2956L15.0813 15L17.7915 17.7041L19.2041 16.2883Z"
    }
  }]
};
var FileTransmitDoubleFilledIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "file-transmit-double-filled",
    ref: ref,
    icon: element
  }));
});
FileTransmitDoubleFilledIcon.displayName = "FileTransmitDoubleFilledIcon";

exports.default = FileTransmitDoubleFilledIcon;
//# sourceMappingURL=file-transmit-double-filled.js.map
