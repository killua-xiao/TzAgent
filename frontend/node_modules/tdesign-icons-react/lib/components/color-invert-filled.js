'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-e42770e2.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M11 2.58569L5.98959 7.5961C2.67014 10.9156 2.67014 16.2975 5.98959 19.6169 7.39452 21.0218 9.1689 21.8322 11 22.0478V2.58569zM13 22.0478C13.8092 21.9525 14.6073 21.7411 15.3673 21.4135 15.6098 21.3117 15.8485 21.1951 16.0852 21.063 16.7711 20.6868 17.4161 20.2089 17.998 19.6293 18.8886 18.7953 19.5191 17.7894 19.9155 16.71 21.1094 13.6604 20.4744 10.0601 18.0104 7.5961L13 2.58569V22.0478z"
    }
  }]
};
var ColorInvertFilledIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "color-invert-filled",
    ref: ref,
    icon: element
  }));
});
ColorInvertFilledIcon.displayName = "ColorInvertFilledIcon";

exports.default = ColorInvertFilledIcon;
//# sourceMappingURL=color-invert-filled.js.map
