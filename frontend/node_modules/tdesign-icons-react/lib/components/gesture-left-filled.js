'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-e42770e2.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M4 8.07043C2.61929 8.07043 1.5 9.18972 1.5 10.5704C1.5 11.9511 2.61929 13.0704 4 13.0704L8 13.0704V15.0297C8 15.5609 8.14102 16.0825 8.40866 16.5413L10.8176 20.6709C11.5331 21.8974 13.0105 22.4544 14.3576 22.0053L20.4487 19.975C21.6737 19.5666 22.5 18.4202 22.5 17.1289V9.05523C22.5 8.12382 22.0674 7.24525 21.3291 6.67736L15.0416 1.84082L13.5025 2.8669C12.8282 3.31645 12.4918 4.12852 12.6508 4.92323L13.2802 8.07043L4 8.07043Z"
    }
  }]
};
var GestureLeftFilledIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "gesture-left-filled",
    ref: ref,
    icon: element
  }));
});
GestureLeftFilledIcon.displayName = "GestureLeftFilledIcon";

exports.default = GestureLeftFilledIcon;
//# sourceMappingURL=gesture-left-filled.js.map
