'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-e42770e2.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M7 14C7 12.8954 7.89543 12 9 12C10.1046 12 11 12.8954 11 14C11 15.1046 10.1046 16 9 16C7.89543 16 7 15.1046 7 14Z"
    }
  }, {
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M23 21.9998H1V6.38181L12.4472 0.658203L13.3416 2.44706L6.23607 5.99985H23V21.9998ZM9 10C6.79086 10 5 11.7909 5 14C5 16.2091 6.79086 18 9 18C11.2091 18 13 16.2091 13 14C13 11.7909 11.2091 10 9 10ZM19 11H15V13H19V11ZM19 15H15V17H19V15Z"
    }
  }]
};
var Radio1FilledIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "radio-1-filled",
    ref: ref,
    icon: element
  }));
});
Radio1FilledIcon.displayName = "Radio1FilledIcon";

exports.default = Radio1FilledIcon;
//# sourceMappingURL=radio-1-filled.js.map
