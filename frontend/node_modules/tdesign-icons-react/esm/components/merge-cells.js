import { _ as _defineProperty } from '../_chunks/dep-96db17af.js';
import { forwardRef, createElement } from 'react';
import { IconBase } from '../icon.js';
import '../util/use-size-props.js';
import '../util/use-common-classname.js';
import '../util/use-config.js';
import '../util/config-context.js';
import '../util/check-url-and-load.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M2 2H22V22H2V2ZM4 4V20H11V16H13V20H20V4H13V8H11V4H4ZM17.182 10.232L15.4142 11.9998L17.182 13.7676L15.7678 15.1818L12.5858 11.9998L15.7678 8.81783L17.182 10.232ZM8.32989 8.81821L11.5119 12.0002L8.32989 15.1822L6.91568 13.768L8.68344 12.0002L6.91568 10.2324L8.32989 8.81821Z"
    }
  }]
};
var MergeCellsIcon = /*#__PURE__*/forwardRef(function (props, ref) {
  return /*#__PURE__*/createElement(IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "merge-cells",
    ref: ref,
    icon: element
  }));
});
MergeCellsIcon.displayName = "MergeCellsIcon";

export default MergeCellsIcon;
//# sourceMappingURL=merge-cells.js.map
