import { _ as _defineProperty } from '../_chunks/dep-96db17af.js';
import { forwardRef, createElement } from 'react';
import { IconBase } from '../icon.js';
import '../util/use-size-props.js';
import '../util/use-common-classname.js';
import '../util/use-config.js';
import '../util/config-context.js';
import '../util/check-url-and-load.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M13.4033 5.06068L16.9389 8.59622L22.5957 2.93936L21.1815 1.52515L16.9389 5.76779L14.8175 3.64647L13.4033 5.06068Z"
    }
  }, {
    "tag": "path",
    "attrs": {
      "fill": "currentColor",
      "d": "M12.5 5C12.5 4.29442 12.6329 3.61987 12.8749 3H4V22.9432L12 17.2289L20 22.9432V10.1251C19.3801 10.3671 18.7056 10.5 18 10.5C14.9624 10.5 12.5 8.03757 12.5 5Z"
    }
  }]
};
var BookmarkCheckedFilledIcon = /*#__PURE__*/forwardRef(function (props, ref) {
  return /*#__PURE__*/createElement(IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "bookmark-checked-filled",
    ref: ref,
    icon: element
  }));
});
BookmarkCheckedFilledIcon.displayName = "BookmarkCheckedFilledIcon";

export default BookmarkCheckedFilledIcon;
//# sourceMappingURL=bookmark-checked-filled.js.map
