{"version":3,"file":"svg-sprite.js","sources":["../../src/svg-sprite/svg-sprite.tsx"],"sourcesContent":["// eslint-disable-next-line no-use-before-define\nimport * as React from 'react';\nimport {\n  forwardRef, Ref, useEffect, useMemo, CSSProperties,\n} from 'react';\nimport classNames from 'classnames';\nimport useConfig from '../util/use-config';\nimport useSizeProps from '../util/use-size-props';\nimport { loadScript, loadStylesheet } from '../util/check-url-and-load';\n\nimport { IconProps as BaseIconProps } from './type';\n\nexport interface SpriteIconProps extends BaseIconProps {\n  /**\n   * 图标类型\n   */\n  name?: string;\n\n  /**\n   * 图标地址\n   */\n  url?: string | string[];\n\n  /**\n   * @default true\n   */\n  loadDefaultIcons?: boolean;\n\n  /**\n   * 样式\n   */\n  style?: CSSProperties;\n\n  /**\n   * 类名\n   */\n  className?: string;\n}\n\nconst CDN_SVGSPRITE_URL = 'https://tdesign.gtimg.com/icon/0.3.2/fonts/index.js';\n\n/**\n * 图标组件\n * svg 版本\n */\nexport const Icon = forwardRef((props: SpriteIconProps, ref: Ref<SVGSVGElement>) => {\n  const { classPrefix } = useConfig();\n  const {\n    name,\n    size,\n    url,\n    loadDefaultIcons = true,\n    className: customClassName,\n    style: customStyle,\n    ...restProps\n  } = props;\n  const { className: sizeClassName, style: sizeStyle } = useSizeProps(size);\n\n  const className = useMemo(\n    () => {\n      const iconName = url ? name : `${classPrefix}-icon-${name}`;\n      return classNames(`${classPrefix}-icon`, iconName, sizeClassName, customClassName);\n    },\n    [classPrefix, customClassName, name, sizeClassName],\n  );\n\n  useEffect(() => {\n    loadStylesheet();\n  }, []);\n\n  useEffect(() => {\n    // 不加载图标\n    if (!loadDefaultIcons) {\n      return;\n    }\n\n    loadScript(CDN_SVGSPRITE_URL, `${classPrefix}-svg-js-stylesheet--unique-class`);\n  }, [classPrefix, loadDefaultIcons]);\n\n  // 加载 url\n  useEffect(() => {\n    const urls = Array.isArray(url) ? url : [url];\n    (urls as Array<string>).forEach((url) => {\n      loadScript(url, `${classPrefix}-svg-js-stylesheet--unique-class`);\n    });\n  }, [classPrefix, url]);\n\n  return (\n    <svg ref={ref} className={className} style={{ ...customStyle, ...sizeStyle }} {...restProps}>\n      <use xlinkHref={url ? `#${name}` : `#t-icon-${name}`} />\n    </svg>\n  );\n});\n\nIcon.displayName = 'Icon';\n"],"names":["CDN_SVGSPRITE_URL","Icon","forwardRef","props","ref","useConfig","classPrefix","name","size","url","loadDefaultIcons","customClassName","className","customStyle","style","restProps","useSizeProps","sizeClassName","sizeStyle","useMemo","iconName","classNames","urls","Array","isArray","forEach","url2","xlinkHref","displayName"],"mappings":";;;;;;;;;;;;AAuCA,IAAMA,oBAAoB;IAMbC,oBAAOC,WAAW,UAACC,OAAwBC,KAA4B;mBAC1DC;IAAhBC,yBAAAA;MAENC,OAOEJ,MAPFI;IACAC,OAMEL,MANFK;IACAC,MAKEN,MALFM;4BAKEN,MAJFO;IAAAA,sDAAmB;IACRC,kBAGTR,MAHFS;IACOC,cAELV,MAFFW;IACGC,qCACDZ;sBACmDa,aAAaR;IAAjDS,8BAAXL;IAAiCM,0BAAPJ;MAE5BF,YAAYO,QAChB,YAAM;QACEC,WAAWX,MAAMF,iBAAUD,8BAAoBC;WAC9Cc,qBAAcf,uBAAoBc,UAAUH,eAAeN;KAEpE,CAACL,aAAaK,iBAAiBJ,MAAMU;YAG7B,YAAM;;KAEb;YAEO,YAAM;QAEV,CAACP,kBAAkB;;;eAIZV,6BAAsBM;KAChC,CAACA,aAAaI;YAGP,YAAM;QACRY,OAAOC,MAAMC,QAAQf,OAAOA,MAAM,CAACA;IACxCa,KAAuBG,QAAQ,UAACC,MAAQ;iBAC5BA,gBAAQpB;;KAEpB,CAACA,aAAaG;4CAGd;IAAIL,KAAAA;IAAUQ,WAAAA;IAAsBE,uCAAYD,cAAgBK;KAAiBH,+CAC/E,OAAD;IAAKY,WAAWlB,iBAAUF,0BAAoBA;;AAAA;AAKpDN,KAAK2B,cAAc;;;;"}