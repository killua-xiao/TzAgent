/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { useMemo } from 'react';
import useConfig from '../../hooks/useConfig.js';
import '../../config-provider/ConfigContext.js';
import '../../_chunks/dep-cb0a3966.js';
import '../../_chunks/dep-eca3a3de.js';
import 'lodash-es';
import '../../locale/zh_CN.js';
import '../../_chunks/dep-e29214cb.js';
import 'dayjs';
import '../../_chunks/dep-3c9ab31a.js';

function useClassName() {
  var _useConfig = useConfig(),
    classPrefix = _useConfig.classPrefix;
  var classNames = useMemo(function () {
    return {
      classPrefix: classPrefix,
      tableBaseClass: {
        table: "".concat(classPrefix, "-table"),
        columnResizableTable: "".concat(classPrefix, "-table--column-resizable"),
        body: "".concat(classPrefix, "-table__body"),
        overflowVisible: "".concat(classPrefix, "-table--overflow-visible"),
        content: "".concat(classPrefix, "-table__content"),
        topContent: "".concat(classPrefix, "-table__top-content"),
        bottomContent: "".concat(classPrefix, "-table__bottom-content"),
        paginationWrap: "".concat(classPrefix, "-table__pagination-wrap"),
        tdLastRow: "".concat(classPrefix, "-table__td-last-row"),
        tdFirstCol: "".concat(classPrefix, "-table__td-first-col"),
        thCellInner: "".concat(classPrefix, "-table__th-cell-inner"),
        tableRowEdit: "".concat(classPrefix, "-table--row-edit"),
        cellEditable: "".concat(classPrefix, "-table__cell--editable"),
        cellEditWrap: "".concat(classPrefix, "-table__cell-wrap"),
        bordered: "".concat(classPrefix, "-table--bordered"),
        striped: "".concat(classPrefix, "-table--striped"),
        hover: "".concat(classPrefix, "-table--hoverable"),
        loading: "".concat(classPrefix, "-table--loading"),
        rowspanAndColspan: "".concat(classPrefix, "-table--rowspan-colspan"),
        empty: "".concat(classPrefix, "-table__empty"),
        emptyRow: "".concat(classPrefix, "-table__empty-row"),
        headerFixed: "".concat(classPrefix, "-table--header-fixed"),
        columnFixed: "".concat(classPrefix, "-table--column-fixed"),
        widthOverflow: "".concat(classPrefix, "-table--width-overflow"),
        multipleHeader: "".concat(classPrefix, "-table--multiple-header"),
        footerAffixed: "".concat(classPrefix, "-table--footer-affixed"),
        horizontalBarAffixed: "".concat(classPrefix, "-table--horizontal-bar-affixed"),
        affixedHeader: "".concat(classPrefix, "-table--affixed-header"),
        affixedHeaderElm: "".concat(classPrefix, "-table__affixed-header-elm"),
        affixedFooterElm: "".concat(classPrefix, "-table__affixed-footer-elm"),
        affixedFooterWrap: "".concat(classPrefix, "-table__affixed-footer-wrap"),
        scrollbarDivider: "".concat(classPrefix, "-table__scroll-bar-divider"),
        fullHeight: "".concat(classPrefix, "-table--full-height"),
        resizeLine: "".concat(classPrefix, "-table__resize-line"),
        obviousScrollbar: "".concat(classPrefix, "-table__scrollbar--obvious"),
        affixedHeaderWrap: "".concat(classPrefix, "-table__affixed-header-elm-wrap")
      },
      tdAlignClasses: {
        left: "".concat(classPrefix, "-align-left"),
        right: "".concat(classPrefix, "-align-right"),
        center: "".concat(classPrefix, "-align-center")
      },
      tableHeaderClasses: {
        header: "".concat(classPrefix, "-table__header"),
        thBordered: "".concat(classPrefix, "-table__header-th--bordered"),
        fixed: "".concat(classPrefix, "-table__header--fixed"),
        multipleHeader: "".concat(classPrefix, "-table__header--multiple")
      },
      tableFooterClasses: {
        footer: "".concat(classPrefix, "-table__footer"),
        fixed: "".concat(classPrefix, "-table__footer--fixed")
      },
      tableAlignClasses: {
        top: "".concat(classPrefix, "-vertical-align-top"),
        middle: "".concat(classPrefix, "-vertical-align-middle"),
        bottom: "".concat(classPrefix, "-vertical-align-bottom")
      },
      tableRowFixedClasses: {
        top: "".concat(classPrefix, "-table__row--fixed-top"),
        bottom: "".concat(classPrefix, "-table__row--fixed-bottom"),
        firstBottom: "".concat(classPrefix, "-table__row--fixed-bottom-first"),
        withoutBorderBottom: "".concat(classPrefix, "-table__row--without-border-bottom")
      },
      tableColFixedClasses: {
        left: "".concat(classPrefix, "-table__cell--fixed-left"),
        right: "".concat(classPrefix, "-table__cell--fixed-right"),
        lastLeft: "".concat(classPrefix, "-table__cell--fixed-left-last"),
        firstRight: "".concat(classPrefix, "-table__cell--fixed-right-first"),
        leftShadow: "".concat(classPrefix, "-table__content--scrollable-to-left"),
        rightShadow: "".concat(classPrefix, "-table__content--scrollable-to-right")
      },
      tableLayoutClasses: {
        auto: "".concat(classPrefix, "-table--layout-auto"),
        fixed: "".concat(classPrefix, "-table--layout-fixed")
      },
      tdEllipsisClass: "".concat(classPrefix, "-table-td--ellipsis"),
      tableFullRowClasses: {
        base: "".concat(classPrefix, "-table__row--full"),
        innerFullRow: "".concat(classPrefix, "-table__row-full-inner"),
        innerFullElement: "".concat(classPrefix, "-table__row-full-element"),
        firstFullRow: "".concat(classPrefix, "-table__first-full-row"),
        lastFullRow: "".concat(classPrefix, "-table__last-full-row")
      },
      tableExpandClasses: {
        iconBox: "".concat(classPrefix, "-table__expand-box"),
        iconCell: "".concat(classPrefix, "-table__expandable-icon-cell"),
        rowExpanded: "".concat(classPrefix, "-table__row--expanded"),
        rowFolded: "".concat(classPrefix, "-table__row--folded"),
        row: "".concat(classPrefix, "-table__expanded-row"),
        rowInner: "".concat(classPrefix, "-table__expanded-row-inner"),
        expanded: "".concat(classPrefix, "-table__row--expanded"),
        collapsed: "".concat(classPrefix, "-table__row--collapsed")
      },
      tableSortClasses: {
        sortable: "".concat(classPrefix, "-table__cell--sortable"),
        sortColumn: "".concat(classPrefix, "-table__sort-column"),
        title: "".concat(classPrefix, "-table__cell--title"),
        trigger: "".concat(classPrefix, "-table__cell--sort-trigger"),
        doubleIcon: "".concat(classPrefix, "-table__double-icons"),
        sortIcon: "".concat(classPrefix, "-table__sort-icon"),
        iconDirection: {
          asc: "".concat(classPrefix, "-table-sort-asc"),
          desc: "".concat(classPrefix, "-table-sort-desc")
        },
        iconActive: "".concat(classPrefix, "-table__sort-icon--active"),
        iconDefault: "".concat(classPrefix, "-icon-sort--default")
      },
      tableSelectedClasses: {
        selected: "".concat(classPrefix, "-table__row--selected"),
        disabled: "".concat(classPrefix, "-table__row--disabled"),
        checkCell: "".concat(classPrefix, "-table__cell-check")
      },
      tableFilterClasses: {
        filterable: "".concat(classPrefix, "-table__cell--filterable"),
        popup: "".concat(classPrefix, "-table__filter-pop"),
        icon: "".concat(classPrefix, "-table__filter-icon"),
        popupContent: "".concat(classPrefix, "-table__filter-pop-content"),
        result: "".concat(classPrefix, "-table__filter-result"),
        inner: "".concat(classPrefix, "-table__row-filter-inner"),
        bottomButtons: "".concat(classPrefix, "-table__filter--bottom-buttons"),
        contentInner: "".concat(classPrefix, "-table__filter-pop-content-inner"),
        iconWrap: "".concat(classPrefix, "-table__filter-icon-wrap")
      },
      asyncLoadingClass: "".concat(classPrefix, "-table__async-loading"),
      isFocusClass: "".concat(classPrefix, "-is-focus"),
      isLoadingClass: "".concat(classPrefix, "-is-loading"),
      isLoadMoreClass: "".concat(classPrefix, "-is-load-more"),
      tableTreeClasses: {
        col: "".concat(classPrefix, "-table__tree-col"),
        inlineCol: "".concat(classPrefix, "-table__tree-col--inline"),
        icon: "".concat(classPrefix, "-table__tree-op-icon"),
        leafNode: "".concat(classPrefix, "-table__tree-leaf-node")
      },
      tableDraggableClasses: {
        rowDraggable: "".concat(classPrefix, "-table--row-draggable"),
        rowHandlerDraggable: "".concat(classPrefix, "-table--row-handler-draggable"),
        colDraggable: "".concat(classPrefix, "-table--col-draggable"),
        handle: "".concat(classPrefix, "-table__handle-draggable"),
        ghost: "".concat(classPrefix, "-table__ele--draggable-ghost"),
        chosen: "".concat(classPrefix, "-table__ele--draggable-chosen"),
        dragging: "".concat(classPrefix, "-table__ele--draggable-dragging"),
        dragSortTh: "".concat(classPrefix, "-table__th--drag-sort")
      },
      virtualScrollClasses: {
        cursor: "".concat(classPrefix, "-table__virtual-scroll-cursor"),
        header: "".concat(classPrefix, "-table__virtual-scroll-header")
      },
      positiveRotate90: "".concat(classPrefix, "-positive-rotate-90"),
      negativeRotate180: "".concat(classPrefix, "-negative-rotate-180")
    };
  }, [classPrefix]);
  return classNames;
}

export { useClassName as default };
//# sourceMappingURL=useClassName.js.map
