/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _toConsumableArray } from '../../_chunks/dep-87d110df.js';
import { _ as _defineProperty } from '../../_chunks/dep-cb0a3966.js';
import { _ as _slicedToArray } from '../../_chunks/dep-48805ab8.js';
import React, { useState, useEffect } from 'react';
import { isFunction } from 'lodash-es';
import SorterButton from '../SorterButton.js';
import useControlled from '../../hooks/useControlled.js';
import '../../_chunks/dep-026a4c6b.js';
import '../../_chunks/dep-eca3a3de.js';
import 'tdesign-icons-react';
import 'classnames';
import '../../hooks/useGlobalIcon.js';
import '../../hooks/useConfig.js';
import '../../config-provider/ConfigContext.js';
import '../../locale/zh_CN.js';
import '../../_chunks/dep-e29214cb.js';
import 'dayjs';
import '../../_chunks/dep-3c9ab31a.js';
import './useClassName.js';
import '../../tooltip/index.js';
import '../../tooltip/Tooltip.js';
import '../../_chunks/dep-6b660ef0.js';
import '../../popup/index.js';
import '../../popup/Popup.js';
import 'react-transition-group';
import '../../_util/ref.js';
import 'react-is';
import '../../_util/isFragment.js';
import '../../_chunks/dep-3a09424a.js';
import '../../common/Portal.js';
import 'react-dom';
import '../../hooks/useLayoutEffect.js';
import '../../hooks/useAnimation.js';
import '../../hooks/useAttach.js';
import '../../hooks/useDefaultProps.js';
import '../../hooks/useMutationObserver.js';
import '../../hooks/useLatest.js';
import '../../hooks/usePopper.js';
import '@popperjs/core';
import 'react-fast-compare';
import '../../hooks/useWindowSize.js';
import '../../popup/defaultProps.js';
import '../../popup/hooks/useTrigger.js';
import '../../_util/composeRefs.js';
import '../../_util/listener.js';
import '../../popup/utils/transition.js';
import '../../_util/noop.js';
import '../../popup/PopupPlugin.js';
import '../../_chunks/dep-a74cc5e4.js';
import '../../_util/react-render.js';
import '../../common/PluginContainer.js';
import '../../config-provider/index.js';
import '../../config-provider/ConfigProvider.js';
import '../../config-provider/type.js';
import '../../popup/style/css.js';
import '../../popup/type.js';
import '../../tooltip/defaultProps.js';
import '../../tooltip/TooltipLite.js';
import '../../hooks/useSwitch.js';
import '../../hooks/usePersistFn.js';
import '../../tooltip/style/css.js';
import '../../tooltip/type.js';
import '../../locale/LocalReceiver.js';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function useSorter(props) {
  var _useState = useState(),
    _useState2 = _slicedToArray(_useState, 2),
    originalData = _useState2[0],
    setOriginalData = _useState2[1];
  var _useControlled = useControlled(props, "sort", props.onSortChange),
    _useControlled2 = _slicedToArray(_useControlled, 2),
    tSortInfo = _useControlled2[0],
    setTSortInfo = _useControlled2[1];
  var _useControlled3 = useControlled(props, "data", props.onDataChange),
    _useControlled4 = _slicedToArray(_useControlled3, 2),
    tData = _useControlled4[0],
    setTData = _useControlled4[1];
  var sorterFuncMap = getSorterFuncMap(props.columns);
  var _useState3 = useState(),
    _useState4 = _slicedToArray(_useState3, 2),
    innerSort = _useState4[0],
    setInnerSort = _useState4[1];
  var sortArray = function () {
    var sort = tSortInfo;
    if (!sort) return [];
    return Array.isArray(sort) ? sort : [sort];
  }();
  var sortMap = function () {
    var sortMap2 = {};
    sortArray.forEach(function (info, index) {
      var sortBy = info.sortBy;
      sortMap2[sortBy] = _objectSpread({
        index: index
      }, info);
    });
    return sortMap2;
  }();
  function getSorterFuncMap(columns) {
    var map = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    for (var i = 0, len = columns.length; i < len; i++) {
      var _col$children;
      var col = columns[i];
      if (isFunction(col.sorter)) {
        map[col.colKey] = col.sorter;
      }
      if ((_col$children = col.children) !== null && _col$children !== void 0 && _col$children.length) {
        getSorterFuncMap(col.children, map);
      }
    }
    return map;
  }
  function handleDataSort(sortInfo) {
    var sort = sortInfo;
    if (!sorterFuncMap || !Object.keys(sorterFuncMap).length) return;
    if (!originalData) {
      setOriginalData(tData);
    }
    var isEmptyArraySort = !sort || sort instanceof Array && !sort.length;
    var isEmptyObjectSort = !(sort instanceof Array) && !(sort !== null && sort !== void 0 && sort.sortBy);
    if (isEmptyArraySort || isEmptyObjectSort) {
      setTData(originalData, {
        trigger: "sort"
      });
      return originalData;
    }
    var formattedSort = sort instanceof Array ? sort : [sort];
    var newData = tData.slice().sort(function (a, b) {
      var sortResult = 0;
      for (var i = 0, len = formattedSort.length; i < len; i++) {
        var item = formattedSort[i];
        var sortFunc = sorterFuncMap[item.sortBy];
        if (sortResult === 0 && sortFunc) {
          sortResult = item.descending ? sortFunc(b, a) : sortFunc(a, b);
        } else {
          break;
        }
      }
      return sortResult;
    });
    if (JSON.stringify(newData) === JSON.stringify(tData)) return;
    setTData(newData, {
      trigger: "sort"
    });
    return newData;
  }
  function handleSortHeaderClick(col, p) {
    var _props$onChange;
    var sortInfo;
    if (props.multipleSort) {
      sortInfo = getMultipleNextSort(col, p);
    } else {
      var sort = tSortInfo instanceof Array ? tSortInfo[0] : tSortInfo;
      sortInfo = getSingleNextSort(col, sort, p);
    }
    var newData = handleDataSort(sortInfo);
    var currentData = newData || tData;
    var currentDataSource = currentData;
    setTSortInfo(sortInfo, {
      currentDataSource: currentDataSource,
      col: col
    });
    (_props$onChange = props.onChange) === null || _props$onChange === void 0 || _props$onChange.call(props, {
      sorter: sortInfo
    }, {
      currentData: currentData,
      trigger: "sorter"
    });
    setInnerSort(sortInfo);
  }
  function getSortOrder(descending) {
    if (descending === void 0) return;
    return descending ? "desc" : "asc";
  }
  function getSingleNextSort(col, sortInfo, p) {
    if (sortInfo && sortInfo.sortBy === col.colKey && sortInfo.descending === p.descending) {
      return void 0;
    }
    return {
      sortBy: col.colKey,
      descending: p.descending
    };
  }
  function getMultipleNextSort(col, p) {
    var sort = tSortInfo;
    if (!(sort instanceof Array)) return;
    var colKey = col.colKey;
    var result = _toConsumableArray(sort);
    for (var i = 0, len = sort.length; i < len; i++) {
      if (sort[i].sortBy === colKey) {
        var next = getSingleNextSort(col, sort[i], p);
        next ? result[i] = next : result.splice(i, 1);
        return result;
      }
    }
    result.push({
      sortBy: colKey,
      descending: p.descending
    });
    return result;
  }
  function renderSortIcon(_ref) {
    var _sortMap$col$colKey;
    var col = _ref.col;
    if (!col.sorter) return null;
    var sorterButtonsProps = {
      sortType: col.sortType,
      sortOrder: getSortOrder((_sortMap$col$colKey = sortMap[col.colKey]) === null || _sortMap$col$colKey === void 0 ? void 0 : _sortMap$col$colKey.descending),
      sortIcon: props.sortIcon,
      hideSortTips: props.hideSortTips
    };
    return /* @__PURE__ */React.createElement(SorterButton, _objectSpread(_objectSpread({
      key: "sorter-button-".concat(col.colKey)
    }, sorterButtonsProps), {}, {
      onSortIconClick: function onSortIconClick(_, p) {
        return handleSortHeaderClick(col, p);
      }
    }));
  }
  var isSortInfoSame = function isSortInfoSame(a, b) {
    var tmpSortInfo = Array.isArray(a) ? a : [a];
    var tmpInnerSortInfo = Array.isArray(b) ? b : [b];
    if (tmpSortInfo.length && !b) return false;
    var _loop = function _loop() {
        var item = tmpSortInfo[i];
        var result = tmpInnerSortInfo.find(function (t) {
          return t.sortBy === item.sortBy;
        });
        if (!result) return {
          v: false
        };
        return {
          v: item.descending === result.descending
        };
      },
      _ret;
    for (var i = 0, len = tmpSortInfo.length; i < len; i++) {
      _ret = _loop();
      if (_ret) return _ret.v;
    }
  };
  useEffect(function () {
    if (!tSortInfo || !Object.keys(tSortInfo).length || !tData.length) return;
    if (!isSortInfoSame(tSortInfo, innerSort)) {
      handleDataSort(tSortInfo);
    }
  }, [tSortInfo, tData]);
  return {
    renderSortIcon: renderSortIcon
  };
}

export { useSorter as default };
//# sourceMappingURL=useSorter.js.map
