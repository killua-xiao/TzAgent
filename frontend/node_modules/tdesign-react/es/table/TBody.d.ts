import React, { MutableRefObject } from 'react';
import { TableClassName } from './hooks/useClassName';
import { BaseTableProps, RowAndColFixedPosition } from './interface';
import { TdBaseTableProps } from './type';
import { PaginationProps } from '../pagination';
import { VirtualScrollConfig } from '../hooks/useVirtualScroll';
export declare const ROW_AND_TD_LISTENERS: string[];
export interface TableBodyProps extends BaseTableProps {
    classPrefix: string;
    ellipsisOverlayClassName: string;
    rowAndColFixedPosition?: RowAndColFixedPosition;
    showColumnShadow?: {
        left: boolean;
        right: boolean;
    };
    tableRef?: MutableRefObject<HTMLDivElement>;
    tableContentRef?: MutableRefObject<HTMLDivElement>;
    cellEmptyContent: TdBaseTableProps['cellEmptyContent'];
    tableWidth?: MutableRefObject<number>;
    isWidthOverflow?: boolean;
    virtualConfig: VirtualScrollConfig;
    pagination?: PaginationProps;
    allTableClasses?: TableClassName;
    handleRowMounted?: (rowData: any) => void;
}
export declare const extendTableProps: string[];
declare function TBody(props: TableBodyProps): React.JSX.Element;
declare namespace TBody {
    var displayName: string;
}
export default TBody;
