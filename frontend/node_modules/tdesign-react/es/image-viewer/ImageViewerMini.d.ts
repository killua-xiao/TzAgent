import React, { KeyboardEvent, MouseEvent } from 'react';
import { TNode } from '../common';
import type { ImageInfo, ImageScale, ImageViewerScale, TdImageViewerProps } from './type';
export interface ImageModalMiniProps {
    visible: boolean;
    title?: TNode;
    draggable: boolean;
    index: number;
    scale: number;
    mirror: number;
    images: ImageInfo[];
    imageScale: ImageScale;
    viewerScale: ImageViewerScale;
    rotateZ: number;
    currentImage: ImageInfo;
    zIndex: number;
    errorText: string;
    tipText: {
        mirror: string;
        rotate: string;
        originalSize: string;
    };
    imageReferrerpolicy?: TdImageViewerProps['imageReferrerpolicy'];
    prev: () => void;
    next: () => void;
    onMirror: () => void;
    onZoom: () => void;
    onZoomOut: () => void;
    onReset: () => void;
    onRotate: (red: number) => void;
    onClose: (context: {
        trigger: 'close-btn' | 'overlay' | 'esc';
        e: MouseEvent<HTMLElement> | KeyboardEvent;
    }) => void;
}
export declare const ImageModalMiniContent: React.FC<ImageModalMiniProps>;
export declare const ImageModalMini: React.FC<ImageModalMiniProps>;
