/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-cb0a3966.js';
import { _ as _slicedToArray } from '../_chunks/dep-48805ab8.js';
import { _ as _objectWithoutProperties } from '../_chunks/dep-6b660ef0.js';
import React, { useMemo } from 'react';
import classNames from 'classnames';
import { QRCodeCanvas } from './QRCodeCanvas.js';
import { QRCodeSVG } from './QRCodeSVG.js';
import useDefaultProps from '../hooks/useDefaultProps.js';
import { qRCodeDefaultProps } from './defaultProps.js';
import useConfig from '../hooks/useConfig.js';
import { useLocaleReceiver } from '../locale/LocalReceiver.js';
import QRcodeStatus from './QRCodeStatus.js';
import useVariables from '../hooks/useVariables.js';
import '../_chunks/dep-eca3a3de.js';
import '../_chunks/dep-026a4c6b.js';
import '../_chunks/dep-85b29e30.js';
import '../_chunks/dep-83726008.js';
import '../config-provider/ConfigContext.js';
import 'lodash-es';
import '../locale/zh_CN.js';
import '../_chunks/dep-e29214cb.js';
import 'dayjs';
import '../_chunks/dep-3c9ab31a.js';
import '../config-provider/index.js';
import '../config-provider/ConfigProvider.js';
import '../config-provider/type.js';
import 'tdesign-icons-react';
import '../loading/index.js';
import '../loading/Loading.js';
import '../_chunks/dep-3a09424a.js';
import '../common/Portal.js';
import 'react-dom';
import '../hooks/useLayoutEffect.js';
import '../loading/gradient.js';
import '../_chunks/dep-c48e2ca1.js';
import '../_chunks/dep-1630b9b4.js';
import '../_chunks/dep-87d110df.js';
import '../hooks/useDomRefCallback.js';
import '../loading/defaultProps.js';
import '../loading/plugin.js';
import '../_util/react-render.js';
import '../_chunks/dep-a74cc5e4.js';
import '../common/PluginContainer.js';
import '../loading/style/css.js';
import '../loading/type.js';
import '../_chunks/dep-55732ade.js';
import '../hooks/useMutationObserver.js';
import '../hooks/useLatest.js';

var _excluded = ["className", "value", "borderless", "iconSize", "color", "bgColor", "style", "icon", "size", "type", "status", "onRefresh", "statusRender"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var QRCode = function QRCode(props) {
  var _iconSize$height, _iconSize$width, _style$width, _style$height;
  var _useDefaultProps = useDefaultProps(props, qRCodeDefaultProps),
    className = _useDefaultProps.className,
    value = _useDefaultProps.value,
    borderless = _useDefaultProps.borderless,
    iconSize = _useDefaultProps.iconSize,
    color = _useDefaultProps.color,
    bgColor = _useDefaultProps.bgColor,
    style = _useDefaultProps.style,
    icon = _useDefaultProps.icon,
    size = _useDefaultProps.size,
    type = _useDefaultProps.type,
    status = _useDefaultProps.status,
    onRefresh = _useDefaultProps.onRefresh,
    statusRender = _useDefaultProps.statusRender,
    rest = _objectWithoutProperties(_useDefaultProps, _excluded);
  var _useConfig = useConfig(),
    classPrefix = _useConfig.classPrefix;
  var _useLocaleReceiver = useLocaleReceiver("qrcode"),
    _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 1),
    locale = _useLocaleReceiver2[0];
  var _useVariables = useVariables({
      themeFgColor: "--td-text-color-primary",
      themeBgColor: "--td-bg-color-specialcomponent"
    }),
    themeFgColor = _useVariables.themeFgColor,
    themeBgColor = _useVariables.themeBgColor;
  var finalBgColor = useMemo(function () {
    return bgColor || themeBgColor || "transparent";
  }, [bgColor, themeBgColor]);
  if (!value) {
    return null;
  }
  var imageSettings = {
    src: icon,
    x: void 0,
    y: void 0,
    height: typeof iconSize === "number" ? iconSize : (_iconSize$height = iconSize === null || iconSize === void 0 ? void 0 : iconSize.height) !== null && _iconSize$height !== void 0 ? _iconSize$height : 40,
    width: typeof iconSize === "number" ? iconSize : (_iconSize$width = iconSize === null || iconSize === void 0 ? void 0 : iconSize.width) !== null && _iconSize$width !== void 0 ? _iconSize$width : 40,
    excavate: true,
    crossOrigin: "anonymous"
  };
  var qrCodeProps = _objectSpread({
    value: value,
    size: size,
    bgColor: finalBgColor,
    fgColor: color || themeFgColor,
    imageSettings: icon ? imageSettings : void 0
  }, rest);
  var cls = classNames("".concat(classPrefix, "-qrcode"), _defineProperty(_defineProperty({}, "".concat(classPrefix, "-borderless"), borderless), "".concat(classPrefix, "-qrcode-svg"), type === "svg"), className);
  var mergedStyle = _objectSpread(_objectSpread({
    backgroundColor: finalBgColor
  }, style), {}, {
    width: (_style$width = style === null || style === void 0 ? void 0 : style.width) !== null && _style$width !== void 0 ? _style$width : size,
    height: (_style$height = style === null || style === void 0 ? void 0 : style.height) !== null && _style$height !== void 0 ? _style$height : size
  });
  return /* @__PURE__ */React.createElement("div", _objectSpread(_objectSpread({}, rest), {}, {
    className: cls,
    style: mergedStyle
  }), status !== "active" && /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-mask")
  }, /* @__PURE__ */React.createElement(QRcodeStatus, {
    classPrefix: classPrefix,
    locale: locale,
    status: status,
    onRefresh: onRefresh,
    statusRender: statusRender
  })), type === "canvas" ? /* @__PURE__ */React.createElement(QRCodeCanvas, _objectSpread(_objectSpread({}, qrCodeProps), {}, {
    size: size
  })) : /* @__PURE__ */React.createElement(QRCodeSVG, _objectSpread(_objectSpread({}, qrCodeProps), {}, {
    size: size
  })));
};
QRCode.displayName = "QRCode";

export { QRCode as default };
//# sourceMappingURL=QRCode.js.map
