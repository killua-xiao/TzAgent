{"version":3,"file":"Option.js","sources":["../../../../components/select/base/Option.tsx"],"sourcesContent":["import React, { useEffect, useMemo } from 'react';\nimport classNames from 'classnames';\nimport { isNumber, isString, get } from 'lodash-es';\n\nimport useConfig from '../../hooks/useConfig';\nimport useDomRefCallback from '../../hooks/useDomRefCallback';\nimport useRipple from '../../hooks/useRipple';\nimport { StyledProps } from '../../common';\nimport { SelectValue, TdOptionProps, TdSelectProps, SelectKeysType, SelectOption } from '../type';\n\n/**\n * Option 组件属性\n */\nexport interface SelectOptionProps\n  extends StyledProps,\n    TdOptionProps,\n    Pick<TdSelectProps, 'size' | 'multiple' | 'max'> {\n  selectedValue?: SelectValue;\n  children?: React.ReactNode;\n  onSelect?: (\n    value: string | number,\n    context: {\n      label?: string;\n      selected?: boolean;\n      event: React.MouseEvent<HTMLLIElement>;\n      restData?: Record<string, any>;\n    },\n  ) => void;\n  onCheckAllChange?: (checkAll: boolean, e: React.MouseEvent<HTMLLIElement>) => void;\n  restData?: Record<string, any>;\n  keys?: SelectKeysType;\n  optionLength?: number;\n  isVirtual?: boolean;\n  onRowMounted?: (rowData: { ref: HTMLElement; data: SelectOption }) => void;\n}\n\nconst componentType = 'select';\n\nconst Option: React.FC<SelectOptionProps> = (props) => {\n  const {\n    disabled: propDisabled,\n    label: propLabel,\n    title: propTitle,\n    selectedValue,\n    checkAll,\n    multiple,\n    size,\n    max,\n    keys,\n    value,\n    onSelect,\n    children,\n    content,\n    restData,\n    style,\n    className,\n    isVirtual,\n  } = props;\n\n  let selected: boolean;\n  let indeterminate: boolean;\n  const label = propLabel || value;\n  const disabled = propDisabled || (multiple && Array.isArray(selectedValue) && max && selectedValue.length >= max);\n\n  const titleContent = useMemo(() => {\n    // 外部设置 props，说明希望受控\n    const controlledTitle = Reflect.has(props, 'title');\n    if (controlledTitle) return propTitle;\n    if (typeof label === 'string') return label;\n    return null;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [propTitle, label]);\n\n  const { classPrefix } = useConfig();\n\n  // 使用斜八角动画\n  const [optionRef, setRefCurrent] = useDomRefCallback();\n\n  useEffect(() => {\n    if (isVirtual && optionRef) {\n      props.onRowMounted?.({\n        ref: optionRef,\n        data: props,\n      });\n    }\n    // eslint-disable-next-line\n  }, [isVirtual, optionRef]);\n\n  useRipple(optionRef);\n\n  // 处理单选场景\n  if (!multiple) {\n    selected =\n      isNumber(selectedValue) || isString(selectedValue)\n        ? value === selectedValue\n        : value === get(selectedValue, keys?.value || 'value');\n  }\n  // 处理多选场景\n  if (multiple && Array.isArray(selectedValue)) {\n    selected = selectedValue.some((item) => {\n      if (isNumber(item) || isString(item)) {\n        // 如果非 object 类型\n        return item === value;\n      }\n      return get(item, keys?.value || 'value') === value;\n    });\n    if (props.checkAll) {\n      selected = selectedValue.length === props.optionLength;\n      indeterminate = selectedValue.length > 0 && !selected;\n    }\n  }\n\n  const handleSelect = (event: React.MouseEvent<HTMLLIElement>) => {\n    if (!disabled && !checkAll) {\n      onSelect(value, { label: String(label), selected, event, restData });\n    }\n    if (checkAll) {\n      props.onCheckAllChange?.(selected, event);\n    }\n  };\n\n  const renderItem = (children: React.ReactNode) => {\n    if (multiple) {\n      return (\n        <label\n          className={classNames(`${classPrefix}-checkbox`, {\n            [`${classPrefix}-is-indeterminate`]: indeterminate,\n            [`${classPrefix}-is-disabled`]: disabled,\n            [`${classPrefix}-is-checked`]: selected,\n          })}\n          title={titleContent}\n        >\n          <input\n            type=\"checkbox\"\n            className={classNames(`${classPrefix}-checkbox__former`)}\n            value=\"\"\n            disabled={disabled && !selected}\n            onClick={(e) => {\n              e.stopPropagation();\n              e.nativeEvent.stopImmediatePropagation();\n            }}\n          />\n          <span className={classNames(`${classPrefix}-checkbox__input`)}></span>\n          <span className={classNames(`${classPrefix}-checkbox__label`)}>{children || content || label}</span>\n        </label>\n      );\n    }\n    return <span title={titleContent}>{children || content || label}</span>;\n  };\n\n  return (\n    <li\n      className={classNames(className, `${classPrefix}-${componentType}-option`, {\n        [`${classPrefix}-is-disabled`]: disabled,\n        [`${classPrefix}-is-selected`]: selected,\n        [`${classPrefix}-size-s`]: size === 'small',\n        [`${classPrefix}-size-l`]: size === 'large',\n      })}\n      key={value}\n      onClick={handleSelect}\n      ref={setRefCurrent}\n      style={style}\n    >\n      {renderItem(children)}\n    </li>\n  );\n};\n\nexport default Option;\n"],"names":["componentType","Option","props","propDisabled","disabled","propLabel","label","propTitle","title","selectedValue","checkAll","multiple","size","max","keys","value","onSelect","children","content","restData","style","className","isVirtual","selected","indeterminate","Array","isArray","length","titleContent","useMemo","controlledTitle","Reflect","has","_useConfig","useConfig","classPrefix","_useDomRefCallback","useDomRefCallback","_useDomRefCallback2","_slicedToArray","optionRef","setRefCurrent","useEffect","_props$onRowMounted","onRowMounted","call","ref","data","useRipple","isNumber","isString","get","some","item","optionLength","handleSelect","event","String","_props$onCheckAllChan","onCheckAllChange","renderItem","React","createElement","classNames","concat","_defineProperty","type","onClick","e","stopPropagation","nativeEvent","stopImmediatePropagation","key"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAoCA,IAAMA,aAAgB,GAAA,QAAA,CAAA;AAEtB,IAAMC,MAAA,GAAsC,SAAtCA,MAAAA,CAAuCC,KAAU,EAAA;AAC/C,EAAA,IACMC,YAAA,GAiBRD,KAAA,CAjBFE,QAAU;IACHC,SAAA,GAgBLH,KAAA,CAhBFI,KAAO;IACAC,SAAA,GAeLL,KAAA,CAfFM,KAAO;IACPC,aAAA,GAcEP,KAAA,CAdFO,aAAA;IACAC,QAAA,GAaER,KAAA,CAbFQ,QAAA;IACAC,QAAA,GAYET,KAAA,CAZFS,QAAA;IACAC,IAAA,GAWEV,KAAA,CAXFU,IAAA;IACAC,GAAA,GAUEX,KAAA,CAVFW,GAAA;IACAC,IAAA,GASEZ,KAAA,CATFY,IAAA;IACAC,KAAA,GAQEb,KAAA,CARFa,KAAA;IACAC,QAAA,GAOEd,KAAA,CAPFc,QAAA;IACAC,QAAA,GAMEf,KAAA,CANFe,QAAA;IACAC,OAAA,GAKEhB,KAAA,CALFgB,OAAA;IACAC,QAAA,GAIEjB,KAAA,CAJFiB,QAAA;IACAC,KAAA,GAGElB,KAAA,CAHFkB,KAAA;IACAC,SAAA,GAEEnB,KAAA,CAFFmB,SAAA;IACAC,SAAA,GACEpB,KAAA,CADFoB,SAAA,CAAA;AAGE,EAAA,IAAAC,QAAA,CAAA;AACA,EAAA,IAAAC,aAAA,CAAA;AACJ,EAAA,IAAMlB,QAAQD,SAAa,IAAAU,KAAA,CAAA;AACrB,EAAA,IAAAX,QAAA,GAAWD,gBAAiBQ,QAAY,IAAAc,KAAA,CAAMC,QAAQjB,aAAa,CAAA,IAAKI,GAAO,IAAAJ,aAAA,CAAckB,MAAU,IAAAd,GAAA,CAAA;AAEvG,EAAA,IAAAe,YAAA,GAAeC,QAAQ,YAAM;IAEjC,IAAMC,eAAkB,GAAAC,OAAA,CAAQC,GAAI,CAAA9B,KAAA,EAAO,OAAO,CAAA,CAAA;IAC9C,IAAA4B,eAAA,EAAwB,OAAAvB,SAAA,CAAA;AAC5B,IAAA,IAAI,OAAOD,KAAU,KAAA,QAAA,EAAiB,OAAAA,KAAA,CAAA;AAC/B,IAAA,OAAA,IAAA,CAAA;AAET,GAAG,EAAA,CAACC,SAAW,EAAAD,KAAK,CAAC,CAAA,CAAA;AAEf,EAAA,IAAA2B,UAAA,GAAkBC,SAAU,EAAA;IAA1BC,WAAY,GAAAF,UAAA,CAAZE,WAAY,CAAA;AAGpB,EAAA,IAAAC,kBAAA,GAAmCC,iBAAkB,EAAA;IAAAC,mBAAA,GAAAC,cAAA,CAAAH,kBAAA,EAAA,CAAA,CAAA;AAA9CI,IAAAA,SAAA,GAAAF,mBAAA,CAAA,CAAA,CAAA;AAAWG,IAAAA,aAAa,GAAAH,mBAAA,CAAA,CAAA,CAAA,CAAA;AAE/BI,EAAAA,SAAA,CAAU,YAAM;IACd,IAAIpB,aAAakB,SAAW,EAAA;AAAA,MAAA,IAAAG,mBAAA,CAAA;AAC1B,MAAA,CAAAA,mBAAA,GAAAzC,KAAA,CAAM0C,YAAe,MAAA,IAAA,IAAAD,mBAAA,KAAA,KAAA,CAAA,IAArBA,mBAAA,CAAAE,IAAA,CAAA3C,KAAA,EAAqB;AACnB4C,QAAAA,GAAK,EAAAN,SAAA;AACLO,QAAAA,IAAM,EAAA7C,KAAAA;AACR,OAAC,CAAA,CAAA;AACH,KAAA;AAEF,GAAG,EAAA,CAACoB,SAAW,EAAAkB,SAAS,CAAC,CAAA,CAAA;EAEzBQ,SAAA,CAAUR,SAAS,CAAA,CAAA;EAGnB,IAAI,CAAC7B,QAAU,EAAA;AACbY,IAAAA,QAAA,GACE0B,QAAS,CAAAxC,aAAa,CAAK,IAAAyC,QAAA,CAASzC,aAAa,CAAA,GAC7CM,KAAU,KAAAN,aAAA,GACVM,KAAU,KAAAoC,GAAA,CAAI1C,aAAe,EAAA,CAAAK,IAAA,KAAA,IAAA,IAAAA,IAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAAA,IAAA,CAAMC,UAAS,OAAO,CAAA,CAAA;AAC3D,GAAA;EAEA,IAAIJ,QAAY,IAAAc,KAAA,CAAMC,OAAQ,CAAAjB,aAAa,CAAG,EAAA;AACjCc,IAAAA,QAAA,GAAAd,aAAA,CAAc2C,IAAK,CAAA,UAACC,IAAS,EAAA;MACtC,IAAIJ,QAAS,CAAAI,IAAI,CAAK,IAAAH,QAAA,CAASG,IAAI,CAAG,EAAA;QAEpC,OAAOA,IAAS,KAAAtC,KAAA,CAAA;AAClB,OAAA;AACA,MAAA,OAAOoC,GAAI,CAAAE,IAAA,EAAM,CAAAvC,IAAM,KAANA,IAAAA,IAAAA,IAAM,KAANA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,IAAM,CAAAC,KAAA,KAAS,OAAO,CAAM,KAAAA,KAAA,CAAA;AAC/C,KAAC,CAAA,CAAA;IACD,IAAIb,MAAMQ,QAAU,EAAA;AACPa,MAAAA,QAAA,GAAAd,aAAA,CAAckB,WAAWzB,KAAM,CAAAoD,YAAA,CAAA;MAC1B9B,aAAA,GAAAf,aAAA,CAAckB,MAAS,GAAA,CAAA,IAAK,CAACJ,QAAA,CAAA;AAC/C,KAAA;AACF,GAAA;AAEM,EAAA,IAAAgC,YAAA,GAAe,SAAfA,YAAAA,CAAgBC,KAA2C,EAAA;AAC3D,IAAA,IAAA,CAACpD,QAAY,IAAA,CAACM,QAAU,EAAA;MACjBM,QAAA,CAAAD,KAAA,EAAO;AAAET,QAAAA,KAAO,EAAAmD,MAAA,CAAOnD,KAAK,CAAG;AAAAiB,QAAAA,QAAA,EAAAA,QAAA;AAAUiC,QAAAA,KAAO,EAAPA,KAAO;AAAArC,QAAAA,QAAA,EAAAA,QAAAA;AAAS,OAAC,CAAA,CAAA;AACrE,KAAA;AACA,IAAA,IAAIT,QAAU,EAAA;AAAA,MAAA,IAAAgD,qBAAA,CAAA;AACN,MAAA,CAAAA,qBAAA,GAAAxD,KAAA,CAAAyD,gBAAA,cAAAD,qBAAA,KAAA,KAAA,CAAA,IAAAA,qBAAA,CAAAb,IAAA,CAAA3C,KAAA,EAAmBqB,UAAUiC,KAAK,CAAA,CAAA;AAC1C,KAAA;GACF,CAAA;AAEM,EAAA,IAAAI,UAAA,GAAa,SAAbA,UAAAA,CAAc3C,SAA8B,EAAA;AAChD,IAAA,IAAIN,QAAU,EAAA;AACZ,MAAA,sBACGkD,KAAA,CAAAC,aAAA,CAAA,OAAA,EAAA;AACCzC,QAAAA,SAAA,EAAW0C,UAAW,CAAAC,EAAAA,CAAAA,MAAA,CAAG7B,WAAwB,EAAA8B,WAAAA,CAAAA,EAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,QAAAD,MAAA,CAC3C7B,WAAiC,EAAA,mBAAA,CAAA,EAAAX,aAAA,CAAA,EAAA,EAAA,CAAAwC,MAAA,CACjC7B,WAA4B,EAAA/B,cAAAA,CAAAA,EAAAA,QAAA,CAAA4D,EAAAA,EAAAA,CAAAA,MAAA,CAC5B7B,WAA2B,EAAAZ,aAAAA,CAAAA,EAAAA,QAAA,CAChC,CAAA;AACDf,QAAAA,KAAO,EAAAoB,YAAAA;AAAA,OAAA,iBAENiC,KAAA,CAAAC,aAAA,CAAA,OAAA,EAAA;AACCI,QAAAA,IAAK,EAAA,UAAA;AACL7C,QAAAA,SAAA,EAAW0C,UAAW,CAAA,EAAA,CAAAC,MAAA,CAAG7B,WAA8B,sBAAA,CAAA;AACvDpB,QAAAA,KAAM,EAAA,EAAA;AACNX,QAAAA,QAAA,EAAUA,YAAY,CAACmB,QAAA;AACvB4C,QAAAA,OAAA,EAAS,SAATA,OAAAA,CAAUC,CAAM,EAAA;UACdA,CAAA,CAAEC,eAAgB,EAAA,CAAA;AAClBD,UAAAA,CAAA,CAAEE,YAAYC,wBAAyB,EAAA,CAAA;AACzC,SAAA;OACF,kBACCV,KAAA,CAAAC,aAAA,CAAA,MAAA,EAAA;AAAKzC,QAAAA,SAAA,EAAW0C,UAAW,CAAA,EAAA,CAAAC,MAAA,CAAG7B,WAA6B,EAAA,kBAAA,CAAA,CAAA;OAAG,kBAC9D0B,KAAA,CAAAC,aAAA,CAAA,MAAA,EAAA;AAAKzC,QAAAA,SAAA,EAAW0C,UAAW,CAAA,EAAA,CAAAC,MAAA,CAAG7B,WAA6B,EAAA,kBAAA,CAAA,CAAA;AAAIlB,OAAAA,EAAAA,SAAAA,IAAYC,OAAW,IAAAZ,KAAM,CAC/F,CAAA,CAAA;AAEJ,KAAA;AACA,IAAA,sBAAQuD,KAAA,CAAAC,aAAA,CAAA,MAAA,EAAA;AAAKtD,MAAAA,KAAO,EAAAoB,YAAAA;AAAeX,KAAAA,EAAAA,SAAAA,IAAYC,WAAWZ,KAAM,CAAA,CAAA;GAClE,CAAA;AAEA,EAAA,sBACGuD,KAAA,CAAAC,aAAA,CAAA,IAAA,EAAA;IACCzC,SAAW,EAAA0C,UAAA,CAAW1C,SAAW,KAAA2C,MAAA,CAAG7B,yBAAenC,aAAwB,EAAAiE,SAAAA,CAAAA,EAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAD,EAAAA,EAAAA,EAAAA,CAAAA,MAAA,CACrE7B,WAA4B,mBAAA/B,QAAA,CAAA,EAAA,EAAA,CAAA4D,MAAA,CAC5B7B,WAA4B,mBAAAZ,QAAA,CAAA,EAAA,EAAA,CAAAyC,MAAA,CAC5B7B,WAAA,EAAA,SAAA,CAAA,EAAuBvB,IAAS,KAAA,OAAA,CAAAoD,EAAAA,EAAAA,CAAAA,MAAA,CAChC7B,WAAA,cAAuBvB,IAAS,KAAA,OAAA,CACrC,CAAA;AACD4D,IAAAA,GAAK,EAAAzD,KAAA;AACLoD,IAAAA,OAAS,EAAAZ,YAAA;AACTT,IAAAA,GAAK,EAAAL,aAAA;AACLrB,IAAAA,KAAA,EAAAA,KAAAA;AAEC,GAAA,EAAAwC,UAAA,CAAW3C,QAAQ,CACtB,CAAA,CAAA;AAEJ;;;;"}