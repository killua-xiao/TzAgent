{"version":3,"file":"dep-24c2cfd8.js","sources":["../../../components/notification/NotificationList.tsx","../../../components/notification/Notification.tsx"],"sourcesContent":["import React, { forwardRef, useImperativeHandle, useState, useEffect } from 'react';\nimport { render } from '../_util/react-render';\nimport useConfig from '../hooks/useConfig';\nimport {\n  NotificationInfoOptions,\n  NotificationInstance,\n  NotificationPlacementList,\n  NotificationThemeList,\n  TdNotificationProps,\n} from './type';\nimport { Styles } from '../common';\nimport noop from '../_util/noop';\nimport NotificationComponent from './Notification';\nimport ConfigProvider from '../config-provider';\nimport PluginContainer from '../common/PluginContainer';\n\ninterface NotificationListInstance extends TdNotificationProps {\n  push: (theme: NotificationThemeList, options: NotificationInfoOptions) => Promise<NotificationInstance>;\n  remove: (key: string) => void;\n  removeAll: () => void;\n}\n\ninterface NotificationListOpenOption extends NotificationInfoOptions {\n  id: string;\n  key: string;\n  theme: NotificationThemeList;\n  style: Styles;\n  ref: React.RefObject<NotificationInstance>;\n}\n\ninterface NotificationListProps {\n  attach: HTMLElement;\n  zIndex: number;\n  placement: NotificationPlacementList;\n  renderCallback: Function;\n}\n\nlet seed = 0;\n\nexport const listMap: Map<NotificationPlacementList, NotificationListInstance> = new Map();\n\nexport const NotificationRemoveContext = React.createContext<(key: string) => void>(noop);\n\nconst NotificationList = forwardRef<NotificationListInstance, NotificationListProps>((props, ref) => {\n  const { placement, zIndex, renderCallback } = props;\n  const { classPrefix } = useConfig();\n  const [list, setList] = useState<NotificationListOpenOption[]>([]);\n\n  const remove = (key: string) => {\n    setList((oldList) => {\n      const index = oldList.findIndex((item) => item.key === key);\n      if (index !== -1) {\n        const tempList = [...oldList];\n        tempList.splice(index, 1);\n        return [...tempList];\n      }\n      return oldList;\n    });\n  };\n\n  const calOffset = (offset: string | number) => (isNaN(Number(offset)) ? offset : `${offset}px`);\n\n  const push = (theme: NotificationThemeList, options: NotificationInfoOptions): Promise<NotificationInstance> => {\n    const key = String((seed += 1));\n    const [horizontal, vertical] = [...options.offset];\n    const horizontalOffset = calOffset(horizontal);\n    const verticalOffset = calOffset(vertical);\n\n    const style: Styles = {\n      top: verticalOffset,\n      left: horizontalOffset,\n      marginBottom: 16,\n      position: 'relative',\n    };\n    const ref = React.createRef<NotificationInstance>();\n\n    setList((oldList) => [\n      ...oldList,\n      {\n        ...options,\n        key,\n        theme,\n        style,\n        ref,\n        id: key,\n      },\n    ]);\n\n    return new Promise((resolve) => {\n      // setTimeout replace requestAnimationFrame\n      // 在useEffect启动关闭Notification时，requestAnimationFrame可能会过早执行，导致ref.current为undefined\n      setTimeout(() => {\n        resolve(ref.current);\n      }, 1000 / 60);\n    });\n  };\n\n  const removeAll = () => setList([]);\n\n  useImperativeHandle(ref, () => ({ push, remove, removeAll }));\n\n  useEffect(() => {\n    renderCallback({ push, remove, removeAll });\n    // eslint-disable-next-line\n  }, []);\n\n  return (\n    <NotificationRemoveContext.Provider value={remove}>\n      <div className={`${classPrefix}-notification__show--${placement}`} style={{ zIndex }}>\n        {list.map((props) => {\n          const { onDurationEnd = noop, onCloseBtnClick = noop } = props;\n          return (\n            <NotificationComponent\n              ref={props.ref}\n              {...props}\n              key={props.key}\n              onDurationEnd={() => {\n                remove(props.key);\n                onDurationEnd();\n              }}\n              onCloseBtnClick={(e) => {\n                remove(props.key);\n                onCloseBtnClick(e);\n              }}\n            />\n          );\n        })}\n      </div>\n    </NotificationRemoveContext.Provider>\n  );\n});\n\n// 判断多个Notification同时执行\nlet renderNotification = false;\n\nexport const fetchListInstance = (\n  placement: NotificationPlacementList,\n  attach: HTMLElement,\n  zIndex: number,\n): Promise<NotificationListInstance> =>\n  new Promise((resolve) => {\n    // Fix the bug of Notification triggered for the first time in React 18 concurrent mode\n    function idle() {\n      if (listMap.has(placement)) {\n        resolve(listMap.get(placement));\n        return;\n      }\n      if (!renderNotification) {\n        renderNotification = true;\n        const nGlobalConfig = ConfigProvider.getGlobalConfig();\n        render(\n          <PluginContainer globalConfig={nGlobalConfig}>\n            <NotificationList\n              attach={attach}\n              placement={placement}\n              zIndex={Number(zIndex)}\n              renderCallback={(instance) => {\n                renderNotification = false;\n                listMap.set(placement, instance);\n                resolve(instance);\n              }}\n            />\n          </PluginContainer>,\n          attach,\n        );\n        return;\n      } // 循环执行，直到NotificationList的回调执行\n      setTimeout(idle, 1000 / 60);\n    }\n    idle();\n  });\n","import React, { forwardRef, useContext } from 'react';\nimport classNames from 'classnames';\nimport {\n  CloseIcon as TdCloseIcon,\n  InfoCircleFilledIcon as TdInfoCircleFilledIcon,\n  CheckCircleFilledIcon as TdCheckCircleFilledIcon,\n} from 'tdesign-icons-react';\nimport { NotificationRemoveContext } from './NotificationList';\nimport noop from '../_util/noop';\nimport parseTNode from '../_util/parseTNode';\nimport useConfig from '../hooks/useConfig';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport { NotificationInstance, TdNotificationProps } from './type';\nimport { StyledProps } from '../common';\nimport { notificationDefaultProps } from './defaultProps';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\nexport interface NotificationProps extends TdNotificationProps, StyledProps {\n  id?: string;\n}\n\nexport const Notification = forwardRef<NotificationInstance, NotificationProps>((props, ref) => {\n  const {\n    title,\n    content,\n    theme,\n    icon,\n    closeBtn,\n    footer,\n    duration,\n    onCloseBtnClick = noop,\n    onDurationEnd = noop,\n    style,\n    className,\n    id,\n  } = useDefaultProps<NotificationProps>(props, notificationDefaultProps);\n\n  const { classPrefix } = useConfig();\n  const baseClassPrefix = `${classPrefix}-notification`;\n  const { CloseIcon, InfoCircleFilledIcon, CheckCircleFilledIcon } = useGlobalIcon({\n    CloseIcon: TdCloseIcon,\n    InfoCircleFilledIcon: TdInfoCircleFilledIcon,\n    CheckCircleFilledIcon: TdCheckCircleFilledIcon,\n  });\n\n  const remove = useContext(NotificationRemoveContext);\n\n  React.useImperativeHandle(ref, () => ({ close: () => remove(id) }));\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  React.useEffect(() => {\n    let timer: NodeJS.Timeout;\n    if (duration > 0) {\n      timer = setTimeout(() => {\n        clearTimeout(timer);\n        onDurationEnd();\n      }, duration);\n    }\n    return () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n    };\n  }, []);\n\n  const renderIcon = () => {\n    if (typeof icon === 'boolean' && !icon) {\n      return null;\n    }\n\n    const IconWrapper = ({ children }) => <div className={`${baseClassPrefix}__icon`}>{children}</div>;\n\n    // 调整优先级，icon 优先级最高\n    if (React.isValidElement(icon)) {\n      return <IconWrapper>{icon}</IconWrapper>;\n    }\n\n    if (theme && theme === 'success') {\n      return (\n        <IconWrapper>\n          <CheckCircleFilledIcon className={`${classPrefix}-is-success`} />\n        </IconWrapper>\n      );\n    }\n    if (theme && ['info', 'warning', 'error'].indexOf(theme) >= 0) {\n      return (\n        <IconWrapper>\n          <InfoCircleFilledIcon className={`${classPrefix}-is-${theme}`} />\n        </IconWrapper>\n      );\n    }\n    return null;\n  };\n\n  const renderCloseBtn = () => {\n    if (typeof closeBtn === 'boolean') {\n      return (\n        closeBtn && (\n          <CloseIcon\n            className={`${baseClassPrefix}-icon-close`}\n            onClick={(e) => {\n              onCloseBtnClick({ e });\n            }}\n          />\n        )\n      );\n    }\n    return (\n      <div\n        className={`${baseClassPrefix}-close`}\n        onClick={(e) => {\n          onCloseBtnClick({ e });\n        }}\n      >\n        {parseTNode(closeBtn)}\n      </div>\n    );\n  };\n\n  return (\n    <div\n      className={classNames(className, baseClassPrefix, {\n        [`${baseClassPrefix}-is-${theme}`]: theme,\n      })}\n      style={style}\n    >\n      {renderIcon()}\n      <div className={`${baseClassPrefix}__main`}>\n        <div className={`${baseClassPrefix}__title__wrap`}>\n          <span className={`${baseClassPrefix}__title`}>{title}</span>\n          {renderCloseBtn()}\n        </div>\n        {content && <div className={`${baseClassPrefix}__content`}>{parseTNode(content)}</div>}\n        {footer && <div className={`${baseClassPrefix}__detail`}>{parseTNode(footer)}</div>}\n      </div>\n    </div>\n  );\n});\n\nNotification.displayName = 'Notification';\n\nexport default Notification;\n"],"names":["seed","listMap","Map","NotificationRemoveContext","React","createContext","noop","NotificationList","forwardRef","props","ref","placement","zIndex","renderCallback","_useConfig","useConfig","classPrefix","_useState","useState","_useState2","_slicedToArray","list","setList","remove","key","oldList","index","findIndex","item","tempList","_toConsumableArray","splice","calOffset","offset","isNaN","Number","concat","push","theme","options","String","_ref","horizontal","vertical","horizontalOffset","verticalOffset","style","top","left","marginBottom","position","createRef","_objectSpread","id","Promise","resolve","setTimeout","current","removeAll","useImperativeHandle","useEffect","createElement","Provider","value","className","map","_props2$onDurationEnd","onDurationEnd","_props2$onCloseBtnCli","onCloseBtnClick","NotificationComponent","e","renderNotification","fetchListInstance","attach","idle","has","get","nGlobalConfig","ConfigProvider","getGlobalConfig","render","PluginContainer","globalConfig","instance","set","Notification","_useDefaultProps","useDefaultProps","notificationDefaultProps","title","content","icon","closeBtn","footer","duration","_useDefaultProps$onCl","_useDefaultProps$onDu","baseClassPrefix","_useGlobalIcon","useGlobalIcon","CloseIcon","TdCloseIcon","InfoCircleFilledIcon","TdInfoCircleFilledIcon","CheckCircleFilledIcon","TdCheckCircleFilledIcon","useContext","close","timer","clearTimeout","renderIcon","IconWrapper","children","isValidElement","indexOf","renderCloseBtn","onClick","parseTNode","classNames","_defineProperty","displayName"],"mappings":"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"}