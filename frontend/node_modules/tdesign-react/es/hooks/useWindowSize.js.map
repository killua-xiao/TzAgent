{"version":3,"file":"useWindowSize.js","sources":["../../../components/hooks/useWindowSize.ts"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { debounce } from 'lodash-es';\nimport { getWindowSize } from '../_util/dom';\n\nexport interface WindowSize {\n  width: number;\n  height: number;\n}\n\nfunction useWindowSize(): WindowSize {\n  const [size, setSize] = useState(getWindowSize);\n\n  useEffect(() => {\n    function handleResize() {\n      setSize(getWindowSize());\n    }\n\n    const debounceResize = debounce(handleResize, 400);\n\n    window.addEventListener('resize', debounceResize);\n\n    return () => {\n      window.removeEventListener('resize', debounceResize);\n      debounceResize.cancel();\n    };\n  }, []);\n\n  return size;\n}\n\nexport default useWindowSize;\n"],"names":["useWindowSize","_useState","useState","getWindowSize","_useState2","_slicedToArray","size","setSize","useEffect","handleResize","debounceResize","debounce","window","addEventListener","removeEventListener","cancel"],"mappings":";;;;;;;;;;;;AASA,SAASA,aAA4BA,GAAA;AACnC,EAAA,IAAAC,SAAA,GAAwBC,SAASC,aAAa,CAAA;IAAAC,UAAA,GAAAC,cAAA,CAAAJ,SAAA,EAAA,CAAA,CAAA;AAAvCK,IAAAA,IAAA,GAAAF,UAAA,CAAA,CAAA,CAAA;AAAMG,IAAAA,OAAO,GAAAH,UAAA,CAAA,CAAA,CAAA,CAAA;AAEpBI,EAAAA,SAAA,CAAU,YAAM;IACd,SAASC,YAAeA,GAAA;AACtBF,MAAAA,OAAA,CAAQJ,eAAe,CAAA,CAAA;AACzB,KAAA;AAEM,IAAA,IAAAO,cAAA,GAAiBC,QAAS,CAAAF,YAAA,EAAc,GAAG,CAAA,CAAA;AAE1CG,IAAAA,MAAA,CAAAC,gBAAA,CAAiB,UAAUH,cAAc,CAAA,CAAA;AAEhD,IAAA,OAAO,YAAM;AACJE,MAAAA,MAAA,CAAAE,mBAAA,CAAoB,UAAUJ,cAAc,CAAA,CAAA;MACnDA,cAAA,CAAeK,MAAO,EAAA,CAAA;KACxB,CAAA;GACF,EAAG,EAAE,CAAA,CAAA;AAEE,EAAA,OAAAT,IAAA,CAAA;AACT;;;;"}