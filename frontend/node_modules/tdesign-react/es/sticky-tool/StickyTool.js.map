{"version":3,"file":"StickyTool.js","sources":["../../../components/sticky-tool/StickyTool.tsx"],"sourcesContent":["import React, { useCallback, useMemo, MouseEvent } from 'react';\nimport classnames from 'classnames';\nimport useConfig from '../hooks/useConfig';\nimport forwardRefWithStatics from '../_util/forwardRefWithStatics';\nimport type { TdStickyToolProps, TdStickyItemProps } from './type';\nimport type { StyledProps, Styles } from '../common';\nimport StickyItem from './StickyItem';\nimport { stickyToolDefaultProps } from './defaultProps';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\nimport type { StickyItemProps } from './StickyItem';\n\nexport interface StickyToolProps extends TdStickyToolProps, StyledProps {\n  children?: React.ReactNode;\n}\n\nconst StickyTool = forwardRefWithStatics(\n  (props: StickyToolProps, ref: React.Ref<HTMLDivElement>) => {\n    const { style, className, children, width, type, shape, placement, offset, popupProps, list, onClick, onHover } =\n      useDefaultProps<StickyToolProps>(props, stickyToolDefaultProps);\n    const { classPrefix } = useConfig();\n\n    const styles = useMemo<React.CSSProperties>(() => {\n      const position: Array<string | number> = offset ? [80, 24] : ['80px', '24px'];\n      offset?.forEach((item, index) => {\n        position[index] = isNaN(Number(item))\n          ? `calc( ${position[index]}px + ${item})`\n          : `${(position[index] as number) + (item as number)}px`;\n      });\n      const styles: Styles = { ...style };\n      placement.split('-').forEach((item, index) => {\n        if (item !== 'center') {\n          styles[item] = position[index];\n        } else {\n          styles.top = '50%';\n          styles.transform = 'translate(0, -50%)';\n        }\n      });\n      if (width) {\n        styles.width = typeof width === 'number' ? `${width}px` : width;\n      }\n      return styles;\n    }, [offset, placement, width, style]);\n\n    const handleClick = useCallback(\n      (context: { e: MouseEvent<HTMLDivElement>; item: TdStickyItemProps }) => {\n        onClick?.(context);\n      },\n      [onClick],\n    );\n    const handleHover = useCallback(\n      (context: { e: MouseEvent<HTMLDivElement>; item: TdStickyItemProps }) => {\n        onHover?.(context);\n      },\n      [onHover],\n    );\n\n    const stickyItemList = useMemo<React.ReactNode[]>(() => {\n      if (list?.length) {\n        return list.map<React.ReactNode>((item, index: number) => {\n          const itemProps = {\n            ...item,\n            type,\n            shape,\n            placement,\n            basePopupProps: popupProps,\n            baseWidth: styles.width,\n            onClick: handleClick,\n            onHover: handleHover,\n          };\n          return <StickyItem key={index} {...itemProps} />;\n        });\n      }\n\n      const childrenList = React.Children.toArray(children);\n\n      return childrenList.map((child: React.ReactElement<StickyItemProps>) => {\n        const itemProps = {\n          ...child.props,\n          type,\n          shape,\n          placement,\n          basePopupProps: popupProps,\n          baseWidth: styles.width,\n          onClick: handleClick,\n          onHover: handleHover,\n        };\n        return React.cloneElement(child, { ...itemProps });\n      });\n    }, [list, children, type, shape, placement, popupProps, styles, handleClick, handleHover]);\n\n    return (\n      <div\n        ref={ref}\n        style={styles}\n        className={classnames(`${classPrefix}-sticky-tool`, `${classPrefix}-sticky-tool--${shape}`, className)}\n      >\n        {stickyItemList}\n      </div>\n    );\n  },\n  { StickyItem },\n);\n\nStickyTool.displayName = 'StickyTool';\n\nexport default StickyTool;\n"],"names":["StickyTool","forwardRefWithStatics","props","ref","_useDefaultProps","useDefaultProps","stickyToolDefaultProps","style","className","children","width","type","shape","placement","offset","popupProps","list","onClick","onHover","_useConfig","useConfig","classPrefix","styles","useMemo","position","forEach","item","index","isNaN","Number","concat","split","top","transform","handleClick","useCallback","context","handleHover","stickyItemList","length","map","itemProps","_objectSpread","basePopupProps","baseWidth","React","createElement","StickyItem","key","childrenList","Children","toArray","child","cloneElement","classnames","displayName"],"mappings":"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"}