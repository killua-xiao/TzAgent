/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-cb0a3966.js';
import { _ as _objectWithoutProperties } from '../_chunks/dep-6b660ef0.js';
import React from 'react';
import classNames from 'classnames';
import useConfig from '../hooks/useConfig.js';
import { dividerDefaultProps } from './defaultProps.js';
import useDefaultProps from '../hooks/useDefaultProps.js';
import '../_chunks/dep-eca3a3de.js';
import '../config-provider/ConfigContext.js';
import 'lodash-es';
import '../locale/zh_CN.js';
import '../_chunks/dep-e29214cb.js';
import 'dayjs';
import '../_chunks/dep-3c9ab31a.js';

var _excluded = ["layout", "dashed", "align", "className", "style", "children", "content"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var Divider = function Divider(props) {
  var _useDefaultProps = useDefaultProps(props, dividerDefaultProps),
    layout = _useDefaultProps.layout,
    dashed = _useDefaultProps.dashed,
    align = _useDefaultProps.align,
    className = _useDefaultProps.className,
    style = _useDefaultProps.style,
    children = _useDefaultProps.children,
    content = _useDefaultProps.content,
    otherDividerProps = _objectWithoutProperties(_useDefaultProps, _excluded);
  var _useConfig = useConfig(),
    classPrefix = _useConfig.classPrefix;
  var childrenNode = content || children;
  var showText = layout !== "vertical" && !!childrenNode;
  var dividerClassNames = classNames("".concat(classPrefix, "-divider"), className, _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, "".concat(classPrefix, "-divider--").concat(layout), layout), "".concat(classPrefix, "-divider--dashed"), !!dashed), "".concat(classPrefix, "-divider--with-text"), showText), "".concat(classPrefix, "-divider--with-text-").concat(align), showText));
  return /* @__PURE__ */React.createElement("div", _objectSpread(_objectSpread({}, otherDividerProps), {}, {
    className: dividerClassNames,
    style: style
  }), showText ? /* @__PURE__ */React.createElement("span", {
    className: "".concat(classPrefix, "-divider__inner-text")
  }, childrenNode) : null);
};
Divider.displayName = "Divider";

export { Divider as default };
//# sourceMappingURL=Divider.js.map
