/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import React, { useMemo } from 'react';
import { escapeRegExp } from 'lodash-es';
import useConfig from '../hooks/useConfig.js';
import '../config-provider/ConfigContext.js';
import '../_chunks/dep-cb0a3966.js';
import '../_chunks/dep-eca3a3de.js';
import '../locale/zh_CN.js';
import '../_chunks/dep-e29214cb.js';
import 'dayjs';
import '../_chunks/dep-3c9ab31a.js';

var HighlightOption = function HighlightOption(props) {
  var _useConfig = useConfig(),
    classPrefix = _useConfig.classPrefix;
  var content = props.content,
    keyword = props.keyword;
  var words = useMemo(function () {
    var _content$match;
    if (!content) return {
      list: []
    };
    if (typeof content !== "string" || !keyword) return {
      list: [content]
    };
    var regExp = new RegExp(escapeRegExp(keyword), "i");
    var splitKeyword = (_content$match = content.match(regExp)) === null || _content$match === void 0 ? void 0 : _content$match[0];
    return {
      list: content.split(splitKeyword),
      keyword: splitKeyword
    };
  }, [content, keyword]);
  return /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-select-option__highlight-item")
  }, words.list.map(function (item, index) {
    if (!index) return item;
    return [/* @__PURE__ */React.createElement("b", {
      className: "".concat(classPrefix, "-is-highlight"),
      key: item + words.keyword
    }, words.keyword), item];
  }));
};
HighlightOption.displayName = "HighlightOption";

export { HighlightOption as default };
//# sourceMappingURL=HighlightOption.js.map
