/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-cb0a3966.js';
import { _ as _objectWithoutProperties } from '../_chunks/dep-6b660ef0.js';
import React, { forwardRef } from 'react';
import classNames from 'classnames';
import Ellipsis from './ellipsis/Ellipsis.js';
import { titleDefaultProps } from './defaultProps.js';
import useConfig from '../hooks/useConfig.js';
import useEllipsis from './ellipsis/useEllipsis.js';
import useDefaultProps from '../hooks/useDefaultProps.js';
import '../_chunks/dep-eca3a3de.js';
import '../_chunks/dep-48805ab8.js';
import '../_chunks/dep-026a4c6b.js';
import './ellipsis/Truncate.js';
import '../_chunks/dep-83726008.js';
import 'lodash-es';
import '../_chunks/dep-e29214cb.js';
import 'react-is';
import '../config-provider/ConfigContext.js';
import '../locale/zh_CN.js';
import 'dayjs';
import '../_chunks/dep-3c9ab31a.js';
import '../tooltip/index.js';
import '../tooltip/Tooltip.js';
import '../popup/index.js';
import '../popup/Popup.js';
import 'react-transition-group';
import '../_util/ref.js';
import '../_util/isFragment.js';
import '../_chunks/dep-3a09424a.js';
import '../common/Portal.js';
import 'react-dom';
import '../hooks/useLayoutEffect.js';
import '../hooks/useAnimation.js';
import '../hooks/useAttach.js';
import '../hooks/useControlled.js';
import '../_util/noop.js';
import '../hooks/useMutationObserver.js';
import '../hooks/useLatest.js';
import '../hooks/usePopper.js';
import '../_chunks/dep-87d110df.js';
import '@popperjs/core';
import 'react-fast-compare';
import '../hooks/useWindowSize.js';
import '../popup/defaultProps.js';
import '../popup/hooks/useTrigger.js';
import '../_util/composeRefs.js';
import '../_util/listener.js';
import '../popup/utils/transition.js';
import '../popup/PopupPlugin.js';
import '../_chunks/dep-a74cc5e4.js';
import '../_util/react-render.js';
import '../common/PluginContainer.js';
import '../config-provider/index.js';
import '../config-provider/ConfigProvider.js';
import '../config-provider/type.js';
import '../popup/style/css.js';
import '../popup/type.js';
import '../tooltip/defaultProps.js';
import '../tooltip/TooltipLite.js';
import '../hooks/useSwitch.js';
import '../hooks/usePersistFn.js';
import '../tooltip/style/css.js';
import '../tooltip/type.js';
import '../locale/LocalReceiver.js';

var _excluded = ["level", "children", "className", "content", "ellipsis"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var Title = /*#__PURE__*/forwardRef(function (originalProps, ref) {
  var _useConfig = useConfig(),
    classPrefix = _useConfig.classPrefix;
  var props = useDefaultProps(originalProps, titleDefaultProps);
  var _props$level = props.level,
    Component = _props$level === void 0 ? "h1" : _props$level,
    children = props.children,
    className = props.className,
    content = props.content,
    ellipsis = props.ellipsis,
    rest = _objectWithoutProperties(props, _excluded);
  var prefixCls = "".concat(classPrefix, "-typography");
  var _useEllipsis = useEllipsis(ellipsis),
    ellipsisProps = _useEllipsis.ellipsisProps;
  if (!ellipsis) {
    return /* @__PURE__ */React.createElement(Component, _objectSpread({
      className: classNames(className, prefixCls),
      ref: ref
    }, rest), children || content);
  }
  return /* @__PURE__ */React.createElement(Ellipsis, _objectSpread(_objectSpread({
    className: classNames(className, prefixCls)
  }, ellipsisProps), {}, {
    component: Component
  }, rest), children || content);
});

export { Title, Title as default };
//# sourceMappingURL=Title.js.map
