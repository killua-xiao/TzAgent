{"version":3,"file":"usePageNumber.js","sources":["../../../../components/pagination/hooks/usePageNumber.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\nimport classNames from 'classnames';\nimport {\n  EllipsisIcon as TdEllipsisIcon,\n  ChevronLeftDoubleIcon as TdChevronLeftDoubleIcon,\n  ChevronRightDoubleIcon as TdChevronRightDoubleIcon,\n} from 'tdesign-icons-react';\nimport useConfig from '../../hooks/useConfig';\nimport useGlobalIcon from '../../hooks/useGlobalIcon';\n\nexport default function usePageNumber(props) {\n  const { classPrefix } = useConfig();\n  const { EllipsisIcon, ChevronLeftDoubleIcon, ChevronRightDoubleIcon } = useGlobalIcon({\n    EllipsisIcon: TdEllipsisIcon,\n    ChevronLeftDoubleIcon: TdChevronLeftDoubleIcon,\n    ChevronRightDoubleIcon: TdChevronRightDoubleIcon,\n  });\n  const name = `${classPrefix}-pagination`;\n\n  const [hoverPreMore, toggleHoverPreMore] = useState(false); // 处理 left ellipsis 展示逻辑\n  const [hoverNextMore, toggleHoverNextMore] = useState(false); // 处理 right ellipsis 展示逻辑\n\n  const {\n    showPageNumber,\n    maxPageBtn,\n    disabled,\n    current,\n    pageCount,\n    foldedMaxPageBtn,\n    changeCurrent,\n    pageEllipsisMode,\n  } = props;\n\n  const isMidEllipsis = pageEllipsisMode === 'mid';\n  const pivot = Math.ceil((foldedMaxPageBtn - 1) / 2);\n\n  const pageList = useMemo<Array<number>>(() => {\n    const isPrevMoreShow = 2 + pivot < current;\n    const isNextMoreShow = pageCount - 1 - pivot > current;\n    const array: Array<number> = [];\n    let start: number;\n    let end: number;\n\n    if (pageCount > maxPageBtn) {\n      if (isPrevMoreShow && isNextMoreShow) {\n        start = current - pivot;\n        end = current + pivot;\n      } else {\n        const foldedStart = isMidEllipsis ? 2 : 1;\n        const foldedEnd = isMidEllipsis ? pageCount - 1 : pageCount;\n        start = isPrevMoreShow ? pageCount - foldedMaxPageBtn + 1 : foldedStart;\n        end = isPrevMoreShow ? foldedEnd : foldedMaxPageBtn;\n      }\n    } else {\n      start = 1;\n      end = pageCount;\n    }\n\n    for (let i = start; i <= end; i++) {\n      array.push(i);\n    }\n    return array;\n  }, [current, pageCount, foldedMaxPageBtn, isMidEllipsis, maxPageBtn, pivot]);\n\n  const isFolded = pageCount > maxPageBtn; // 判断是否为需要折叠\n\n  const showPrevMore = (2 + pivot < current); // 显示左侧往前翻页的省略图标\n  const showNextMore = (pageCount - 1 - pivot > current); // 显示右侧往后翻页的省略图标\n\n  // 当省略图标消失时，需要还原hover标记\n  useEffect(() => {\n    if (!showPrevMore) toggleHoverPreMore(false);\n    if (!showNextMore) toggleHoverNextMore(false);\n  }, [showNextMore, showPrevMore]);\n\n  const pageNumberControl = showPageNumber && (\n    <ul className={`${name}__pager`}>\n      {isFolded && isMidEllipsis && (\n        <>\n          <li\n            key={1}\n            className={classNames(`${name}__number`, {\n              [`${classPrefix}-is-disabled`]: disabled,\n              [`${classPrefix}-is-current`]: current === 1,\n            })}\n            onClick={() => changeCurrent(1)}\n          >\n            1\n          </li>\n          {showPrevMore && (\n            <li\n              className={classNames(`${name}__number`, `${name}__number--more`, {\n                [`${classPrefix}-is-disabled`]: disabled,\n              })}\n              onMouseEnter={() => toggleHoverPreMore(true)}\n              onMouseLeave={() => toggleHoverPreMore(false)}\n              onClick={() => changeCurrent(current - foldedMaxPageBtn)}\n            >\n              {!hoverPreMore ? <EllipsisIcon /> : <ChevronLeftDoubleIcon />}\n            </li>\n          )}\n        </>\n      )}\n      {pageList.map((item) => (\n        <li\n          key={item}\n          className={classNames(`${name}__number`, {\n            [`${classPrefix}-is-disabled`]: disabled,\n            [`${classPrefix}-is-current`]: current === item,\n          })}\n          onClick={() => changeCurrent(item)}\n        >\n          {item}\n        </li>\n      ))}\n      {isFolded && isMidEllipsis && (\n        <>\n          {showNextMore && (\n            <li\n              className={classNames(`${name}__number`, `${name}__number--more`, {\n                [`${classPrefix}-is-disabled`]: disabled,\n              })}\n              onMouseEnter={() => toggleHoverNextMore(true)}\n              onMouseLeave={() => toggleHoverNextMore(false)}\n              onClick={() => changeCurrent(current + foldedMaxPageBtn)}\n            >\n              {!hoverNextMore ? <EllipsisIcon /> : <ChevronRightDoubleIcon />}\n            </li>\n          )}\n          <li\n            key={pageCount}\n            className={classNames(`${name}__number`, {\n              [`${classPrefix}-is-disabled`]: disabled,\n              [`${classPrefix}-is-current`]: current === pageCount,\n            })}\n            onClick={() => changeCurrent(pageCount)}\n          >\n            {pageCount}\n          </li>\n        </>\n      )}\n    </ul>\n  );\n\n  return { pageNumberControl };\n}\n"],"names":["usePageNumber","props","_useConfig","useConfig","classPrefix","_useGlobalIcon","useGlobalIcon","EllipsisIcon","TdEllipsisIcon","ChevronLeftDoubleIcon","TdChevronLeftDoubleIcon","ChevronRightDoubleIcon","TdChevronRightDoubleIcon","name","_useState","useState","_useState2","_slicedToArray","hoverPreMore","toggleHoverPreMore","_useState3","_useState4","hoverNextMore","toggleHoverNextMore","showPageNumber","maxPageBtn","disabled","current","pageCount","foldedMaxPageBtn","changeCurrent","pageEllipsisMode","isMidEllipsis","pivot","Math","ceil","pageList","useMemo","isPrevMoreShow","isNextMoreShow","array","start","end","foldedStart","foldedEnd","i","push","isFolded","showPrevMore","showNextMore","useEffect","pageNumberControl","React","createElement","className","Fragment","key","classNames","concat","_defineProperty","onClick","onMouseEnter","onMouseLeave","map","item"],"mappings":"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"}