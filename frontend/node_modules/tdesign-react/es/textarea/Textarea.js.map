{"version":3,"file":"Textarea.js","sources":["../../../common/js/utils/calcTextareaHeight.ts","../../../components/textarea/Textarea.tsx"],"sourcesContent":["import { isNull } from 'lodash-es';\nimport { calculateNodeSize } from './helper';\n\ntype CalculateStyleType = {\n  height?: string,\n  minHeight?: string\n};\n\ntype LimitType = number | null;\n\nconst TEXTAREA_STYLE = `\n  min-height:0 !important;\n  max-height:none !important;\n  height:0 !important;\n  visibility:hidden !important;\n  overflow:hidden !important;\n  position:absolute !important;\n  z-index:-1000 !important;\n  top:0 !important;\n  right:0 !important\n`;\n\nlet hiddenTextarea: HTMLTextAreaElement;\n\nfunction calcTextareaHeight(\n  targetElement: HTMLTextAreaElement,\n  minRows: LimitType = 1,\n  maxRows: LimitType = null,\n): CalculateStyleType {\n  if (!hiddenTextarea) {\n    hiddenTextarea = document.createElement('textarea');\n    document.body.appendChild(hiddenTextarea);\n  }\n\n  const {\n    paddingSize,\n    borderSize,\n    boxSizing,\n    sizingStyle,\n  } = calculateNodeSize(targetElement);\n\n  hiddenTextarea.setAttribute('style', `${sizingStyle};${TEXTAREA_STYLE}`);\n  hiddenTextarea.value = targetElement.value || targetElement.placeholder || '';\n\n  let height = hiddenTextarea.scrollHeight;\n  const result: CalculateStyleType = {};\n  const isBorderbox = boxSizing === 'border-box';\n  const isContentbox = boxSizing === 'content-box';\n\n  if (isBorderbox) {\n    height += borderSize;\n  } else if (isContentbox) {\n    height -= paddingSize;\n  }\n\n  hiddenTextarea.value = '';\n  const singleRowHeight = hiddenTextarea.scrollHeight - paddingSize;\n  hiddenTextarea?.parentNode?.removeChild(hiddenTextarea);\n  // @ts-ignore\n  hiddenTextarea = null;\n\n  const calcHeight = (rows: number) => {\n    let rowsHeight = singleRowHeight * rows;\n    if (isBorderbox) {\n      rowsHeight = rowsHeight + paddingSize + borderSize;\n    }\n    return rowsHeight;\n  };\n\n  if (!isNull(minRows)) {\n    const minHeight = calcHeight(minRows);\n    height = Math.max(minHeight, height);\n    result.minHeight = `${minHeight}px`;\n  }\n  if (!isNull(maxRows)) {\n    height = Math.min(calcHeight(maxRows), height);\n  }\n  result.height = `${height}px`;\n  return result;\n}\n\nexport default calcTextareaHeight;\n","import React, { forwardRef, useState, useEffect, useMemo, useRef, useImperativeHandle } from 'react';\nimport classNames from 'classnames';\nimport { getCharacterLength, getUnicodeLength, limitUnicodeMaxLength } from '@tdesign/common-js/utils/helper';\nimport calcTextareaHeight from '@tdesign/common-js/utils/calcTextareaHeight';\nimport useConfig from '../hooks/useConfig';\nimport { TdTextareaProps } from './type';\nimport { StyledProps } from '../common';\nimport noop from '../_util/noop';\nimport useControlled from '../hooks/useControlled';\nimport { textareaDefaultProps } from './defaultProps';\nimport useDefaultProps from '../hooks/useDefaultProps';\nimport useIsomorphicLayoutEffect from '../hooks/useLayoutEffect';\nimport useEventCallback from '../hooks/useEventCallback';\n\nconst DEFAULT_TEXTAREA_STYLE = { height: 'auto', minHeight: 'auto' };\n\nexport interface TextareaProps\n  extends Omit<\n      React.TextareaHTMLAttributes<HTMLTextAreaElement>,\n      'value' | 'defaultValue' | 'onBlur' | 'onChange' | 'onFocus' | 'onKeyDown' | 'onKeyPress' | 'onKeyUp'\n    >,\n    TdTextareaProps,\n    StyledProps {}\nexport interface TextareaRefInterface {\n  currentElement: HTMLDivElement;\n  textareaElement: HTMLTextAreaElement;\n}\n\nconst Textarea = forwardRef<TextareaRefInterface, TextareaProps>((originalProps, ref) => {\n  const props = useDefaultProps<TextareaProps>(originalProps, textareaDefaultProps);\n  const {\n    disabled,\n    maxlength,\n    maxcharacter,\n    className,\n    readonly,\n    autofocus,\n    style,\n    onKeydown = noop,\n    onKeypress = noop,\n    onKeyup = noop,\n    autosize,\n    status,\n    tips,\n    allowInputOverMax,\n    rows,\n    ...otherProps\n  } = props;\n\n  const [value = '', setValue] = useControlled(props, 'value', props.onChange);\n  const [isFocused, setIsFocused] = useState(false);\n  const [isOvermax, setIsOvermax] = useState(false);\n  const [textareaStyle, setTextareaStyle] = useState<Partial<typeof DEFAULT_TEXTAREA_STYLE>>(DEFAULT_TEXTAREA_STYLE);\n  const composingRef = useRef(false);\n  const [composingValue, setComposingValue] = useState<string>('');\n  const hasMaxcharacter = typeof maxcharacter !== 'undefined';\n  const textareaRef = useRef<HTMLTextAreaElement>(null);\n  const wrapperRef = useRef<HTMLDivElement>(null);\n  const currentLength = useMemo(() => getUnicodeLength(value), [value]);\n  const characterLength = useMemo(() => {\n    const characterInfo = getCharacterLength(String(value), allowInputOverMax ? Infinity : maxcharacter);\n    if (typeof characterInfo === 'object') return characterInfo.length;\n    return characterInfo;\n  }, [value, allowInputOverMax, maxcharacter]);\n\n  const { classPrefix } = useConfig();\n\n  const textareaPropsNames = Object.keys(otherProps).filter((key) => !/^on[A-Z]/.test(key));\n  const textareaProps = textareaPropsNames.reduce(\n    (textareaProps, key) => Object.assign(textareaProps, { [key]: props[key] }),\n    {},\n  );\n  const eventPropsNames = Object.keys(otherProps).filter((key) => /^on[A-Z]/.test(key));\n  const eventProps = eventPropsNames.reduce((eventProps, key) => {\n    Object.assign(eventProps, {\n      [key]: (e) => {\n        if (disabled) return;\n        if (key === 'onFocus') setIsFocused(true);\n        if (key === 'onBlur') setIsFocused(false);\n        props[key](e.currentTarget.value, { e });\n      },\n    });\n    return eventProps;\n  }, {});\n\n  const textareaClassNames = classNames(`${classPrefix}-textarea__inner`, className, {\n    [`${classPrefix}-is-${status}`]: status,\n    [`${classPrefix}-is-disabled`]: disabled,\n    [`${classPrefix}-is-focused`]: isFocused,\n    [`${classPrefix}-resize-none`]: typeof autosize === 'object',\n  });\n\n  const adjustTextareaHeight = useEventCallback(() => {\n    if (autosize === true) {\n      setTextareaStyle(calcTextareaHeight(textareaRef.current));\n    } else if (typeof autosize === 'object') {\n      setTextareaStyle(calcTextareaHeight(textareaRef.current, autosize?.minRows, autosize?.maxRows));\n    }\n  });\n\n  const handleAutoFocus = useEventCallback(() => {\n    requestAnimationFrame(() => {\n      if (autofocus && textareaRef.current) {\n        const textarea = textareaRef.current;\n        textarea.focus();\n        // 将光标移到内容的末尾\n        textarea.selectionStart = textarea.value.length;\n        textarea.selectionEnd = textarea.value.length;\n      }\n    });\n  });\n\n  function inputValueChangeHandle(e: React.FormEvent<HTMLTextAreaElement>) {\n    const { target } = e;\n    let val = (target as HTMLInputElement).value;\n\n    if (composingRef.current) {\n      setComposingValue(val);\n    } else {\n      if (!allowInputOverMax) {\n        val = limitUnicodeMaxLength(val, maxlength);\n        if (maxcharacter && maxcharacter >= 0) {\n          const stringInfo = getCharacterLength(val, maxcharacter);\n          val = typeof stringInfo === 'object' && stringInfo.characters;\n        }\n      }\n      setComposingValue(val);\n      setValue(val, { e });\n    }\n  }\n\n  function handleCompositionStart() {\n    composingRef.current = true;\n  }\n\n  function handleCompositionEnd(e: React.FormEvent<HTMLTextAreaElement>) {\n    if (composingRef.current) {\n      composingRef.current = false;\n      inputValueChangeHandle(e);\n    }\n  }\n\n  const renderLimitText = (current: number, max: number) => (\n    <span className={`${classPrefix}-textarea__limit`}>\n      {isOvermax && allowInputOverMax ? (\n        <span className={`${classPrefix}-textarea__tips--warning`}> {current}</span>\n      ) : (\n        `${current}`\n      )}\n      {`/${max}`}\n    </span>\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    if (autosize === false) {\n      setTextareaStyle(DEFAULT_TEXTAREA_STYLE);\n    } else {\n      adjustTextareaHeight();\n    }\n  }, [value, autosize, adjustTextareaHeight]);\n\n  useEffect(() => {\n    handleAutoFocus();\n    adjustTextareaHeight();\n  }, [handleAutoFocus, adjustTextareaHeight]);\n\n  useEffect(() => {\n    if (allowInputOverMax) {\n      setIsOvermax(!!(maxlength && currentLength > maxlength) || !!(maxcharacter && characterLength > maxcharacter));\n    }\n  }, [allowInputOverMax, characterLength, currentLength, maxcharacter, maxlength]);\n\n  useImperativeHandle(ref, () => ({\n    currentElement: wrapperRef.current,\n    textareaElement: textareaRef.current,\n  }));\n\n  const textTips = tips && (\n    <div\n      className={classNames(`${classPrefix}-textarea__tips`, {\n        [`${classPrefix}-textarea__tips--normal`]: !status,\n        [`${classPrefix}-textarea__tips--${status}`]: status,\n      })}\n    >\n      {tips}\n    </div>\n  );\n\n  const limitText =\n    (hasMaxcharacter && renderLimitText(characterLength, maxcharacter)) ||\n    (!hasMaxcharacter && maxlength && renderLimitText(currentLength, maxlength));\n\n  return (\n    <div style={style} ref={wrapperRef} className={classNames(`${classPrefix}-textarea`, className)}>\n      <textarea\n        {...textareaProps}\n        {...eventProps}\n        rows={rows}\n        value={composingRef.current ? composingValue : value}\n        style={textareaStyle}\n        className={textareaClassNames}\n        readOnly={readonly}\n        autoFocus={autofocus}\n        disabled={disabled}\n        onChange={inputValueChangeHandle}\n        onKeyDown={(e) => onKeydown(e.currentTarget.value, { e })}\n        onKeyPress={(e) => onKeypress(e.currentTarget.value, { e })}\n        onKeyUp={(e) => onKeyup(e.currentTarget.value, { e })}\n        onCompositionStart={handleCompositionStart}\n        onCompositionEnd={handleCompositionEnd}\n        ref={textareaRef}\n      />\n      {textTips || limitText ? (\n        <div\n          className={classNames(`${classPrefix}-textarea__info_wrapper`, {\n            [`${classPrefix}-textarea__info_wrapper_align`]: !textTips,\n          })}\n        >\n          {textTips}\n          {limitText}\n        </div>\n      ) : null}\n    </div>\n  );\n});\n\nTextarea.displayName = 'Textarea';\n\nexport default Textarea;\n"],"names":["TEXTAREA_STYLE","hiddenTextarea","calcTextareaHeight","targetElement","_hiddenTextarea","minRows","arguments","length","undefined","maxRows","document","createElement","body","appendChild","_calculateNodeSize","calculateNodeSize","paddingSize","borderSize","boxSizing","sizingStyle","setAttribute","concat","value","placeholder","height","scrollHeight","result","isBorderbox","isContentbox","singleRowHeight","parentNode","removeChild","calcHeight","rows","rowsHeight","isNull","minHeight","Math","max","min","DEFAULT_TEXTAREA_STYLE","Textarea","forwardRef","originalProps","ref","props","useDefaultProps","textareaDefaultProps","disabled","maxlength","maxcharacter","className","readonly","autofocus","style","_props$onKeydown","onKeydown","noop","_props$onKeypress","onKeypress","_props$onKeyup","onKeyup","autosize","status","tips","allowInputOverMax","otherProps","_objectWithoutProperties","_excluded","_useControlled","useControlled","onChange","_useControlled2","_slicedToArray","_useControlled2$","setValue","_useState","useState","_useState2","isFocused","setIsFocused","_useState3","_useState4","isOvermax","setIsOvermax","_useState5","_useState6","textareaStyle","setTextareaStyle","composingRef","useRef","_useState7","_useState8","composingValue","setComposingValue","hasMaxcharacter","textareaRef","wrapperRef","currentLength","useMemo","getUnicodeLength","characterLength","characterInfo","getCharacterLength","String","Infinity","_typeof","_useConfig","useConfig","classPrefix","textareaPropsNames","Object","keys","filter","key","test","textareaProps","reduce","assign","_defineProperty","eventPropsNames","eventProps","e","currentTarget","textareaClassNames","classNames","adjustTextareaHeight","useEventCallback","current","handleAutoFocus","requestAnimationFrame","textarea","focus","selectionStart","selectionEnd","inputValueChangeHandle","target","val","limitUnicodeMaxLength","stringInfo","characters","handleCompositionStart","handleCompositionEnd","renderLimitText","React","useIsomorphicLayoutEffect","useEffect","useImperativeHandle","currentElement","textareaElement","textTips","limitText","_objectSpread","readOnly","autoFocus","onKeyDown","onKeyPress","onKeyUp","onCompositionStart","onCompositionEnd","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAUA,IAAMA,cAAiB,GAAA,gQAAA,CAAA;AAYvB,IAAIC,cAAA,CAAA;AAEJ,SAASC,kBACPA,CAAAC,aAAA,EAGoB;AAAA,EAAA,IAAAC,eAAA,CAAA;AAAA,EAAA,IAFpBC,OAAqB,GAAAC,SAAA,CAAAC,MAAA,GAAA,CAAA,IAAAD,SAAA,CAAA,CAAA,CAAA,KAAAE,SAAA,GAAAF,SAAA,CAAA,CAAA,CAAA,GAAA,CAAA,CAAA;AAAA,EAAA,IACrBG,8EAAqB,IACD,CAAA;EACpB,IAAI,CAACR,cAAgB,EAAA;AACFA,IAAAA,cAAA,GAAAS,QAAA,CAASC,cAAc,UAAU,CAAA,CAAA;AACzCD,IAAAA,QAAA,CAAAE,IAAA,CAAKC,YAAYZ,cAAc,CAAA,CAAA;AAC1C,GAAA;AAEM,EAAA,IAAAa,kBAAA,GAKFC,kBAAkBZ,aAAa,CAAA;IAJjCa,WAAA,GAAAF,kBAAA,CAAAE,WAAA;IACAC,UAAA,GAAAH,kBAAA,CAAAG,UAAA;IACAC,SAAA,GAAAJ,kBAAA,CAAAI,SAAA;IACAC,WAAA,GAAAL,kBAAA,CAAAK,WAAA,CAAA;AAGFlB,EAAAA,cAAA,CAAemB,YAAa,CAAA,OAAA,EAAAC,EAAAA,CAAAA,MAAA,CAAYF,WAAA,EAAAE,GAAAA,CAAAA,CAAAA,MAAA,CAAerB,cAAgB,CAAA,CAAA,CAAA;EACvEC,cAAA,CAAeqB,KAAQ,GAAAnB,aAAA,CAAcmB,KAAS,IAAAnB,aAAA,CAAcoB,WAAe,IAAA,EAAA,CAAA;AAE3E,EAAA,IAAIC,SAASvB,cAAe,CAAAwB,YAAA,CAAA;EAC5B,IAAMC,SAA6B,EAAC,CAAA;AACpC,EAAA,IAAMC,cAAcT,SAAc,KAAA,YAAA,CAAA;AAClC,EAAA,IAAMU,eAAeV,SAAc,KAAA,aAAA,CAAA;AAEnC,EAAA,IAAIS,WAAa,EAAA;AACLH,IAAAA,MAAA,IAAAP,UAAA,CAAA;aACDW,YAAc,EAAA;AACbJ,IAAAA,MAAA,IAAAR,WAAA,CAAA;AACZ,GAAA;EAEAf,cAAA,CAAeqB,KAAQ,GAAA,EAAA,CAAA;AACjB,EAAA,IAAAO,eAAA,GAAkB5B,eAAewB,YAAe,GAAAT,WAAA,CAAA;AACtC,EAAA,CAAAZ,eAAA,GAAAH,cAAA,cAAAG,eAAA,KAAA,KAAA,CAAA,IAAA,CAAAA,eAAA,GAAAA,eAAA,CAAA0B,UAAA,MAAA,IAAA,IAAA1B,eAAA,KAAAA,KAAAA,CAAAA,IAAAA,eAAA,CAAY2B,YAAY9B,cAAc,CAAA,CAAA;AAErCA,EAAAA,cAAA,GAAA,IAAA,CAAA;AAEX,EAAA,IAAA+B,UAAA,GAAa,SAAbA,UAAAA,CAAcC,IAAiB,EAAA;AACnC,IAAA,IAAIC,aAAaL,eAAkB,GAAAI,IAAA,CAAA;AACnC,IAAA,IAAIN,WAAa,EAAA;AACfO,MAAAA,UAAA,GAAaA,aAAalB,WAAc,GAAAC,UAAA,CAAA;AAC1C,KAAA;AACO,IAAA,OAAAiB,UAAA,CAAA;GACT,CAAA;AAEI,EAAA,IAAA,CAACC,MAAO,CAAA9B,OAAO,CAAG,EAAA;AACd,IAAA,IAAA+B,SAAA,GAAYJ,WAAW3B,OAAO,CAAA,CAAA;IAC3BmB,MAAA,GAAAa,IAAA,CAAKC,GAAI,CAAAF,SAAA,EAAWZ,MAAM,CAAA,CAAA;AACnCE,IAAAA,MAAA,CAAOU,sBAAeA,SAAA,EAAA,IAAA,CAAA,CAAA;AACxB,GAAA;AACI,EAAA,IAAA,CAACD,MAAO,CAAA1B,OAAO,CAAG,EAAA;IACpBe,MAAA,GAASa,IAAK,CAAAE,GAAA,CAAIP,UAAW,CAAAvB,OAAO,GAAGe,MAAM,CAAA,CAAA;AAC/C,GAAA;AACAE,EAAAA,MAAA,CAAOF,mBAAYA,MAAA,EAAA,IAAA,CAAA,CAAA;AACZ,EAAA,OAAAE,MAAA,CAAA;AACT;;;;;ACjEA,IAAMc,sBAAyB,GAAA;AAAEhB,EAAAA,MAAQ,EAAA,MAAA;AAAQY,EAAAA,WAAW,MAAA;AAAO,CAAA,CAAA;AAc7DK,IAAAA,QAAW,gBAAAC,UAAA,CAAgD,UAACC,aAAA,EAAeC,GAAQ,EAAA;AACjF,EAAA,IAAAC,KAAA,GAAQC,eAA+B,CAAAH,aAAA,EAAeI,oBAAoB,CAAA,CAAA;AAC1E,EAAA,IACJC,QAAA,GAgBEH,KAAA,CAhBFG,QAAA;IACAC,SAAA,GAeEJ,KAAA,CAfFI,SAAA;IACAC,YAAA,GAcEL,KAAA,CAdFK,YAAA;IACAC,SAAA,GAaEN,KAAA,CAbFM,SAAA;IACAC,QAAA,GAYEP,KAAA,CAZFO,QAAA;IACAC,SAAA,GAWER,KAAA,CAXFQ,SAAA;IACAC,KAAA,GAUET,KAAA,CAVFS,KAAA;IAAAC,gBAAA,GAUEV,KAAA,CATFW,SAAY;AAAZA,IAAAA,SAAY,GAAAD,gBAAA,KAAAE,KAAAA,CAAAA,GAAAA,IAAA,GAAAF,gBAAA;IAAAG,iBAAA,GASVb,KAAA,CARFc,UAAa;AAAbA,IAAAA,UAAa,GAAAD,iBAAA,KAAAD,KAAAA,CAAAA,GAAAA,IAAA,GAAAC,iBAAA;IAAAE,cAAA,GAQXf,KAAA,CAPFgB,OAAU;AAAVA,IAAAA,OAAU,GAAAD,cAAA,KAAAH,KAAAA,CAAAA,GAAAA,IAAA,GAAAG,cAAA;IACVE,QAAA,GAMEjB,KAAA,CANFiB,QAAA;IACAC,MAAA,GAKElB,KAAA,CALFkB,MAAA;IACAC,IAAA,GAIEnB,KAAA,CAJFmB,IAAA;IACAC,iBAAA,GAGEpB,KAAA,CAHFoB,iBAAA;IACAhC,IAAA,GAEEY,KAAA,CAFFZ,IAAA;AACGiC,IAAAA,UAAA,GAAAC,wBAAA,CACDtB,KAAA,EAAAuB,SAAA,CAAA,CAAA;EAEE,IAAAC,cAAA,GAAyBC,aAAc,CAAAzB,KAAA,EAAO,OAAS,EAAAA,KAAA,CAAM0B,QAAQ,CAAA;IAAAC,eAAA,GAAAC,cAAA,CAAAJ,cAAA,EAAA,CAAA,CAAA;AAAAK,IAAAA,gBAAA,GAAAF,eAAA,CAAA,CAAA,CAAA;AAApElD,IAAAA,6BAAQ,KAAA,CAAA,GAAA,EAAI,GAAAoD,gBAAA;AAAAC,IAAAA,QAAQ,GAAAH,eAAA,CAAA,CAAA,CAAA,CAAA;AAC3B,EAAA,IAAAI,SAAA,GAAkCC,SAAS,KAAK,CAAA;IAAAC,UAAA,GAAAL,cAAA,CAAAG,SAAA,EAAA,CAAA,CAAA;AAAzCG,IAAAA,SAAA,GAAAD,UAAA,CAAA,CAAA,CAAA;AAAWE,IAAAA,YAAY,GAAAF,UAAA,CAAA,CAAA,CAAA,CAAA;AAC9B,EAAA,IAAAG,UAAA,GAAkCJ,SAAS,KAAK,CAAA;IAAAK,UAAA,GAAAT,cAAA,CAAAQ,UAAA,EAAA,CAAA,CAAA;AAAzCE,IAAAA,SAAA,GAAAD,UAAA,CAAA,CAAA,CAAA;AAAWE,IAAAA,YAAY,GAAAF,UAAA,CAAA,CAAA,CAAA,CAAA;AAC9B,EAAA,IAAAG,UAAA,GAA0CR,SAAiDrC,sBAAsB,CAAA;IAAA8C,UAAA,GAAAb,cAAA,CAAAY,UAAA,EAAA,CAAA,CAAA;AAA1GE,IAAAA,aAAA,GAAAD,UAAA,CAAA,CAAA,CAAA;AAAeE,IAAAA,gBAAgB,GAAAF,UAAA,CAAA,CAAA,CAAA,CAAA;AAChC,EAAA,IAAAG,YAAA,GAAeC,OAAO,KAAK,CAAA,CAAA;AACjC,EAAA,IAAAC,UAAA,GAA4Cd,SAAiB,EAAE,CAAA;IAAAe,UAAA,GAAAnB,cAAA,CAAAkB,UAAA,EAAA,CAAA,CAAA;AAAxDE,IAAAA,cAAA,GAAAD,UAAA,CAAA,CAAA,CAAA;AAAgBE,IAAAA,iBAAiB,GAAAF,UAAA,CAAA,CAAA,CAAA,CAAA;AAClC,EAAA,IAAAG,eAAA,GAAkB,OAAO7C,YAAiB,KAAA,WAAA,CAAA;AAC1C,EAAA,IAAA8C,WAAA,GAAcN,OAA4B,IAAI,CAAA,CAAA;AAC9C,EAAA,IAAAO,UAAA,GAAaP,OAAuB,IAAI,CAAA,CAAA;EACxC,IAAAQ,aAAA,GAAgBC,QAAQ,YAAA;IAAA,OAAMC,gBAAA,CAAiB9E,KAAK,CAAG,CAAA;GAAA,EAAA,CAACA,KAAK,CAAC,CAAA,CAAA;AAC9D,EAAA,IAAA+E,eAAA,GAAkBF,QAAQ,YAAM;AACpC,IAAA,IAAMG,gBAAgBC,kBAAmB,CAAAC,MAAA,CAAOlF,KAAK,CAAG,EAAA2C,iBAAA,GAAoBwC,WAAWvD,YAAY,CAAA,CAAA;IACnG,IAAIwD,OAAA,CAAOJ,aAAkB,CAAA,KAAA,QAAA,EAAU,OAAOA,aAAc,CAAA/F,MAAA,CAAA;AACrD,IAAA,OAAA+F,aAAA,CAAA;GACN,EAAA,CAAChF,KAAO,EAAA2C,iBAAA,EAAmBf,YAAY,CAAC,CAAA,CAAA;AAErC,EAAA,IAAAyD,UAAA,GAAkBC,SAAU,EAAA;IAA1BC,WAAY,GAAAF,UAAA,CAAZE,WAAY,CAAA;AAEpB,EAAA,IAAMC,kBAAqB,GAAAC,MAAA,CAAOC,IAAK,CAAA9C,UAAU,CAAE,CAAA+C,MAAA,CAAO,UAACC,GAAA,EAAA;AAAA,IAAA,OAAQ,CAAC,UAAA,CAAWC,IAAK,CAAAD,GAAG,CAAC,CAAA;GAAA,CAAA,CAAA;EACxF,IAAME,gBAAgBN,kBAAmB,CAAAO,MAAA,CACvC,UAACD,cAAe,EAAAF,GAAA,EAAA;AAAA,IAAA,OAAQH,MAAO,CAAAO,MAAA,CAAOF,cAAe,EAAAG,eAAA,CAAGL,EAAAA,EAAAA,GAAA,EAAMrE,KAAM,CAAAqE,GAAA,CAAA,CAAM,CAAA,CAAA;GAC1E,EAAA,EACF,CAAA,CAAA;AACM,EAAA,IAAAM,eAAA,GAAkBT,MAAO,CAAAC,IAAA,CAAK9C,UAAU,CAAA,CAAE+C,MAAO,CAAA,UAACC,GAAQ,EAAA;AAAA,IAAA,OAAA,UAAA,CAAWC,IAAK,CAAAD,GAAG,CAAC,CAAA;GAAA,CAAA,CAAA;EACpF,IAAMO,UAAa,GAAAD,eAAA,CAAgBH,MAAO,CAAA,UAACI,aAAYP,GAAQ,EAAA;IAC7DH,MAAA,CAAOO,OAAOG,WAAY,EAAAF,eAAA,CAAA,EAAA,EACvBL,GAAM,EAAA,UAACQ,CAAM,EAAA;AACR,MAAA,IAAA1E,QAAA,EAAU,OAAA;AACd,MAAA,IAAIkE,GAAQ,KAAA,SAAA,EAAWlC,YAAA,CAAa,IAAI,CAAA,CAAA;AACxC,MAAA,IAAIkC,GAAQ,KAAA,QAAA,EAAUlC,YAAA,CAAa,KAAK,CAAA,CAAA;MACxCnC,KAAA,CAAMqE,KAAKQ,CAAE,CAAAC,aAAA,CAAcrG,KAAO,EAAA;AAAEoG,QAAAA,GAAAA,CAAAA;AAAE,OAAC,CAAA,CAAA;AACzC,KAAA,CACD,CAAA,CAAA;AACMD,IAAAA,OAAAA,WAAAA,CAAAA;GACT,EAAG,EAAE,CAAA,CAAA;EAEL,IAAMG,kBAAqB,GAAAC,UAAA,CAAA,EAAA,CAAAxG,MAAA,CAAcwF,WAAA,EAA+B1D,kBAAAA,CAAAA,EAAAA,SAAW,EAAAoE,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAA,EAAA,EAAA,EAAA,CAAAlG,MAAA,CAC7EwF,WAAA,EAAAxF,MAAAA,CAAAA,CAAAA,MAAA,CAAkB0C,MAAW,GAAAA,MAAA,CAAA,EAAA,EAAA,CAAA1C,MAAA,CAC7BwF,WAA4B,mBAAA7D,QAAA,CAAA,EAAA,EAAA,CAAA3B,MAAA,CAC5BwF,WAA2B,EAAA,aAAA,CAAA,EAAA9B,SAAA,CAAA1D,EAAAA,EAAAA,CAAAA,MAAA,CAC3BwF,WAA4B,EAAAH,cAAAA,CAAAA,EAAAA,OAAA,CAAO5C,QAAa,CAAA,KAAA,QAAA,CACrD,CAAA,CAAA;AAEK,EAAA,IAAAgE,oBAAA,GAAuBC,iBAAiB,YAAM;IAClD,IAAIjE,aAAa,IAAM,EAAA;AACJ0B,MAAAA,gBAAA,CAAAtF,kBAAA,CAAmB8F,WAAY,CAAAgC,OAAO,CAAC,CAAA,CAAA;AAC1D,KAAA,MAAA,IAAWtB,OAAA,CAAO5C,QAAA,CAAA,KAAa,QAAU,EAAA;MACvC0B,gBAAA,CAAiBtF,mBAAmB8F,WAAY,CAAAgC,OAAA,EAASlE,qBAAAA,+BAAAA,SAAUzD,OAAS,EAAAyD,QAAA,KAAAA,IAAAA,IAAAA,QAAA,uBAAAA,QAAA,CAAUrD,OAAO,CAAC,CAAA,CAAA;AAChG,KAAA;AACF,GAAC,CAAA,CAAA;AAEK,EAAA,IAAAwH,eAAA,GAAkBF,iBAAiB,YAAM;AAC7CG,IAAAA,qBAAA,CAAsB,YAAM;AACtB,MAAA,IAAA7E,SAAA,IAAa2C,YAAYgC,OAAS,EAAA;AACpC,QAAA,IAAMG,WAAWnC,WAAY,CAAAgC,OAAA,CAAA;QAC7BG,QAAA,CAASC,KAAM,EAAA,CAAA;AAEND,QAAAA,QAAA,CAAAE,cAAA,GAAiBF,SAAS7G,KAAM,CAAAf,MAAA,CAAA;AAChC4H,QAAAA,QAAA,CAAAG,YAAA,GAAeH,SAAS7G,KAAM,CAAAf,MAAA,CAAA;AACzC,OAAA;AACF,KAAC,CAAA,CAAA;AACH,GAAC,CAAA,CAAA;EAED,SAASgI,uBAAuBb,CAAyC,EAAA;AACjE,IAAA,IAAEc,SAAWd,CAAA,CAAXc;AACR,IAAA,IAAIC,MAAOD,MAA4B,CAAAlH,KAAA,CAAA;IAEvC,IAAImE,aAAauC,OAAS,EAAA;MACxBlC,iBAAA,CAAkB2C,GAAG,CAAA,CAAA;AACvB,KAAO,MAAA;MACL,IAAI,CAACxE,iBAAmB,EAAA;AAChBwE,QAAAA,GAAA,GAAAC,qBAAA,CAAsBD,KAAKxF,SAAS,CAAA,CAAA;AACtC,QAAA,IAAAC,YAAA,IAAgBA,gBAAgB,CAAG,EAAA;AAC/B,UAAA,IAAAyF,UAAA,GAAapC,kBAAmB,CAAAkC,GAAA,EAAKvF,YAAY,CAAA,CAAA;UACjDuF,GAAA,GAAA/B,OAAA,CAAOiC,UAAe,MAAA,QAAA,IAAYA,UAAW,CAAAC,UAAA,CAAA;AACrD,SAAA;AACF,OAAA;MACA9C,iBAAA,CAAkB2C,GAAG,CAAA,CAAA;MACZ9D,QAAA,CAAA8D,GAAA,EAAK;AAAEf,QAAAA,CAAA,EAAAA,CAAAA;AAAE,OAAC,CAAA,CAAA;AACrB,KAAA;AACF,GAAA;EAEA,SAASmB,sBAAyBA,GAAA;IAChCpD,YAAA,CAAauC,OAAU,GAAA,IAAA,CAAA;AACzB,GAAA;EAEA,SAASc,qBAAqBpB,CAAyC,EAAA;IACrE,IAAIjC,aAAauC,OAAS,EAAA;MACxBvC,YAAA,CAAauC,OAAU,GAAA,KAAA,CAAA;MACvBO,sBAAA,CAAuBb,CAAC,CAAA,CAAA;AAC1B,KAAA;AACF,GAAA;AAEA,EAAA,IAAMqB,eAAkB,GAAA,SAAlBA,eAAkBA,CAACf,OAAiB,EAAA1F,GAAA,EAAA;AAAA,IAAA,sBACvC0G,KAAA,CAAArI,aAAA,CAAA,MAAA,EAAA;MAAKwC,qBAAc0D,WAAA,EAAA,kBAAA,CAAA;KACjB,EAAA1B,SAAA,IAAalB,mCACX+E,KAAA,CAAArI,aAAA,CAAA,MAAA,EAAA;MAAKwC,qBAAc0D,WAAA,EAAA,0BAAA,CAAA;AAAA,KAAA,EAAuC,KAAEmB,OAAQ,CAAA,GAAA3G,EAAAA,CAAAA,MAAA,CAElE2G,OAAA,CAAA,EAAA3G,GAAAA,CAAAA,MAAA,CAEAiB,GACP,CAAA,CAAA,CAAA;AAAA,GAAA,CAAA;AAGF2G,EAAAA,yBAAA,CAA0B,YAAM;IAC9B,IAAInF,aAAa,KAAO,EAAA;MACtB0B,gBAAA,CAAiBhD,sBAAsB,CAAA,CAAA;AACzC,KAAO,MAAA;AACgBsF,MAAAA,oBAAA,EAAA,CAAA;AACvB,KAAA;GACC,EAAA,CAACxG,KAAO,EAAAwC,QAAA,EAAUgE,oBAAoB,CAAC,CAAA,CAAA;AAE1CoB,EAAAA,SAAA,CAAU,YAAM;AACEjB,IAAAA,eAAA,EAAA,CAAA;AACKH,IAAAA,oBAAA,EAAA,CAAA;AACvB,GAAG,EAAA,CAACG,eAAiB,EAAAH,oBAAoB,CAAC,CAAA,CAAA;AAE1CoB,EAAAA,SAAA,CAAU,YAAM;AACd,IAAA,IAAIjF,iBAAmB,EAAA;AACRmB,MAAAA,YAAA,CAAA,CAAC,EAAEnC,SAAa,IAAAiD,aAAA,GAAgBjD,cAAc,CAAC,EAAEC,YAAgB,IAAAmD,eAAA,GAAkBnD,YAAa,CAAA,CAAA,CAAA;AAC/G,KAAA;AACF,KAAG,CAACe,iBAAA,EAAmBoC,iBAAiBH,aAAe,EAAAhD,YAAA,EAAcD,SAAS,CAAC,CAAA,CAAA;EAE/EkG,mBAAA,CAAoBvG,KAAK,YAAA;IAAA,OAAO;MAC9BwG,gBAAgBnD,UAAW,CAAA+B,OAAA;MAC3BqB,iBAAiBrD,WAAY,CAAAgC,OAAAA;KAC7B,CAAA;AAAA,GAAA,CAAA,CAAA;EAEI,IAAAsB,QAAA,GAAWtF,uBACdgF,KAAA,CAAArI,aAAA,CAAA,KAAA,EAAA;IACCwC,SAAA,EAAW0E,UAAW,CAAA,EAAA,CAAAxG,MAAA,CAAGwF,WAA8B,EAAA,iBAAA,CAAA,EAAAU,eAAA,CAAAA,eAAA,CAAA,EAAA,EAAA,EAAA,CAAAlG,MAAA,CACjDwF,WAAA,EAAA,yBAAA,CAAA,EAAuC,CAAC9C,MAAA,CAAA1C,EAAAA,EAAAA,CAAAA,MAAA,CACxCwF,WAAA,EAAAxF,mBAAAA,CAAAA,CAAAA,MAAA,CAA+B0C,MAAW,CAAAA,EAAAA,MAAA,CAC/C,CAAA;GAAA,EAEAC,IACH,CAAA,CAAA;EAGI,IAAAuF,SAAA,GACHxD,eAAmB,IAAAgD,eAAA,CAAgB1C,eAAiB,EAAAnD,YAAY,CAChE,IAAA,CAAC6C,eAAmB,IAAA9C,SAAA,IAAa8F,eAAgB,CAAA7C,aAAA,EAAejD,SAAS,CAAA,CAAA;AAE5E,EAAA,sBACG+F,KAAA,CAAArI,aAAA,CAAA,KAAA,EAAA;AAAI2C,IAAAA,KAAA,EAAAA,KAAA;AAAcV,IAAAA,GAAK,EAAAqD,UAAA;AAAY9C,IAAAA,SAAW,EAAA0E,UAAA,CAAA,EAAA,CAAAxG,MAAA,CAAcwF,WAAA,gBAAwB1D,SAAS,CAAA;AAAA,GAAA,iBAC3F6F,KAAA,CAAArI,aAAA,CAAA,UAAA,EAAA6I,aAAA,CAAAA,aAAA,CAAAA,aAAA,CACKpC,EAAAA,EAAAA,aAAA,GACAK,UAAA,CAAA,EAAA,EAAA,EAAA;AACJxF,IAAAA,IAAA,EAAAA,IAAA;AACAX,IAAAA,KAAA,EAAOmE,YAAa,CAAAuC,OAAA,GAAUnC,cAAiB,GAAAvE,KAAA;AAC/CgC,IAAAA,KAAO,EAAAiC,aAAA;AACPpC,IAAAA,SAAW,EAAAyE,kBAAA;AACX6B,IAAAA,QAAU,EAAArG,QAAA;AACVsG,IAAAA,SAAW,EAAArG,SAAA;AACXL,IAAAA,QAAA,EAAAA,QAAA;AACAuB,IAAAA,QAAU,EAAAgE,sBAAA;AACVoB,IAAAA,SAAA,EAAW,SAAXA,SAAAA,CAAYjC,CAAM,EAAA;AAAA,MAAA,OAAAlE,SAAA,CAAUkE,EAAEC,aAAc,CAAArG,KAAA,EAAO;AAAEoG,QAAAA,CAAA,EAAAA,CAAAA;AAAE,OAAC,CAAA,CAAA;AAAA,KAAA;AACxDkC,IAAAA,UAAA,EAAY,SAAZA,UAAAA,CAAalC,CAAM,EAAA;AAAA,MAAA,OAAA/D,UAAA,CAAW+D,EAAEC,aAAc,CAAArG,KAAA,EAAO;AAAEoG,QAAAA,CAAA,EAAAA,CAAAA;AAAE,OAAC,CAAA,CAAA;AAAA,KAAA;AAC1DmC,IAAAA,OAAA,EAAS,SAATA,OAAAA,CAAUnC,CAAM,EAAA;AAAA,MAAA,OAAA7D,OAAA,CAAQ6D,EAAEC,aAAc,CAAArG,KAAA,EAAO;AAAEoG,QAAAA,CAAA,EAAAA,CAAAA;AAAE,OAAC,CAAA,CAAA;AAAA,KAAA;AACpDoC,IAAAA,kBAAoB,EAAAjB,sBAAA;AACpBkB,IAAAA,gBAAkB,EAAAjB,oBAAA;AAClBlG,IAAAA,GAAK,EAAAoD,WAAAA;AAAA,GAAA,CACP,CAAA,EACCsD,QAAY,IAAAC,SAAA,kBACVP,KAAA,CAAArI,aAAA,CAAA,KAAA,EAAA;AACCwC,IAAAA,SAAA,EAAW0E,UAAW,CAAAxG,EAAAA,CAAAA,MAAA,CAAGwF,WAAsC,EAAA,yBAAA,CAAA,EAAAU,eAAA,CAAA,EAAA,EAAA,EAAA,CAAAlG,MAAA,CACzDwF,WAAA,EAA6C,+BAAA,CAAA,EAAA,CAACyC,QAAA,CACnD,CAAA;AAEA,GAAA,EAAAA,QAAA,EACAC,SACH,CAAA,GACE,IACN,CAAA,CAAA;AAEJ,CAAC,EAAA;AAED9G,QAAA,CAASuH,WAAc,GAAA,UAAA;;;;"}