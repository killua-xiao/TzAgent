/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-cb0a3966.js';
import React from 'react';
import classNames from 'classnames';
import { g as getColorObject, C as Color } from '../../_chunks/dep-2d7c1f92.js';
import { Input } from '../../input/index.js';
import useClassNames from '../hooks/useClassNames.js';
import noop from '../../_util/noop.js';
import '../../_chunks/dep-eca3a3de.js';
import '../../_chunks/dep-48805ab8.js';
import '../../_chunks/dep-026a4c6b.js';
import '../../_chunks/dep-83726008.js';
import '../../_chunks/dep-3c3d29db.js';
import '../../_chunks/dep-3ac1dd01.js';
import 'lodash-es';
import '../../input/Input.js';
import '../../_chunks/dep-6b660ef0.js';
import 'tdesign-icons-react';
import '../../hooks/useLayoutEffect.js';
import '../../_chunks/dep-3a09424a.js';
import '../../_util/forwardRefWithStatics.js';
import 'hoist-non-react-statics';
import '../../hooks/useConfig.js';
import '../../config-provider/ConfigContext.js';
import '../../locale/zh_CN.js';
import '../../_chunks/dep-e29214cb.js';
import 'dayjs';
import '../../_chunks/dep-3c9ab31a.js';
import '../../hooks/useGlobalIcon.js';
import '../../input/InputGroup.js';
import '../../hooks/useControlled.js';
import '../../locale/LocalReceiver.js';
import '../../config-provider/index.js';
import '../../config-provider/ConfigProvider.js';
import '../../config-provider/type.js';
import '../../input/defaultProps.js';
import '../../_util/parseTNode.js';
import '../../_chunks/dep-f53c91cd.js';
import '../../_chunks/dep-b908e1fe.js';
import '../../input/useLengthLimit.js';
import '../../_chunks/dep-1630b9b4.js';
import '../../_chunks/dep-87d110df.js';
import '../../hooks/useDefaultProps.js';
import '../../input/style/css.js';
import '../../input/type.js';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var ColorPickerTrigger = function ColorPickerTrigger(props) {
  var baseClassName = useClassNames();
  var _props$disabled = props.disabled,
    disabled = _props$disabled === void 0 ? false : _props$disabled,
    _props$borderless = props.borderless,
    borderless = _props$borderless === void 0 ? false : _props$borderless,
    _props$inputProps = props.inputProps,
    inputProps = _props$inputProps === void 0 ? {
      autoWidth: true
    } : _props$inputProps,
    clearable = props.clearable,
    onClear = props.onClear;
  var handleChange = function handleChange(input) {
    if (input !== props.value) {
      var _props$onChange;
      (_props$onChange = props.onChange) === null || _props$onChange === void 0 || _props$onChange.call(props, input, {
        color: getColorObject(new Color(input)),
        trigger: "input"
      });
    }
  };
  return /* @__PURE__ */React.createElement("div", {
    className: "".concat(baseClassName, "__trigger--default")
  }, /* @__PURE__ */React.createElement(Input, _objectSpread(_objectSpread({
    borderless: borderless,
    clearable: clearable
  }, inputProps), {}, {
    value: props.value,
    disabled: disabled,
    label: /* @__PURE__ */React.createElement("div", {
      className: classNames("".concat(baseClassName, "__trigger--default__color"), "".concat(baseClassName, "--bg-alpha"))
    }, /* @__PURE__ */React.createElement("span", {
      className: "color-inner",
      style: {
        background: props.value
      }
    })),
    onChange: handleChange,
    onClear: onClear || noop
  })));
};
var ColorTrigger = /*#__PURE__*/React.memo(ColorPickerTrigger);

export { ColorTrigger as default };
//# sourceMappingURL=trigger.js.map
