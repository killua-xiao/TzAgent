{"version":3,"file":"CascaderPanel.js","sources":["../../../components/cascader/CascaderPanel.tsx"],"sourcesContent":["import React from 'react';\nimport { pick } from 'lodash-es';\nimport classNames from 'classnames';\nimport Panel from './components/Panel';\nimport { TdCascaderProps } from './interface';\nimport { useCascaderContext } from './hooks';\nimport { cascaderDefaultProps } from './defaultProps';\nimport { StyledProps } from '../common';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\nexport interface CascaderProps extends TdCascaderProps, StyledProps {}\n\nconst CascaderPanel: React.FC<CascaderProps> = (originalProps) => {\n  const props = useDefaultProps<CascaderProps>(originalProps, cascaderDefaultProps);\n  const { cascaderContext } = useCascaderContext(props);\n  return (\n    <Panel\n      className={classNames(props.className)}\n      style={props.style}\n      cascaderContext={cascaderContext}\n      {...pick(props, ['trigger', 'onChange', 'empty', 'option'])}\n    ></Panel>\n  );\n};\n\nCascaderPanel.displayName = 'CascaderPanel';\n\nexport default CascaderPanel;\n"],"names":["CascaderPanel","originalProps","props","useDefaultProps","cascaderDefaultProps","_useCascaderContext","useCascaderContext","cascaderContext","React","createElement","Panel","_objectSpread","className","classNames","style","pick","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA,IAAMA,aAAA,GAAyC,SAAzCA,aAAAA,CAA0CC,aAAkB,EAAA;AAC1D,EAAA,IAAAC,KAAA,GAAQC,eAA+B,CAAAF,aAAA,EAAeG,oBAAoB,CAAA,CAAA;AAChF,EAAA,IAAAC,mBAAA,GAA4BC,kBAAA,CAAmBJ,KAAK,CAAA;IAA5CK,eAAA,GAAAF,mBAAA,CAAAE,eAAA,CAAA;AACR,EAAA,sBACGC,KAAA,CAAAC,aAAA,CAAAC,KAAA,EAAAC,aAAA,CAAA;AACCC,IAAAA,SAAA,EAAWC,UAAW,CAAAX,KAAA,CAAMU,SAAS,CAAA;IACrCE,OAAOZ,KAAM,CAAAY,KAAA;AACbP,IAAAA,eAAA,EAAAA,eAAAA;AAAA,GAAA,EACIQ,KAAKb,KAAO,EAAA,CAAC,WAAW,UAAY,EAAA,OAAA,EAAS,QAAQ,CAAC,CAAA,CAC3D,CAAA,CAAA;AAEL,EAAA;AAEAF,aAAA,CAAcgB,WAAc,GAAA,eAAA;;;;"}