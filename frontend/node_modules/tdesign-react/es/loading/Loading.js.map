{"version":3,"file":"Loading.js","sources":["../../../components/loading/Loading.tsx"],"sourcesContent":["import React, { useState, useEffect, useMemo, CSSProperties } from 'react';\nimport classnames from 'classnames';\nimport { canUseDocument } from '../_util/dom';\nimport useConfig from '../hooks/useConfig';\nimport { StyledProps } from '../common';\nimport { TdLoadingProps } from './type';\nimport Portal from '../common/Portal';\nimport Gradient from './gradient';\nimport { loadingDefaultProps } from './defaultProps';\nimport useDefaultProps from '../hooks/useDefaultProps';\nimport { addClass, removeClass } from '../_util/style';\n\nexport interface LoadingProps extends TdLoadingProps, StyledProps {}\n\nconst Loading: React.FC<LoadingProps> = (props) => {\n  const {\n    attach,\n    indicator,\n    text,\n    loading,\n    size,\n    delay,\n    fullscreen,\n    preventScrollThrough,\n    showOverlay,\n    content,\n    children,\n    inheritColor,\n    zIndex,\n    className,\n    style,\n  } = useDefaultProps<LoadingProps>(props, loadingDefaultProps);\n\n  const [showLoading, setShowLoading] = useState(() => (delay ? false : loading));\n\n  const { classPrefix } = useConfig();\n\n  const name = `${classPrefix}-loading`;\n  const centerClass = `${classPrefix}-loading--center`;\n  const inheritColorClass = `${classPrefix}-loading--inherit-color`;\n  const fullClass = `${classPrefix}-loading--full`;\n  const fullscreenClass = `${classPrefix}-loading__fullscreen`;\n  const lockClass = `${classPrefix}-loading--lock`;\n  const overlayClass = `${classPrefix}-loading__overlay`;\n  const relativeClass = `${classPrefix}-loading__parent`;\n  const textClass = `${classPrefix}-loading__text`;\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n\n    if (delay && loading) {\n      timer = setTimeout(() => {\n        setShowLoading(loading);\n      }, delay);\n    } else {\n      setShowLoading(loading);\n    }\n    return () => {\n      clearTimeout(timer);\n    };\n  }, [delay, loading]);\n\n  const calcStyles = useMemo<React.CSSProperties>(() => {\n    const styles: CSSProperties = {};\n\n    if (zIndex !== undefined) {\n      styles.zIndex = zIndex;\n    }\n\n    if (!['small', 'medium', 'large'].includes(size)) {\n      styles.fontSize = size;\n    }\n\n    return styles;\n  }, [size, zIndex]);\n\n  const sizeMap = {\n    large: `${classPrefix}-size-l`,\n    small: `${classPrefix}-size-s`,\n    medium: `${classPrefix}-size-m`,\n  };\n\n  const baseClasses = classnames(\n    centerClass,\n    sizeMap[size],\n    {\n      [inheritColorClass]: inheritColor,\n    },\n    className,\n  );\n\n  useEffect(() => {\n    if (preventScrollThrough && fullscreen && canUseDocument && loading) {\n      addClass(document.body, lockClass);\n    }\n    return () => {\n      removeClass(document.body, lockClass);\n    };\n  }, [loading, preventScrollThrough, fullscreen, lockClass]);\n\n  const commonContent = () => {\n    let renderIndicator = <Gradient />;\n\n    if (indicator && typeof indicator !== 'boolean') {\n      renderIndicator = indicator as React.ReactElement;\n    }\n    return (\n      <>\n        {indicator ? renderIndicator : null}\n        {text ? <div className={textClass}>{text}</div> : null}\n      </>\n    );\n  };\n\n  if (fullscreen) {\n    return loading ? (\n      <div className={classnames(name, fullscreenClass, centerClass, overlayClass)} style={{ ...calcStyles, ...style }}>\n        <div className={baseClasses}>{commonContent()}</div>\n      </div>\n    ) : null;\n  }\n\n  if (content || children) {\n    return (\n      <div className={relativeClass} style={style}>\n        {content || children}\n        {showLoading ? (\n          <div\n            className={classnames(name, baseClasses, fullClass, {\n              [overlayClass]: showOverlay,\n            })}\n            style={calcStyles}\n          >\n            {commonContent()}\n          </div>\n        ) : null}\n      </div>\n    );\n  }\n  if (attach) {\n    return (\n      <Portal attach={attach}>\n        {loading ? (\n          <div\n            className={classnames(name, baseClasses, fullClass, { [overlayClass]: showOverlay })}\n            style={{ ...calcStyles, ...style }}\n          >\n            {commonContent()}\n          </div>\n        ) : null}\n      </Portal>\n    );\n  }\n\n  return loading ? (\n    <div className={classnames(name, baseClasses)} style={{ ...calcStyles, ...style }}>\n      {commonContent()}\n    </div>\n  ) : null;\n};\n\nLoading.displayName = 'Loading';\n\nexport default Loading;\n"],"names":["Loading","props","_useDefaultProps","useDefaultProps","loadingDefaultProps","attach","indicator","text","loading","size","delay","fullscreen","preventScrollThrough","showOverlay","content","children","inheritColor","zIndex","className","style","_useState","useState","_useState2","_slicedToArray","showLoading","setShowLoading","_useConfig","useConfig","classPrefix","name","centerClass","inheritColorClass","fullClass","fullscreenClass","lockClass","overlayClass","relativeClass","textClass","useEffect","timer","setTimeout","clearTimeout","calcStyles","useMemo","styles","includes","fontSize","sizeMap","large","small","medium","baseClasses","classnames","_defineProperty","canUseDocument","addClass","document","body","removeClass","commonContent","renderIndicator","Gradient","React","createElement","Fragment","_objectSpread","Portal","displayName"],"mappings":"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"}