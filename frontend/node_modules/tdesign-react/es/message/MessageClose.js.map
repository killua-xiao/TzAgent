{"version":3,"file":"MessageClose.js","sources":["../../../components/message/MessageClose.tsx"],"sourcesContent":["/**\n * @desc message 关闭按钮组件\n */\nimport React from 'react';\n\nimport classNames from 'classnames';\nimport { CloseIcon as TdCloseIcon } from 'tdesign-icons-react';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport { TdMessageProps } from './type';\nimport { useMessageClass } from './useMessageClass';\n\nexport default function MessageClose({ closeBtn, onCloseBtnClick }: TdMessageProps) {\n  const { tdMessageClassGenerator } = useMessageClass();\n  const { CloseIcon } = useGlobalIcon({ CloseIcon: TdCloseIcon });\n\n  let relCloseBtn = closeBtn;\n  // 函数类型先执行并解出具体的内容，然后进行判断\n  if (typeof closeBtn === 'function') {\n    // @ts-ignore TODO 待类型完善后移除\n    relCloseBtn = closeBtn();\n  }\n\n  // falseLike 类型表明不展示 close\n  if (!relCloseBtn) {\n    return null;\n  }\n\n  // 数字 字符串类型封装 span 标签\n  if (typeof relCloseBtn === 'string' || typeof relCloseBtn === 'number') {\n    return (\n      <span className={tdMessageClassGenerator('close')} onClick={(e) => onCloseBtnClick?.({ e })}>\n        {closeBtn}\n      </span>\n    );\n  }\n\n  // 组件或者 dom 节点 加上 close 样式\n  if (React.isValidElement(relCloseBtn)) {\n    const { onClick } = (relCloseBtn as React.ReactElement<any>).props;\n    return React.cloneElement<any>(relCloseBtn, {\n      className: classNames((relCloseBtn as React.ReactElement<any>).props.className, tdMessageClassGenerator('close')),\n      onClick: (e) => {\n        onClick?.(e);\n        onCloseBtnClick?.({ e });\n      },\n    });\n  }\n\n  // 否则使用默认的关闭按钮样式\n  return <CloseIcon className={tdMessageClassGenerator('close')} onClick={(e) => onCloseBtnClick?.({ e })} />;\n}\n"],"names":["MessageClose","_ref","closeBtn","onCloseBtnClick","_useMessageClass","useMessageClass","tdMessageClassGenerator","_useGlobalIcon","useGlobalIcon","CloseIcon","TdCloseIcon","relCloseBtn","React","createElement","className","onClick","e","isValidElement","props","cloneElement","classNames"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAWA,SAAwBA,YAAaA,CAAAC,IAAA,EAA+C;AAAA,EAAA,IAA7CC,QAAU,GAAAD,IAAA,CAAVC,QAAU;IAAAC,eAAA,GAAAF,IAAA,CAAAE,eAAA,CAAA;AACzC,EAAA,IAAAC,gBAAA,GAA8BC,eAAgB,EAAA;IAA5CC,uBAAwB,GAAAF,gBAAA,CAAxBE,uBAAwB,CAAA;EAChC,IAAAC,cAAA,GAAsBC,cAAc;AAAEC,MAAAA,SAAA,EAAWC,SAAAA;AAAY,KAAC,CAAA;IAAtDD,WAAU,GAAAF,cAAA,CAAVE,SAAU,CAAA;EAElB,IAAIE,WAAc,GAAAT,QAAA,CAAA;AAEd,EAAA,IAAA,OAAOA,aAAa,UAAY,EAAA;IAElCS,WAAA,GAAcT,QAAS,EAAA,CAAA;AACzB,GAAA;EAGA,IAAI,CAACS,WAAa,EAAA;AACT,IAAA,OAAA,IAAA,CAAA;AACT,GAAA;EAGA,IAAI,OAAOA,WAAA,KAAgB,QAAY,IAAA,OAAOA,gBAAgB,QAAU,EAAA;AACtE,IAAA,sBACGC,KAAA,CAAAC,aAAA,CAAA,MAAA,EAAA;AAAKC,MAAAA,SAAA,EAAWR,wBAAwB,OAAO,CAAA;AAAGS,MAAAA,SAAS,SAATA,QAAUC,CAAA,EAAA;AAAA,QAAA,OAAMb,eAAkB,KAAA,IAAA,IAAlBA,eAAkB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAlBA,eAAkB,CAAA;AAAEa,UAAAA,GAAAA,CAAAA;AAAE,SAAC,CAAA,CAAA;AAAA,OAAA;KAAA,EACvFd,QACH,CAAA,CAAA;AAEJ,GAAA;AAGI,EAAA,iBAAAU,KAAA,CAAMK,cAAe,CAAAN,WAAW,CAAG,EAAA;AAC/B,IAAA,IAAEI,QAAQ,GAAKJ,WAAwC,CAAAO,KAAA,CAArDH,OAAQ,CAAA;AACT,IAAA,oBAAAH,KAAA,CAAMO,aAAkBR,WAAa,EAAA;AAC1CG,MAAAA,WAAWM,UAAY,CAAAT,WAAA,CAAwCO,MAAMJ,SAAW,EAAAR,uBAAA,CAAwB,OAAO,CAAC,CAAA;AAChHS,MAAAA,OAAA,EAAS,SAATA,OAAAA,CAAUC,CAAM,EAAA;AACdD,QAAAA,QAAA,aAAAA,QAAA,KAAA,KAAA,CAAA,IAAAA,QAAA,CAAUC,CAAC,CAAA,CAAA;AACOb,QAAAA,eAAA,KAAAA,IAAAA,IAAAA,eAAA,KAAAA,KAAAA,CAAAA,IAAAA,eAAA,CAAA;AAAEa,UAAAA,GAAAA,CAAAA;AAAE,SAAC,CAAA,CAAA;AACzB,OAAA;AACF,KAAC,CAAA,CAAA;AACH,GAAA;AAGA,EAAA,sBAAQJ,KAAA,CAAAC,aAAA,CAAAJ,WAAA,EAAA;AAAUK,IAAAA,SAAA,EAAWR,wBAAwB,OAAO,CAAA;AAAGS,IAAAA,SAAS,SAATA,QAAUC,CAAA,EAAA;AAAA,MAAA,OAAMb,eAAkB,KAAA,IAAA,IAAlBA,eAAkB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAlBA,eAAkB,CAAA;AAAEa,QAAAA,GAAAA,CAAAA;AAAE,OAAC,CAAA,CAAA;AAAA,KAAA;AAAG,GAAA,CAAA,CAAA;AAC3G;;;;"}