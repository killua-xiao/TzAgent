{"version":3,"file":"useTreeVirtualScroll.js","sources":["../../../../components/tree/hooks/useTreeVirtualScroll.ts"],"sourcesContent":["import { useMemo, useEffect, CSSProperties } from 'react';\nimport TreeNode from '@tdesign/common-js/tree-v1/tree-node';\nimport useVirtualScroll from '../../hooks/useVirtualScroll';\nimport { TScroll } from '../../common';\nimport type { TdTreeProps } from '../type';\nimport useEventCallback from '../../hooks/useEventCallback';\n\nexport default function useTreeVirtualScroll({\n  treeRef,\n  scroll,\n  data = [],\n  onScroll,\n}: {\n  data: TreeNode[];\n  scroll: TScroll;\n  treeRef: React.MutableRefObject<HTMLElement>;\n  onScroll: TdTreeProps['onScroll'];\n}) {\n  const scrollThreshold = scroll?.threshold || 100;\n  const scrollType = scroll?.type;\n\n  const isVirtual = useMemo(\n    () => scrollType === 'virtual' && data?.length > scrollThreshold,\n    [scrollType, scrollThreshold, data],\n  );\n\n  const scrollParams = useMemo(\n    () =>\n      ({\n        type: 'virtual',\n        isFixedRowHeight: scroll?.isFixedRowHeight || false, // expand and collapse operation make height of tree item different\n        rowHeight: scroll?.rowHeight || 34,\n        bufferSize: scroll?.bufferSize || 20,\n        threshold: scrollThreshold,\n      } as const),\n    [scroll, scrollThreshold],\n  );\n\n  const {\n    visibleData = null,\n    handleScroll: handleVirtualScroll = null,\n    scrollHeight = null,\n    translateY = null,\n    handleRowMounted = null,\n    scrollToElement,\n  } = useVirtualScroll(treeRef, {\n    data: data || [],\n    scroll: scrollParams,\n  });\n\n  let lastScrollY = -1;\n  const onInnerVirtualScroll = useEventCallback((e: WheelEvent) => {\n    onScroll?.({ e });\n    if (!isVirtual) {\n      return;\n    }\n    const target = e.target as HTMLElement;\n    const top = target.scrollTop;\n    if (lastScrollY !== top) {\n      handleVirtualScroll();\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    } else {\n      lastScrollY = -1;\n    }\n    lastScrollY = top;\n  });\n\n  useEffect(() => {\n    const treeList = treeRef?.current;\n    treeList?.addEventListener?.('scroll', onInnerVirtualScroll);\n\n    return () => {\n      // 卸载时取消监听\n      treeList?.removeEventListener?.('scroll', onInnerVirtualScroll);\n    };\n  }, [treeRef, onInnerVirtualScroll]);\n\n  const cursorStyle = {\n    position: 'absolute',\n    width: '1px',\n    height: '1px',\n    transition: 'transform 0.2s',\n    transform: `translate(0, ${scrollHeight}px)`,\n    MsTransform: `translate(0, ${scrollHeight}px)`,\n    MozTransform: `translate(0, ${scrollHeight}px)`,\n    WebkitTransform: `translate(0, ${scrollHeight}px)`,\n  } as CSSProperties;\n\n  const treeNodeStyle = {\n    transform: `translate(0, ${translateY}px)`,\n    MsTransform: `translate(0, ${translateY}px)`,\n    MozTransform: `translate(0, ${translateY}px)`,\n    WebkitTransform: `translate(0, ${translateY}px)`,\n  } as CSSProperties;\n\n  return {\n    scrollHeight,\n    translateY,\n    visibleData,\n    handleRowMounted,\n    isVirtual,\n    cursorStyle,\n    treeNodeStyle,\n    scrollToElement,\n  };\n}\n"],"names":["useTreeVirtualScroll","_ref","treeRef","scroll","_ref$data","data","onScroll","scrollThreshold","threshold","scrollType","type","isVirtual","useMemo","length","scrollParams","isFixedRowHeight","rowHeight","bufferSize","_useVirtualScroll","useVirtualScroll","_useVirtualScroll$vis","visibleData","_useVirtualScroll$han","handleScroll","handleVirtualScroll","_useVirtualScroll$scr","scrollHeight","_useVirtualScroll$tra","translateY","_useVirtualScroll$han2","handleRowMounted","scrollToElement","lastScrollY","onInnerVirtualScroll","useEventCallback","e","target","top","scrollTop","useEffect","_treeList$addEventLis","treeList","current","addEventListener","call","_treeList$removeEvent","removeEventListener","cursorStyle","position","width","height","transition","transform","MsTransform","MozTransform","WebkitTransform","treeNodeStyle"],"mappings":"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"}