{"version":3,"file":"Slider.js","sources":["../../../components/slider/Slider.tsx"],"sourcesContent":["import React, { useMemo, useRef } from 'react';\nimport classNames from 'classnames';\nimport { isFunction, isString } from 'lodash-es';\nimport { accAdd } from '../_util/number';\nimport type { StyledProps, TNode } from '../common';\nimport useConfig from '../hooks/useConfig';\nimport useControlled from '../hooks/useControlled';\nimport useDefaultProps from '../hooks/useDefaultProps';\nimport type { MouseCallback } from '../hooks/useMouseEvent';\nimport InputNumber from '../input-number/InputNumber';\nimport { sliderDefaultProps } from './defaultProps';\nimport SliderHandleButton from './SliderHandleButton';\nimport type { TdSliderProps } from './type';\nimport { numberToPercent } from './utils/handleNumber';\n\nexport type SliderProps = TdSliderProps & StyledProps;\n\nconst LEFT_NODE = 0;\nconst RIGHT_NODE = 1;\ntype SliderHandleNode = typeof LEFT_NODE | typeof RIGHT_NODE;\n\nconst Slider = React.forwardRef<HTMLDivElement, SliderProps>((originalProps, ref) => {\n  const { classPrefix } = useConfig();\n  const props = useDefaultProps(originalProps, sliderDefaultProps);\n  const {\n    disabled,\n    inputNumberProps,\n    label,\n    layout,\n    marks,\n    max,\n    min,\n    range,\n    step,\n    tooltipProps,\n    className,\n    style,\n    onChange,\n  } = props;\n\n  const sliderRef = useRef<HTMLDivElement>(null);\n  const [value, internalOnChange] = useControlled(props, 'value', onChange);\n  const isVertical = layout === 'vertical';\n\n  const renderValue = Array.isArray(value) ? value : [min, value];\n  const start = (renderValue[LEFT_NODE] - min) / (max - min);\n  const width = (renderValue[RIGHT_NODE] - renderValue[LEFT_NODE]) / (max - min);\n  const end = start + width;\n\n  const dots = useMemo<{ value: number; label: TNode; position: number }[]>(() => {\n    // 当 marks 为数字数组\n    if (Array.isArray(marks)) {\n      if (marks.some((mark) => typeof mark !== 'number')) {\n        console.warn('The props \"marks\" only support number!');\n        return [];\n      }\n      return marks.map((mark) => ({ value: mark, position: (mark - min) / (max - min), label: mark }));\n    }\n    // 当 marks 为对象\n    if (marks && typeof marks === 'object') {\n      const result = [];\n      Object.keys(marks).forEach((key) => {\n        const numberKey = Number(key);\n        if (typeof numberKey !== 'number') {\n          console.warn('The props \"marks\" key only support number!');\n        } else {\n          result.push({\n            value: numberKey,\n            label: marks[numberKey],\n            position: (numberKey - min) / (max - min),\n          });\n        }\n      });\n      return result;\n    }\n    return [];\n  }, [max, min, marks]);\n\n  const allDots = useMemo(() => {\n    // 默认\n    const result = [];\n    for (let i = min; i <= max; i = accAdd(i, step)) {\n      result.push({\n        value: i,\n        position: (i - min) / (max - min),\n      });\n    }\n    return result;\n  }, [max, min, step]);\n\n  const startDirection = isVertical ? 'bottom' : 'left';\n  const stepDirection = isVertical ? 'top' : 'left';\n  const sizeKey = isVertical ? 'height' : 'width';\n  const renderDots = isVertical ? dots.map((item) => ({ ...item, position: 1 - item.position })) : dots;\n\n  const handleInputChange = (newValue: number, nodeIndex: SliderHandleNode) => {\n    const safeValue = Number(newValue.toFixed(32));\n    let resultValue = Math.max(Math.min(max, safeValue), min);\n    // 判断是否出现左值大于右值\n    if (nodeIndex === LEFT_NODE && value && safeValue > value[RIGHT_NODE]) resultValue = value[RIGHT_NODE];\n    // 判断是否出现右值大于左值\n    if (nodeIndex === RIGHT_NODE && value && safeValue < value[LEFT_NODE]) resultValue = value[LEFT_NODE];\n    if (Array.isArray(value)) {\n      const arrValue = value.slice();\n      arrValue[nodeIndex] = resultValue;\n      internalOnChange(arrValue);\n    } else {\n      internalOnChange(resultValue);\n    }\n  };\n\n  const createInput = (nodeIndex: SliderHandleNode) => {\n    const inputProps = typeof inputNumberProps === 'object' ? inputNumberProps : {};\n    const currentValue = renderValue[nodeIndex];\n\n    return (\n      <InputNumber\n        value={currentValue}\n        onChange={(v: number) => {\n          if (typeof v !== 'undefined') {\n            handleInputChange(Number(v), nodeIndex);\n          }\n        }}\n        className={classNames(`${classPrefix}-slider-input`, { 'is-vertical': isVertical })}\n        disabled={disabled}\n        theme=\"column\"\n        min={min}\n        max={max}\n        {...inputProps}\n      />\n    );\n  };\n\n  const nearbyValueChange = (value: number) => {\n    const buttonBias =\n      Math.abs(value - renderValue[LEFT_NODE]) > Math.abs(value - renderValue[RIGHT_NODE]) ? RIGHT_NODE : LEFT_NODE;\n    handleInputChange(value, buttonBias);\n  };\n\n  const setPosition = (position: number, nodeIndex?: SliderHandleNode) => {\n    let index = 0;\n    let minDistance = 1;\n    for (let i = 0; i < allDots.length; i++) {\n      const diff = Math.abs(allDots[i].position - position);\n      if (minDistance > diff) {\n        index = i;\n        minDistance = diff;\n      }\n    }\n    const { value } = allDots[index];\n    if (nodeIndex === undefined && range) {\n      nearbyValueChange(value);\n    } else {\n      handleInputChange(value, nodeIndex);\n    }\n  };\n\n  const onSliderChange = (event: MouseCallback, nodeIndex?: SliderHandleNode) => {\n    if (disabled || !sliderRef.current) return;\n\n    const clientKey = isVertical ? 'clientY' : 'clientX';\n    const sliderPositionInfo = sliderRef.current.getBoundingClientRect();\n    const sliderOffset = sliderPositionInfo[startDirection];\n    const position = ((event[clientKey] - sliderOffset) / sliderPositionInfo[sizeKey]) * (isVertical ? -1 : 1);\n    setPosition(position, nodeIndex);\n  };\n\n  const handleClickMarks = (event: React.MouseEvent, value: number) => {\n    event.stopPropagation();\n    nearbyValueChange(value);\n  };\n\n  const createHandleButton = (nodeIndex: SliderHandleNode, style: React.CSSProperties) => {\n    const currentValue = renderValue[nodeIndex];\n    // 模板替换\n    let tipLabel: React.ReactNode = currentValue;\n\n    if (isFunction(label)) {\n      tipLabel = label({ value: currentValue, position: nodeIndex === LEFT_NODE ? 'start' : 'end' });\n    }\n    if (isString(label)) {\n      tipLabel = label.replace(/\\$\\{value\\}/g, currentValue.toString());\n    }\n\n    return (\n      <SliderHandleButton\n        toolTipProps={{ content: tipLabel, ...tooltipProps }}\n        hideTips={label === false}\n        classPrefix={classPrefix}\n        style={style}\n        onChange={(e) => onSliderChange(e, nodeIndex)}\n      />\n    );\n  };\n\n  return (\n    <div\n      style={{ ...style }}\n      className={classNames(`${classPrefix}-slider__container`, { 'is-vertical': isVertical })}\n      ref={ref}\n    >\n      <div\n        ref={sliderRef}\n        className={classNames(`${classPrefix}-slider`, className, {\n          [`${classPrefix}-is-disabled`]: disabled,\n          [`${classPrefix}-slider--vertical`]: isVertical,\n          [`${classPrefix}-slider--with-input`]: inputNumberProps,\n        })}\n        onClick={onSliderChange}\n      >\n        <div className={classNames(`${classPrefix}-slider__rail`)}>\n          <div\n            style={{ [startDirection]: numberToPercent(start), [sizeKey]: numberToPercent(width) }}\n            className={classNames(`${classPrefix}-slider__track`)}\n          ></div>\n          {range ? createHandleButton(LEFT_NODE, { [startDirection]: numberToPercent(start) }) : null}\n          {createHandleButton(RIGHT_NODE, { [startDirection]: numberToPercent(end) })}\n          <div className={`${classPrefix}-slider__stops`}>\n            {renderDots.map(({ position, value }) => {\n              if (position === 0 || position === 1) {\n                return null;\n              }\n              return (\n                <div\n                  key={value}\n                  style={{ [stepDirection]: numberToPercent(position) }}\n                  className={classNames(`${classPrefix}-slider__stop`)}\n                ></div>\n              );\n            })}\n          </div>\n          <div className={classNames(`${classPrefix}-slider__mark`)}>\n            {renderDots.map(({ position, value, label }) => (\n              <div\n                key={value}\n                onClick={(event) => handleClickMarks(event, value)}\n                style={{ [stepDirection]: numberToPercent(position) }}\n                className={classNames(`${classPrefix}-slider__mark-text`)}\n              >\n                {label}\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n      {inputNumberProps ? (\n        <div className={classNames(`${classPrefix}-slider__input-container`, { 'is-vertical': isVertical })}>\n          {range && createInput(LEFT_NODE)}\n          {range && <div className={`${classPrefix}-slider__center-line`}></div>}\n          {createInput(RIGHT_NODE)}\n        </div>\n      ) : null}\n    </div>\n  );\n});\n\nSlider.displayName = 'Slider';\n\nexport default Slider;\n"],"names":["LEFT_NODE","RIGHT_NODE","Slider","React","forwardRef","originalProps","ref","_useConfig","useConfig","classPrefix","props","useDefaultProps","sliderDefaultProps","disabled","inputNumberProps","label","layout","marks","max","min","range","step","tooltipProps","className","style","onChange","sliderRef","useRef","_useControlled","useControlled","_useControlled2","_slicedToArray","value","internalOnChange","isVertical","renderValue","Array","isArray","start","width","end","dots","useMemo","some","mark","console","warn","map","position","_typeof","result","Object","keys","forEach","key","numberKey","Number","push","allDots","i","accAdd","startDirection","stepDirection","sizeKey","renderDots","item","_objectSpread","handleInputChange","newValue","nodeIndex","safeValue","toFixed","resultValue","Math","arrValue","slice","createInput","inputProps","currentValue","createElement","InputNumber","v","classNames","concat","theme","nearbyValueChange","buttonBias","abs","setPosition","index","minDistance","length","diff","onSliderChange","event","current","clientKey","sliderPositionInfo","getBoundingClientRect","sliderOffset","handleClickMarks","stopPropagation","createHandleButton","tipLabel","isFunction","isString","replace","toString","SliderHandleButton","toolTipProps","content","hideTips","e","_defineProperty","onClick","numberToPercent","_ref","_ref2","displayName"],"mappings":"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"}