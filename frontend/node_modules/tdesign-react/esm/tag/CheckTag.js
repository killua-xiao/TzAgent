/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-cb0a3966.js';
import { _ as _slicedToArray } from '../_chunks/dep-48805ab8.js';
import { _ as _objectWithoutProperties } from '../_chunks/dep-6b660ef0.js';
import React, { forwardRef, useMemo } from 'react';
import classNames from 'classnames';
import { S as SPACE_REG, E as ENTER_REG } from '../_chunks/dep-55732ade.js';
import useControlled from '../hooks/useControlled.js';
import useConfig from '../hooks/useConfig.js';
import noop from '../_util/noop.js';
import { checkTagDefaultProps } from './defaultProps.js';
import { Tag } from './Tag.js';
import useDefaultProps from '../hooks/useDefaultProps.js';
import '../_chunks/dep-eca3a3de.js';
import '../_chunks/dep-026a4c6b.js';
import 'lodash-es';
import '../config-provider/ConfigContext.js';
import '../locale/zh_CN.js';
import '../_chunks/dep-e29214cb.js';
import 'dayjs';
import '../_chunks/dep-3c9ab31a.js';
import 'tdesign-icons-react';
import '../_chunks/dep-3c3d29db.js';
import '../hooks/useGlobalIcon.js';

var _excluded = ["value", "content", "onClick", "disabled", "children", "size", "checkedProps", "uncheckedProps", "onChange", "className"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var CheckTag = /*#__PURE__*/forwardRef(function (originalProps, ref) {
  var props = useDefaultProps(originalProps, checkTagDefaultProps);
  var value = props.value,
    content = props.content,
    _props$onClick = props.onClick,
    onClick = _props$onClick === void 0 ? noop : _props$onClick,
    disabled = props.disabled,
    children = props.children,
    size = props.size,
    checkedProps = props.checkedProps,
    uncheckedProps = props.uncheckedProps,
    onChange = props.onChange,
    className = props.className,
    tagOtherProps = _objectWithoutProperties(props, _excluded);
  var _useControlled = useControlled(props, "checked", onChange),
    _useControlled2 = _slicedToArray(_useControlled, 2),
    innerChecked = _useControlled2[0],
    setInnerChecked = _useControlled2[1];
  var _useConfig = useConfig(),
    classPrefix = _useConfig.classPrefix;
  var tagClassPrefix = "".concat(classPrefix, "-tag");
  var tagClass = useMemo(function () {
    return ["".concat(tagClassPrefix), "".concat(tagClassPrefix, "--check"), _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, "".concat(tagClassPrefix, "--checked"), innerChecked), "".concat(tagClassPrefix, "--disabled"), disabled), "".concat(classPrefix, "-size-s"), size === "small"), "".concat(classPrefix, "-size-l"), size === "large"), className];
  }, [innerChecked, disabled, classPrefix, tagClassPrefix, size, className]);
  var checkTagProps = useMemo(function () {
    var tmpCheckedProps = _objectSpread({
      theme: "primary"
    }, checkedProps);
    var tmpUncheckedProps = _objectSpread({}, uncheckedProps);
    return innerChecked ? tmpCheckedProps : tmpUncheckedProps;
  }, [innerChecked, checkedProps, uncheckedProps]);
  var handleClick = function handleClick(_ref2) {
    var e = _ref2.e;
    if (!disabled) {
      onClick === null || onClick === void 0 || onClick({
        e: e
      });
      setInnerChecked(!innerChecked, {
        e: e,
        value: value
      });
    }
  };
  var keyboardEventListener = function keyboardEventListener(e) {
    var _e$key;
    var code = e.code || ((_e$key = e.key) === null || _e$key === void 0 ? void 0 : _e$key.trim());
    var isCheckedCode = SPACE_REG.test(code) || ENTER_REG.test(code);
    if (isCheckedCode) {
      e.preventDefault();
      setInnerChecked(!innerChecked, {
        e: e,
        value: value
      });
    }
  };
  var onCheckboxFocus = function onCheckboxFocus(e) {
    e.currentTarget.addEventListener("keydown", keyboardEventListener);
  };
  var onCheckboxBlur = function onCheckboxBlur(e) {
    e.currentTarget.removeEventListener("keydown", keyboardEventListener);
  };
  return /* @__PURE__ */React.createElement(Tag, _objectSpread(_objectSpread({
    ref: ref,
    className: classNames(tagClass),
    disabled: props.disabled,
    tabIndex: props.disabled ? void 0 : 0,
    onFocus: onCheckboxFocus,
    onBlur: onCheckboxBlur
  }, checkTagProps), {}, {
    onClick: handleClick
  }, tagOtherProps), content || children);
});
CheckTag.displayName = "CheckTag";

export { CheckTag as default };
//# sourceMappingURL=CheckTag.js.map
