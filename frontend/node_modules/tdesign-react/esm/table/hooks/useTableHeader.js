/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _typeof } from '../../_chunks/dep-eca3a3de.js';
import { _ as _slicedToArray } from '../../_chunks/dep-48805ab8.js';
import { _ as _defineProperty } from '../../_chunks/dep-cb0a3966.js';
import React, { useMemo } from 'react';
import { isFunction } from 'lodash-es';
import classNames from 'classnames';
import { getThRowspanAndColspan, getThList } from './useMultiHeader.js';
import useClassName from './useClassName.js';
import Ellipsis from '../Ellipsis.js';
import '../../_chunks/dep-026a4c6b.js';
import '../../hooks/useConfig.js';
import '../../config-provider/ConfigContext.js';
import '../../locale/zh_CN.js';
import '../../_chunks/dep-e29214cb.js';
import 'dayjs';
import '../../_chunks/dep-3c9ab31a.js';
import '../../_util/scroll.js';
import 'raf';
import '../../_chunks/dep-3a09424a.js';
import '../../_util/easing.js';
import '../../tooltip/index.js';
import '../../tooltip/Tooltip.js';
import '../../_chunks/dep-6b660ef0.js';
import '../../popup/index.js';
import '../../popup/Popup.js';
import 'react-transition-group';
import '../../_util/ref.js';
import 'react-is';
import '../../_util/isFragment.js';
import '../../common/Portal.js';
import 'react-dom';
import '../../hooks/useLayoutEffect.js';
import '../../hooks/useAnimation.js';
import '../../hooks/useAttach.js';
import '../../hooks/useControlled.js';
import '../../_util/noop.js';
import '../../hooks/useDefaultProps.js';
import '../../hooks/useMutationObserver.js';
import '../../hooks/useLatest.js';
import '../../hooks/usePopper.js';
import '../../_chunks/dep-87d110df.js';
import '@popperjs/core';
import 'react-fast-compare';
import '../../hooks/useWindowSize.js';
import '../../popup/defaultProps.js';
import '../../popup/hooks/useTrigger.js';
import '../../_util/composeRefs.js';
import '../../_util/listener.js';
import '../../popup/utils/transition.js';
import '../../popup/PopupPlugin.js';
import '../../_chunks/dep-a74cc5e4.js';
import '../../_util/react-render.js';
import '../../common/PluginContainer.js';
import '../../config-provider/index.js';
import '../../config-provider/ConfigProvider.js';
import '../../config-provider/type.js';
import '../../popup/style/index.js';
import '../../popup/type.js';
import '../../tooltip/defaultProps.js';
import '../../tooltip/TooltipLite.js';
import '../../hooks/useSwitch.js';
import '../../hooks/usePersistFn.js';
import '../../tooltip/style/index.js';
import '../../tooltip/type.js';
import '../../hooks/useDebounce.js';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function renderTitle(col, index) {
  var params = {
    col: col,
    colIndex: index
  };
  if (isFunction(col.title)) {
    return col.title(params);
  }
  if (isFunction(col.render)) {
    return col.render(_objectSpread(_objectSpread({}, params), {}, {
      row: {},
      rowIndex: -1,
      type: "title"
    }));
  }
  return col.title;
}
function useTableHeader(_ref) {
  var columns = _ref.columns;
  var _useClassName = useClassName(),
    tableSortClasses = _useClassName.tableSortClasses,
    tableFilterClasses = _useClassName.tableFilterClasses;
  var spansAndLeafNodes = useMemo(function () {
    return getThRowspanAndColspan(columns);
  }, [columns]);
  var thList = useMemo(function () {
    return getThList(columns);
  }, [columns]);
  var isMultipleHeader = useMemo(function () {
    return thList.length > 1;
  }, [thList]);
  var renderTitleWidthIcon = function renderTitleWidthIcon(_ref2, col, colIndex, ellipsisTitle, attach, extra) {
    var _ref3 = _slicedToArray(_ref2, 3),
      title = _ref3[0],
      sortIcon = _ref3[1],
      filterIcon = _ref3[2];
    var classes = _defineProperty(_defineProperty({}, tableSortClasses.sortable, !!sortIcon), tableFilterClasses.filterable, !!filterIcon);
    var content = isFunction(ellipsisTitle) ? ellipsisTitle({
      col: col,
      colIndex: colIndex
    }) : void 0;
    var isEllipsis = ellipsisTitle !== void 0 ? Boolean(ellipsisTitle) : Boolean(col.ellipsis);
    return /* @__PURE__ */React.createElement("div", {
      className: classNames(classes)
    }, /* @__PURE__ */React.createElement("div", {
      className: tableSortClasses.title
    }, isEllipsis ? /* @__PURE__ */React.createElement(Ellipsis, {
      placement: "bottom",
      attach: attach ? function () {
        return attach;
      } : void 0,
      popupContent: content,
      tooltipProps: _typeof(ellipsisTitle) === "object" ? ellipsisTitle : void 0,
      classPrefix: extra === null || extra === void 0 ? void 0 : extra.classPrefix,
      overlayClassName: extra === null || extra === void 0 ? void 0 : extra.ellipsisOverlayClassName
    }, title) : /* @__PURE__ */React.createElement("div", null, title), Boolean(sortIcon || filterIcon) && /* @__PURE__ */React.createElement("div", {
      className: tableFilterClasses.iconWrap
    }, sortIcon, filterIcon)));
  };
  return {
    thList: thList,
    isMultipleHeader: isMultipleHeader,
    spansAndLeafNodes: spansAndLeafNodes,
    renderTitleWidthIcon: renderTitleWidthIcon
  };
}

export { useTableHeader as default, renderTitle };
//# sourceMappingURL=useTableHeader.js.map
