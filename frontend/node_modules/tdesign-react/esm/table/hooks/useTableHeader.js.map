{"version":3,"file":"useTableHeader.js","sources":["../../../../components/table/hooks/useTableHeader.tsx"],"sourcesContent":["import React, { ReactNode, useMemo } from 'react';\nimport { isFunction } from 'lodash-es';\nimport classNames from 'classnames';\nimport { BaseTableCol, PrimaryTableCol, TableRowData, TdBaseTableProps } from '../type';\nimport { TableColumns, getThRowspanAndColspan, getThList } from './useMultiHeader';\nimport useClassName from './useClassName';\nimport TEllipsis from '../Ellipsis';\n\n// 渲染表头的通用方法\nexport function renderTitle(col: TableColumns[0], index: number) {\n  const params = { col, colIndex: index };\n  if (isFunction(col.title)) {\n    return col.title(params);\n  }\n  if (isFunction(col.render)) {\n    return col.render({ ...params, row: {}, rowIndex: -1, type: 'title' });\n  }\n  return col.title;\n}\n\nexport interface UseTableHeaderParams {\n  columns: TdBaseTableProps['columns'];\n}\n\nexport default function useTableHeader({ columns }: UseTableHeaderParams) {\n  const { tableSortClasses, tableFilterClasses } = useClassName();\n  // 一次性获取 colspan 和 rowspan 可以避免其他数据更新导致的重复计算\n  const spansAndLeafNodes = useMemo(() => getThRowspanAndColspan(columns), [columns]);\n  // 表头二维数据\n  const thList = useMemo(() => getThList(columns), [columns]);\n  const isMultipleHeader = useMemo(() => thList.length > 1, [thList]);\n\n  const renderTitleWidthIcon = (\n    [title, sortIcon, filterIcon]: ReactNode[],\n    col: PrimaryTableCol<TableRowData>,\n    colIndex: number,\n    ellipsisTitle: BaseTableCol['ellipsisTitle'],\n    attach: HTMLElement,\n    extra?: {\n      classPrefix: string;\n      ellipsisOverlayClassName: string;\n    },\n  ) => {\n    const classes = {\n      [tableSortClasses.sortable]: !!sortIcon,\n      [tableFilterClasses.filterable]: !!filterIcon,\n    };\n    const content = isFunction(ellipsisTitle) ? ellipsisTitle({ col, colIndex }) : undefined;\n    const isEllipsis = ellipsisTitle !== undefined ? Boolean(ellipsisTitle) : Boolean(col.ellipsis);\n    return (\n      <div className={classNames(classes)}>\n        <div className={tableSortClasses.title}>\n          {isEllipsis ? (\n            <TEllipsis\n              placement=\"bottom\"\n              attach={attach ? () => attach : undefined}\n              popupContent={content}\n              // @ts-ignore TODO 待类型完善后移除\n              tooltipProps={typeof ellipsisTitle === 'object' ? ellipsisTitle : undefined}\n              classPrefix={extra?.classPrefix}\n              overlayClassName={extra?.ellipsisOverlayClassName}\n            >\n              {title}\n            </TEllipsis>\n          ) : (\n            <div>{title}</div>\n          )}\n          {Boolean(sortIcon || filterIcon) && (\n            <div className={tableFilterClasses.iconWrap}>\n              {sortIcon}\n              {filterIcon}\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  return {\n    thList,\n    isMultipleHeader,\n    spansAndLeafNodes,\n    renderTitleWidthIcon,\n  };\n}\n"],"names":["renderTitle","col","index","params","colIndex","isFunction","title","render","_objectSpread","row","rowIndex","type","useTableHeader","_ref","columns","_useClassName","useClassName","tableSortClasses","tableFilterClasses","spansAndLeafNodes","useMemo","getThRowspanAndColspan","thList","getThList","isMultipleHeader","length","renderTitleWidthIcon","_ref2","ellipsisTitle","attach","extra","_ref3","_slicedToArray","sortIcon","filterIcon","classes","_defineProperty","sortable","filterable","content","isEllipsis","Boolean","ellipsis","React","createElement","className","classNames","TEllipsis","placement","popupContent","tooltipProps","_typeof","classPrefix","overlayClassName","ellipsisOverlayClassName","iconWrap"],"mappings":"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"}