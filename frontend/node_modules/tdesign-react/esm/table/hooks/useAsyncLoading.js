/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-cb0a3966.js';
import { _ as _slicedToArray } from '../../_chunks/dep-48805ab8.js';
import React from 'react';
import { isString } from 'lodash-es';
import classNames from 'classnames';
import { Loading } from '../../loading/index.js';
import useClassName from './useClassName.js';
import { useLocaleReceiver } from '../../locale/LocalReceiver.js';
import '../../_chunks/dep-eca3a3de.js';
import '../../_chunks/dep-026a4c6b.js';
import '../../loading/Loading.js';
import '../../_chunks/dep-3a09424a.js';
import '../../hooks/useConfig.js';
import '../../config-provider/ConfigContext.js';
import '../../locale/zh_CN.js';
import '../../_chunks/dep-e29214cb.js';
import 'dayjs';
import '../../_chunks/dep-3c9ab31a.js';
import '../../common/Portal.js';
import 'react-dom';
import '../../hooks/useLayoutEffect.js';
import '../../loading/gradient.js';
import '../../_chunks/dep-c48e2ca1.js';
import '../../_chunks/dep-1630b9b4.js';
import '../../_chunks/dep-87d110df.js';
import '../../_chunks/dep-6b660ef0.js';
import '../../hooks/useDomRefCallback.js';
import '../../loading/defaultProps.js';
import '../../hooks/useDefaultProps.js';
import '../../loading/plugin.js';
import '../../_util/react-render.js';
import '../../_chunks/dep-a74cc5e4.js';
import '../../common/PluginContainer.js';
import '../../config-provider/index.js';
import '../../config-provider/ConfigProvider.js';
import '../../config-provider/type.js';
import '../../loading/style/index.js';
import '../../loading/type.js';

function useAsyncLoading(props) {
  var _useLocaleReceiver = useLocaleReceiver("table"),
    _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 1),
    local = _useLocaleReceiver2[0];
  var _useClassName = useClassName(),
    isLoadingClass = _useClassName.isLoadingClass,
    isLoadMoreClass = _useClassName.isLoadMoreClass,
    asyncLoadingClass = _useClassName.asyncLoadingClass;
  var classes = [asyncLoadingClass, _defineProperty(_defineProperty({}, isLoadingClass, props.asyncLoading === "loading"), isLoadMoreClass, props.asyncLoading === "load-more")];
  function onLoadClick() {
    var _props$onAsyncLoading;
    if (typeof props.asyncLoading !== "string") return;
    var status = props.asyncLoading === "loading" ? "loading" : "load-more";
    (_props$onAsyncLoading = props.onAsyncLoadingClick) === null || _props$onAsyncLoading === void 0 || _props$onAsyncLoading.call(props, {
      status: status
    });
  }
  function renderAsyncLoading() {
    var asyncLoadingNode = props.asyncLoading;
    if (isString(asyncLoadingNode)) {
      var asyncLoading = props.asyncLoading;
      var loadingText = {
        "load-more": local.loadingMoreText,
        loading: local.loadingText
      }[String(asyncLoading)];
      return /* @__PURE__ */React.createElement("div", {
        className: classNames(classes),
        onClick: onLoadClick
      }, /* @__PURE__ */React.createElement(Loading, {
        loading: true,
        size: "small",
        text: loadingText,
        indicator: asyncLoading === "loading"
      }));
    }
    if (asyncLoadingNode) {
      return /* @__PURE__ */React.createElement("div", {
        className: classNames(classes),
        onClick: onLoadClick
      }, asyncLoadingNode);
    }
    return null;
  }
  return {
    renderAsyncLoading: renderAsyncLoading
  };
}

export { useAsyncLoading as default };
//# sourceMappingURL=useAsyncLoading.js.map
