/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-cb0a3966.js';
import { _ as _slicedToArray } from '../_chunks/dep-48805ab8.js';
import React from 'react';
import { ChevronDownIcon } from 'tdesign-icons-react';
import classNames from 'classnames';
import useGlobalIcon from '../hooks/useGlobalIcon.js';
import useClassName from './hooks/useClassName.js';
import { Tooltip } from '../tooltip/index.js';
import { useLocaleReceiver } from '../locale/LocalReceiver.js';
import '../_chunks/dep-eca3a3de.js';
import '../_chunks/dep-026a4c6b.js';
import '../hooks/useConfig.js';
import '../config-provider/ConfigContext.js';
import 'lodash-es';
import '../locale/zh_CN.js';
import '../_chunks/dep-e29214cb.js';
import 'dayjs';
import '../_chunks/dep-3c9ab31a.js';
import '../tooltip/Tooltip.js';
import '../_chunks/dep-6b660ef0.js';
import '../popup/index.js';
import '../popup/Popup.js';
import 'react-transition-group';
import '../_util/ref.js';
import 'react-is';
import '../_util/isFragment.js';
import '../_chunks/dep-3a09424a.js';
import '../common/Portal.js';
import 'react-dom';
import '../hooks/useLayoutEffect.js';
import '../hooks/useAnimation.js';
import '../hooks/useAttach.js';
import '../hooks/useControlled.js';
import '../_util/noop.js';
import '../hooks/useDefaultProps.js';
import '../hooks/useMutationObserver.js';
import '../hooks/useLatest.js';
import '../hooks/usePopper.js';
import '../_chunks/dep-87d110df.js';
import '@popperjs/core';
import 'react-fast-compare';
import '../hooks/useWindowSize.js';
import '../popup/defaultProps.js';
import '../popup/hooks/useTrigger.js';
import '../_util/composeRefs.js';
import '../_util/listener.js';
import '../popup/utils/transition.js';
import '../popup/PopupPlugin.js';
import '../_chunks/dep-a74cc5e4.js';
import '../_util/react-render.js';
import '../common/PluginContainer.js';
import '../config-provider/index.js';
import '../config-provider/ConfigProvider.js';
import '../config-provider/type.js';
import '../popup/style/index.js';
import '../popup/type.js';
import '../tooltip/defaultProps.js';
import '../tooltip/TooltipLite.js';
import '../hooks/useSwitch.js';
import '../hooks/usePersistFn.js';
import '../tooltip/style/index.js';
import '../tooltip/type.js';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function SorterButton(props) {
  var _props$sortType = props.sortType,
    sortType = _props$sortType === void 0 ? "all" : _props$sortType;
  var _useGlobalIcon = useGlobalIcon({
      ChevronDownIcon: ChevronDownIcon
    }),
    ChevronDownIcon$1 = _useGlobalIcon.ChevronDownIcon;
  var _useClassName = useClassName(),
    tableSortClasses = _useClassName.tableSortClasses,
    negativeRotate180 = _useClassName.negativeRotate180;
  var _useLocaleReceiver = useLocaleReceiver("table"),
    _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2),
    locale = _useLocaleReceiver2[0],
    t = _useLocaleReceiver2[1];
  var allowSortTypes = sortType === "all" ? ["asc", "desc"] : [sortType];
  var onSortIconClick = function onSortIconClick(e, direction) {
    props === null || props === void 0 || props.onSortIconClick(e, {
      descending: direction === "desc"
    });
  };
  function getSortIcon(direction, activeClass) {
    var defaultIcon = t(locale.sortIcon) || /* @__PURE__ */React.createElement(ChevronDownIcon$1, null);
    var icon = props.sortIcon || defaultIcon;
    var sortClassName = [activeClass, tableSortClasses.sortIcon, tableSortClasses.iconDirection[direction], _defineProperty({}, negativeRotate180, direction === "asc")];
    return /* @__PURE__ */React.createElement("span", {
      key: direction,
      className: classNames(sortClassName),
      onClick: function onClick(e) {
        return onSortIconClick(e, direction);
      }
    }, icon);
  }
  var classes = [tableSortClasses.trigger, _defineProperty({}, tableSortClasses.doubleIcon, allowSortTypes.length > 1)];
  var tooltips = {
    asc: locale.sortAscendingOperationText,
    desc: locale.sortDescendingOperationText
  };
  var sortButton = allowSortTypes.map(function (direction) {
    var _props$hideSortTips;
    var activeClass = direction === props.sortOrder ? tableSortClasses.iconActive : tableSortClasses.iconDefault;
    var cancelTips = locale.sortCancelOperationText;
    var tips = direction === props.sortOrder ? cancelTips : tooltips[direction];
    if ((_props$hideSortTips = props.hideSortTips) !== null && _props$hideSortTips !== void 0 ? _props$hideSortTips : locale.hideSortTips) return getSortIcon(direction, activeClass);
    return /* @__PURE__ */React.createElement(Tooltip, _objectSpread(_objectSpread({
      content: tips,
      key: direction,
      placement: "right"
    }, props.tooltipProps), {}, {
      showArrow: false
    }), getSortIcon(direction, activeClass));
  });
  return /* @__PURE__ */React.createElement("div", {
    className: classNames(classes)
  }, sortButton);
}
SorterButton.displayName = "SorterButton";

export { SorterButton as default };
//# sourceMappingURL=SorterButton.js.map
