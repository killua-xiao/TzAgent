{"version":3,"file":"Cell.js","sources":["../../../components/table/Cell.tsx"],"sourcesContent":["import React, { MouseEvent, MutableRefObject, ReactNode } from 'react';\nimport classNames from 'classnames';\nimport { isFunction, get } from 'lodash-es';\nimport TEllipsis from './Ellipsis';\nimport { BaseTableCellParams, RowspanColspan, TableRowData, TdBaseTableProps } from './type';\nimport { RowAndColFixedPosition } from './interface';\nimport { getColumnFixedStyles } from './hooks/useFixed';\nimport { TableClassName } from './hooks/useClassName';\nimport { formatClassNames } from './utils';\nimport { TooltipProps } from '../tooltip';\nimport { PaginationProps } from '../pagination';\n\nexport interface RenderEllipsisCellParams {\n  cellNode: ReactNode;\n  tableElm?: HTMLDivElement;\n  columnLength: number;\n  classPrefix?: string;\n  overlayClassName?: string;\n}\n\nexport interface CellProps {\n  cellParams: BaseTableCellParams<TableRowData>;\n  rowAndColFixedPosition: RowAndColFixedPosition;\n  columnLength: number;\n  dataLength: number;\n  cellSpans: RowspanColspan;\n  cellEmptyContent: TdBaseTableProps['cellEmptyContent'];\n  tableClassNames: TableClassName;\n  tableRef?: MutableRefObject<HTMLDivElement>;\n  classPrefix?: string;\n  overlayClassName?: string;\n  pagination?: PaginationProps;\n  rowspanAndColspan: TdBaseTableProps['rowspanAndColspan'];\n  onClick?: (e: MouseEvent<HTMLTableCellElement>) => void;\n}\n\nexport function renderCell(\n  params: BaseTableCellParams<TableRowData>,\n  extra?: {\n    cellEmptyContent?: TdBaseTableProps['cellEmptyContent'];\n    pagination?: PaginationProps;\n  },\n) {\n  const { col, row, rowIndex } = params;\n  // support serial number column\n  if (col.colKey === 'serial-number') {\n    const { current, pageSize, defaultCurrent, defaultPageSize } = extra?.pagination || {};\n    const tCurrent = current || defaultCurrent;\n    const tPageSize = pageSize || defaultPageSize;\n    if (tPageSize && tCurrent) {\n      return tPageSize * (tCurrent - 1) + rowIndex + 1;\n    }\n    return rowIndex + 1;\n  }\n  if (isFunction(col.cell)) {\n    return col.cell(params);\n  }\n  if (isFunction(col.render)) {\n    return col.render({ ...params, type: 'cell' });\n  }\n  const r = col.cell || col.render || get(row, col.colKey);\n  // 0 和 false 属于正常可用之，不能使用兜底逻辑 cellEmptyContent\n  if (![undefined, '', null].includes(r)) return r;\n  if (extra?.cellEmptyContent) return extra.cellEmptyContent;\n  return r;\n}\n\nfunction renderEllipsisCell(cellParams: BaseTableCellParams<TableRowData>, params: RenderEllipsisCellParams) {\n  const { cellNode, tableElm, columnLength, classPrefix, overlayClassName } = params;\n  const { col, colIndex } = cellParams;\n  let content = isFunction(col.ellipsis) ? col.ellipsis(cellParams) : undefined;\n  if (typeof col.ellipsis === 'object' && 'content' in col.ellipsis && isFunction(col.ellipsis.content)) {\n    content = col.ellipsis.content(cellParams);\n  }\n  let tooltipProps = {};\n  if (typeof col.ellipsis === 'object') {\n    tooltipProps = 'props' in col.ellipsis ? col.ellipsis.props : col.ellipsis || undefined;\n  }\n  const tableElement = tableElm;\n  let placement: TooltipProps['placement'] = colIndex === 0 ? 'top-left' : 'top';\n  placement = colIndex === columnLength - 1 ? 'top-right' : placement;\n  return (\n    <TEllipsis\n      placement={placement}\n      attach={tableElement ? () => tableElement : undefined}\n      popupContent={content}\n      tooltipProps={tooltipProps}\n      overlayClassName={overlayClassName}\n      classPrefix={classPrefix}\n    >\n      {cellNode}\n    </TEllipsis>\n  );\n}\n\nconst Cell = (props: CellProps) => {\n  const { cellParams, tableClassNames, tableRef, columnLength, classPrefix, overlayClassName, pagination } = props;\n  const { col, colIndex, rowIndex } = cellParams;\n  const { cellSpans, dataLength, rowAndColFixedPosition, cellEmptyContent, rowspanAndColspan, onClick } = props;\n  const { tableColFixedClasses, tdEllipsisClass, tableBaseClass, tdAlignClasses, tableDraggableClasses } =\n    tableClassNames;\n\n  const cellNode = renderCell(cellParams, { cellEmptyContent, pagination });\n  const tdStyles = getColumnFixedStyles(col, colIndex, rowAndColFixedPosition, tableColFixedClasses);\n  const customClasses = formatClassNames(col.className, { ...cellParams, type: 'td' });\n  const classes = [\n    tdStyles.classes,\n    customClasses,\n    {\n      [tdEllipsisClass]: col.ellipsis,\n      [tableBaseClass.tdLastRow]: rowIndex + cellSpans.rowspan === dataLength,\n      [tableBaseClass.tdFirstCol]: colIndex === 0 && rowspanAndColspan,\n      [tdAlignClasses[col.align]]: col.align && col.align !== 'left',\n      // 标记可拖拽列\n      [tableDraggableClasses.handle]: col.colKey === 'drag',\n    },\n  ];\n  const normalAttrs = isFunction(col.attrs) ? col.attrs({ ...cellParams, type: 'td' }) : col.attrs;\n  const attrs = { ...normalAttrs, rowSpan: cellSpans.rowspan, colSpan: cellSpans.colspan };\n  return (\n    <td\n      key={col.colKey || colIndex}\n      className={classNames(classes) || undefined}\n      style={tdStyles.style}\n      {...attrs}\n      onClick={onClick}\n    >\n      {col.ellipsis\n        ? renderEllipsisCell(cellParams, {\n            cellNode,\n            tableElm: tableRef.current,\n            columnLength,\n            classPrefix,\n            overlayClassName,\n          })\n        : cellNode}\n    </td>\n  );\n};\n\nCell.displayName = 'Cell';\n\nexport default Cell;\n"],"names":["renderCell","params","extra","col","row","rowIndex","colKey","_ref","pagination","current","pageSize","defaultCurrent","defaultPageSize","tCurrent","tPageSize","isFunction","cell","render","_objectSpread","type","r","get","includes","cellEmptyContent","renderEllipsisCell","cellParams","cellNode","tableElm","columnLength","classPrefix","overlayClassName","colIndex","content","ellipsis","_typeof","tooltipProps","props","tableElement","placement","React","createElement","TEllipsis","attach","popupContent","Cell","tableClassNames","tableRef","cellSpans","dataLength","rowAndColFixedPosition","rowspanAndColspan","onClick","tableColFixedClasses","tdEllipsisClass","tableBaseClass","tdAlignClasses","tableDraggableClasses","tdStyles","getColumnFixedStyles","customClasses","formatClassNames","className","classes","_defineProperty","tdLastRow","rowspan","tdFirstCol","align","handle","normalAttrs","attrs","rowSpan","colSpan","colspan","key","classNames","style","displayName"],"mappings":"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"}