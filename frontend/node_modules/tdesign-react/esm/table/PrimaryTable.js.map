{"version":3,"file":"PrimaryTable.js","sources":["../../../components/table/PrimaryTable.tsx"],"sourcesContent":["import React, { useRef, forwardRef, useImperativeHandle, ReactNode, RefAttributes } from 'react';\nimport { get } from 'lodash-es';\nimport classNames from 'classnames';\nimport BaseTable from './BaseTable';\nimport useColumnController from './hooks/useColumnController';\nimport useRowExpand from './hooks/useRowExpand';\nimport useTableHeader, { renderTitle } from './hooks/useTableHeader';\nimport useRowSelect from './hooks/useRowSelect';\nimport { TdPrimaryTableProps, PrimaryTableCol, TableRowData, PrimaryTableCellParams } from './type';\nimport useSorter from './hooks/useSorter';\nimport useFilter from './hooks/useFilter';\nimport useDragSort from './hooks/useDragSort';\nimport useAsyncLoading from './hooks/useAsyncLoading';\nimport { PageInfo, PaginationProps } from '../pagination';\nimport useClassName from './hooks/useClassName';\nimport useStyle from './hooks/useStyle';\nimport { BaseTableProps, PrimaryTableProps, PrimaryTableRef } from './interface';\nimport EditableCell, { EditableCellProps } from './EditableCell';\nimport { StyledProps } from '../common';\nimport { useEditableRow } from './hooks/useEditableRow';\nimport { primaryTableDefaultProps } from './defaultProps';\nimport { CheckboxGroupValue } from '../checkbox';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\nexport { BASE_TABLE_ALL_EVENTS } from './BaseTable';\n\nexport interface TPrimaryTableProps extends PrimaryTableProps, StyledProps {}\n\nconst PrimaryTable = forwardRef<PrimaryTableRef, TPrimaryTableProps>((originalProps, ref) => {\n  const props = useDefaultProps<TPrimaryTableProps>(originalProps, primaryTableDefaultProps);\n  const { columns, columnController, editableRowKeys, style, className } = props;\n  const primaryTableRef = useRef(null);\n  const innerPagination = useRef<PaginationProps>(props.pagination);\n  const { classPrefix, tableDraggableClasses, tableBaseClass, tableSelectedClasses, tableSortClasses } = useClassName();\n  const { sizeClassNames } = useStyle(props);\n  // 自定义列配置功能\n  const { tDisplayColumns, renderColumnController } = useColumnController(props, { onColumnReduce });\n  // 展开/收起行功能\n  const {\n    showExpandedRow,\n    showExpandIconColumn,\n    getExpandColumn,\n    renderExpandedRow,\n    onInnerExpandRowClick,\n    getExpandedRowClass,\n  } = useRowExpand(props);\n  // 排序功能\n  const { renderSortIcon } = useSorter(props);\n  // 行选中功能\n  const {\n    selectedRowClassNames,\n    setCurrentPaginateData,\n    formatToRowSelectColumn,\n    setTSelectedRowKeys,\n    onInnerSelectRowClick,\n  } = useRowSelect(props, tableSelectedClasses);\n  // 过滤功能\n  const { hasEmptyCondition, isTableOverflowHidden, renderFilterIcon, renderFirstFilterRow } = useFilter(\n    props,\n    primaryTableRef,\n  );\n  // 拖拽排序功能\n  const { isRowHandlerDraggable, isRowDraggable, isColDraggable, setDragSortColumns } = useDragSort(props, {\n    primaryTableRef,\n    innerPagination,\n  });\n\n  const { renderTitleWidthIcon } = useTableHeader({ columns: props.columns });\n  const { renderAsyncLoading } = useAsyncLoading(props);\n\n  const primaryTableClasses = {\n    [tableDraggableClasses.colDraggable]: isColDraggable,\n    [tableDraggableClasses.rowHandlerDraggable]: isRowHandlerDraggable,\n    [tableDraggableClasses.rowDraggable]: isRowDraggable,\n    [tableBaseClass.overflowVisible]: isTableOverflowHidden === false,\n    [tableBaseClass.tableRowEdit]: editableRowKeys,\n  };\n\n  const { errorListMap, editableKeysMap, validateRowData, validateTableData, onRuleChange, clearValidateData } =\n    useEditableRow(props);\n\n  // 如果想给 TR 添加类名，请在这里补充，不要透传更多额外 Props 到 BaseTable\n  const tRowClassNames = (() => {\n    const tClassNames = [props.rowClassName, selectedRowClassNames, getExpandedRowClass];\n    return tClassNames.filter((v) => v);\n  })();\n\n  // 如果想给 TR 添加属性，请在这里补充，不要透传更多额外 Props 到 BaseTable\n  const tRowAttributes = (() => {\n    const tAttributes = [props.rowAttributes];\n    if (isRowHandlerDraggable || isRowDraggable) {\n      tAttributes.push(({ row }) => ({ 'data-id': get(row, props.rowKey || 'id') }));\n    }\n    return tAttributes.filter((v) => v);\n  })();\n\n  useImperativeHandle(ref, () => ({\n    validateRowData,\n    validateTableData,\n    clearValidateData,\n    ...primaryTableRef.current,\n  }));\n\n  function onColumnReduce(reduceKeys: CheckboxGroupValue) {\n    if (props.resizable) {\n      primaryTableRef.current.updateTableWidthOnColumnChange(reduceKeys);\n    }\n  }\n\n  // 1. 影响列数量的因素有：自定义列配置、展开/收起行、多级表头；2. 影响表头内容的因素有：排序图标、筛选图标\n  const getColumns = (columns: PrimaryTableCol<TableRowData>[]) => {\n    const arr: PrimaryTableCol<TableRowData>[] = [];\n    for (let i = 0, len = columns.length; i < len; i++) {\n      let item = { ...columns[i] };\n      // 自定义列显示控制\n      const isDisplayColumn = item.children?.length || tDisplayColumns?.includes(item.colKey);\n      if (!isDisplayColumn && props.columnController && tDisplayColumns) continue;\n      item = formatToRowSelectColumn(item);\n      const { sort } = props;\n      if (item.sorter && props.showSortColumnBgColor) {\n        const sorts = sort instanceof Array ? sort : [sort];\n        const sortedColumn = sorts.find((sort) => sort && sort.sortBy === item.colKey && sort.descending !== undefined);\n        if (sortedColumn) {\n          item.className =\n            item.className instanceof Array\n              ? item.className.concat(tableSortClasses.sortColumn)\n              : [item.className, tableSortClasses.sortColumn];\n        }\n      }\n      // 添加排序图标和过滤图标\n      if (item.sorter || item.filter) {\n        const titleContent = renderTitle(item, i);\n        const { ellipsisTitle } = item;\n        item.title = (p) => {\n          const sortIcon = item.sorter ? renderSortIcon(p) : null;\n          const filterIcon = item.filter ? renderFilterIcon(p) : null;\n          const attach = primaryTableRef.current?.tableContentRef;\n          return renderTitleWidthIcon([titleContent, sortIcon, filterIcon], p.col, p.colIndex, ellipsisTitle, attach, {\n            classPrefix,\n            ellipsisOverlayClassName: props.size !== 'medium' ? sizeClassNames[props.size] : '',\n          });\n        };\n        item.ellipsisTitle = false;\n      }\n      // 如果是单元格可编辑状态\n      if (item.edit?.component) {\n        const oldCell = item.cell;\n        item.cell = (p: PrimaryTableCellParams<TableRowData>) => {\n          const cellProps: EditableCellProps = {\n            ...p,\n            oldCell,\n            tableBaseClass,\n            cellEmptyContent: props.cellEmptyContent,\n            onChange: props.onRowEdit,\n            onValidate: props.onRowValidate,\n            onRuleChange,\n          };\n          if (props.editableRowKeys) {\n            const rowValue = get(p.row, props.rowKey || 'id');\n            cellProps.editable = editableKeysMap[rowValue] || false;\n            const key = [rowValue, p.col.colKey].join('__');\n            const errorList = errorListMap[key];\n            errorList && (cellProps.errors = errorList);\n          }\n          if (props.editableCellState) {\n            cellProps.readonly = !props.editableCellState(p);\n          }\n          return <EditableCell {...cellProps} />;\n        };\n      }\n      if (item.children?.length) {\n        item.children = getColumns(item.children);\n      }\n      // 多级表头和自定义列配置特殊逻辑：要么子节点不存在，要么子节点长度大于 1，方便做自定义列配置\n      if (!item.children || item.children?.length) {\n        arr.push(item);\n      }\n    }\n    return arr;\n  };\n\n  const tColumns = (() => {\n    const cols = getColumns(columns);\n    if (showExpandIconColumn) {\n      cols.unshift(getExpandColumn());\n    }\n    return cols;\n  })();\n\n  const onInnerPageChange = (pageInfo: PageInfo, newData: Array<TableRowData>) => {\n    innerPagination.current = { ...innerPagination, ...pageInfo };\n    setCurrentPaginateData(newData);\n    props.onPageChange?.(pageInfo, newData);\n    const changeParams: Parameters<TdPrimaryTableProps['onChange']> = [\n      { pagination: pageInfo },\n      { trigger: 'pagination', currentData: newData },\n    ];\n    props.onChange?.(...changeParams);\n    // 是否在分页时保留选中结果，如果不保留则需清空\n    if (!props.reserveSelectedRowOnPaginate) {\n      setTSelectedRowKeys([], {\n        selectedRowData: [],\n        type: 'uncheck',\n        currentRowKey: 'CLEAR_ON_PAGINATE',\n      });\n    }\n  };\n\n  const onInnerRowClick: TdPrimaryTableProps['onRowClick'] = (params) => {\n    if (props.expandOnRowClick) {\n      onInnerExpandRowClick(params);\n    }\n    if (props.selectOnRowClick) {\n      onInnerSelectRowClick(params);\n    }\n  };\n\n  function formatNode(\n    api: string,\n    renderInnerNode: () => ReactNode,\n    condition: boolean,\n    extra?: { reverse?: boolean },\n  ) {\n    if (!condition) return props[api];\n    const innerNode = renderInnerNode();\n    const propsNode = props[api];\n    if (innerNode && !propsNode) return innerNode;\n    if (propsNode && !innerNode) return propsNode;\n    if (innerNode && propsNode) {\n      return extra?.reverse ? (\n        <div>\n          {innerNode}\n          {propsNode}\n        </div>\n      ) : (\n        <div>\n          {propsNode}\n          {innerNode}\n        </div>\n      );\n    }\n    return null;\n  }\n\n  const isColumnController = !!(columnController && Object.keys(columnController).length);\n  const placement = isColumnController ? columnController.placement || 'top-right' : '';\n  const isBottomController = isColumnController && placement?.indexOf('bottom') !== -1;\n  const topContent = formatNode('topContent', renderColumnController, isColumnController && !isBottomController);\n  const bottomContent = formatNode('bottomContent', renderColumnController, isBottomController, {\n    reverse: true,\n  });\n  const firstFullRow = formatNode('firstFullRow', renderFirstFilterRow, !hasEmptyCondition);\n  const lastFullRow = formatNode('lastFullRow', renderAsyncLoading, !!props.asyncLoading);\n\n  // @ts-ignore TODO 待类型完善后移除\n  const baseTableProps = {\n    ...props,\n    rowClassName: tRowClassNames,\n    rowAttributes: tRowAttributes,\n    columns: tColumns,\n    topContent,\n    bottomContent,\n    firstFullRow,\n    lastFullRow,\n    thDraggable: ['col', 'row-handler-col'].includes(props.dragSort),\n    onPageChange: onInnerPageChange,\n    renderExpandedRow: showExpandedRow ? renderExpandedRow : undefined,\n  } as BaseTableProps;\n\n  if (props.expandOnRowClick || props.selectOnRowClick) {\n    baseTableProps.onRowClick = onInnerRowClick;\n  }\n  return (\n    <BaseTable\n      ref={primaryTableRef}\n      {...baseTableProps}\n      className={classNames(primaryTableClasses, className)}\n      style={style}\n      onLeafColumnsChange={setDragSortColumns}\n    />\n  );\n});\n\nPrimaryTable.displayName = 'PrimaryTable';\n\nexport default PrimaryTable as <T extends TableRowData = TableRowData>(\n  props: PrimaryTableProps<T> & RefAttributes<PrimaryTableRef>,\n) => React.ReactElement;\n"],"names":["PrimaryTable","forwardRef","originalProps","ref","props","useDefaultProps","primaryTableDefaultProps","columns","columnController","editableRowKeys","style","className","primaryTableRef","useRef","innerPagination","pagination","_useClassName","useClassName","classPrefix","tableDraggableClasses","tableBaseClass","tableSelectedClasses","tableSortClasses","_useStyle","useStyle","sizeClassNames","_useColumnController","useColumnController","onColumnReduce","tDisplayColumns","renderColumnController","_useRowExpand","useRowExpand","showExpandedRow","showExpandIconColumn","getExpandColumn","renderExpandedRow","onInnerExpandRowClick","getExpandedRowClass","_useSorter","useSorter","renderSortIcon","_useRowSelect","useRowSelect","selectedRowClassNames","setCurrentPaginateData","formatToRowSelectColumn","setTSelectedRowKeys","onInnerSelectRowClick","_useFilter","useFilter","hasEmptyCondition","isTableOverflowHidden","renderFilterIcon","renderFirstFilterRow","_useDragSort","useDragSort","isRowHandlerDraggable","isRowDraggable","isColDraggable","setDragSortColumns","_useTableHeader","useTableHeader","renderTitleWidthIcon","_useAsyncLoading","useAsyncLoading","renderAsyncLoading","primaryTableClasses","_defineProperty","colDraggable","rowHandlerDraggable","rowDraggable","overflowVisible","tableRowEdit","_useEditableRow","useEditableRow","errorListMap","editableKeysMap","validateRowData","validateTableData","onRuleChange","clearValidateData","tRowClassNames","tClassNames","rowClassName","filter","v","tRowAttributes","tAttributes","rowAttributes","push","_ref","row","get","rowKey","useImperativeHandle","_objectSpread","current","reduceKeys","resizable","updateTableWidthOnColumnChange","getColumns","arr","_loop","_item$children","_item$edit","_item$children2","_item$children3","item","i","isDisplayColumn","children","length","includes","colKey","sort","sorter","showSortColumnBgColor","sorts","Array","sortedColumn","find","sortBy","descending","concat","sortColumn","titleContent","renderTitle","_item","ellipsisTitle","title","p","_primaryTableRef$curr","sortIcon","filterIcon","attach","tableContentRef","col","colIndex","ellipsisOverlayClassName","size","edit","component","oldCell","cell","cellProps","cellEmptyContent","onChange","onRowEdit","onValidate","onRowValidate","rowValue","editable","key","join","errorList","errors","editableCellState","readonly","React","createElement","EditableCell","len","tColumns","cols","unshift","onInnerPageChange","pageInfo","newData","_props$onPageChange","_props$onChange","onPageChange","call","changeParams","trigger","currentData","apply","reserveSelectedRowOnPaginate","selectedRowData","type","currentRowKey","onInnerRowClick","params","expandOnRowClick","selectOnRowClick","formatNode","api","renderInnerNode","condition","extra","innerNode","propsNode","reverse","isColumnController","Object","keys","placement","isBottomController","indexOf","topContent","bottomContent","firstFullRow","lastFullRow","asyncLoading","baseTableProps","thDraggable","dragSort","onRowClick","BaseTable","classNames","onLeafColumnsChange","displayName"],"mappings":"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"}