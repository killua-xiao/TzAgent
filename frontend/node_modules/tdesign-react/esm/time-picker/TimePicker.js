/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-cb0a3966.js';
import { _ as _slicedToArray } from '../_chunks/dep-48805ab8.js';
import React, { useState } from 'react';
import classNames from 'classnames';
import dayjs from 'dayjs';
import { c as customParseFormat } from '../_chunks/dep-dbf3be07.js';
import { TimeIcon } from 'tdesign-icons-react';
import { D as DEFAULT_FORMAT, a as DEFAULT_STEPS, v as validateInputValue, f as formatInputValue } from '../_chunks/dep-f7770f5d.js';
import forwardRefWithStatics from '../_util/forwardRefWithStatics.js';
import useControlled from '../hooks/useControlled.js';
import useConfig from '../hooks/useConfig.js';
import useGlobalIcon from '../hooks/useGlobalIcon.js';
import noop from '../_util/noop.js';
import { SelectInput } from '../select-input/index.js';
import TimeRangePicker from './TimeRangePicker.js';
import TimePickerPanel from './panel/TimePickerPanel.js';
import { useTimePickerTextConfig } from './hooks/useTimePickerTextConfig.js';
import { timePickerDefaultProps } from './defaultProps.js';
import useDefaultProps from '../hooks/useDefaultProps.js';
import '../_chunks/dep-eca3a3de.js';
import '../_chunks/dep-026a4c6b.js';
import '../_chunks/dep-e29214cb.js';
import 'lodash-es';
import '../_chunks/dep-3538034b.js';
import '../hooks/useDebounce.js';
import '../hooks/usePersistFn.js';
import '../hooks/usePropsRef.js';
import 'hoist-non-react-statics';
import '../config-provider/ConfigContext.js';
import '../locale/zh_CN.js';
import '../_chunks/dep-3c9ab31a.js';
import '../select-input/SelectInput.js';
import '../popup/index.js';
import '../popup/Popup.js';
import 'react-transition-group';
import '../_util/ref.js';
import 'react-is';
import '../_util/isFragment.js';
import '../_chunks/dep-3a09424a.js';
import '../common/Portal.js';
import 'react-dom';
import '../hooks/useLayoutEffect.js';
import '../hooks/useAnimation.js';
import '../hooks/useAttach.js';
import '../hooks/useMutationObserver.js';
import '../hooks/useLatest.js';
import '../hooks/usePopper.js';
import '../_chunks/dep-87d110df.js';
import '@popperjs/core';
import 'react-fast-compare';
import '../hooks/useWindowSize.js';
import '../popup/defaultProps.js';
import '../popup/hooks/useTrigger.js';
import '../_util/composeRefs.js';
import '../_util/listener.js';
import '../popup/utils/transition.js';
import '../popup/PopupPlugin.js';
import '../_chunks/dep-a74cc5e4.js';
import '../_util/react-render.js';
import '../common/PluginContainer.js';
import '../config-provider/index.js';
import '../config-provider/ConfigProvider.js';
import '../config-provider/type.js';
import '../popup/style/index.js';
import '../popup/type.js';
import '../select-input/useSingle.js';
import '../input/index.js';
import '../input/Input.js';
import '../_chunks/dep-6b660ef0.js';
import '../input/InputGroup.js';
import '../locale/LocalReceiver.js';
import '../input/defaultProps.js';
import '../_util/parseTNode.js';
import '../_chunks/dep-f53c91cd.js';
import '../_chunks/dep-b908e1fe.js';
import '../input/useLengthLimit.js';
import '../_chunks/dep-1630b9b4.js';
import '../input/style/index.js';
import '../input/type.js';
import '../loading/index.js';
import '../loading/Loading.js';
import '../loading/gradient.js';
import '../_chunks/dep-c48e2ca1.js';
import '../hooks/useDomRefCallback.js';
import '../loading/defaultProps.js';
import '../loading/plugin.js';
import '../loading/style/index.js';
import '../loading/type.js';
import '../select-input/useMultiple.js';
import '../tag-input/index.js';
import '../tag-input/TagInput.js';
import '../hooks/useDragSorter.js';
import '../hooks/useEventCallback.js';
import '../tag-input/defaultProps.js';
import '../tag-input/useHover.js';
import '../tag-input/useTagList.js';
import '../tag/index.js';
import '../tag/Tag.js';
import '../_chunks/dep-3c3d29db.js';
import '../tag/defaultProps.js';
import '../tag/CheckTag.js';
import '../_chunks/dep-55732ade.js';
import '../tag/CheckTagGroup.js';
import '../tag/style/index.js';
import '../tag/type.js';
import '../tag-input/useTagScroll.js';
import '../tag-input/style/index.js';
import '../tag-input/type.js';
import '../select-input/useOverlayInnerStyle.js';
import '../select-input/defaultProps.js';
import '../select-input/style/index.js';
import '../select-input/type.js';
import '../range-input/index.js';
import '../range-input/RangeInput.js';
import '../range-input/defaultProps.js';
import '../range-input/RangeInputPopup.js';
import '../range-input/style/index.js';
import '../range-input/type.js';
import '../button/index.js';
import '../button/Button.js';
import '../hooks/useRipple.js';
import '../button/defaultProps.js';
import '../button/style/index.js';
import '../button/type.js';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
dayjs.extend(customParseFormat);
var TimePicker = forwardRefWithStatics(function (originalProps, ref) {
  var props = useDefaultProps(originalProps, timePickerDefaultProps);
  var TEXT_CONFIG = useTimePickerTextConfig();
  var allowInput = props.allowInput,
    borderless = props.borderless,
    className = props.className,
    clearable = props.clearable,
    disabled = props.disabled,
    style = props.style,
    _props$format = props.format,
    format = _props$format === void 0 ? DEFAULT_FORMAT : _props$format,
    _props$hideDisabledTi = props.hideDisabledTime,
    hideDisabledTime = _props$hideDisabledTi === void 0 ? true : _props$hideDisabledTi,
    _props$steps = props.steps,
    steps = _props$steps === void 0 ? DEFAULT_STEPS : _props$steps,
    _props$placeholder = props.placeholder,
    placeholder = _props$placeholder === void 0 ? TEXT_CONFIG.placeholder : _props$placeholder,
    disableTime = props.disableTime,
    _props$onBlur = props.onBlur,
    onBlur = _props$onBlur === void 0 ? noop : _props$onBlur,
    _props$onClose = props.onClose,
    onClose = _props$onClose === void 0 ? noop : _props$onClose,
    _props$onFocus = props.onFocus,
    onFocus = _props$onFocus === void 0 ? noop : _props$onFocus,
    _props$onOpen = props.onOpen,
    onOpen = _props$onOpen === void 0 ? noop : _props$onOpen,
    _props$onInput = props.onInput,
    onInput = _props$onInput === void 0 ? noop : _props$onInput,
    _props$onPick = props.onPick,
    onPick = _props$onPick === void 0 ? noop : _props$onPick,
    _props$onClear = props.onClear,
    onClear = _props$onClear === void 0 ? noop : _props$onClear;
  var _useControlled = useControlled(props, "value", props.onChange),
    _useControlled2 = _slicedToArray(_useControlled, 2),
    value = _useControlled2[0],
    onChange = _useControlled2[1];
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    isPanelShowed = _useState2[0],
    setPanelShow = _useState2[1];
  var _useState3 = useState(""),
    _useState4 = _slicedToArray(_useState3, 2),
    currentValue = _useState4[0],
    setCurrentValue = _useState4[1];
  var _useConfig = useConfig(),
    classPrefix = _useConfig.classPrefix;
  var _useGlobalIcon = useGlobalIcon({
      TimeIcon: TimeIcon
    }),
    TimeIcon$1 = _useGlobalIcon.TimeIcon;
  var name = "".concat(classPrefix, "-time-picker");
  var inputClasses = classNames("".concat(name, "__group"), _defineProperty({}, "".concat(classPrefix, "-is-focused"), isPanelShowed));
  var effectVisibleCurrentValue = function effectVisibleCurrentValue(visible) {
    setPanelShow(visible);
    setCurrentValue(visible ? value !== null && value !== void 0 ? value : "" : "");
  };
  var handleShowPopup = function handleShowPopup(visible, context) {
    effectVisibleCurrentValue(visible);
    visible ? onOpen(context) : onClose(context);
  };
  var handleClear = function handleClear(context) {
    var e = context.e;
    e.stopPropagation();
    setCurrentValue("");
    onChange(null);
    onClear(context);
  };
  var handleInputChange = function handleInputChange(value2, context) {
    setCurrentValue(value2);
    if (allowInput) {
      onInput({
        value: value2,
        e: context.e
      });
    }
  };
  var handleInputBlur = function handleInputBlur(value2, ctx) {
    if (allowInput) {
      var isValidTime = validateInputValue(currentValue, format);
      if (isValidTime) {
        onChange(formatInputValue(currentValue, format));
      }
    }
    onBlur(_objectSpread({
      value: String(value2)
    }, ctx));
  };
  var handleClickConfirm = function handleClickConfirm() {
    var isValidTime = validateInputValue(currentValue, format);
    if (isValidTime) onChange(currentValue);
    effectVisibleCurrentValue(false);
  };
  var handlePanelChange = function handlePanelChange(v, ctx) {
    setCurrentValue(v);
    onPick === null || onPick === void 0 || onPick(v, ctx);
  };
  return /* @__PURE__ */React.createElement("div", {
    className: classNames(name, className),
    ref: ref,
    style: style
  }, /* @__PURE__ */React.createElement(SelectInput, {
    onFocus: onFocus,
    onClear: handleClear,
    disabled: disabled,
    clearable: clearable,
    allowInput: allowInput,
    className: inputClasses,
    borderless: borderless,
    suffixIcon: /* @__PURE__ */React.createElement(TimeIcon$1, null),
    popupVisible: isPanelShowed,
    onInputChange: handleInputChange,
    onBlur: handleInputBlur,
    onPopupVisibleChange: handleShowPopup,
    placeholder: !value ? placeholder : void 0,
    value: isPanelShowed ? currentValue : value !== null && value !== void 0 ? value : void 0,
    inputValue: isPanelShowed ? currentValue : value !== null && value !== void 0 ? value : void 0,
    inputProps: _objectSpread(_objectSpread({}, props.inputProps), {}, {
      size: props.size
    }),
    popupProps: _objectSpread({
      overlayInnerStyle: {
        width: "auto",
        padding: 0
      }
    }, props.popupProps),
    tips: props.tips,
    status: props.status,
    label: props.label,
    panel: /* @__PURE__ */React.createElement(TimePickerPanel, {
      steps: steps,
      format: format,
      value: currentValue,
      isFooterDisplay: true,
      isShowPanel: isPanelShowed,
      disableTime: disableTime,
      onChange: handlePanelChange,
      onPick: props.onPick,
      hideDisabledTime: hideDisabledTime,
      handleConfirmClick: handleClickConfirm,
      presets: props.presets
    })
  }));
}, {
  TimeRangePicker: TimeRangePicker,
  TimePickerPanel: TimePickerPanel
});
TimePicker.displayName = "TimePicker";

export { TimePicker as default };
//# sourceMappingURL=TimePicker.js.map
