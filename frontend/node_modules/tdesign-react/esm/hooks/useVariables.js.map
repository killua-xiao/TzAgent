{"version":3,"file":"useVariables.js","sources":["../../../common/js/utils/getColorTokenColor.ts","../../../components/hooks/useVariables.ts"],"sourcesContent":["/**\n * 获取颜色token的色值\n * @example getColorTokenColor('--td-brand-color')\n * @returns string\n */\nexport const getColorTokenColor = (token: string): string => {\n  if (typeof window === 'undefined') return '';\n  const targetElement = document?.documentElement;\n  const styles = getComputedStyle(targetElement);\n  return styles.getPropertyValue(token).trim() ?? '';\n};\n\nexport default getColorTokenColor;\n","import { useMemo, useState } from 'react';\nimport { THEME_MODE } from '@tdesign/common-js/common';\nimport getColorTokenColor from '@tdesign/common-js/utils/getColorTokenColor';\nimport useMutationObservable from './useMutationObserver';\nimport { canUseDocument } from '../_util/dom';\n\nconst DEFAULT_OPTIONS = {\n  debounceTime: 250,\n  config: {\n    attributes: true,\n  },\n};\n\n/**\n * useVariables Hook - 监听CSS变量变化并返回实时值\n * @param variables CSS 变量名对象，键为返回对象的属性名，值为CSS变量名（带--前缀）\n * @param targetElement 监听的元素，默认为 document?.documentElement\n * @returns 包含每个变量当前值的ref对象\n * @example\n *   const { textColor, brandColor } = useVariables({\n *      textColor: '--td-text-color-primary',\n *      brandColor: '--td-brand-color',\n *   });\n *\n *   // 使用变量值\n *   console.log(textColor.current); // 获取当前文本颜色\n */\nfunction useVariables<T extends Record<string, string>>(\n  variables: T,\n  targetElement?: HTMLElement,\n): Record<keyof T, string> {\n  const [, forceUpdate] = useState<Record<string, never>>({});\n\n  if (canUseDocument && !targetElement) {\n    // eslint-disable-next-line no-param-reassign\n    targetElement = document?.documentElement;\n  }\n\n  // 确保 variables 参数有效\n  if (!variables || Object.keys(variables).length === 0) {\n    throw new Error('useVariables: variables parameter cannot be empty');\n  }\n\n  const refs = useMemo(() => {\n    const values = {} as Record<keyof T, string>;\n\n    // 为每个变量创建ref并获取初始值\n    Object.entries(variables).forEach(([key, varName]) => {\n      try {\n        const initialValue = getColorTokenColor(varName);\n        values[key as keyof T] = initialValue;\n      } catch (error) {\n        console.warn(`Failed to get initial value for CSS variable ${varName}:`, error);\n        values[key as keyof T] = '';\n      }\n    });\n\n    return values;\n  }, [variables]);\n\n  // 缓存更新函数，避免每次渲染都创建新函数\n  const updateVariables = () => {\n    try {\n      Object.entries(variables).forEach(([key, varName]) => {\n        const newValue = getColorTokenColor(varName);\n        if (refs[key as keyof T] && refs[key as keyof T] !== newValue) {\n          refs[key as keyof T] = newValue;\n        }\n      });\n      forceUpdate({});\n    } catch (error) {\n      console.warn('Failed to update CSS variables:', error);\n    }\n  };\n\n  useMutationObservable(\n    targetElement,\n    (mutationsList) => {\n      // 使用 for 循环而不是 some，提高性能\n      for (const mutation of mutationsList) {\n        if (mutation.type === 'attributes' && mutation.attributeName === THEME_MODE) {\n          updateVariables();\n          return;\n        }\n      }\n    },\n    DEFAULT_OPTIONS,\n  );\n\n  // @ts-expect-error\n  if (!canUseDocument) return {};\n\n  return refs;\n}\n\nexport default useVariables;\n"],"names":["getColorTokenColor","token","_document","_styles$getPropertyVa","window","targetElement","document","documentElement","styles","getComputedStyle","getPropertyValue","trim","DEFAULT_OPTIONS","debounceTime","config","attributes","useVariables","variables","_useState","useState","_useState2","_slicedToArray","forceUpdate","canUseDocument","Object","keys","length","Error","refs","useMemo","values","entries","forEach","_ref","_ref2","key","varName","initialValue","error","console","warn","concat","updateVariables","_ref3","_ref4","newValue","useMutationObservable","mutationsList","_iterator","_createForOfIteratorHelper","_step","s","n","done","mutation","type","attributeName","THEME_MODE","err","e","f"],"mappings":"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"}