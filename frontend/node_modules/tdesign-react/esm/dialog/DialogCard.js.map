{"version":3,"file":"DialogCard.js","sources":["../../../components/dialog/DialogCard.tsx"],"sourcesContent":["import React, { forwardRef, isValidElement } from 'react';\nimport classNames from 'classnames';\nimport { isString, isObject, isFunction } from 'lodash-es';\nimport {\n  CloseIcon as TdCloseIcon,\n  InfoCircleFilledIcon as TdInfoCircleFilledIcon,\n  CheckCircleFilledIcon as TdCheckCircleFilledIcon,\n} from 'tdesign-icons-react';\nimport Button, { ButtonProps } from '../button';\nimport { TdDialogCardProps } from './type';\nimport { StyledProps } from '../common';\nimport parseTNode from '../_util/parseTNode';\nimport useConfig from '../hooks/useConfig';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport { useLocaleReceiver } from '../locale/LocalReceiver';\nimport { dialogCardDefaultProps } from './defaultProps';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\nexport interface DialogCardProps extends TdDialogCardProps, StyledProps, React.HTMLAttributes<HTMLDivElement> {\n  children?: React.ReactNode;\n}\n\nconst renderDialogButton = (btn: DialogCardProps['cancelBtn'], defaultProps: ButtonProps) => {\n  let result = null;\n\n  if (isString(btn)) {\n    result = <Button {...defaultProps}>{btn}</Button>;\n  } else if (isValidElement(btn)) {\n    result = btn;\n  } else if (isObject(btn)) {\n    result = <Button {...defaultProps} {...(btn as {})} />;\n  } else if (isFunction(btn)) {\n    result = btn();\n  }\n\n  return result;\n};\n\nconst DialogCard = forwardRef<HTMLDivElement, DialogCardProps>((props, ref) => {\n  const { classPrefix } = useConfig();\n  const componentCls = `${classPrefix}-dialog`;\n  const { CloseIcon, InfoCircleFilledIcon, CheckCircleFilledIcon } = useGlobalIcon({\n    CloseIcon: TdCloseIcon,\n    InfoCircleFilledIcon: TdInfoCircleFilledIcon,\n    CheckCircleFilledIcon: TdCheckCircleFilledIcon,\n  });\n  const [local, t] = useLocaleReceiver('dialog');\n  const confirmText = t(local.confirm);\n  const cancelText = t(local.cancel);\n\n  const {\n    theme,\n    header,\n    closeBtn,\n    footer,\n    body,\n    children,\n    className,\n    onCancel,\n    onConfirm,\n    onCloseBtnClick,\n    cancelBtn = cancelText,\n    confirmBtn = confirmText,\n    confirmLoading,\n    ...otherProps\n  } = useDefaultProps<DialogCardProps>(props, dialogCardDefaultProps);\n\n  const renderHeaderContent = () => {\n    const iconMap = {\n      info: <InfoCircleFilledIcon className={`${classPrefix}-is-info`} />,\n      warning: <InfoCircleFilledIcon className={`${classPrefix}-is-warning`} />,\n      // error is going to deprecated\n      error: <InfoCircleFilledIcon className={`${classPrefix}-is-error`} />,\n      danger: <InfoCircleFilledIcon className={`${classPrefix}-is-error`} />,\n      success: <CheckCircleFilledIcon className={`${classPrefix}-is-success`} />,\n    };\n\n    return (\n      <div className={`${componentCls}__header-content`}>\n        {iconMap[theme]}\n        {header}\n      </div>\n    );\n  };\n\n  const renderCloseBtn = () => {\n    if (!closeBtn) {\n      return null;\n    }\n\n    const closeIcon = () => (closeBtn === true ? <CloseIcon /> : closeBtn);\n\n    return (\n      <span\n        className={`${componentCls}__close`}\n        style={{\n          marginLeft: 'auto',\n        }}\n        onClick={(e: React.MouseEvent<HTMLDivElement>) => onCloseBtnClick?.({ e })}\n      >\n        {closeIcon()}\n      </span>\n    );\n  };\n\n  const renderHeader = () => (\n    <div className={classNames(`${componentCls}__header`)}>\n      {renderHeaderContent()}\n      {renderCloseBtn()}\n    </div>\n  );\n\n  const renderFooter = () => {\n    const defaultFooter = () => {\n      const renderCancelBtn = renderDialogButton(cancelBtn, {\n        variant: 'outline',\n        onClick: (e: React.MouseEvent<HTMLButtonElement>) => onCancel?.({ e }),\n        className: classNames(`${componentCls}__cancel`, cancelBtn?.props?.className),\n      });\n      const renderConfirmBtn = renderDialogButton(confirmBtn, {\n        theme: 'primary',\n        loading: confirmLoading,\n        onClick: (e: React.MouseEvent<HTMLButtonElement>) => onConfirm?.({ e }),\n        className: classNames(`${componentCls}__confirm`, confirmBtn?.className),\n      });\n\n      return (\n        <>\n          {renderCancelBtn}\n          {renderConfirmBtn}\n        </>\n      );\n    };\n\n    return <div className={`${componentCls}__footer`}>{parseTNode(footer, null, defaultFooter())}</div>;\n  };\n\n  return (\n    <div ref={ref} {...otherProps} className={classNames(componentCls, `${componentCls}--default`, className)}>\n      {!!header && renderHeader()}\n      <div className={`${componentCls}__body`}>{body || children}</div>\n      {!!footer && renderFooter()}\n    </div>\n  );\n});\n\nDialogCard.displayName = 'DialogCard';\n\nexport default DialogCard;\n"],"names":["renderDialogButton","btn","defaultProps","result","isString","React","createElement","Button","_objectSpread","isValidElement","isObject","isFunction","DialogCard","forwardRef","props","ref","_useConfig","useConfig","classPrefix","componentCls","_useGlobalIcon","useGlobalIcon","CloseIcon","TdCloseIcon","InfoCircleFilledIcon","TdInfoCircleFilledIcon","CheckCircleFilledIcon","TdCheckCircleFilledIcon","_useLocaleReceiver","useLocaleReceiver","_useLocaleReceiver2","_slicedToArray","local","t","confirmText","confirm","cancelText","cancel","_useDefaultProps","useDefaultProps","dialogCardDefaultProps","theme","header","closeBtn","footer","body","children","className","onCancel","onConfirm","onCloseBtnClick","_useDefaultProps$canc","cancelBtn","_useDefaultProps$conf","confirmBtn","confirmLoading","otherProps","_objectWithoutProperties","_excluded","renderHeaderContent","iconMap","info","warning","error","danger","success","renderCloseBtn","closeIcon","style","marginLeft","onClick","e","renderHeader","classNames","concat","renderFooter","defaultFooter","_cancelBtn$props","renderCancelBtn","variant","renderConfirmBtn","loading","Fragment","parseTNode","displayName"],"mappings":"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"}