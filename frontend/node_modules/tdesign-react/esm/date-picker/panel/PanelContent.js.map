{"version":3,"file":"PanelContent.js","sources":["../../../../components/date-picker/panel/PanelContent.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { getDefaultFormat } from '@tdesign/common-js/date-picker/format';\nimport DateHeader from '../base/Header';\nimport DateTable from '../base/Table';\nimport { TimePickerPanel } from '../../time-picker';\nimport type { SinglePanelProps } from './SinglePanel';\nimport type { RangePanelProps } from './RangePanel';\nimport useConfig from '../../hooks/useConfig';\nimport useEventCallback from '../../hooks/useEventCallback';\n\nexport interface PanelContentProps {\n  partial?: 'start' | 'end';\n  value: SinglePanelProps['value'] | RangePanelProps['value'];\n  year: SinglePanelProps['year'];\n  month: SinglePanelProps['month'];\n  mode: SinglePanelProps['mode'];\n  format: SinglePanelProps['format'];\n  enableTimePicker: SinglePanelProps['enableTimePicker'];\n  timePickerProps: SinglePanelProps['timePickerProps'];\n  firstDayOfWeek: SinglePanelProps['firstDayOfWeek'];\n  time: SinglePanelProps['time'];\n  multiple?: SinglePanelProps['multiple'];\n  popupVisible?: boolean;\n  tableData: any[];\n  internalYear?: Array<number>;\n  onMonthChange: SinglePanelProps['onMonthChange'] | RangePanelProps['onMonthChange'];\n  onYearChange: SinglePanelProps['onYearChange'] | RangePanelProps['onYearChange'];\n  onJumperClick: SinglePanelProps['onJumperClick'] | RangePanelProps['onJumperClick'];\n  onCellClick: SinglePanelProps['onCellClick'] | RangePanelProps['onCellClick'];\n  onCellMouseEnter: SinglePanelProps['onCellMouseEnter'] | RangePanelProps['onCellMouseEnter'];\n  onCellMouseLeave: SinglePanelProps['onCellMouseLeave'] | RangePanelProps['onCellMouseLeave'];\n  onTimePickerChange: SinglePanelProps['onTimePickerChange'] | RangePanelProps['onTimePickerChange'];\n}\n\nexport default function PanelContent(props: PanelContentProps) {\n  const { classPrefix } = useConfig();\n  const panelName = `${classPrefix}-date-picker__panel`;\n\n  const {\n    value,\n    year,\n    month,\n    mode,\n    format,\n    enableTimePicker,\n    timePickerProps,\n    firstDayOfWeek,\n\n    partial = 'start',\n    time,\n    tableData,\n    internalYear,\n    onJumperClick,\n    onCellClick,\n    onCellMouseEnter,\n    onCellMouseLeave,\n    onTimePickerChange,\n  } = props;\n\n  const onMonthChange = useEventCallback(props.onMonthChange);\n  const onYearChange = useEventCallback(props.onYearChange);\n\n  const { timeFormat } = getDefaultFormat({ mode, format, enableTimePicker });\n\n  const showTimePicker = enableTimePicker && mode === 'date';\n\n  const defaultTime = '00:00:00';\n\n  const onMonthChangeInner = useCallback(\n    (val: number) => {\n      onMonthChange?.(val, { partial });\n    },\n    [partial, onMonthChange],\n  );\n\n  const onYearChangeInner = useCallback(\n    (val: number) => {\n      onYearChange?.(val, { partial });\n    },\n    [partial, onYearChange],\n  );\n\n  const onJumperClickInner = useCallback(\n    ({ trigger }) => {\n      onJumperClick?.({ trigger, partial });\n    },\n    [partial, onJumperClick],\n  );\n\n  return (\n    <div className={`${panelName}-content`}>\n      <div className={`${panelName}-${mode}`}>\n        <DateHeader\n          mode={mode}\n          year={year}\n          month={month}\n          internalYear={internalYear}\n          partial={partial}\n          onMonthChange={onMonthChangeInner}\n          onYearChange={onYearChangeInner}\n          onJumperClick={onJumperClickInner}\n        />\n\n        <DateTable\n          mode={mode}\n          data={tableData}\n          value={value}\n          time={time}\n          format={format}\n          firstDayOfWeek={firstDayOfWeek}\n          multiple={props.multiple}\n          onCellClick={(date: Date, { e }) => onCellClick?.(date, { e, partial })}\n          onCellMouseEnter={(date: Date) => onCellMouseEnter?.(date, { partial })}\n          onCellMouseLeave={onCellMouseLeave}\n        />\n      </div>\n\n      {showTimePicker && (\n        <div className={`${panelName}-time`}>\n          <div className={`${panelName}-time-viewer`}>{time || defaultTime}</div>\n          <TimePickerPanel\n            key={partial}\n            position={partial}\n            format={timeFormat}\n            value={time || defaultTime}\n            onChange={onTimePickerChange}\n            isShowPanel={props.popupVisible}\n            {...timePickerProps}\n          />\n        </div>\n      )}\n    </div>\n  );\n}\n"],"names":["PanelContent","props","_useConfig","useConfig","classPrefix","panelName","value","year","month","mode","format","enableTimePicker","timePickerProps","firstDayOfWeek","_props$partial","partial","time","tableData","internalYear","onJumperClick","onCellClick","onCellMouseEnter","onCellMouseLeave","onTimePickerChange","onMonthChange","useEventCallback","onYearChange","_getDefaultFormat","getDefaultFormat","timeFormat","showTimePicker","defaultTime","onMonthChangeInner","useCallback","val","onYearChangeInner","onJumperClickInner","_ref","trigger","React","createElement","className","concat","DateHeader","DateTable","data","multiple","date","_ref2","e","TimePickerPanel","_objectSpread","key","position","onChange","isShowPanel","popupVisible"],"mappings":"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"}