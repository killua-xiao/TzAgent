{"version":3,"file":"dep-90b6cb7a.js","sources":["../../../components/image-viewer/ImageViewerMini.tsx","../../../components/image-viewer/ImageViewerModal.tsx"],"sourcesContent":["import React, { KeyboardEvent, MouseEvent } from 'react';\nimport { TNode } from '../common';\nimport Dialog from '../dialog';\nimport useConfig from '../hooks/useConfig';\nimport { ImageModalItem, ImageViewerUtils } from './ImageViewerModal';\nimport type { ImageInfo, ImageScale, ImageViewerScale, TdImageViewerProps } from './type';\n\nexport interface ImageModalMiniProps {\n  visible: boolean;\n  title?: TNode;\n  draggable: boolean;\n  index: number;\n  scale: number;\n  mirror: number;\n  images: ImageInfo[];\n  imageScale: ImageScale;\n  viewerScale: ImageViewerScale;\n  rotateZ: number;\n  currentImage: ImageInfo;\n  zIndex: number;\n  errorText: string;\n  tipText: {\n    mirror: string;\n    rotate: string;\n    originalSize: string;\n  };\n  imageReferrerpolicy?: TdImageViewerProps['imageReferrerpolicy'];\n  prev: () => void;\n  next: () => void;\n  onMirror: () => void;\n  onZoom: () => void;\n  onZoomOut: () => void;\n  onReset: () => void;\n  onRotate: (red: number) => void;\n  onClose: (context: { trigger: 'close-btn' | 'overlay' | 'esc'; e: MouseEvent<HTMLElement> | KeyboardEvent }) => void;\n}\n\nexport const ImageModalMiniContent: React.FC<ImageModalMiniProps> = (props) => {\n  const { classPrefix } = useConfig();\n\n  return (\n    <div className={`${classPrefix}-image-viewer-mini__content`}>\n      <ImageModalItem\n        rotateZ={props.rotateZ}\n        scale={props.scale}\n        mirror={props.mirror}\n        src={props.currentImage.mainImage}\n        preSrc={props.currentImage.thumbnail}\n        errorText={props.errorText}\n        imageReferrerpolicy={props.imageReferrerpolicy}\n        isSvg={props.currentImage.isSvg}\n      />\n    </div>\n  );\n};\n\nexport const ImageModalMini: React.FC<ImageModalMiniProps> = (props) => {\n  const {\n    visible,\n    title,\n    scale,\n    currentImage,\n    draggable,\n    tipText,\n    onZoomOut,\n    onZoom,\n    onClose,\n    onRotate,\n    onMirror,\n    onReset,\n  } = props;\n\n  const { classPrefix } = useConfig();\n\n  const footer = (\n    <div className={`${classPrefix}-image-viewer-mini__footer`}>\n      <ImageViewerUtils\n        scale={scale}\n        tipText={tipText}\n        currentImage={currentImage}\n        zIndex={props.zIndex + 1}\n        onZoom={onZoom}\n        onZoomOut={onZoomOut}\n        onRotate={onRotate}\n        onMirror={onMirror}\n        onReset={onReset}\n      />\n    </div>\n  );\n\n  return (\n    <Dialog\n      className={`${classPrefix}-image-viewer__dialog`}\n      draggable={draggable}\n      visible={visible}\n      width=\"min(90vw, 1000px)\"\n      placement=\"center\"\n      mode=\"modeless\"\n      closeOnOverlayClick={false}\n      cancelBtn={null}\n      confirmBtn={null}\n      header={<span className={`${classPrefix}-image-viewer__dialog-title`}>{title}</span>}\n      footer={footer}\n      onClose={onClose}\n    >\n      <ImageModalMiniContent {...props} />\n    </Dialog>\n  );\n};\n","import React, { KeyboardEvent, MouseEvent, useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport { isArray, isFunction } from 'lodash-es';\nimport {\n  ImageErrorIcon as TdImageErrorIcon,\n  ImageIcon as TdImageIcon,\n  MirrorIcon as TdMirrorIcon,\n  RotationIcon as TdRotationIcon,\n} from 'tdesign-icons-react';\nimport { largeNumberToFixed } from '@tdesign/common-js/input-number/large-number';\nimport type { TNode } from '../common';\nimport useConfig from '../hooks/useConfig';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport useImagePreviewUrl from '../hooks/useImagePreviewUrl';\nimport Image from '../image';\nimport { useLocaleReceiver } from '../locale/LocalReceiver';\nimport { TooltipLite } from '../tooltip';\nimport type { ImageViewerProps } from './ImageViewer';\nimport { ImageModalMini } from './ImageViewerMini';\nimport useIconMap from './hooks/useIconMap';\nimport useIndex from './hooks/useIndex';\nimport useMirror from './hooks/useMirror';\nimport usePosition from './hooks/usePosition';\nimport useRotate from './hooks/useRotate';\nimport useScale from './hooks/useScale';\nimport type { ImageInfo, ImageScale, ImageViewerScale, TdImageViewerProps } from './type';\nimport { downloadFile } from './utils';\n\nconst ImageError = ({ errorText }: { errorText: string }) => {\n  const { classPrefix } = useConfig();\n  const { ImageErrorIcon } = useGlobalIcon({ ImageErrorIcon: TdImageErrorIcon });\n\n  return (\n    <div className={`${classPrefix}-image-viewer__img-error`}>\n      <div className={`${classPrefix}-image-viewer__img-error-content`}>\n        <ImageErrorIcon size=\"4em\" />\n        <div className={`${classPrefix}-image-viewer__img-error-text`}>{errorText}</div>\n      </div>\n    </div>\n  );\n};\n\ninterface ImageModalItemProps {\n  rotateZ: number;\n  scale: number;\n  mirror: number;\n  src: string | File;\n  preSrc?: string | File;\n  errorText: string;\n  imageReferrerpolicy?: TdImageViewerProps['imageReferrerpolicy'];\n  isSvg: boolean;\n}\n\n// 单个弹窗实例\nexport const ImageModalItem: React.FC<ImageModalItemProps> = ({\n  rotateZ,\n  scale,\n  src,\n  preSrc,\n  mirror,\n  errorText,\n  imageReferrerpolicy,\n  isSvg,\n}) => {\n  const { classPrefix } = useConfig();\n\n  const imgRef = useRef<HTMLImageElement>(null);\n  const svgRef = useRef<HTMLDivElement>(null);\n\n  const [loaded, setLoaded] = useState(false);\n  const [error, setError] = useState(false);\n\n  const imgStyle = {\n    transform: `rotateZ(${rotateZ}deg) scale(${scale})`,\n    display: !preSrc || loaded ? 'block' : 'none',\n  };\n\n  const { previewUrl: preSrcImagePreviewUrl } = useImagePreviewUrl(preSrc);\n  const { previewUrl: mainImagePreviewUrl } = useImagePreviewUrl(src);\n\n  const displayRef = useMemo(() => {\n    if (isSvg) return svgRef;\n    return imgRef;\n  }, [isSvg]);\n  const { position } = usePosition(displayRef);\n  const preImgStyle = { transform: `rotateZ(${rotateZ}deg) scale(${scale})`, display: !loaded ? 'block' : 'none' };\n  const boxStyle = { transform: `translate(${position[0]}px, ${position[1]}px) scale(${mirror}, 1)` };\n\n  const createSvgShadow = async (url: string) => {\n    const response = await fetch(url);\n    if (!response.ok) {\n      setError(true);\n      throw new Error(`Failed to fetch SVG: ${response.statusText}`);\n    }\n\n    const svgText = await response.text();\n\n    const element = svgRef.current;\n    element.innerHTML = '';\n    element.classList?.add(`${classPrefix}-image-viewer__modal-image-svg`);\n    const shadowRoot = element.attachShadow({ mode: 'closed' });\n\n    const container = document.createElement('div');\n    container.style.background = 'transparent';\n    container.innerHTML = svgText;\n    shadowRoot.appendChild(container);\n\n    const svgElement = container.querySelector('svg');\n    if (svgElement) {\n      const svgViewBox = svgElement.getAttribute('viewBox');\n      if (svgViewBox) {\n        const viewBoxValues = svgViewBox\n          .split(/[\\s,]/)\n          .filter((v) => v)\n          .map(parseFloat);\n\n        // svg viewbox x(0) and y(1) offset, width(2) and height(3),eg\n        const svgViewBoxWidth = viewBoxValues[2];\n        const svgViewBoxHeight = viewBoxValues[3];\n        container.style.width = `${svgViewBoxWidth}px`;\n        container.style.height = `${svgViewBoxHeight}px`;\n      } else {\n        const bbox = svgElement.getBBox();\n        const calculatedViewBox = `${bbox.x} ${bbox.y} ${bbox.width} ${bbox.height}`;\n        svgElement.setAttribute('viewBox', calculatedViewBox);\n\n        container.style.width = `${bbox.width}px`;\n        container.style.height = `${bbox.height}px`;\n      }\n    }\n    setLoaded(true);\n  };\n\n  useEffect(() => {\n    setError(false);\n  }, [preSrcImagePreviewUrl, mainImagePreviewUrl]);\n\n  useEffect(() => {\n    if (isSvg && mainImagePreviewUrl) {\n      createSvgShadow(mainImagePreviewUrl);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [mainImagePreviewUrl]);\n\n  return (\n    <div className={`${classPrefix}-image-viewer__modal-pic`}>\n      <div className={`${classPrefix}-image-viewer__modal-box`} style={boxStyle}>\n        {error && <ImageError errorText={errorText} />}\n        {/* 预览图 */}\n        {!error && !!preSrc && preSrcImagePreviewUrl && (\n          <img\n            className={`${classPrefix}-image-viewer__modal-image`}\n            src={preSrcImagePreviewUrl}\n            style={preImgStyle}\n            referrerPolicy={imageReferrerpolicy}\n            alt=\"image\"\n            draggable=\"false\"\n          />\n        )}\n        {/* 普通主图 */}\n        {!error && mainImagePreviewUrl && !isSvg && (\n          <img\n            ref={imgRef}\n            className={`${classPrefix}-image-viewer__modal-image`}\n            src={mainImagePreviewUrl}\n            style={imgStyle}\n            onLoad={() => setLoaded(true)}\n            onError={() => setError(true)}\n            referrerPolicy={imageReferrerpolicy}\n            alt=\"image\"\n            draggable=\"false\"\n          />\n        )}\n        {/* SVG 主图 */}\n        {!error && !!mainImagePreviewUrl && isSvg && (\n          <div\n            ref={svgRef}\n            className={`${classPrefix}-image-viewer__modal-image`}\n            style={imgStyle}\n            data-alt=\"svg\"\n            draggable=\"false\"\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\n// 旋转角度单位\nconst ROTATE_COUNT = 90;\n\ninterface ImageModalIconProps {\n  name?: string;\n  size?: string;\n  label?: string;\n  className?: string;\n  disabled?: boolean;\n  isRange?: boolean;\n  onClick?: (e: MouseEvent<HTMLElement>) => void;\n}\n\nconst ImageModalIcon = ({ onClick, className, disabled, isRange, name, label, size = '16px' }: ImageModalIconProps) => {\n  const { classPrefix } = useConfig();\n\n  const Icons = useIconMap();\n\n  const Icon = Icons[name];\n  return (\n    <div\n      className={classNames(`${classPrefix}-image-viewer__modal-icon`, className, {\n        [`${classPrefix}-is-disabled`]: disabled,\n      })}\n      onClick={onClick}\n    >\n      {name && <Icon size={size} className={isRange ? 'is-range' : null} />}\n      {label && <span className={`${classPrefix}-image-viewer__modal-icon-label`}>{label}</span>}\n    </div>\n  );\n};\n\ninterface ImageViewerUtilsProps {\n  scale: number;\n  currentImage: ImageInfo;\n  tipText: {\n    mirror: string;\n    rotate: string;\n    originalSize: string;\n  };\n  zIndex: number;\n  onMirror: () => void;\n  onRotate: (ROTATE_COUNT: number) => void;\n  onZoom: () => void;\n  onZoomOut: () => void;\n  onReset: () => void;\n  onDownload?: TdImageViewerProps['onDownload'];\n}\n\nexport const ImageViewerUtils: React.FC<ImageViewerUtilsProps> = ({\n  scale,\n  currentImage,\n  tipText,\n  zIndex,\n  onMirror,\n  onRotate,\n  onZoom,\n  onZoomOut,\n  onReset,\n  onDownload,\n}) => {\n  const { classPrefix } = useConfig();\n  const { MirrorIcon, RotationIcon, ImageIcon } = useGlobalIcon({\n    MirrorIcon: TdMirrorIcon,\n    RotationIcon: TdRotationIcon,\n    ImageIcon: TdImageIcon,\n  });\n\n  return (\n    <div className={`${classPrefix}-image-viewer__utils`}>\n      <div className={`${classPrefix}-image-viewer__utils-content`}>\n        <TooltipLite\n          className={`${classPrefix}-image-viewer__utils--tip`}\n          content={tipText.mirror}\n          showShadow={false}\n          zIndex={zIndex}\n        >\n          <div className={`${classPrefix}-image-viewer__modal-icon`} onClick={onMirror}>\n            <MirrorIcon size=\"medium\" />\n          </div>\n        </TooltipLite>\n        <TooltipLite\n          className={`${classPrefix}-image-viewer__utils--tip`}\n          content={tipText.rotate}\n          showShadow={false}\n          zIndex={zIndex}\n        >\n          <div className={`${classPrefix}-image-viewer__modal-icon`} onClick={() => onRotate(-ROTATE_COUNT)}>\n            <RotationIcon size=\"medium\" />\n          </div>\n        </TooltipLite>\n        <ImageModalIcon size=\"medium\" name=\"zoom-out\" onClick={onZoomOut} />\n        <ImageModalIcon\n          className={`${classPrefix}-image-viewer__utils-scale`}\n          size=\"medium\"\n          label={`${largeNumberToFixed(String(scale * 100))}%`}\n        />\n        <ImageModalIcon size=\"medium\" name=\"zoom-in\" onClick={onZoom} />\n        <TooltipLite\n          className={`${classPrefix}-image-viewer__utils--tip`}\n          content={tipText.originalSize}\n          showShadow={false}\n          zIndex={zIndex}\n        >\n          <div className={`${classPrefix}-image-viewer__modal-icon`} onClick={onReset}>\n            <ImageIcon size=\"medium\" name=\"image\" />\n          </div>\n        </TooltipLite>\n        {currentImage.download && (\n          <ImageModalIcon\n            size=\"medium\"\n            name=\"download\"\n            onClick={() => {\n              if (isFunction(onDownload)) {\n                // 自定义图片预览下载\n                onDownload(currentImage.mainImage);\n                return;\n              }\n              downloadFile(currentImage.mainImage);\n            }}\n          />\n        )}\n      </div>\n    </div>\n  );\n};\n\ntype ImageViewerHeaderProps = {\n  onImgClick: (index: number, ctx: { trigger: 'current' }) => void;\n  images: ImageInfo[];\n  currentIndex: number;\n  imageReferrerpolicy?: TdImageViewerProps['imageReferrerpolicy'];\n};\n\nfunction OneImagePreview({\n  image,\n  classPrefix,\n  imageReferrerpolicy,\n}: {\n  image: ImageInfo;\n  classPrefix: string;\n  imageReferrerpolicy?: TdImageViewerProps['imageReferrerpolicy'];\n}) {\n  const { previewUrl } = useImagePreviewUrl(image.thumbnail || image.mainImage);\n  return (\n    <Image\n      alt=\"\"\n      error=\"\"\n      src={previewUrl}\n      className={`${classPrefix}-image-viewer__header-img`}\n      referrerpolicy={imageReferrerpolicy}\n    />\n  );\n}\n\nconst ImageViewerHeader = (props: ImageViewerHeaderProps) => {\n  const { classPrefix } = useConfig();\n  const { images, currentIndex, onImgClick, imageReferrerpolicy } = props;\n\n  const [isExpand, setIsExpand] = useState(true);\n\n  // 宽高比 16:9 按比例偏移\n  const transStyle = { transform: `translateX(calc(-${currentIndex} * (40px / 9 * 16 + 4px)))` };\n\n  return (\n    <div\n      className={classNames(`${classPrefix}-image-viewer__modal-header`, {\n        [`${classPrefix}-is-show`]: isExpand,\n      })}\n    >\n      <ImageModalIcon\n        name=\"chevron-down\"\n        className={`${classPrefix}-image-viewer__header-pre-bt`}\n        onClick={() => setIsExpand(!isExpand)}\n      />\n      <div className={`${classPrefix}-image-viewer__header-prev`}>\n        <div className={`${classPrefix}-image-viewer__header-trans`} style={transStyle}>\n          {images.map((image, index) => (\n            <div\n              key={index}\n              className={classNames(`${classPrefix}-image-viewer__header-box`, {\n                [`${classPrefix}-is-active`]: index === currentIndex,\n              })}\n              onClick={() => onImgClick(index, { trigger: 'current' })}\n            >\n              <OneImagePreview image={image} classPrefix={classPrefix} imageReferrerpolicy={imageReferrerpolicy} />\n            </div>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport interface ImageModalProps {\n  title?: TNode;\n  visible: boolean;\n  closeOnOverlay: boolean;\n  showOverlay: boolean;\n  index: number;\n  defaultIndex?: number;\n  images: ImageInfo[];\n  imageScale: ImageScale;\n  viewerScale: ImageViewerScale;\n  zIndex: number;\n  isMini: boolean;\n  draggable: boolean;\n  closeBtn: boolean | TNode;\n  closeOnEscKeydown?: boolean;\n  imageReferrerpolicy?: ImageViewerProps['imageReferrerpolicy'];\n  onClose: (context: { trigger: 'close-btn' | 'overlay' | 'esc'; e: MouseEvent<HTMLElement> | KeyboardEvent }) => void;\n  onOpen: () => void;\n  onDownload?: TdImageViewerProps['onDownload'];\n  onIndexChange?: (index: number, context: { trigger: 'prev' | 'next' }) => void;\n}\n\n// 弹窗基础组件\nexport const ImageModal: React.FC<ImageModalProps> = (props) => {\n  const {\n    closeOnOverlay,\n    showOverlay = true,\n    zIndex,\n    images,\n    isMini,\n    imageScale,\n    viewerScale,\n    closeBtn,\n    draggable,\n    visible,\n    title,\n    closeOnEscKeydown,\n    imageReferrerpolicy,\n    onOpen,\n    onClose,\n    onDownload,\n    ...resProps\n  } = props;\n  const { classPrefix } = useConfig();\n  const [locale, t] = useLocaleReceiver('imageViewer');\n\n  if (resProps.index === undefined) delete resProps.index;\n  const { index, next, prev, setIndex } = useIndex(resProps, images);\n  const { rotateZ, onResetRotate, onRotate } = useRotate();\n  const { scale, onZoom, onZoomOut, onResetScale } = useScale(imageScale, visible);\n  const { mirror, onResetMirror, onMirror } = useMirror();\n\n  const onReset = useCallback(() => {\n    onResetScale();\n    onResetRotate();\n    onResetMirror();\n  }, [onResetMirror, onResetScale, onResetRotate]);\n\n  const onKeyDown = useCallback(\n    (event) => {\n      switch (event.key) {\n        case 'ArrowRight':\n          return next();\n        case 'ArrowLeft':\n          return prev();\n        case 'ArrowUp':\n          return onZoom();\n        case 'ArrowDown':\n          return onZoomOut();\n        case 'Escape':\n          return closeOnEscKeydown && onClose?.({ trigger: 'esc', e: event });\n      }\n    },\n    [next, onClose, prev, onZoom, onZoomOut, closeOnEscKeydown],\n  );\n\n  useEffect(() => {\n    document.addEventListener('keydown', onKeyDown);\n    return () => document.removeEventListener('keydown', onKeyDown);\n  }, [onKeyDown]);\n\n  useEffect(() => {\n    onReset();\n  }, [index, onReset]);\n\n  if (!isArray(images) || images.length < 1) return null;\n\n  const currentImage: ImageInfo = images[index];\n\n  const tipText = {\n    mirror: t(locale.mirrorTipText),\n    rotate: t(locale.rotateTipText),\n    originalSize: t(locale.originalSizeTipText),\n  };\n  const errorText = t(locale.errorText);\n\n  if (isMini) {\n    return (\n      <ImageModalMini\n        visible={visible}\n        draggable={draggable}\n        index={index}\n        images={images}\n        imageScale={imageScale}\n        viewerScale={viewerScale}\n        rotateZ={rotateZ}\n        zIndex={zIndex}\n        currentImage={currentImage}\n        mirror={mirror}\n        scale={scale}\n        title={title}\n        errorText={errorText}\n        tipText={tipText}\n        imageReferrerpolicy={imageReferrerpolicy}\n        prev={prev}\n        next={next}\n        onMirror={onMirror}\n        onRotate={onRotate}\n        onZoom={onZoom}\n        onZoomOut={onZoomOut}\n        onReset={onReset}\n        onClose={onClose}\n      />\n    );\n  }\n\n  // boolean控制显示，tnode直接展示\n  let closeNode: TNode = closeBtn;\n  if (closeBtn === true) {\n    closeNode = (\n      <ImageModalIcon\n        name=\"close\"\n        size=\"24px\"\n        className={`${classPrefix}-image-viewer__modal-close-bt `}\n        onClick={(e: MouseEvent<HTMLElement>) => onClose && onClose({ trigger: 'close-btn', e })}\n      />\n    );\n  } else if (isFunction(closeBtn)) closeNode = closeBtn({ onClose, onOpen });\n\n  return (\n    <div\n      className={classNames(`${classPrefix}-image-viewer-preview-image`, {\n        [`${classPrefix}-is-hide`]: !visible,\n      })}\n      style={{ zIndex }}\n    >\n      {!!showOverlay && (\n        <div\n          className={`${classPrefix}-image-viewer__modal-mask`}\n          onClick={(e: MouseEvent<HTMLElement>) => closeOnOverlay && onClose?.({ trigger: 'overlay', e })}\n        />\n      )}\n      {images.length > 1 && (\n        <>\n          <ImageViewerHeader\n            images={images}\n            currentIndex={index}\n            onImgClick={setIndex}\n            imageReferrerpolicy={imageReferrerpolicy}\n          />\n          <div className={`${classPrefix}-image-viewer__modal-index`}>\n            <span>{title}</span>\n            {`${index + 1}/${images.length}`}\n          </div>\n          <ImageModalIcon\n            size=\"24px\"\n            name=\"chevron-left\"\n            className={`${classPrefix}-image-viewer__modal-prev-bt`}\n            onClick={prev}\n            disabled={index <= 0}\n          />\n          <ImageModalIcon\n            size=\"24px\"\n            name=\"chevron-right\"\n            className={`${classPrefix}-image-viewer__modal-next-bt`}\n            onClick={next}\n            disabled={index >= images.length - 1}\n          />\n        </>\n      )}\n      <ImageViewerUtils\n        scale={scale}\n        tipText={tipText}\n        currentImage={currentImage}\n        zIndex={zIndex + 1}\n        onZoom={onZoom}\n        onZoomOut={onZoomOut}\n        onDownload={onDownload}\n        onRotate={onRotate}\n        onMirror={onMirror}\n        onReset={onReset}\n      />\n      {closeNode}\n      <ImageModalItem\n        scale={scale}\n        rotateZ={rotateZ}\n        mirror={mirror}\n        preSrc={currentImage.thumbnail}\n        src={currentImage.mainImage}\n        errorText={errorText}\n        imageReferrerpolicy={imageReferrerpolicy}\n        isSvg={currentImage.isSvg}\n      />\n    </div>\n  );\n};\n"],"names":["ImageModalMiniContent","props","_useConfig","useConfig","classPrefix","React","createElement","className","ImageModalItem","rotateZ","scale","mirror","src","currentImage","mainImage","preSrc","thumbnail","errorText","imageReferrerpolicy","isSvg","ImageModalMini","visible","title","draggable","tipText","onZoomOut","onZoom","onClose","onRotate","onMirror","onReset","_useConfig2","footer","ImageViewerUtils","zIndex","Dialog","width","placement","mode","closeOnOverlayClick","cancelBtn","confirmBtn","header","_objectSpread","ImageError","_ref","_useGlobalIcon","useGlobalIcon","ImageErrorIcon","TdImageErrorIcon","size","_ref2","imgRef","useRef","svgRef","_useState","useState","_useState2","_slicedToArray","loaded","setLoaded","_useState3","_useState4","error","setError","imgStyle","transform","concat","display","_useImagePreviewUrl","useImagePreviewUrl","preSrcImagePreviewUrl","previewUrl","_useImagePreviewUrl2","mainImagePreviewUrl","displayRef","useMemo","_usePosition","usePosition","position","preImgStyle","boxStyle","createSvgShadow","_ref3","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","_element$classList","response","svgText","element","shadowRoot","container","svgElement","svgViewBox","viewBoxValues","svgViewBoxWidth","svgViewBoxHeight","bbox","calculatedViewBox","wrap","_context","prev","next","fetch","sent","ok","Error","statusText","text","current","innerHTML","classList","add","attachShadow","document","style","background","appendChild","querySelector","getAttribute","split","filter","v","map","parseFloat","height","getBBox","x","y","setAttribute","stop","_x","apply","arguments","useEffect","referrerPolicy","alt","ref","onLoad","onError","ROTATE_COUNT","ImageModalIcon","_ref4","onClick","disabled","isRange","name","label","_ref4$size","_useConfig3","Icons","useIconMap","Icon","classNames","_defineProperty","_ref5","onDownload","_useConfig4","_useGlobalIcon2","MirrorIcon","TdMirrorIcon","RotationIcon","TdRotationIcon","ImageIcon","TdImageIcon","TooltipLite","content","showShadow","rotate","largeNumberToFixed","String","originalSize","download","isFunction","downloadFile","OneImagePreview","_ref6","image","_useImagePreviewUrl3","Image","referrerpolicy","ImageViewerHeader","_useConfig5","images","currentIndex","onImgClick","_useState5","_useState6","isExpand","setIsExpand","transStyle","index","key","trigger","ImageModal","closeOnOverlay","_props$showOverlay","showOverlay","isMini","imageScale","viewerScale","closeBtn","closeOnEscKeydown","onOpen","resProps","_objectWithoutProperties","_excluded","_useConfig6","_useLocaleReceiver","useLocaleReceiver","_useLocaleReceiver2","locale","t","_useIndex","useIndex","setIndex","_useRotate","useRotate","onResetRotate","_useScale","useScale","onResetScale","_useMirror","useMirror","onResetMirror","useCallback","onKeyDown","event","e","addEventListener","removeEventListener","isArray","length","mirrorTipText","rotateTipText","originalSizeTipText","closeNode"],"mappings":"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"}