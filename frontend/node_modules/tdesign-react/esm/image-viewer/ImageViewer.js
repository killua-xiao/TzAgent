/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _slicedToArray } from '../_chunks/dep-48805ab8.js';
import React, { useState, useMemo } from 'react';
import { createPortal } from 'react-dom';
import { isFunction } from 'lodash-es';
import { I as ImageModal } from '../_chunks/dep-90b6cb7a.js';
import { imageViewerDefaultProps } from './defaultProps.js';
import useImageScale from './hooks/useImageScale.js';
import useList from './hooks/useList.js';
import useViewerScale from './hooks/useViewerScale.js';
import useControlled from '../hooks/useControlled.js';
import useDefaultProps from '../hooks/useDefaultProps.js';
import { c as canUseDocument } from '../_chunks/dep-3a09424a.js';
import useAttach from '../hooks/useAttach.js';
import '../_chunks/dep-026a4c6b.js';
import '../_chunks/dep-6b660ef0.js';
import '../_chunks/dep-cb0a3966.js';
import '../_chunks/dep-eca3a3de.js';
import '../_chunks/dep-a74cc5e4.js';
import '../_chunks/dep-e29214cb.js';
import 'classnames';
import 'tdesign-icons-react';
import '../_chunks/dep-46c9e4f5.js';
import '../_chunks/dep-b908e1fe.js';
import '../hooks/useConfig.js';
import '../config-provider/ConfigContext.js';
import '../locale/zh_CN.js';
import 'dayjs';
import '../_chunks/dep-3c9ab31a.js';
import '../hooks/useGlobalIcon.js';
import '../hooks/useImagePreviewUrl.js';
import '../_chunks/dep-f53c91cd.js';
import '../_chunks/dep-8918af14.js';
import '../image/index.js';
import '../image/Image.js';
import '../_chunks/dep-4450afc0.js';
import '../locale/LocalReceiver.js';
import '../config-provider/index.js';
import '../config-provider/ConfigProvider.js';
import '../config-provider/type.js';
import '../image/defaultProps.js';
import '../space/index.js';
import '../space/Space.js';
import 'react-is';
import '../_chunks/dep-1630b9b4.js';
import '../_chunks/dep-87d110df.js';
import '../space/defaultProps.js';
import '../space/style/index.js';
import '../space/type.js';
import '../image/style/index.js';
import '../tooltip/index.js';
import '../tooltip/Tooltip.js';
import '../popup/index.js';
import '../popup/Popup.js';
import 'react-transition-group';
import '../_util/ref.js';
import '../_util/isFragment.js';
import '../common/Portal.js';
import '../hooks/useLayoutEffect.js';
import '../hooks/useAnimation.js';
import '../hooks/useMutationObserver.js';
import '../hooks/useLatest.js';
import '../hooks/usePopper.js';
import '@popperjs/core';
import 'react-fast-compare';
import '../hooks/useWindowSize.js';
import '../popup/defaultProps.js';
import '../popup/hooks/useTrigger.js';
import '../_util/composeRefs.js';
import '../_util/listener.js';
import '../popup/utils/transition.js';
import '../_util/noop.js';
import '../popup/PopupPlugin.js';
import '../_util/react-render.js';
import '../common/PluginContainer.js';
import '../popup/style/index.js';
import '../popup/type.js';
import '../tooltip/defaultProps.js';
import '../tooltip/TooltipLite.js';
import '../hooks/useSwitch.js';
import '../hooks/usePersistFn.js';
import '../tooltip/style/index.js';
import '../tooltip/type.js';
import '../dialog/index.js';
import '../dialog/Dialog.js';
import '../hooks/useDeepEffect.js';
import '../hooks/useSetState.js';
import '../dialog/defaultProps.js';
import '../dialog/DialogCard.js';
import '../button/index.js';
import '../button/Button.js';
import '../hooks/useDomRefCallback.js';
import '../hooks/useRipple.js';
import '../_chunks/dep-c48e2ca1.js';
import '../loading/index.js';
import '../loading/Loading.js';
import '../loading/gradient.js';
import '../loading/defaultProps.js';
import '../loading/plugin.js';
import '../loading/style/index.js';
import '../loading/type.js';
import '../button/defaultProps.js';
import '../_util/parseTNode.js';
import '../button/style/index.js';
import '../button/type.js';
import '../dialog/hooks/useDialogDrag.js';
import '../hooks/useMouseEvent.js';
import '../dialog/hooks/useDialogEsc.js';
import '../dialog/hooks/useDialogPosition.js';
import '../dialog/hooks/useLockStyle.js';
import '../_chunks/dep-a3bde62f.js';
import '../dialog/utils.js';
import '../dialog/plugin.js';
import '../dialog/style/index.js';
import '../dialog/type.js';
import './hooks/useIconMap.js';
import './hooks/useIndex.js';
import './hooks/useMirror.js';
import './hooks/usePosition.js';
import './hooks/useRotate.js';
import './hooks/useScale.js';
import './utils.js';

var ImageViewer = function ImageViewer(originalProps) {
  var props = useDefaultProps(originalProps, imageViewerDefaultProps);
  var attach = props.attach,
    mode = props.mode,
    trigger = props.trigger,
    images = props.images,
    title = props.title,
    imageScaleD = props.imageScale,
    viewerScaleD = props.viewerScale;
  var imageViewerAttach = useAttach("imageViewer", attach);
  var _useControlled = useControlled(props, "visible", function (visible2, context) {
      var _props$onClose;
      !visible2 && (props === null || props === void 0 || (_props$onClose = props.onClose) === null || _props$onClose === void 0 ? void 0 : _props$onClose.call(props, context));
    }),
    _useControlled2 = _slicedToArray(_useControlled, 2),
    visible = _useControlled2[0],
    setVisible = _useControlled2[1];
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    visibled = _useState2[0],
    setVisibled = _useState2[1];
  var list = useList(images);
  var imageScale = useImageScale(imageScaleD);
  var viewerScale = useViewerScale(viewerScaleD);
  var isMini = mode === "modeless";
  var close = function close(context) {
    setVisible(false, context);
    setTimeout(function () {
      return setVisibled(false);
    }, 196);
  };
  var open = function open() {
    if (!images) return;
    setVisible(true, null);
    setVisibled(true);
  };
  var uiImage = isFunction(trigger) ? trigger({
    open: open,
    close: close,
    onOpen: open,
    onClose: close
  }) : trigger;
  var attachElement = useMemo(function () {
    if (!canUseDocument || !imageViewerAttach) return null;
    if (typeof imageViewerAttach === "string") {
      return document.querySelector(imageViewerAttach);
    }
    if (isFunction(imageViewerAttach)) {
      return imageViewerAttach();
    }
  }, [imageViewerAttach]);
  return /* @__PURE__ */React.createElement(React.Fragment, null, uiImage, (visibled || visible) && /*#__PURE__*/createPortal(/* @__PURE__ */React.createElement(ImageModal, {
    title: title,
    visible: visible,
    images: list,
    isMini: isMini,
    imageScale: imageScale,
    viewerScale: viewerScale,
    zIndex: props.zIndex,
    defaultIndex: props.defaultIndex,
    index: props.index,
    onIndexChange: props.onIndexChange,
    onDownload: props.onDownload,
    draggable: props.draggable,
    closeOnOverlay: props.closeOnOverlay,
    closeBtn: props.closeBtn,
    showOverlay: props.showOverlay,
    closeOnEscKeydown: props.closeOnEscKeydown,
    onClose: close,
    onOpen: open,
    imageReferrerpolicy: props.imageReferrerpolicy
  }), attachElement));
};
ImageViewer.displayName = "ImageViewer";

export { ImageViewer as default };
//# sourceMappingURL=ImageViewer.js.map
