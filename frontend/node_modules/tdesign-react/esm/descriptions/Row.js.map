{"version":3,"file":"Row.js","sources":["../../../components/descriptions/Row.tsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { TdDescriptionsItemProps } from './type';\nimport { LayoutEnum } from '../common';\nimport useConfig from '../hooks/useConfig';\nimport { DescriptionsContext } from './DescriptionsContext';\nimport { useLocaleReceiver } from '../locale/LocalReceiver';\n\nexport type RowProps = { row: TdDescriptionsItemProps[] };\n\nconst Row: React.FC<RowProps> = (props) => {\n  const { row } = props;\n\n  const { classPrefix } = useConfig();\n  const [locale, t] = useLocaleReceiver('descriptions');\n  const descriptionsContext = useContext(DescriptionsContext);\n\n  const COMPONENT_NAME = `${classPrefix}-descriptions`;\n\n  // label\n  const label = (node: TdDescriptionsItemProps, layout: LayoutEnum = 'horizontal', rowKey?: string) => {\n    const { span } = node;\n    const labelSpan = layout === 'horizontal' ? 1 : span;\n    return (\n      <td\n        key={rowKey}\n        colSpan={labelSpan}\n        className={`${COMPONENT_NAME}__label`}\n        style={descriptionsContext.labelStyle}\n      >\n        {node.label}\n        {descriptionsContext.colon && t(locale.colonText)}\n      </td>\n    );\n  };\n\n  // content\n  const content = (node: TdDescriptionsItemProps, layout: LayoutEnum = 'horizontal', rowKey?: string) => {\n    const { span } = node;\n    const contentSpan = span > 1 && layout === 'horizontal' ? span * 2 - 1 : span;\n    return (\n      <td\n        key={rowKey}\n        colSpan={contentSpan}\n        className={`${COMPONENT_NAME}__content`}\n        style={descriptionsContext.contentStyle}\n      >\n        {node.content}\n      </td>\n    );\n  };\n\n  // 总共有四种布局\n  // Layout horizontal vertical\n  // itemLayout horizontal vertical\n\n  const hh = () => (\n    <tr>\n      {row.map((node, i) => (\n        <React.Fragment key={i}>\n          {label(node)}\n          {content(node)}\n        </React.Fragment>\n      ))}\n    </tr>\n  );\n\n  const hv = () => (\n    <>\n      <tr>{row.map((node, i) => label(node, 'vertical', `top_${i}`))}</tr>\n      <tr>{row.map((node, i) => content(node, 'vertical', `bottom_${i}`))}</tr>\n    </>\n  );\n\n  const vh = () => (\n    <>\n      {row.map((node, i) => (\n        <tr key={i}>\n          {label(node)}\n          {content(node)}\n        </tr>\n      ))}\n    </>\n  );\n\n  const vv = () => (\n    <>\n      {row.map((node, i) => (\n        <React.Fragment key={i}>\n          <tr>{label(node)}</tr>\n          <tr>{content(node)}</tr>\n        </React.Fragment>\n      ))}\n    </>\n  );\n\n  if (descriptionsContext.layout === 'horizontal') {\n    if (descriptionsContext.itemLayout === 'horizontal') {\n      return hh();\n    }\n    return hv();\n  }\n  if (descriptionsContext.itemLayout === 'horizontal') {\n    return vh();\n  }\n  return vv();\n};\n\nRow.displayName = 'DescriptionsRow';\n\nexport default Row;\n"],"names":["Row","props","row","_useConfig","useConfig","classPrefix","_useLocaleReceiver","useLocaleReceiver","_useLocaleReceiver2","_slicedToArray","locale","t","descriptionsContext","useContext","DescriptionsContext","COMPONENT_NAME","label","node","layout","arguments","length","undefined","rowKey","span","labelSpan","React","createElement","key","colSpan","className","style","labelStyle","colon","colonText","content","contentSpan","contentStyle","hh","map","i","Fragment","hv","concat","vh","vv","itemLayout","displayName"],"mappings":"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"}