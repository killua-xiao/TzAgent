{"version":3,"file":"MultipleFlowList.js","sources":["../../../../components/upload/themes/MultipleFlowList.tsx"],"sourcesContent":["import React, { MouseEvent, useMemo, useState } from 'react';\nimport classNames from 'classnames';\nimport { isFunction, isObject } from 'lodash-es';\nimport {\n  BrowseIcon as TdBrowseIcon,\n  DeleteIcon as TdDeleteIcon,\n  CheckCircleFilledIcon as TdCheckCircleFilledIcon,\n  ErrorCircleFilledIcon as TdErrorCircleFilledIcon,\n  TimeFilledIcon as TdTimeFilledIcon,\n  FileExcelIcon as TdFileExcelIcon,\n  FilePdfIcon as TdFilePdfIcon,\n  FileWordIcon as TdFileWordIcon,\n  FilePowerpointIcon as TdFilePowerpointIcon,\n  FileIcon as TdFileIcon,\n  VideoIcon as TdVideoIcon,\n} from 'tdesign-icons-react';\nimport {\n  abridgeName,\n  returnFileSize,\n  IMAGE_REGEXP,\n  FILE_PDF_REGEXP,\n  FILE_EXCEL_REGEXP,\n  FILE_WORD_REGEXP,\n  FILE_PPT_REGEXP,\n  VIDEO_REGEXP,\n} from '@tdesign/common-js/upload/utils';\nimport useGlobalIcon from '../../hooks/useGlobalIcon';\nimport ImageViewer from '../../image-viewer';\nimport { CommonDisplayFileProps } from '../interface';\nimport TButton, { ButtonProps } from '../../button';\nimport { UploadFile, TdUploadProps } from '../type';\nimport useDrag, { UploadDragEvents } from '../hooks/useDrag';\nimport TLoading from '../../loading';\nimport Link from '../../link';\nimport parseTNode from '../../_util/parseTNode';\nimport Image from '../../image';\n\nexport interface ImageFlowListProps extends CommonDisplayFileProps {\n  uploadFiles?: (toFiles?: UploadFile[]) => void;\n  cancelUpload?: (context: { e: MouseEvent<HTMLElement>; file?: UploadFile }) => void;\n  dragEvents: UploadDragEvents;\n  disabled?: boolean;\n  isBatchUpload?: boolean;\n  draggable?: boolean;\n  showThumbnail?: boolean;\n  onPreview?: TdUploadProps['onPreview'];\n  uploadButton?: TdUploadProps['uploadButton'];\n  cancelUploadButton?: TdUploadProps['cancelUploadButton'];\n  showImageFileName?: boolean;\n}\n\nconst ImageFlowList = (props: ImageFlowListProps) => {\n  const { draggable = true, accept, showThumbnail, cancelUploadButton, uploadButton, onPreview } = props;\n  // locale 已经在 useUpload 中统一处理优先级\n  const { locale, uploading, disabled, displayFiles, classPrefix } = props;\n  const uploadPrefix = `${classPrefix}-upload`;\n\n  const [currentPreviewFile, setCurrentPreviewFile] = useState<UploadFile[]>([]);\n  const [previewIndex, setPreviewIndex] = useState(0);\n\n  const {\n    BrowseIcon,\n    DeleteIcon,\n    CheckCircleFilledIcon,\n    ErrorCircleFilledIcon,\n    TimeFilledIcon,\n    FileExcelIcon,\n    FilePdfIcon,\n    FileWordIcon,\n    FilePowerpointIcon,\n    FileIcon,\n    VideoIcon,\n  } = useGlobalIcon({\n    BrowseIcon: TdBrowseIcon,\n    DeleteIcon: TdDeleteIcon,\n    CheckCircleFilledIcon: TdCheckCircleFilledIcon,\n    ErrorCircleFilledIcon: TdErrorCircleFilledIcon,\n    TimeFilledIcon: TdTimeFilledIcon,\n    FileExcelIcon: TdFileExcelIcon,\n    FilePdfIcon: TdFilePdfIcon,\n    FileWordIcon: TdFileWordIcon,\n    FilePowerpointIcon: TdFilePowerpointIcon,\n    FileIcon: TdFileIcon,\n    VideoIcon: TdVideoIcon,\n  });\n\n  const drag = useDrag({ ...props.dragEvents, accept });\n\n  const uploadText = useMemo(() => {\n    if (uploading) return `${locale.progress.uploadingText}`;\n    return locale.triggerUploadText.normal;\n  }, [locale, uploading]);\n\n  const innerDragEvents = draggable\n    ? {\n        onDrop: drag.handleDrop,\n        onDragEnter: drag.handleDragenter,\n        onDragOver: drag.handleDragover,\n        onDragLeave: drag.handleDragleave,\n      }\n    : {};\n\n  const browseIconClick = ({\n    e,\n    index,\n    file,\n    viewFiles,\n  }: {\n    e: MouseEvent<HTMLDivElement>;\n    index: number;\n    file: UploadFile;\n    viewFiles: UploadFile[];\n  }) => {\n    setPreviewIndex(index);\n    setCurrentPreviewFile(viewFiles);\n    onPreview?.({ file, index, e });\n  };\n\n  const previewIndexChange = (index: number) => {\n    setPreviewIndex(index);\n  };\n\n  const closePreview = () => {\n    setCurrentPreviewFile([]);\n  };\n\n  const getStatusMap = () => {\n    const iconMap = {\n      success: <CheckCircleFilledIcon />,\n      fail: <ErrorCircleFilledIcon />,\n      progress: <TLoading />,\n      waiting: <TimeFilledIcon />,\n    };\n    const textMap = {\n      success: locale.progress?.successText,\n      fail: locale.progress?.failText,\n      progress: locale.progress?.uploadingText,\n      waiting: locale.progress?.waitingText,\n    };\n    return {\n      iconMap,\n      textMap,\n    };\n  };\n\n  const renderEmpty = () => (\n    <div className={`${uploadPrefix}__flow-empty`}>\n      {drag.dragActive ? locale.dragger.dragDropText : locale.dragger.clickAndDragText}\n    </div>\n  );\n\n  const renderImgItem = (file: UploadFile, index: number) => {\n    const { iconMap, textMap } = getStatusMap();\n    const fileName = props.abridgeName && file.name ? abridgeName(file.name, ...props.abridgeName) : file.name;\n    return (\n      <li className={`${uploadPrefix}__card-item`} key={file.name + index + file.percent + file.status}>\n        <div\n          className={classNames([\n            `${uploadPrefix}__card-content`,\n            { [`${classPrefix}-is-bordered`]: file.status !== 'waiting' },\n          ])}\n        >\n          {file.status === 'progress' && (\n            <div className={`${uploadPrefix}__card-status-wrap ${uploadPrefix}__${props.theme}-progress`}>\n              {iconMap[file.status as 'progress']}\n              <p>\n                {textMap[file.status as 'progress']}\n                {props.showUploadProgress && ` ${file.percent}%`}\n              </p>\n            </div>\n          )}\n          {file.status === 'fail' && (\n            <div className={`${uploadPrefix}__card-status-wrap ${uploadPrefix}__${props.theme}-fail`}>\n              {iconMap[file.status as 'fail']}\n              <p>{file.response?.error || textMap[file.status as 'fail']}</p>\n            </div>\n          )}\n          {(['waiting', 'success'].includes(file.status) || (!file.status && file.url)) && (\n            <Image\n              className={`${uploadPrefix}__card-image`}\n              fit=\"contain\"\n              src={file.url || file.raw}\n              error=\"\"\n              loading=\"\"\n            />\n          )}\n          <div className={`${uploadPrefix}__card-mask`}>\n            {(file.url || file.raw) && !['progress', 'fail'].includes(file.status) && (\n              <span className={`${uploadPrefix}__card-mask-item`}>\n                <BrowseIcon\n                  onClick={(event) => {\n                    const e = event.type ? event : event.e;\n                    browseIconClick({\n                      e,\n                      index,\n                      file,\n                      viewFiles: displayFiles,\n                    });\n                  }}\n                />\n                <span className={`${uploadPrefix}__card-mask-item-divider`}></span>\n              </span>\n            )}\n            {!disabled && (\n              <span\n                className={`${uploadPrefix}__card-mask-item ${uploadPrefix}__delete`}\n                onClick={(e) => props.onRemove({ e, index, file })}\n              >\n                <DeleteIcon />\n              </span>\n            )}\n          </div>\n        </div>\n        {props.showImageFileName && (\n          <p className={classNames([`${uploadPrefix}__card-name`, `${uploadPrefix}__flow-status`])}>\n            {['success', 'waiting'].includes(file.status) && iconMap[file.status]}\n            {fileName}\n          </p>\n        )}\n      </li>\n    );\n  };\n\n  const renderStatus = (file: UploadFile) => {\n    const { iconMap, textMap } = getStatusMap();\n    return (\n      <div className={`${uploadPrefix}__flow-status`}>\n        {iconMap[file.status]}\n        <span className={`${uploadPrefix}__${props.theme}-${file.status}`}>\n          {file.response?.error ? file.response.error || textMap[file.status] : textMap[file.status]}\n          {props.showUploadProgress && file.status === 'progress' ? ` ${file.percent || 0}%` : ''}\n        </span>\n      </div>\n    );\n  };\n\n  const renderNormalActionCol = (file: UploadFile, index: number) => (\n    <td>\n      <Link\n        theme=\"primary\"\n        hover=\"color\"\n        className={`${uploadPrefix}__delete`}\n        onClick={(e) => props.onRemove({ e, index, file })}\n      >\n        {locale?.triggerUploadText?.delete}\n      </Link>\n    </td>\n  );\n\n  function getFileThumbnailIcon(fileType: string) {\n    if (FILE_PDF_REGEXP.test(fileType)) {\n      return <FilePdfIcon />;\n    }\n    if (FILE_EXCEL_REGEXP.test(fileType)) {\n      return <FileExcelIcon />;\n    }\n    if (FILE_WORD_REGEXP.test(fileType)) {\n      return <FileWordIcon />;\n    }\n    if (FILE_PPT_REGEXP.test(fileType)) {\n      return <FilePowerpointIcon />;\n    }\n    if (VIDEO_REGEXP.test(fileType)) {\n      return <VideoIcon />;\n    }\n    return <FileIcon />;\n  }\n\n  function renderFileThumbnail(file: UploadFile) {\n    if (!file || (!file.raw && file.url)) return null;\n    const fileType = file.raw.type;\n    const className = `${uploadPrefix}__file-thumbnail`;\n    if (IMAGE_REGEXP.test(fileType) && (file.url || file.raw)) {\n      return (\n        <Image\n          className={className}\n          src={file.url || file.raw}\n          fit=\"scale-down\"\n          error=\"\"\n          loading=\"\"\n          onClick={(e) => {\n            e.preventDefault();\n            browseIconClick({\n              e,\n              index: 0,\n              file,\n              viewFiles: [file],\n            });\n          }}\n        />\n      );\n    }\n    return <div className={className}>{getFileThumbnailIcon(fileType)}</div>;\n  }\n\n  // batchUpload action col\n  const renderBatchActionCol = (index: number) =>\n    // 第一行数据才需要合并单元格\n    index === 0 ? (\n      <td rowSpan={displayFiles.length} className={`${uploadPrefix}__flow-table__batch-row`}>\n        <Link\n          theme=\"primary\"\n          hover=\"color\"\n          className={`${uploadPrefix}__delete`}\n          onClick={(e) => props.onRemove({ e, index: -1, file: undefined })}\n        >\n          {locale?.triggerUploadText?.delete}\n        </Link>\n      </td>\n    ) : null;\n\n  const renderFileList = () => {\n    if (props.fileListDisplay === null) return null;\n    if (props.fileListDisplay) {\n      return parseTNode(props.fileListDisplay, {\n        cancelUpload: props.cancelUpload,\n        uploadFiles: props.uploadFiles,\n        onPreview: props.onPreview,\n        onRemove: props.onRemove,\n        toUploadFiles: props.toUploadFiles,\n        sizeOverLimitMessage: props.sizeOverLimitMessage,\n        locale: props.locale,\n        files: displayFiles,\n        dragEvents: innerDragEvents,\n      });\n    }\n    return (\n      <table className={`${uploadPrefix}__flow-table`} {...innerDragEvents}>\n        <thead>\n          <tr>\n            <th>{locale.file?.fileNameText}</th>\n            <th>{locale.file?.fileSizeText}</th>\n            <th>{locale.file?.fileStatusText}</th>\n            {disabled ? null : <th>{locale.file?.fileOperationText}</th>}\n          </tr>\n        </thead>\n        <tbody>\n          {!displayFiles.length && (\n            <tr>\n              <td colSpan={4}>{renderEmpty()}</td>\n            </tr>\n          )}\n          {displayFiles.map((file, index) => {\n            // 合并操作出现条件为：当前为合并上传模式且列表内没有待上传文件\n            const showBatchUploadAction = props.isBatchUpload;\n            const deleteNode =\n              showBatchUploadAction && displayFiles.every((item) => item.status === 'success' || !item.status)\n                ? renderBatchActionCol(index)\n                : renderNormalActionCol(file, index);\n            const fileName = props.abridgeName?.length ? abridgeName(file.name, ...props.abridgeName) : file.name;\n            const thumbnailNode = showThumbnail ? (\n              <div className={`${uploadPrefix}__file-info`}>\n                {renderFileThumbnail(file)}\n                {fileName}\n              </div>\n            ) : (\n              fileName\n            );\n            const fileNameNode = file.url ? (\n              <Link href={file.url} target=\"_blank\" hover=\"color\">\n                {thumbnailNode}\n              </Link>\n            ) : (\n              thumbnailNode\n            );\n            return (\n              <tr key={file.name + index}>\n                <td className={`${uploadPrefix}__file-name`}>{fileNameNode}</td>\n                <td>{returnFileSize(file.size)}</td>\n                <td>{renderStatus(file)}</td>\n                {disabled ? null : deleteNode}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    );\n  };\n\n  const renderImageList = () => {\n    if (props.fileListDisplay) {\n      return parseTNode(props.fileListDisplay, {\n        ...props,\n        files: displayFiles,\n        dragEvents: innerDragEvents,\n      });\n    }\n    return (\n      <ul className={`${uploadPrefix}__card clearfix`}>\n        {displayFiles.map((file, index) => renderImgItem(file, index))}\n      </ul>\n    );\n  };\n\n  const renderCancelUploadButton = () => {\n    if (cancelUploadButton === null) return null;\n    if (isFunction(cancelUploadButton)) return parseTNode(cancelUploadButton);\n    const cancelButtonProps = (isObject(cancelUploadButton) ? cancelUploadButton : undefined) as ButtonProps;\n    return (\n      <TButton\n        theme=\"default\"\n        disabled={disabled || !uploading}\n        className={`${uploadPrefix}__cancel`}\n        onClick={(e) => props.cancelUpload?.({ e })}\n        {...cancelButtonProps}\n      >\n        {locale?.cancelUploadText}\n      </TButton>\n    );\n  };\n\n  const renderUploadButton = () => {\n    if (uploadButton === null) return null;\n    if (isFunction(uploadButton)) return parseTNode(uploadButton);\n    const uploadButtonProps = (isObject(uploadButton) ? uploadButton : undefined) as ButtonProps;\n    return (\n      <TButton\n        disabled={disabled || uploading || !displayFiles.length}\n        theme=\"primary\"\n        loading={uploading}\n        className={`${uploadPrefix}__continue`}\n        onClick={() => props.uploadFiles?.()}\n        {...uploadButtonProps}\n      >\n        {uploadText}\n      </TButton>\n    );\n  };\n\n  const cardClassName = `${uploadPrefix}__flow-card-area`;\n  return (\n    <div className={`${uploadPrefix}__flow ${uploadPrefix}__flow-${props.theme}`}>\n      <div className={`${uploadPrefix}__flow-op`}>\n        {props.children}\n        {props.placeholder && (\n          <small className={`${uploadPrefix}__flow-placeholder ${uploadPrefix}__placeholder`}>\n            {props.placeholder}\n          </small>\n        )}\n      </div>\n\n      {props.theme === 'image-flow' && (\n        <div className={cardClassName} {...innerDragEvents}>\n          {displayFiles.length ? renderImageList() : renderEmpty()}\n        </div>\n      )}\n\n      {props.theme === 'file-flow' &&\n        (displayFiles.length ? (\n          renderFileList()\n        ) : (\n          <div className={cardClassName} {...innerDragEvents}>\n            {renderEmpty()}\n          </div>\n        ))}\n\n      {!props.autoUpload && (\n        <div className={`${uploadPrefix}__flow-bottom`}>\n          {renderCancelUploadButton()}\n\n          {renderUploadButton()}\n        </div>\n      )}\n\n      <ImageViewer\n        images={currentPreviewFile.map((t) => t.url || t.raw)}\n        visible={!!currentPreviewFile.length}\n        onClose={closePreview}\n        index={previewIndex}\n        onIndexChange={previewIndexChange}\n        {...props.imageViewerProps}\n      ></ImageViewer>\n    </div>\n  );\n};\n\nImageFlowList.displayName = 'ImageFlowList';\n\nexport default ImageFlowList;\n"],"names":["ImageFlowList","props","_props$draggable","draggable","accept","showThumbnail","cancelUploadButton","uploadButton","onPreview","locale","uploading","disabled","displayFiles","classPrefix","uploadPrefix","_useState","useState","_useState2","_slicedToArray","currentPreviewFile","setCurrentPreviewFile","_useState3","_useState4","previewIndex","setPreviewIndex","_useGlobalIcon","useGlobalIcon","BrowseIcon","TdBrowseIcon","DeleteIcon","TdDeleteIcon","CheckCircleFilledIcon","TdCheckCircleFilledIcon","ErrorCircleFilledIcon","TdErrorCircleFilledIcon","TimeFilledIcon","TdTimeFilledIcon","FileExcelIcon","TdFileExcelIcon","FilePdfIcon","TdFilePdfIcon","FileWordIcon","TdFileWordIcon","FilePowerpointIcon","TdFilePowerpointIcon","FileIcon","TdFileIcon","VideoIcon","TdVideoIcon","drag","useDrag","_objectSpread","dragEvents","uploadText","useMemo","concat","progress","uploadingText","triggerUploadText","normal","innerDragEvents","onDrop","handleDrop","onDragEnter","handleDragenter","onDragOver","handleDragover","onDragLeave","handleDragleave","browseIconClick","e","_ref","index","file","viewFiles","previewIndexChange","closePreview","getStatusMap","_locale$progress","_locale$progress2","_locale$progress3","_locale$progress4","iconMap","success","fail","TLoading","waiting","textMap","successText","failText","waitingText","renderEmpty","React","createElement","className","dragActive","dragger","dragDropText","clickAndDragText","renderImgItem","_file$response","_getStatusMap","fileName","abridgeName","name","apply","_toConsumableArray","key","percent","status","classNames","_defineProperty","theme","showUploadProgress","response","error","includes","url","Image","fit","src","raw","loading","onClick","event","type","onRemove","showImageFileName","renderStatus","_file$response2","_getStatusMap2","renderNormalActionCol","_locale$triggerUpload","Link","hover","getFileThumbnailIcon","fileType","FILE_PDF_REGEXP","test","FILE_EXCEL_REGEXP","FILE_WORD_REGEXP","FILE_PPT_REGEXP","VIDEO_REGEXP","renderFileThumbnail","IMAGE_REGEXP","preventDefault","renderBatchActionCol","_locale$triggerUpload2","rowSpan","length","renderFileList","_locale$file","_locale$file2","_locale$file3","_locale$file4","fileListDisplay","parseTNode","cancelUpload","uploadFiles","toUploadFiles","sizeOverLimitMessage","files","fileNameText","fileSizeText","fileStatusText","fileOperationText","colSpan","map","_props$abridgeName","showBatchUploadAction","isBatchUpload","deleteNode","every","item","thumbnailNode","fileNameNode","href","target","returnFileSize","size","renderImageList","renderCancelUploadButton","isFunction","cancelButtonProps","isObject","TButton","_props$cancelUpload","call","cancelUploadText","renderUploadButton","uploadButtonProps","_props$uploadFiles","cardClassName","children","placeholder","autoUpload","ImageViewer","images","t","visible","onClose","onIndexChange","imageViewerProps","displayName"],"mappings":"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"}