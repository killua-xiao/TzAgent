{"version":3,"file":"CollapsePanel.js","sources":["../../../components/collapse/CollapsePanel.tsx"],"sourcesContent":["import React, { useRef, useEffect, MouseEvent } from 'react';\nimport classnames from 'classnames';\nimport { CSSTransition } from 'react-transition-group';\nimport { useCollapseContext } from './CollapseContext';\nimport FakeArrow from '../common/FakeArrow';\nimport useConfig from '../hooks/useConfig';\nimport { TdCollapsePanelProps } from './type';\nimport { StyledProps } from '../common';\nimport { collapsePanelDefaultProps } from './defaultProps';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\nexport interface CollapsePanelProps extends TdCollapsePanelProps, StyledProps {\n  children?: React.ReactNode;\n  index?: number;\n}\n\nconst CollapsePanel: React.FC<CollapsePanelProps> = (props) => {\n  const {\n    value,\n    disabled,\n    destroyOnCollapse,\n    expandIcon,\n    className,\n    style,\n    header,\n    headerRightContent,\n    children,\n    index,\n  } = useDefaultProps<CollapsePanelProps>(props, collapsePanelDefaultProps);\n  const {\n    disabled: disableAll,\n    defaultExpandAll,\n    expandIconPlacement,\n    expandOnRowClick,\n    expandIcon: expandIconAll,\n    updateCollapseValue,\n    collapseValue,\n  } = useCollapseContext();\n\n  const { classPrefix } = useConfig();\n  const componentName = `${classPrefix}-collapse-panel`;\n  const innerValue = value || index;\n  const finalExpandIcon = (expandIcon === undefined ? expandIconAll : expandIcon) || null;\n  const headRef = useRef(null);\n  const iconRef = useRef(null);\n  const contentRef = useRef<HTMLDivElement>(null);\n  const bodyRef = useRef<HTMLDivElement>(null);\n  const isDisabled = disabled || !!disableAll;\n\n  useEffect(() => {\n    if (defaultExpandAll) {\n      updateCollapseValue(innerValue);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const isActive = Array.isArray(collapseValue) ? collapseValue.includes(innerValue) : collapseValue === innerValue;\n\n  const classes = classnames(\n    componentName,\n    {\n      [`${classPrefix}-is-disabled`]: isDisabled,\n    },\n    className,\n  );\n\n  const handleClick = (e: MouseEvent) => {\n    const canExpand = (expandOnRowClick && e.currentTarget === headRef.current) || e.currentTarget === iconRef.current;\n\n    if (canExpand && !isDisabled) {\n      updateCollapseValue(innerValue, { e });\n    }\n    e.stopPropagation();\n  };\n\n  const renderIcon = () => {\n    let iconNode = null;\n    if (React.isValidElement(finalExpandIcon)) {\n      iconNode = finalExpandIcon;\n    } else if (finalExpandIcon) {\n      iconNode = <FakeArrow className={classnames(`${componentName}__icon--default`)} />;\n    }\n    return (\n      iconNode && (\n        <div\n          className={`${componentName}__icon ${componentName}__icon--${expandIconPlacement} ${\n            isActive ? `${componentName}__icon--active` : ''\n          }`}\n          ref={iconRef}\n          onClick={handleClick}\n        >\n          {iconNode}\n        </div>\n      )\n    );\n  };\n\n  const renderHeader = () => {\n    const cls = [\n      `${componentName}__header`,\n      {\n        [`${classPrefix}-is-clickable`]: expandOnRowClick && !isDisabled,\n      },\n    ];\n    return (\n      <div ref={headRef} className={classnames(cls)} onClick={handleClick}>\n        {expandIconPlacement === 'left' && renderIcon()}\n        {header}\n        <div className={`${componentName}__header--blank`}></div>\n        {headerRightContent}\n        {expandIconPlacement === 'right' && renderIcon()}\n      </div>\n    );\n  };\n\n  const renderBody = () => {\n    const transitionCallbacks = {\n      onEnter: () => {\n        bodyRef.current.style.height = `${contentRef?.current.clientHeight}px`;\n      },\n      onEntered: () => {\n        bodyRef.current.style.height = 'auto';\n      },\n      onExit: () => {\n        bodyRef.current.style.height = `${contentRef?.current.clientHeight}px`;\n      },\n      onExiting: () => {\n        bodyRef.current.style.height = '0px';\n      },\n    };\n    return (\n      <CSSTransition\n        in={isActive}\n        appear\n        timeout={300}\n        nodeRef={bodyRef}\n        unmountOnExit={destroyOnCollapse}\n        {...transitionCallbacks}\n      >\n        <div\n          style={{ height: 0 }}\n          className={classnames(`${componentName}__body`, `${classPrefix}-slide-down-enter-active`, {\n            [`${componentName}__body--collapsed`]: !isActive,\n          })}\n          ref={bodyRef}\n        >\n          <div className={`${componentName}__content`} ref={contentRef}>\n            {children}\n          </div>\n        </div>\n      </CSSTransition>\n    );\n  };\n\n  return (\n    <div className={classes} style={{ ...style }}>\n      <div className={`${componentName}__wrapper`}>\n        {renderHeader()}\n        {renderBody()}\n      </div>\n    </div>\n  );\n};\n\nCollapsePanel.displayName = 'CollapsePanel';\n\nexport default CollapsePanel;\n"],"names":["CollapsePanel","props","_useDefaultProps","useDefaultProps","collapsePanelDefaultProps","value","disabled","destroyOnCollapse","expandIcon","className","style","header","headerRightContent","children","index","_useCollapseContext","useCollapseContext","disableAll","defaultExpandAll","expandIconPlacement","expandOnRowClick","expandIconAll","updateCollapseValue","collapseValue","_useConfig","useConfig","classPrefix","componentName","innerValue","finalExpandIcon","headRef","useRef","iconRef","contentRef","bodyRef","isDisabled","useEffect","isActive","Array","isArray","includes","classes","classnames","_defineProperty","concat","handleClick","e","canExpand","currentTarget","current","stopPropagation","renderIcon","iconNode","React","isValidElement","createElement","FakeArrow","ref","onClick","renderHeader","cls","renderBody","transitionCallbacks","onEnter","height","clientHeight","onEntered","onExit","onExiting","CSSTransition","_objectSpread","appear","timeout","nodeRef","unmountOnExit","displayName"],"mappings":"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"}