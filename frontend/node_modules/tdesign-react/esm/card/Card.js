/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-cb0a3966.js';
import React, { forwardRef } from 'react';
import classNames from 'classnames';
import { Loading } from '../loading/index.js';
import useConfig from '../hooks/useConfig.js';
import useCommonClassName from '../hooks/useCommonClassName.js';
import { cardDefaultProps } from './defaultProps.js';
import useDefaultProps from '../hooks/useDefaultProps.js';
import '../_chunks/dep-eca3a3de.js';
import '../loading/Loading.js';
import '../_chunks/dep-48805ab8.js';
import '../_chunks/dep-026a4c6b.js';
import '../_chunks/dep-3a09424a.js';
import 'lodash-es';
import '../common/Portal.js';
import 'react-dom';
import '../hooks/useLayoutEffect.js';
import '../loading/gradient.js';
import '../_chunks/dep-c48e2ca1.js';
import '../_chunks/dep-1630b9b4.js';
import '../_chunks/dep-87d110df.js';
import '../_chunks/dep-6b660ef0.js';
import '../hooks/useDomRefCallback.js';
import '../loading/defaultProps.js';
import '../config-provider/ConfigContext.js';
import '../locale/zh_CN.js';
import '../_chunks/dep-e29214cb.js';
import 'dayjs';
import '../_chunks/dep-3c9ab31a.js';
import '../loading/plugin.js';
import '../_util/react-render.js';
import '../_chunks/dep-a74cc5e4.js';
import '../common/PluginContainer.js';
import '../config-provider/index.js';
import '../config-provider/ConfigProvider.js';
import '../config-provider/type.js';
import '../loading/style/index.js';
import '../loading/type.js';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var Card = /*#__PURE__*/forwardRef(function (props, ref) {
  var _props$children;
  var _useDefaultProps = useDefaultProps(props, cardDefaultProps),
    actions = _useDefaultProps.actions,
    avatar = _useDefaultProps.avatar,
    bordered = _useDefaultProps.bordered,
    className = _useDefaultProps.className,
    cover = _useDefaultProps.cover,
    description = _useDefaultProps.description,
    footer = _useDefaultProps.footer,
    header = _useDefaultProps.header,
    headerBordered = _useDefaultProps.headerBordered,
    hoverShadow = _useDefaultProps.hoverShadow,
    loading = _useDefaultProps.loading,
    shadow = _useDefaultProps.shadow,
    size = _useDefaultProps.size,
    style = _useDefaultProps.style,
    subtitle = _useDefaultProps.subtitle,
    title = _useDefaultProps.title,
    theme = _useDefaultProps.theme,
    status = _useDefaultProps.status,
    loadingProps = _useDefaultProps.loadingProps,
    bodyClassName = _useDefaultProps.bodyClassName,
    bodyStyle = _useDefaultProps.bodyStyle,
    footerClassName = _useDefaultProps.footerClassName,
    footerStyle = _useDefaultProps.footerStyle,
    headerClassName = _useDefaultProps.headerClassName,
    headerStyle = _useDefaultProps.headerStyle;
  var children = (_props$children = props.children) !== null && _props$children !== void 0 ? _props$children : props.content;
  var _useConfig = useConfig(),
    classPrefix = _useConfig.classPrefix;
  var commonClassNames = useCommonClassName();
  var isPoster2 = theme === "poster2";
  var cardClass = classNames("".concat(classPrefix, "-card"), className, _defineProperty(_defineProperty(_defineProperty(_defineProperty({}, commonClassNames.SIZE.small, size === "small"), "".concat(classPrefix, "-card--bordered"), bordered), "".concat(classPrefix, "-card--shadow"), shadow), "".concat(classPrefix, "-card--shadow-hover"), hoverShadow));
  var showHeader = header || title || subtitle || description || avatar || actions && !isPoster2 || status && isPoster2;
  var headerClass = classNames(headerClassName, _defineProperty(_defineProperty({}, "".concat(classPrefix, "-card__header"), showHeader), "".concat(classPrefix, "-card__title--bordered"), headerBordered));
  var titleClass = classNames(_defineProperty({}, "".concat(classPrefix, "-card__title"), title));
  var subtitleClass = classNames(_defineProperty({}, "".concat(classPrefix, "-card__subtitle"), subtitle));
  var actionClass = classNames(_defineProperty({}, "".concat(classPrefix, "-card__actions"), actions));
  var footerClass = classNames(footerClassName, _defineProperty({}, "".concat(classPrefix, "-card__footer"), footer));
  var coverClass = classNames(_defineProperty({}, "".concat(classPrefix, "-card__cover"), cover));
  var avatarClass = classNames(_defineProperty({}, "".concat(classPrefix, "-card__avatar"), avatar));
  var bodyClass = classNames(bodyClassName, _defineProperty({}, "".concat(classPrefix, "-card__body"), children));
  var descriptionClass = classNames(_defineProperty({}, "".concat(classPrefix, "-card__description"), description));
  var renderTitle = title ? /* @__PURE__ */React.createElement("div", {
    className: titleClass
  }, title) : null;
  var renderSubtitle = subtitle ? /* @__PURE__ */React.createElement("div", {
    className: subtitleClass
  }, subtitle) : null;
  var renderDescription = description ? /* @__PURE__ */React.createElement("p", {
    className: descriptionClass
  }, description) : null;
  var renderAvatar = avatar && /* @__PURE__ */React.createElement("div", {
    className: avatarClass
  }, avatar);
  var renderHeaderActions = actions && !isPoster2 && /* @__PURE__ */React.createElement("div", {
    className: actionClass
  }, actions);
  var renderFooterActions = actions && isPoster2 && /* @__PURE__ */React.createElement("div", {
    className: actionClass
  }, actions);
  var renderStatus = status && isPoster2 && /* @__PURE__ */React.createElement("div", {
    className: actionClass
  }, status);
  var renderHeader = function renderHeader() {
    if (header) {
      return /* @__PURE__ */React.createElement("div", {
        className: headerClass,
        style: headerStyle
      }, header);
    }
    return /* @__PURE__ */React.createElement("div", {
      className: headerClass,
      style: headerStyle
    }, /* @__PURE__ */React.createElement("div", {
      className: "".concat(classPrefix, "-card__header-wrapper")
    }, renderAvatar, /* @__PURE__ */React.createElement("div", null, renderTitle, renderSubtitle, renderDescription)), renderHeaderActions, renderStatus);
  };
  var renderCover = cover ? /* @__PURE__ */React.createElement("div", {
    className: coverClass
  }, typeof cover === "string" ? /* @__PURE__ */React.createElement("img", {
    src: cover,
    alt: ""
  }) : cover) : null;
  var renderChildren = children && /* @__PURE__ */React.createElement("div", {
    className: bodyClass,
    style: bodyStyle
  }, children);
  var renderFooter = footer && /* @__PURE__ */React.createElement("div", {
    className: footerClass,
    style: footerStyle
  }, /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-card__footer-wrapper")
  }, footer), renderFooterActions);
  var card = /* @__PURE__ */React.createElement(React.Fragment, null, showHeader ? renderHeader() : null, renderCover, renderChildren, renderFooter);
  var childrenNode = null;
  if (!Reflect.has(props, "loading")) {
    childrenNode = card;
  } else if (/*#__PURE__*/React.isValidElement(loading)) {
    childrenNode = /*#__PURE__*/React.cloneElement(loading, null, card);
  } else {
    childrenNode = /* @__PURE__ */React.createElement(Loading, _objectSpread(_objectSpread({}, loadingProps), {}, {
      loading: !!loading
    }), card);
  }
  return /* @__PURE__ */React.createElement("div", {
    ref: ref,
    className: cardClass,
    style: style
  }, childrenNode);
});
Card.displayName = "Card";

export { Card as default };
//# sourceMappingURL=Card.js.map
