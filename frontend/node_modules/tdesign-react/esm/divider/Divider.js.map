{"version":3,"file":"Divider.js","sources":["../../../components/divider/Divider.tsx"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport useConfig from '../hooks/useConfig';\nimport { StyledProps } from '../common';\nimport { TdDividerProps } from './type';\nimport { dividerDefaultProps } from './defaultProps';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\n/**\n * Divider 组件支持的属性。\n */\nexport interface DividerProps extends TdDividerProps, StyledProps {\n  /**\n   * 文本内容\n   */\n  children?: React.ReactNode;\n}\n\n/**\n * 分割线组件\n */\nconst Divider: React.FC<DividerProps> = (props) => {\n  const { layout, dashed, align, className, style, children, content, ...otherDividerProps } = useDefaultProps(\n    props,\n    dividerDefaultProps,\n  );\n\n  const { classPrefix } = useConfig();\n  const childrenNode = content || children;\n\n  const showText = layout !== 'vertical' && !!childrenNode;\n\n  const dividerClassNames = classNames(`${classPrefix}-divider`, className, {\n    [`${classPrefix}-divider--${layout}`]: layout,\n    [`${classPrefix}-divider--dashed`]: !!dashed,\n    [`${classPrefix}-divider--with-text`]: showText,\n    [`${classPrefix}-divider--with-text-${align}`]: showText,\n  });\n\n  return (\n    <div {...otherDividerProps} className={dividerClassNames} style={style}>\n      {showText ? <span className={`${classPrefix}-divider__inner-text`}>{childrenNode}</span> : null}\n    </div>\n  );\n};\n\nDivider.displayName = 'Divider';\n\nexport default Divider;\n"],"names":["Divider","props","_useDefaultProps","useDefaultProps","dividerDefaultProps","layout","dashed","align","className","style","children","content","otherDividerProps","_objectWithoutProperties","_excluded","_useConfig","useConfig","classPrefix","childrenNode","showText","dividerClassNames","classNames","concat","_defineProperty","React","createElement","_objectSpread","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAqBA,IAAMA,OAAA,GAAkC,SAAlCA,OAAAA,CAAmCC,KAAU,EAAA;AAC3C,EAAA,IAAAC,gBAAA,GAAuFC,eAAA,CAC3FF,KAAA,EACAG,mBACF,CAAA;IAHQC,0BAAAA;IAAQC,MAAQ,GAAAJ,gBAAA,CAARI,MAAQ;IAAAC,KAAA,GAAAL,gBAAA,CAAAK,KAAA;IAAOC,6BAAAA;IAAWC,KAAO,GAAAP,gBAAA,CAAPO,KAAO;IAAAC,QAAA,GAAAR,gBAAA,CAAAQ,QAAA;IAAUC,OAAY,GAAAT,gBAAA,CAAZS,OAAY;AAAAC,IAAAA,iBAAA,GAAAC,wBAAA,CAAAX,gBAAA,EAAAY,SAAA,CAAA,CAAA;AAKjE,EAAA,IAAAC,UAAA,GAAkBC,SAAU,EAAA;IAA1BC,WAAY,GAAAF,UAAA,CAAZE,WAAY,CAAA;AACpB,EAAA,IAAMC,eAAeP,OAAW,IAAAD,QAAA,CAAA;EAEhC,IAAMS,QAAW,GAAAd,MAAA,KAAW,UAAc,IAAA,CAAC,CAACa,YAAA,CAAA;EAE5C,IAAME,iBAAoB,GAAAC,UAAA,CAAAC,EAAAA,CAAAA,MAAA,CAAcL,WAAA,EAAA,UAAA,CAAA,EAAuBT,SAAW,EAAAe,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAD,EAAAA,EAAAA,EAAAA,CAAAA,MAAA,CACpEL,WAAA,EAAA,YAAA,CAAA,CAAAK,MAAA,CAAwBjB,MAAW,CAAA,EAAAA,MAAA,CAAAiB,EAAAA,EAAAA,CAAAA,MAAA,CACnCL,WAAgC,EAAA,kBAAA,CAAA,EAAA,CAAC,CAACX,MAAA,CAAA,EAAA,EAAA,CAAAgB,MAAA,CAClCL,WAAmC,EAAA,qBAAA,CAAA,EAAAE,QAAA,CAAAG,EAAAA,EAAAA,CAAAA,MAAA,CACnCL,WAAA,EAAAK,sBAAAA,CAAAA,CAAAA,MAAA,CAAkCf,KAAU,CAAA,EAAAY,QAAA,CACjD,CAAA,CAAA;EAED,sBACGK,KAAA,CAAAC,aAAA,CAAA,KAAA,EAAAC,aAAA,CAAAA,aAAA,CAAA,EAAA,EAAQd,iBAAA,CAAA,EAAA,EAAA,EAAA;AAAmBJ,IAAAA,SAAW,EAAAY,iBAAA;AAAmBX,IAAAA,KAAA,EAAAA,KAAAA;GACvDU,CAAAA,EAAAA,0BAAYK,KAAA,CAAAC,aAAA,CAAA,MAAA,EAAA;IAAKjB,qBAAcS,WAAA,EAAA,sBAAA,CAAA;AAAoC,GAAA,EAAAC,YAAa,IAAU,IAC7F,CAAA,CAAA;AAEJ,EAAA;AAEAlB,OAAA,CAAQ2B,WAAc,GAAA,SAAA;;;;"}