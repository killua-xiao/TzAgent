{"version":3,"file":"Pagination.js","sources":["../../../components/pagination/Pagination.tsx"],"sourcesContent":["import React, { useState, useMemo, forwardRef, useEffect } from 'react';\nimport classNames from 'classnames';\nimport { omit, isNaN } from 'lodash-es';\n\nimport noop from '../_util/noop';\nimport useConfig from '../hooks/useConfig';\nimport useControlled from '../hooks/useControlled';\nimport Select from '../select';\nimport InputNumber from '../input-number';\nimport InputAdornment from '../input-adornment';\nimport { useLocaleReceiver } from '../locale/LocalReceiver';\n\nimport useBoundaryJumper from './hooks/useBoundaryJumper';\nimport usePrevNextJumper from './hooks/usePrevNextJumper';\nimport usePageNumber from './hooks/usePageNumber';\nimport useTotal from './hooks/useTotal';\n\nimport { TdPaginationProps } from './type';\nimport { StyledProps } from '../common';\nimport { pageSizeValidator } from './validators';\nimport { paginationDefaultProps } from './defaultProps';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\nexport type { PageInfo } from './type';\n\nexport interface PaginationProps extends TdPaginationProps, StyledProps {}\n\nconst { Option } = Select;\n\nconst Pagination = forwardRef<HTMLDivElement, PaginationProps>((originalProps, ref) => {\n  const props = useDefaultProps<PaginationProps>(originalProps, paginationDefaultProps);\n  const {\n    theme,\n    size,\n    total,\n    showPageSize,\n    showPageNumber,\n    showPreviousAndNextBtn,\n    showFirstAndLastPageBtn,\n    showJumper,\n    pageEllipsisMode,\n    disabled,\n    foldedMaxPageBtn,\n    maxPageBtn,\n    totalContent,\n    pageSizeOptions,\n    onChange = noop,\n    onCurrentChange,\n    onPageSizeChange,\n    style,\n    className,\n    selectProps,\n    ...otherProps\n  } = props;\n  // 原生 html 属性透传\n  const restProps = omit(otherProps, ['current', 'pageSize', 'defaultPageSize', 'defaultCurrent']);\n\n  const [locale, t] = useLocaleReceiver('pagination');\n\n  const [pageSize, setPageSize] = useControlled(props, 'pageSize', onPageSizeChange);\n  const [current, setCurrent] = useControlled(props, 'current', onCurrentChange);\n  const [jumpValue, setJumpValue] = useState(current);\n\n  const min = 1;\n  const { classPrefix, pagination: paginationConfig } = useConfig();\n  const name = `${classPrefix}-pagination`; // t-pagination\n\n  const pageCount = useMemo<number>(() => {\n    const calCount = Math.ceil(total / pageSize);\n    return calCount > 0 ? calCount : 1;\n  }, [pageSize, total]);\n\n  // 处理改变当前页的逻辑\n  const changeCurrent = (_nextCurrent: number, _nextPageSize?: number) => {\n    if (disabled || current === _nextCurrent) {\n      return;\n    }\n\n    let nextCurrent = Math.trunc(_nextCurrent);\n    if (isNaN(nextCurrent)) return;\n    let nextPageSize = _nextPageSize;\n\n    if (!nextPageSize && !pageSizeValidator(nextPageSize)) {\n      nextPageSize =\n        pageSize ?? (typeof pageSizeOptions[0] === 'number' ? pageSizeOptions[0] : pageSizeOptions[0]?.value);\n    }\n    // 边界处理\n    if (nextCurrent < min) nextCurrent = min;\n    if (nextCurrent > pageCount) nextCurrent = pageCount;\n\n    setCurrent(nextCurrent, { current: nextCurrent, previous: current, pageSize: nextPageSize });\n\n    onChange({\n      current: nextCurrent,\n      previous: current,\n      pageSize: nextPageSize,\n    });\n  };\n\n  // 处理改变 pageSize 的逻辑\n  const changePageSize = (nextPageSize: number) => {\n    const nextCurrent = Math.min(current, Math.max(1, Math.ceil(total / nextPageSize)));\n    const pageInfo = {\n      current: nextCurrent,\n      previous: current,\n      pageSize: nextPageSize,\n    };\n    setPageSize(nextPageSize, pageInfo);\n\n    // 改变分页大小也需要触发 onChange 回调 如果改变分页大小会改变 currentPage 则由 changeCurrent 内去触发 onChange 否则需要自己触发\n    if (current !== nextCurrent) {\n      changeCurrent(nextCurrent, nextPageSize);\n    } else {\n      onChange(pageInfo);\n    }\n  };\n\n  const { totalControl } = useTotal({ totalContent, pageSize, current, total });\n\n  const { firstPageJumper, lastPageJumper } = useBoundaryJumper({\n    disabled,\n    current,\n    pageCount,\n    showFirstAndLastPageBtn,\n    changeCurrent,\n  });\n\n  const { prevJumper, nextJumper } = usePrevNextJumper({\n    disabled,\n    current,\n    pageCount,\n    showPreviousAndNextBtn,\n    changeCurrent,\n  });\n\n  const { pageNumberControl } = usePageNumber({\n    showPageNumber,\n    maxPageBtn,\n    disabled,\n    current,\n    pageCount,\n    foldedMaxPageBtn,\n    changeCurrent,\n    pageEllipsisMode,\n  });\n\n  useEffect(() => {\n    setJumpValue(current);\n  }, [current]);\n\n  const pageSizeControl =\n    showPageSize && pageSizeOptions.length ? (\n      <div className={`${name}__select`}>\n        <Select\n          autoWidth={true}\n          size={size}\n          value={pageSize}\n          disabled={disabled}\n          onChange={changePageSize}\n          {...selectProps}\n        >\n          {pageSizeOptions.map((item) =>\n            typeof item === 'number' ? (\n              <Option key={item} label={t(locale.itemsPerPage, { size: item })} value={item} />\n            ) : (\n              <Option key={item.value} label={item.label} value={item.value} />\n            ),\n          )}\n        </Select>\n      </div>\n    ) : null;\n\n  const DefaultJumper = (\n    <div className={`${name}__jump`}>\n      {t(locale.jumpTo)}\n      <InputAdornment append={`/ ${pageCount} ${t(locale.page)}`}>\n        <InputNumber\n          className={`${classPrefix}-pagination__input`}\n          min={min}\n          size={size}\n          theme=\"normal\"\n          max={pageCount}\n          disabled={disabled}\n          value={jumpValue}\n          onChange={(val: number) => setJumpValue(val)}\n          onBlur={(val: number) => changeCurrent(val)}\n          onEnter={(val: number) => changeCurrent(val)}\n          placeholder=\"\"\n        />\n      </InputAdornment>\n    </div>\n  );\n\n  const globalJumper = paginationConfig.jumper;\n  const Jumper = globalJumper\n  ? globalJumper({ current, pageCount, onChange: changeCurrent })\n  : DefaultJumper;\n\n  return (\n    <div\n      className={classNames(name, className, {\n        [`${classPrefix}-size-s`]: size === 'small',\n        [`${classPrefix}-is-disabled`]: disabled,\n      })}\n      style={style}\n      ref={ref}\n      {...restProps}\n    >\n      {/* 总数据 */}\n      {totalControl}\n      {/* 分页器 */}\n      {pageSizeControl}\n      {/* 首页跳转 */}\n      {firstPageJumper}\n      {/* 上一页跳转 */}\n      {prevJumper}\n      {/* 常规版 */}\n      {theme === 'default' && pageNumberControl}\n      {/* 极简版 */}\n      {theme === 'simple' && Jumper}\n      {/* 下一页跳转 */}\n      {nextJumper}\n      {/* 尾页跳转 */}\n      {lastPageJumper}\n      {/* 快速跳转 */}\n      {theme === 'default' && showJumper && Jumper}\n    </div>\n  );\n});\n\nPagination.displayName = 'Pagination';\n\nexport default Pagination;\n"],"names":["Option","Select","Pagination","forwardRef","originalProps","ref","props","useDefaultProps","paginationDefaultProps","theme","size","total","showPageSize","showPageNumber","showPreviousAndNextBtn","showFirstAndLastPageBtn","showJumper","pageEllipsisMode","disabled","foldedMaxPageBtn","maxPageBtn","totalContent","pageSizeOptions","_props$onChange","onChange","noop","onCurrentChange","onPageSizeChange","style","className","selectProps","otherProps","_objectWithoutProperties","_excluded","restProps","omit","_useLocaleReceiver","useLocaleReceiver","_useLocaleReceiver2","_slicedToArray","locale","t","_useControlled","useControlled","_useControlled2","pageSize","setPageSize","_useControlled3","_useControlled4","current","setCurrent","_useState","useState","_useState2","jumpValue","setJumpValue","min","_useConfig","useConfig","classPrefix","paginationConfig","pagination","name","pageCount","useMemo","calCount","Math","ceil","changeCurrent","_nextCurrent","_nextPageSize","nextCurrent","trunc","isNaN","nextPageSize","pageSizeValidator","_pageSizeOptions$","value","previous","changePageSize","max","pageInfo","_useTotal","useTotal","totalControl","_useBoundaryJumper","useBoundaryJumper","firstPageJumper","lastPageJumper","_usePrevNextJumper","usePrevNextJumper","prevJumper","nextJumper","_usePageNumber","usePageNumber","pageNumberControl","useEffect","pageSizeControl","length","React","createElement","_objectSpread","autoWidth","map","item","key","label","itemsPerPage","DefaultJumper","jumpTo","InputAdornment","append","concat","page","InputNumber","val","onBlur","onEnter","placeholder","globalJumper","jumper","Jumper","classNames","_defineProperty","displayName"],"mappings":"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"}