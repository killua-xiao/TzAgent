{"version":3,"file":"TransferList.js","sources":["../../../components/transfer/TransferList.tsx"],"sourcesContent":["import React, { useMemo, useState } from 'react';\nimport classnames from 'classnames';\nimport { isFunction, isEmpty, isString } from 'lodash-es';\nimport { SearchIcon as TdSearchIcon } from 'tdesign-icons-react';\nimport { getLeafNodes } from './utils';\nimport useConfig from '../hooks/useConfig';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport { TdTransferProps, TransferListType, TransferValue } from './type';\nimport { TNode, StyledProps } from '../common';\nimport Checkbox from '../checkbox';\nimport Input from '../input';\nimport Pagination, { PaginationProps } from '../pagination';\nimport { useLocaleReceiver } from '../locale/LocalReceiver';\nimport { parseContentTNode } from '../_util/parseTNode';\n\ninterface TransferListProps\n  extends Pick<TdTransferProps, 'data' | 'search' | 'checked' | 'transferItem' | 'tree'>,\n    StyledProps {\n  disabled?: boolean;\n  empty?: TNode | string;\n  title?: TNode;\n  footer?: TNode;\n  content?: TNode | TNode<{ data: Object }>;\n  pagination?: Pick<PaginationProps, 'pageSize'> & { onPageChange?: (current: number) => void };\n  onCheckbox?: (checked: Array<TransferValue>) => void;\n  onSearch?: (value: string) => void;\n  showCheckAll?: boolean;\n  listType: TransferListType;\n}\n\nconst TransferList: React.FunctionComponent<TransferListProps> = (props) => {\n  const {\n    className,\n    style,\n    data,\n    search = false,\n    checked = [],\n    empty,\n    title,\n    footer,\n    content,\n    onCheckbox,\n    onSearch,\n    disabled = false,\n    pagination,\n    transferItem,\n    tree: treeNode,\n    showCheckAll,\n    listType,\n  } = props;\n  const notDisabledData = !treeNode\n    ? data.filter((item) => !item.disabled)\n    : getLeafNodes(data).filter((item) => !item.disabled);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n\n  const [indeterminate, allChecked] = useMemo(() => {\n    const activeLen = checked.length;\n    const notLen = notDisabledData.length;\n    return [activeLen && activeLen < notLen, activeLen && activeLen === notLen];\n  }, [checked, notDisabledData]);\n\n  const { classPrefix } = useConfig();\n  const { SearchIcon } = useGlobalIcon({\n    SearchIcon: TdSearchIcon,\n  });\n  const CLASSPREFIX = `${classPrefix}-transfer__list`;\n  const [local, t] = useLocaleReceiver('transfer');\n\n  const handleCheckbox = (vals: Array<TransferValue>) => {\n    if (isFunction(onCheckbox)) onCheckbox(vals);\n  };\n\n  const handleAllCheckbox = (checked: boolean) => {\n    if (isFunction(onCheckbox)) onCheckbox(checked ? notDisabledData.map((item) => item.value) : []);\n  };\n\n  const HeaderCmp = () => {\n    const total = treeNode ? getLeafNodes(data).length : data.length;\n    return (\n      <div className={`${CLASSPREFIX}-header`}>\n        <div>\n          {showCheckAll ? (\n            <Checkbox\n              indeterminate={indeterminate}\n              checked={allChecked}\n              disabled={disabled}\n              onChange={handleAllCheckbox}\n            />\n          ) : null}\n          <span>{t(local.title, { checked: checked.length, total })}</span>\n        </div>\n        <span>{title}</span>\n      </div>\n    );\n  };\n\n  const SearchCmp = () =>\n    search ? (\n      <div className={`${classPrefix}-transfer__search-wrapper`}>\n        <Input placeholder={local.placeholder} suffixIcon={<SearchIcon></SearchIcon>} onChange={onSearch}></Input>\n      </div>\n    ) : null;\n\n  const viewData = useMemo(() => {\n    if (!isEmpty(pagination)) {\n      const pageSize = pagination.pageSize || 10;\n      const start = (currentPage - 1) * pageSize;\n      return data.slice(start, start + pageSize);\n    }\n    return data;\n  }, [currentPage, data, pagination]);\n\n  const EmptyCmp = () =>\n    isString(empty) ? (\n      <div className={`${classPrefix}-transfer__empty`}>\n        <span>{empty || '暂无数据'}</span>\n      </div>\n    ) : (\n      empty\n    );\n\n  const contentCmp = () => {\n    if (typeof treeNode === 'function') {\n      return treeNode({ data: viewData, value: checked, onChange: handleCheckbox });\n    }\n    if (typeof content === 'function') {\n      return content({ data: viewData });\n    }\n    return (\n      <Checkbox.Group value={checked} onChange={handleCheckbox} disabled={disabled}>\n        {viewData.map((item, index) => (\n          <Checkbox key={item.value} value={item.value} disabled={item.disabled} className={`${CLASSPREFIX}-item`}>\n            <span>\n              {transferItem ? parseContentTNode(transferItem, { data: item, index, type: listType }) : item.label}\n            </span>\n          </Checkbox>\n        ))}\n      </Checkbox.Group>\n    );\n  };\n  const BodyCmp = () => (\n    <div\n      className={classnames(`${CLASSPREFIX}-body`, {\n        [`${CLASSPREFIX}--with-search`]: search,\n      })}\n    >\n      {SearchCmp()}\n      <div className={`${CLASSPREFIX}-content narrow-scrollbar`}>{viewData.length ? contentCmp() : EmptyCmp()}</div>\n    </div>\n  );\n\n  const PaginationCmp = () => {\n    const handleCurrentPagination = (current: number) => {\n      setCurrentPage(current);\n      if (isFunction(pagination.onPageChange)) {\n        pagination.onPageChange(current);\n      }\n    };\n\n    return pagination ? (\n      <div className={`${CLASSPREFIX}-pagination`}>\n        <Pagination\n          size=\"small\"\n          theme=\"simple\"\n          pageSizeOptions={[]}\n          total={data.length}\n          totalContent={false}\n          onCurrentChange={handleCurrentPagination}\n          pageSize={pagination.pageSize}\n        />\n      </div>\n    ) : null;\n  };\n\n  const footerCmp = () => (!isEmpty(footer) ? <div className={`${classPrefix}-transfer__footer`}>{footer}</div> : null);\n\n  return (\n    <div style={style} className={classnames(CLASSPREFIX, className)}>\n      {HeaderCmp()}\n      {BodyCmp()}\n      {PaginationCmp()}\n      {footerCmp()}\n    </div>\n  );\n};\n\nexport default TransferList;\n"],"names":["TransferList","props","className","style","data","_props$search","search","_props$checked","checked","empty","title","footer","content","onCheckbox","onSearch","_props$disabled","disabled","pagination","transferItem","treeNode","tree","showCheckAll","listType","notDisabledData","filter","item","getLeafNodes","_useState","useState","_useState2","_slicedToArray","currentPage","setCurrentPage","_useMemo","useMemo","activeLen","length","notLen","_useMemo2","indeterminate","allChecked","_useConfig","useConfig","classPrefix","_useGlobalIcon","useGlobalIcon","SearchIcon","TdSearchIcon","CLASSPREFIX","_useLocaleReceiver","useLocaleReceiver","_useLocaleReceiver2","local","t","handleCheckbox","vals","isFunction","handleAllCheckbox","map","value","HeaderCmp","total","React","createElement","Checkbox","onChange","SearchCmp","Input","placeholder","suffixIcon","viewData","isEmpty","pageSize","start","slice","EmptyCmp","isString","contentCmp","Group","index","key","parseContentTNode","type","label","BodyCmp","classnames","concat","_defineProperty","PaginationCmp","handleCurrentPagination","current","onPageChange","Pagination","size","theme","pageSizeOptions","totalContent","onCurrentChange","footerCmp"],"mappings":"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"}