{"version":3,"file":"Switch.js","sources":["../../../components/switch/Switch.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport log from '@tdesign/common-js/log/index';\nimport Loading from '../loading';\nimport useConfig from '../hooks/useConfig';\nimport { StyledProps } from '../common';\nimport useCommonClassName from '../hooks/useCommonClassName';\nimport { SwitchValue, TdSwitchProps } from './type';\nimport { switchDefaultProps } from './defaultProps';\nimport parseTNode from '../_util/parseTNode';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\nexport type SwitchChangeEventHandler = (value: boolean, event: React.MouseEvent<HTMLButtonElement>) => void;\nexport type SwitchClickEventHandler = SwitchChangeEventHandler;\n\nexport interface SwitchProps<T extends SwitchValue = SwitchValue> extends TdSwitchProps<T>, StyledProps {}\n\nconst Switch = React.forwardRef<HTMLButtonElement, SwitchProps>((originalProps, ref) => {\n  const { classPrefix } = useConfig();\n  const props = useDefaultProps<SwitchProps<SwitchValue>>(originalProps, switchDefaultProps);\n  const {\n    className,\n    value,\n    defaultValue,\n    disabled,\n    loading,\n    size,\n    label,\n    customValue,\n    onChange,\n    beforeChange,\n    ...restProps\n  } = props;\n  const [activeValue = true, inactiveValue = false] = customValue || [];\n\n  const isControlled = typeof value !== 'undefined';\n  const initChecked = defaultValue === activeValue || value === activeValue;\n  const [innerChecked, setInnerChecked] = useState(initChecked);\n\n  const contentNode = React.useMemo<React.ReactNode>(() => {\n    if (Array.isArray(label)) {\n      const [activeContent = '', inactiveContent = ''] = label;\n      const content = innerChecked ? activeContent : inactiveContent;\n      return parseTNode(content, { value });\n    }\n    return parseTNode(label, { value });\n  }, [label, innerChecked, value]);\n\n  const handleChange = (e: React.MouseEvent) => {\n    !isControlled && setInnerChecked(!innerChecked);\n    const changedValue = !innerChecked ? activeValue : inactiveValue;\n    onChange?.(changedValue, { e });\n  };\n\n  const onInternalClick: React.MouseEventHandler<HTMLButtonElement> = (e) => {\n    if (disabled) {\n      return;\n    }\n\n    if (!beforeChange) {\n      handleChange(e);\n      return;\n    }\n    Promise.resolve(beforeChange())\n      .then((v) => {\n        if (v) {\n          handleChange(e);\n        }\n      })\n      .catch((e) => {\n        log.error('Switch', `some error occurred: ${e}`);\n      });\n  };\n\n  useEffect(() => {\n    if (Array.isArray(customValue) && !customValue.includes(value)) {\n      log.error('Switch', `value is not in customValue: ${JSON.stringify(customValue)}`);\n    }\n    isControlled && setInnerChecked(value === activeValue);\n  }, [value, customValue, activeValue, isControlled]);\n\n  const { SIZE, STATUS } = useCommonClassName();\n  const switchClassName = classNames(\n    `${classPrefix}-switch`,\n    className,\n    {\n      [STATUS.checked]: innerChecked,\n      [STATUS.disabled]: disabled,\n      [STATUS.loading]: loading,\n    },\n    SIZE[size],\n  );\n\n  return (\n    <button\n      {...restProps}\n      type=\"button\"\n      role=\"switch\"\n      disabled={disabled || loading}\n      className={switchClassName}\n      ref={ref}\n      onClick={onInternalClick}\n    >\n      <span className={`${classPrefix}-switch__handle`}>{loading && <Loading loading size=\"small\" />}</span>\n      <div className={`${classPrefix}-switch__content`}>{contentNode}</div>\n    </button>\n  );\n});\n\nSwitch.displayName = 'Switch';\n\nexport default Switch as <T extends SwitchValue = SwitchValue>(\n  props: SwitchProps<T> & React.RefAttributes<HTMLButtonElement>,\n) => React.ReactElement;\n"],"names":["Switch","React","forwardRef","originalProps","ref","_useConfig","useConfig","classPrefix","props","useDefaultProps","switchDefaultProps","className","value","defaultValue","disabled","loading","size","label","customValue","onChange","beforeChange","restProps","_objectWithoutProperties","_excluded","_ref","_ref2","_slicedToArray","_ref2$","activeValue","_ref2$2","inactiveValue","isControlled","initChecked","_useState","useState","_useState2","innerChecked","setInnerChecked","contentNode","useMemo","Array","isArray","_label","_label$","activeContent","_label$2","inactiveContent","content","parseTNode","handleChange","e","changedValue","onInternalClick","Promise","resolve","then","v","log","error","concat","useEffect","includes","JSON","stringify","_useCommonClassName","useCommonClassName","SIZE","STATUS","switchClassName","classNames","_defineProperty","checked","createElement","_objectSpread","type","role","onClick","Loading","displayName"],"mappings":"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"}