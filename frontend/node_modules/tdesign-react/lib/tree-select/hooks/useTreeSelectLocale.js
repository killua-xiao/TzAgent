/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _slicedToArray } from '../../_chunks/dep-48805ab8.js';
import React from 'react';
import { useLocaleReceiver } from '../../locale/LocalReceiver.js';
import useConfig from '../../hooks/useConfig.js';
import '../../_chunks/dep-026a4c6b.js';
import '../../_chunks/dep-cb0a3966.js';
import '../../_chunks/dep-eca3a3de.js';
import 'lodash-es';
import '../../config-provider/ConfigProvider.js';
import '../../config-provider/ConfigContext.js';
import '../../_chunks/dep-f97636ce.js';
import '../../_chunks/dep-9dbbf468.js';
import 'dayjs';

var useTreeSelectLocale = function useTreeSelectLocale(props) {
  var _props$empty, _props$loadingText, _props$placeholder;
  var _useConfig = useConfig(),
    classPrefix = _useConfig.classPrefix;
  var _useLocaleReceiver = useLocaleReceiver("treeSelect"),
    _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2),
    local = _useLocaleReceiver2[0],
    t = _useLocaleReceiver2[1];
  var emptyText = t(local.empty);
  var placeholderText = t(local.placeholder);
  var loadingTextLabel = t(local.loadingText);
  return {
    empty: (_props$empty = props.empty) !== null && _props$empty !== void 0 ? _props$empty : /* @__PURE__ */React.createElement("div", {
      className: "".concat(classPrefix, "-select__empty")
    }, emptyText),
    loadingItem: /* @__PURE__ */React.createElement("p", {
      className: "".concat(classPrefix, "-select__loading-tips")
    }, (_props$loadingText = props.loadingText) !== null && _props$loadingText !== void 0 ? _props$loadingText : /* @__PURE__ */React.createElement("div", {
      className: "".concat(classPrefix, "-select__empty")
    }, loadingTextLabel)),
    placeholder: (_props$placeholder = props.placeholder) !== null && _props$placeholder !== void 0 ? _props$placeholder : placeholderText
  };
};

export { useTreeSelectLocale };
//# sourceMappingURL=useTreeSelectLocale.js.map
