{"version":3,"file":"Tabs.js","sources":["../../../components/tabs/Tabs.tsx"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { TabValue, TdTabsProps } from './type';\nimport forwardRefWithStatics from '../_util/forwardRefWithStatics';\nimport TabNav from './TabNav';\nimport { useTabClass } from './useTabClass';\nimport TabPanel from './TabPanel';\nimport { StyledProps } from '../common';\nimport { tabsDefaultProps } from './defaultProps';\nimport useDragSorter from '../hooks/useDragSorter';\nimport useDefaultProps from '../hooks/useDefaultProps';\nimport useControlled from '../hooks/useControlled';\n\nexport interface TabsProps extends TdTabsProps, StyledProps {\n  children?: React.ReactNode;\n}\n\nconst Tabs = forwardRefWithStatics(\n  (originalProps: TabsProps, ref: React.Ref<HTMLDivElement>) => {\n    const props = useDefaultProps<TabsProps>(originalProps, tabsDefaultProps);\n    const { children, list, placement, dragSort, className, style, onRemove } = props;\n\n    const [value, onChange] = useControlled(props, 'value', props.onChange);\n\n    // 样式工具引入\n    const { tdTabsClassPrefix, tdTabsClassGenerator, tdClassGenerator } = useTabClass();\n    const targetClassNameRegExpStr = `^${tdTabsClassPrefix}(__nav-item|__nav-item-wrapper|__nav-item-text-wrapper)`;\n\n    const { getDragProps } = useDragSorter({\n      ...props,\n      sortOnDraggable: dragSort,\n      onDragOverCheck: {\n        x: true,\n        targetClassNameRegExp: new RegExp(targetClassNameRegExpStr),\n      },\n    });\n\n    const memoChildren = React.useMemo<React.ReactNode | React.ReactNode[]>(() => {\n      if (!list || list.length === 0) {\n        return children;\n      }\n      return list.map<React.ReactNode>((panelProps) => <TabPanel key={panelProps.value} {...panelProps} />);\n    }, [children, list]);\n\n    const itemList = React.Children.map(memoChildren, (child: React.ReactElement<any>) => {\n      if (child && child.type === TabPanel) {\n        return child.props;\n      }\n      return null;\n    });\n\n    const handleChange = React.useCallback(\n      (v: TabValue) => {\n        onChange?.(v);\n      },\n      [onChange],\n    );\n\n    const headerNode = React.useMemo<React.ReactNode>(\n      () => (\n        <div className={classNames(tdTabsClassGenerator('header'), tdClassGenerator(`is-${placement}`))}>\n          <TabNav\n            {...props}\n            getDragProps={getDragProps}\n            activeValue={value}\n            onRemove={onRemove}\n            itemList={itemList}\n            onChange={handleChange}\n          />\n        </div>\n      ),\n      [props, getDragProps, value, onRemove, itemList, handleChange, placement, tdTabsClassGenerator, tdClassGenerator],\n    );\n\n    return (\n      <div ref={ref} className={classNames(tdTabsClassPrefix, className)} style={style}>\n        {placement !== 'bottom' ? headerNode : null}\n        <div className={classNames(tdTabsClassGenerator('content'), tdClassGenerator(`is-${placement}`))}>\n          {React.Children.map(memoChildren, (child: any) => {\n            if (child && child.type === TabPanel) {\n              return <TabPanel {...child.props} isActive={child.props.value === value} />;\n            }\n            return null;\n          })}\n        </div>\n        {placement === 'bottom' ? headerNode : null}\n      </div>\n    );\n  },\n  { TabPanel },\n);\n\nTabs.displayName = 'Tabs';\n\nexport default Tabs;\n"],"names":["Tabs","forwardRefWithStatics","originalProps","ref","props","useDefaultProps","tabsDefaultProps","children","list","placement","dragSort","className","style","onRemove","_useControlled","useControlled","onChange","_useControlled2","_slicedToArray","value","_useTabClass","useTabClass","tdTabsClassPrefix","tdTabsClassGenerator","tdClassGenerator","targetClassNameRegExpStr","_useDragSorter","useDragSorter","_objectSpread","sortOnDraggable","onDragOverCheck","x","targetClassNameRegExp","RegExp","getDragProps","memoChildren","React","useMemo","length","map","panelProps","createElement","TabPanel","key","itemList","Children","child","type","handleChange","useCallback","v","headerNode","classNames","concat","TabNav","activeValue","isActive","displayName"],"mappings":"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"}