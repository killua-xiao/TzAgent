/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-cb0a3966.js';
import { _ as _slicedToArray } from '../_chunks/dep-48805ab8.js';
import React, { useRef, useState } from 'react';
import classNames from 'classnames';
import useMouseEvent from '../hooks/useMouseEvent.js';
import Tooltip from '../tooltip/Tooltip.js';
import '../_chunks/dep-eca3a3de.js';
import '../_chunks/dep-026a4c6b.js';
import '../_chunks/dep-6b660ef0.js';
import '../popup/index.js';
import '../popup/Popup.js';
import 'lodash-es';
import 'react-transition-group';
import '../_util/ref.js';
import 'react-is';
import '../_util/isFragment.js';
import '../_chunks/dep-3a09424a.js';
import '../common/Portal.js';
import 'react-dom';
import '../hooks/useConfig.js';
import '../config-provider/ConfigContext.js';
import '../_chunks/dep-f97636ce.js';
import '../_chunks/dep-9dbbf468.js';
import 'dayjs';
import '../hooks/useLayoutEffect.js';
import '../hooks/useAnimation.js';
import '../hooks/useAttach.js';
import '../hooks/useControlled.js';
import '../_util/noop.js';
import '../hooks/useDefaultProps.js';
import '../hooks/useMutationObserver.js';
import '../hooks/useLatest.js';
import '../hooks/usePopper.js';
import '../_chunks/dep-87d110df.js';
import '@popperjs/core';
import 'react-fast-compare';
import '../hooks/useWindowSize.js';
import '../popup/defaultProps.js';
import '../popup/hooks/useTrigger.js';
import '../_util/composeRefs.js';
import '../_util/listener.js';
import '../popup/utils/transition.js';
import '../popup/PopupPlugin.js';
import '../_chunks/dep-52ff3837.js';
import '../_util/react-render.js';
import '../common/PluginContainer.js';
import '../config-provider/ConfigProvider.js';
import '../tooltip/defaultProps.js';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var SliderHandleButton = function SliderHandleButton(_ref) {
  var onChange = _ref.onChange,
    style = _ref.style,
    classPrefix = _ref.classPrefix,
    toolTipProps = _ref.toolTipProps,
    hideTips = _ref.hideTips;
  var sliderNodeRef = useRef(null);
  var _useState = useState(false),
    _useState2 = _slicedToArray(_useState, 2),
    popupVisible = _useState2[0],
    setPopupVisible = _useState2[1];
  var _useMouseEvent = useMouseEvent(sliderNodeRef, {
      onEnter: function onEnter() {
        setPopupVisible(true);
      },
      onDown: function onDown() {
        setPopupVisible(true);
      },
      onMove: function onMove(e) {
        setPopupVisible(true);
        onChange(e);
      },
      onLeave: function onLeave() {
        setPopupVisible(false);
      },
      onUp: function onUp(e) {
        setPopupVisible(false);
        onChange(e);
      }
    }),
    isMoving = _useMouseEvent.isMoving;
  var handleNode = /* @__PURE__ */React.createElement("div", {
    ref: sliderNodeRef,
    style: style,
    className: "".concat(classPrefix, "-slider__button-wrapper")
  }, /* @__PURE__ */React.createElement("div", {
    className: classNames("".concat(classPrefix, "-slider__button"), _defineProperty({}, "".concat(classPrefix, "-slider__button--dragging"), isMoving))
  }));
  return hideTips ? handleNode : /* @__PURE__ */React.createElement(Tooltip, _objectSpread({
    visible: popupVisible,
    placement: "top"
  }, toolTipProps), handleNode);
};

export { SliderHandleButton as default };
//# sourceMappingURL=SliderHandleButton.js.map
