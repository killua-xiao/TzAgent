{"version":3,"file":"RangeInput.js","sources":["../../../components/range-input/RangeInput.tsx"],"sourcesContent":["import React, { useState, useRef, useImperativeHandle } from 'react';\nimport classNames from 'classnames';\nimport { isFunction } from 'lodash-es';\nimport { CloseCircleFilledIcon as TdCloseCircleFilledIcon } from 'tdesign-icons-react';\nimport Input, { InputRef } from '../input';\nimport useConfig from '../hooks/useConfig';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport useControlled from '../hooks/useControlled';\nimport type { StyledProps, TNode } from '../common';\nimport parseTNode from '../_util/parseTNode';\nimport type { TdRangeInputProps, RangeInputValue, RangeInputInstanceFunctions } from './type';\nimport { rangeInputDefaultProps } from './defaultProps';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\nexport interface RangeInputProps extends TdRangeInputProps, StyledProps {}\n\nexport interface RangeInputRefInterface extends React.RefObject<unknown>, RangeInputInstanceFunctions {\n  currentElement: HTMLFormElement;\n}\n\nfunction calcArrayValue<T>(value: T | T[]) {\n  return Array.isArray(value) ? value : [value, value];\n}\n\nconst renderIcon = (classPrefix: string, type: 'prefix' | 'suffix', icon: TNode) => {\n  const result = parseTNode(icon);\n\n  const iconClassName = icon ? `${classPrefix}-range-input__${type}-icon` : '';\n\n  return result ? <span className={`${classPrefix}-range-input__${type} ${iconClassName}`}>{result}</span> : null;\n};\n\nconst RangeInput = React.forwardRef<RangeInputInstanceFunctions, RangeInputProps>((originalProps, ref) => {\n  const { classPrefix } = useConfig();\n  const { CloseCircleFilledIcon } = useGlobalIcon({\n    CloseCircleFilledIcon: TdCloseCircleFilledIcon,\n  });\n\n  const props = useDefaultProps<RangeInputProps>(originalProps, rangeInputDefaultProps);\n\n  const {\n    className,\n    style,\n    activeIndex,\n    borderless,\n    disabled,\n    format,\n    inputProps,\n    label,\n    placeholder,\n    readonly,\n    separator,\n    status,\n    size,\n    tips,\n    suffix,\n    prefixIcon,\n    suffixIcon,\n    clearable,\n    showClearIconOnEmpty,\n    onClick,\n    onEnter,\n    onClear,\n    onFocus,\n    onBlur,\n    onMouseenter,\n    onMouseleave,\n    onChange: onChangeFromProps,\n    ...restProps\n  } = props;\n\n  const name = `${classPrefix}-range-input`;\n\n  const wrapperRef = useRef<HTMLDivElement>(null);\n\n  const inputRefs = {\n    firstInputRef: useRef<InputRef>(null),\n    secondInputRef: useRef<InputRef>(null),\n  };\n\n  const [isFocused, toggleIsFocused] = useState(false);\n  const [isHover, toggleIsHover] = useState(false);\n  const [firstFormat, secondFormat] = calcArrayValue(format);\n  const [firstPlaceholder = '请输入内容', secondPlaceholder = '请输入内容'] = calcArrayValue(placeholder);\n  const [firstInputProps, secondInputProps] = calcArrayValue(inputProps);\n\n  const [value, onChange] = useControlled(props, 'value', onChangeFromProps);\n  const [firstValue, secondValue] = value || [];\n\n  const isShowClearIcon = ((clearable && value?.length && !disabled) || showClearIconOnEmpty) && isHover;\n  let suffixIconNew = suffixIcon;\n\n  if (isShowClearIcon) {\n    suffixIconNew = (\n      <CloseCircleFilledIcon className={`${name}__suffix-clear`} onMouseDown={handleMouseDown} onClick={handleClear} />\n    );\n  }\n\n  const labelContent = isFunction(label) ? label() : label;\n  const prefixIconContent = renderIcon(classPrefix, 'prefix', parseTNode(prefixIcon));\n  const suffixContent = isFunction(suffix) ? suffix() : suffix;\n  const suffixIconContent = renderIcon(classPrefix, 'suffix', parseTNode(suffixIconNew));\n\n  // 添加MouseDown阻止冒泡，防止點擊Clear value會導致彈窗閃爍一下\n  // https://github.com/Tencent/tdesign-react/issues/2320\n  function handleMouseDown(e: React.MouseEvent<SVGSVGElement, globalThis.MouseEvent>) {\n    e.stopPropagation();\n    // 兼容React16\n    e.nativeEvent.stopImmediatePropagation();\n  }\n\n  function handleClear(e: React.MouseEvent<SVGSVGElement>) {\n    onClear?.({ e });\n    onChange?.(['', ''], { e, trigger: 'clear', position: 'all' });\n  }\n\n  function handleEnter(rangeValue: RangeInputValue, context) {\n    onEnter?.(rangeValue, context);\n  }\n\n  function handleFocus(rangeValue: RangeInputValue, context) {\n    onFocus?.(rangeValue, context);\n    toggleIsFocused(true);\n  }\n\n  function handleBlur(rangeValue: RangeInputValue, context) {\n    onBlur?.(rangeValue, context);\n    toggleIsFocused(false);\n  }\n\n  function handleMouseEnter(e: React.MouseEvent<HTMLDivElement>) {\n    toggleIsHover(true);\n    onMouseenter?.({ e });\n    // @ts-ignore\n    props.onMouseEnter?.({ e });\n  }\n\n  function handleMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n    toggleIsHover(false);\n    onMouseleave?.({ e });\n    // @ts-ignore\n    props.onMouseLeave?.({ e });\n  }\n\n  useImperativeHandle(ref, () => ({\n    currentElement: wrapperRef.current,\n    firstInputElement: inputRefs.firstInputRef.current,\n    secondInputElement: inputRefs.secondInputRef.current,\n    focus(options) {\n      const { position = 'first' } = options || {};\n      (inputRefs[`${position}InputRef`].current as InputRef)?.focus();\n    },\n    blur(options) {\n      const { position = 'first' } = options || {};\n      (inputRefs[`${position}InputRef`].current as InputRef)?.blur();\n    },\n    select(options) {\n      const { position = 'first' } = options || {};\n      (inputRefs[`${position}InputRef`].current as InputRef)?.select();\n    },\n  }));\n\n  return (\n    <div\n      ref={wrapperRef}\n      style={style}\n      className={classNames(name, className, {\n        [`${classPrefix}-is-disabled`]: disabled,\n        [`${classPrefix}-is-focused`]: isFocused,\n        [`${classPrefix}-is-${status}`]: status,\n        [`${classPrefix}-size-l`]: size === 'large',\n        [`${classPrefix}-size-s`]: size === 'small',\n        [`${name}--prefix`]: prefixIconContent || labelContent,\n        [`${name}--suffix`]: suffixContent || suffixIconContent,\n        [`${name}--borderless`]: borderless,\n      })}\n      {...restProps}\n      onMouseEnter={handleMouseEnter}\n      onMouseLeave={handleMouseLeave}\n    >\n      <div className={`${name}__inner`}>\n        {prefixIconContent}\n        {labelContent ? <div className={`${classPrefix}-input__prefix`}>{labelContent}</div> : null}\n        <Input\n          ref={inputRefs.firstInputRef}\n          className={`${name}__inner-left`}\n          inputClass={classNames({\n            [`${classPrefix}-is-focused`]: activeIndex === 0,\n          })}\n          placeholder={firstPlaceholder}\n          disabled={disabled}\n          readonly={readonly}\n          format={firstFormat}\n          value={firstValue}\n          onClick={({ e }) => onClick?.({ e, position: 'first' })}\n          onClear={() => onChange?.([], { position: 'first', trigger: 'input' })}\n          onEnter={(val, { e }) => handleEnter([val, secondValue], { e, position: 'first' })}\n          onFocus={(val, { e }) => handleFocus([val, secondValue], { e, position: 'first' })}\n          onBlur={(val, { e }) => handleBlur([val, secondValue], { e, position: 'first' })}\n          onChange={(val, { e }) => onChange?.([val, secondValue], { e, position: 'first', trigger: 'input' })}\n          {...firstInputProps}\n        />\n\n        <div className={`${name}__inner-separator`}>{separator}</div>\n\n        <Input\n          ref={inputRefs.secondInputRef}\n          className={`${name}__inner-right`}\n          inputClass={classNames({\n            [`${classPrefix}-is-focused`]: activeIndex === 1,\n          })}\n          placeholder={secondPlaceholder}\n          disabled={disabled}\n          readonly={readonly}\n          format={secondFormat}\n          value={secondValue}\n          onClick={({ e }) => onClick?.({ e, position: 'second' })}\n          onClear={() => onChange?.([], { position: 'second', trigger: 'input' })}\n          onEnter={(val, { e }) => handleEnter([firstValue, val], { e, position: 'second' })}\n          onFocus={(val, { e }) => handleFocus([firstValue, val], { e, position: 'second' })}\n          onBlur={(val, { e }) => handleBlur([firstValue, val], { e, position: 'second' })}\n          onChange={(val, { e }) => onChange?.([firstValue, val], { e, position: 'second', trigger: 'input' })}\n          {...secondInputProps}\n        />\n        {suffixContent ? <div className={`${name}__suffix`}>{suffixContent}</div> : null}\n        {suffixIconContent}\n      </div>\n      {tips && <div className={`${name}__tips`}>{tips}</div>}\n    </div>\n  );\n});\n\nRangeInput.displayName = 'RangeInput';\n\nexport default RangeInput;\n"],"names":["calcArrayValue","value","Array","isArray","renderIcon","classPrefix","type","icon","result","parseTNode","iconClassName","concat","React","createElement","className","RangeInput","forwardRef","originalProps","ref","_useConfig","useConfig","_useGlobalIcon","useGlobalIcon","CloseCircleFilledIcon","TdCloseCircleFilledIcon","props","useDefaultProps","rangeInputDefaultProps","style","activeIndex","borderless","disabled","format","inputProps","label","placeholder","readonly","separator","status","size","tips","suffix","prefixIcon","suffixIcon","clearable","showClearIconOnEmpty","onClick","onEnter","onClear","onFocus","onBlur","onMouseenter","onMouseleave","onChangeFromProps","onChange","restProps","_objectWithoutProperties","_excluded","name","wrapperRef","useRef","inputRefs","firstInputRef","secondInputRef","_useState","useState","_useState2","_slicedToArray","isFocused","toggleIsFocused","_useState3","_useState4","isHover","toggleIsHover","_calcArrayValue","_calcArrayValue2","firstFormat","secondFormat","_calcArrayValue3","_calcArrayValue4","_calcArrayValue4$","firstPlaceholder","_calcArrayValue4$2","secondPlaceholder","_calcArrayValue5","_calcArrayValue6","firstInputProps","secondInputProps","_useControlled","useControlled","_useControlled2","_ref","_ref2","firstValue","secondValue","isShowClearIcon","length","suffixIconNew","onMouseDown","handleMouseDown","handleClear","labelContent","isFunction","prefixIconContent","suffixContent","suffixIconContent","e","stopPropagation","nativeEvent","stopImmediatePropagation","trigger","position","handleEnter","rangeValue","context","handleFocus","handleBlur","handleMouseEnter","_props$onMouseEnter","onMouseEnter","call","handleMouseLeave","_props$onMouseLeave","onMouseLeave","useImperativeHandle","currentElement","current","firstInputElement","secondInputElement","focus","options","_inputRefs$current","_ref3","_ref3$position","blur","_inputRefs$current2","_ref4","_ref4$position","select","_inputRefs$current3","_ref5","_ref5$position","_objectSpread","classNames","_defineProperty","Input","inputClass","_ref6","val","_ref7","_ref8","_ref9","_ref0","_ref1","_ref10","_ref11","_ref12","_ref13","displayName"],"mappings":"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"}