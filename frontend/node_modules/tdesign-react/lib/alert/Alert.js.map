{"version":3,"file":"Alert.js","sources":["../../../components/alert/Alert.tsx"],"sourcesContent":["import React, { forwardRef, useRef } from 'react';\nimport classNames from 'classnames';\nimport {\n  CloseIcon as TdCloseIcon,\n  InfoCircleFilledIcon as TdInfoCircleFilledIcon,\n  CheckCircleFilledIcon as TdCheckCircleFilledIcon,\n  ErrorCircleFilledIcon as TdErrorCircleFilledIcon,\n} from 'tdesign-icons-react';\nimport { CSSTransition } from 'react-transition-group';\nimport log from '@tdesign/common-js/log/index';\nimport noop from '../_util/noop';\nimport parseTNode from '../_util/parseTNode';\nimport useConfig from '../hooks/useConfig';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport { useLocaleReceiver } from '../locale/LocalReceiver';\nimport { TdAlertProps } from './type';\nimport { StyledProps } from '../common';\nimport { alertDefaultProps } from './defaultProps';\nimport composeRefs from '../_util/composeRefs';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\nconst transitionTime = 200;\n\nexport interface AlertProps extends TdAlertProps, StyledProps {}\n\nconst Alert = forwardRef<HTMLDivElement, AlertProps>((props, ref) => {\n  const { classPrefix } = useConfig();\n  const [local, t] = useLocaleReceiver('alert');\n  const { CloseIcon, InfoCircleFilledIcon, CheckCircleFilledIcon, ErrorCircleFilledIcon } = useGlobalIcon({\n    CloseIcon: TdCloseIcon,\n    InfoCircleFilledIcon: TdInfoCircleFilledIcon,\n    CheckCircleFilledIcon: TdCheckCircleFilledIcon,\n    ErrorCircleFilledIcon: TdErrorCircleFilledIcon,\n  });\n\n  const {\n    message,\n    title,\n    operation,\n    theme,\n    icon,\n    close,\n    closeBtn,\n    maxLine,\n    onClose,\n    className,\n    onClosed = noop,\n    ...alertProps\n  } = useDefaultProps(props, alertDefaultProps);\n\n  const [closed, setClosed] = React.useState(false);\n  const [collapsed, setCollapsed] = React.useState(true);\n  const nodeRef = useRef<HTMLDivElement>(null);\n\n  const iconMap = {\n    success: CheckCircleFilledIcon,\n    info: InfoCircleFilledIcon,\n    error: ErrorCircleFilledIcon,\n    warning: ErrorCircleFilledIcon,\n  };\n\n  const handleClose = (e: React.MouseEvent<HTMLDivElement>) => {\n    setClosed(true);\n    onClose?.({ e });\n  };\n\n  const handleCollapse = () => {\n    setCollapsed((collapsed) => !collapsed);\n  };\n\n  const renderIconNode = () => {\n    if (React.isValidElement(icon)) return icon;\n    return React.createElement(iconMap[theme]);\n  };\n\n  const renderMessage = () => {\n    if (+maxLine > 0 && Array.isArray(message)) {\n      return (\n        <div className={`${classPrefix}-alert__description`}>\n          {message.map((item, index) => {\n            if (collapsed) {\n              if (index < +maxLine) {\n                return <div key={index}>{item}</div>;\n              }\n            } else {\n              return <div key={index}>{item}</div>;\n            }\n            return true;\n          })}\n          {+maxLine < message.length && (\n            <div className={`${classPrefix}-alert__collapse`} onClick={handleCollapse}>\n              {collapsed ? t(local.expandText) : t(local.collapseText)}\n            </div>\n          )}\n        </div>\n      );\n    }\n    return <div className={`${classPrefix}-alert__description`}>{message}</div>;\n  };\n\n  // close 属性变更为 closeBtn，close废弃后可删除。（需兼容标签上直接写close和closeBtn的场景）\n  const isUsingClose = Reflect.has(props, 'close');\n  const closeNode = isUsingClose ? close : closeBtn;\n  if (isUsingClose) {\n    log.warnOnce('TAlert', 'prop `close` is going to be deprecated, please use `closeBtn` instead.');\n  }\n  const renderClose = () => {\n    if (closeNode === false) return null;\n    return (\n      <div className={`${classPrefix}-alert__close`} onClick={handleClose}>\n        {parseTNode(closeNode, undefined, <CloseIcon />)}\n      </div>\n    );\n  };\n\n  return (\n    <CSSTransition\n      in={!closed}\n      unmountOnExit\n      classNames={{\n        exitActive: `${classPrefix}-alert--closing`,\n      }}\n      nodeRef={nodeRef}\n      timeout={transitionTime}\n      onExited={onClosed}\n    >\n      <div\n        ref={composeRefs(ref, nodeRef)}\n        className={classNames(`${classPrefix}-alert`, `${classPrefix}-alert--${theme}`, className)}\n        {...alertProps}\n      >\n        <div className={`${classPrefix}-alert__icon`}>{renderIconNode()}</div>\n        <div className={`${classPrefix}-alert__content`}>\n          {title ? <div className={`${classPrefix}-alert__title`}>{title}</div> : null}\n          <div className={`${classPrefix}-alert__message`}>\n            {renderMessage()}\n            {operation ? <div className={`${classPrefix}-alert__operation`}>{parseTNode(operation)}</div> : null}\n          </div>\n        </div>\n        {renderClose()}\n      </div>\n    </CSSTransition>\n  );\n});\n\nAlert.displayName = 'Alert';\n\nexport default Alert;\n"],"names":["transitionTime","Alert","forwardRef","props","ref","_useConfig","useConfig","classPrefix","_useLocaleReceiver","useLocaleReceiver","_useLocaleReceiver2","_slicedToArray","local","t","_useGlobalIcon","useGlobalIcon","CloseIcon","TdCloseIcon","InfoCircleFilledIcon","TdInfoCircleFilledIcon","CheckCircleFilledIcon","TdCheckCircleFilledIcon","ErrorCircleFilledIcon","TdErrorCircleFilledIcon","_useDefaultProps","useDefaultProps","alertDefaultProps","message","title","operation","theme","icon","close","closeBtn","maxLine","onClose","className","_useDefaultProps$onCl","onClosed","noop","alertProps","_objectWithoutProperties","_excluded","_React$useState","React","useState","_React$useState2","closed","setClosed","_React$useState3","_React$useState4","collapsed","setCollapsed","nodeRef","useRef","iconMap","success","info","error","warning","handleClose","e","handleCollapse","renderIconNode","isValidElement","createElement","renderMessage","Array","isArray","map","item","index","key","length","onClick","expandText","collapseText","isUsingClose","Reflect","has","closeNode","log","warnOnce","renderClose","parseTNode","CSSTransition","unmountOnExit","classNames","exitActive","timeout","onExited","_objectSpread","composeRefs","concat","displayName"],"mappings":"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"}