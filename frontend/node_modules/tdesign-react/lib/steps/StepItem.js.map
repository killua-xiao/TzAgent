{"version":3,"file":"StepItem.js","sources":["../../../components/steps/StepItem.tsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport { CloseIcon as TdCloseIcon, CheckIcon as TdCheckIcon } from 'tdesign-icons-react';\nimport useConfig from '../hooks/useConfig';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport { TdStepItemProps } from './type';\nimport { StyledProps } from '../common';\nimport StepsContext from './StepsContext';\nimport { stepItemDefaultProps } from './defaultProps';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\nexport interface StepItemProps extends TdStepItemProps, StyledProps {\n  index?: number;\n  children?: React.ReactNode;\n}\n\nconst StepItem: React.FC<StepItemProps> = (originalProps) => {\n  const props = useDefaultProps<StepItemProps>(originalProps, stepItemDefaultProps);\n  const { index, icon, title, content, value, children, style, status } = props;\n\n  const { current, theme, onChange, readonly } = useContext(StepsContext);\n  const { classPrefix, steps: globalStepsConfig } = useConfig();\n  const { CloseIcon, CheckIcon } = useGlobalIcon({ CloseIcon: TdCloseIcon, CheckIcon: TdCheckIcon });\n\n  const canClick = status !== 'process' && !readonly;\n\n  // 步骤条每一步展示的图标\n  const iconNode = React.useMemo<React.ReactNode>(() => {\n    if (!icon || theme !== 'default') {\n      return null;\n    }\n\n    // 自定义图标直接返回\n    if (icon !== true) {\n      return icon;\n    }\n\n    const iconCls = `${classPrefix}-steps-item__icon--number`;\n\n    // 根据状态返回对应的默认图标\n    const getDefaultIconByStatus = () => {\n      switch (status) {\n        case 'error':\n          return globalStepsConfig.errorIcon || <CloseIcon />;\n        case 'finish':\n          return globalStepsConfig.checkIcon || <CheckIcon />;\n        default:\n          return Number(index) + 1;\n      }\n    };\n\n    return <span className={iconCls}>{getDefaultIconByStatus()}</span>;\n  }, [icon, classPrefix, theme, status, globalStepsConfig, index, CloseIcon, CheckIcon]);\n\n  function onStepClick(e: React.MouseEvent<HTMLDivElement>) {\n    if (!canClick) {\n      return;\n    }\n    const currentValue = value ?? index;\n    onChange(currentValue, current, { e });\n  }\n\n  return (\n    <div\n      style={style}\n      className={classNames({\n        [`${classPrefix}-steps-item`]: true,\n        [`${classPrefix}-steps-item--wait`]: status === 'default',\n        [`${classPrefix}-steps-item--error`]: status === 'error',\n        [`${classPrefix}-steps-item--finish`]: status === 'finish',\n        [`${classPrefix}-steps-item--process`]: status === 'process',\n        [props.className]: !!props.className,\n      })}\n    >\n      <div\n        className={classNames(`${classPrefix}-steps-item__inner`, {\n          [`${classPrefix}-steps-item--clickable`]: canClick,\n        })}\n        onClick={onStepClick}\n      >\n        <div\n          className={classNames(`${classPrefix}-steps-item__icon`, {\n            [`${classPrefix}-steps-item-${status}`]: status,\n          })}\n        >\n          {iconNode}\n        </div>\n        <div className={`${classPrefix}-steps-item__content`}>\n          <div className={`${classPrefix}-steps-item__title`}>{title}</div>\n          <div className={`${classPrefix}-steps-item__description`}>{content}</div>\n          {children ? <div className={`${classPrefix}-steps-item__extra`}>{children}</div> : null}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nStepItem.displayName = 'StepItem';\n\nexport default StepItem;\n"],"names":["StepItem","originalProps","props","useDefaultProps","stepItemDefaultProps","index","icon","title","content","value","children","style","status","_useContext","useContext","StepsContext","current","theme","onChange","readonly","_useConfig","useConfig","classPrefix","globalStepsConfig","steps","_useGlobalIcon","useGlobalIcon","CloseIcon","TdCloseIcon","CheckIcon","TdCheckIcon","canClick","iconNode","React","useMemo","iconCls","getDefaultIconByStatus","errorIcon","createElement","checkIcon","Number","className","onStepClick","e","currentValue","classNames","_defineProperty","concat","onClick","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAgBA,IAAMA,QAAA,GAAoC,SAApCA,QAAAA,CAAqCC,aAAkB,EAAA;AACrD,EAAA,IAAAC,KAAA,GAAQC,eAA+B,CAAAF,aAAA,EAAeG,oBAAoB,CAAA,CAAA;AAC1E,EAAA,IAAEC,QAAgEH,KAAA,CAAhEG;IAAOC,IAAM,GAAmDJ,KAAA,CAAzDI,IAAM;IAAAC,KAAA,GAAmDL,KAAA,CAAnDK,KAAA;IAAOC,UAA4CN,KAAA,CAA5CM;IAASC,KAAO,GAA4BP,KAAA,CAAnCO,KAAO;IAAAC,QAAA,GAA4BR,KAAA,CAA5BQ,QAAA;IAAUC,KAAO,GAAWT,KAAA,CAAlBS,KAAO;IAAAC,MAAA,GAAWV,KAAA,CAAXU,MAAA,CAAA;AAE7D,EAAA,IAAAC,WAAA,GAA+CC,WAAWC,YAAY,CAAA;IAA9DC,OAAS,GAAAH,WAAA,CAATG,OAAS;IAAAC,KAAA,GAAAJ,WAAA,CAAAI,KAAA;IAAOC,uBAAAA;IAAUC,QAAS,GAAAN,WAAA,CAATM,QAAS,CAAA;AAC3C,EAAA,IAAAC,UAAA,GAAkDC,SAAU,EAAA;IAApDC,WAAA,GAAAF,UAAA,CAAAE,WAAA;IAAoBC,iBAAA,GAAAH,UAAA,CAAPI,KAAO,CAAA;EACtB,IAAAC,cAAA,GAA2BC,aAAA,CAAc;AAAEC,MAAAA,SAAW,EAAAC,SAAA;AAAaC,MAAAA,SAAW,EAAAC,SAAAA;AAAY,KAAC,CAAA;IAAzFH,WAAW,GAAAF,cAAA,CAAXE,SAAW;IAAAE,WAAA,GAAAJ,cAAA,CAAAI,SAAA,CAAA;AAEb,EAAA,IAAAE,QAAA,GAAWnB,MAAW,KAAA,SAAA,IAAa,CAACO,QAAA,CAAA;AAGpC,EAAA,IAAAa,QAAA,GAAWC,KAAM,CAAAC,OAAA,CAAyB,YAAM;AAChD,IAAA,IAAA,CAAC5B,IAAQ,IAAAW,KAAA,KAAU,SAAW,EAAA;AACzB,MAAA,OAAA,IAAA,CAAA;AACT,KAAA;IAGA,IAAIX,SAAS,IAAM,EAAA;AACV,MAAA,OAAAA,IAAA,CAAA;AACT,KAAA;AAEA,IAAA,IAAM6B,oBAAab,WAAA,EAAA,2BAAA,CAAA,CAAA;AAGnB,IAAA,IAAMc,yBAAyB,SAAzBA,yBAA+B;AAC3B,MAAA,QAAAxB,MAAA;AACD,QAAA,KAAA,OAAA;AACI,UAAA,OAAAW,iBAAA,CAAkBc,SAAa,mBAAAJ,KAAA,CAAAK,aAAA,CAACX,WAAU,EAAA,IAAA,CAAA,CAAA;AAC9C,QAAA,KAAA,QAAA;AACI,UAAA,OAAAJ,iBAAA,CAAkBgB,SAAa,mBAAAN,KAAA,CAAAK,aAAA,CAACT,WAAU,EAAA,IAAA,CAAA,CAAA;AAAA,QAAA;AAE1C,UAAA,OAAAW,MAAA,CAAOnC,KAAK,CAAI,GAAA,CAAA,CAAA;AAAA,OAAA;KAE7B,CAAA;AAEA,IAAA,sBAAQ4B,KAAA,CAAAK,aAAA,CAAA,MAAA,EAAA;AAAKG,MAAAA,SAAW,EAAAN,OAAAA;AAAA,KAAA,EAAUC,wBAAyB,CAAA,CAAA;AAC7D,GAAA,EAAG,CAAC9B,IAAA,EAAMgB,WAAa,EAAAL,KAAA,EAAOL,QAAQW,iBAAmB,EAAAlB,KAAA,EAAOsB,WAAW,EAAAE,WAAS,CAAC,CAAA,CAAA;EAErF,SAASa,YAAYC,CAAqC,EAAA;IACxD,IAAI,CAACZ,QAAU,EAAA;AACb,MAAA,OAAA;AACF,KAAA;IACA,IAAMa,eAAenC,KAAS,KAAA,IAAA,IAATA,KAAS,KAATA,KAAAA,CAAAA,GAAAA,KAAS,GAAAJ,KAAA,CAAA;AAC9Ba,IAAAA,QAAA,CAAS0B,YAAc,EAAA5B,OAAA,EAAS;AAAE2B,MAAAA,CAAA,EAAAA,CAAAA;AAAE,KAAC,CAAA,CAAA;AACvC,GAAA;AAEA,EAAA,sBACGV,KAAA,CAAAK,aAAA,CAAA,KAAA,EAAA;AACC3B,IAAAA,KAAA,EAAAA,KAAA;AACA8B,IAAAA,WAAWI,UAAW,CAAAC,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAA,eAAA,CAAAC,EAAAA,EAAAA,EAAAA,CAAAA,MAAA,CAChBzB,WAA2B,EAAA,aAAA,CAAA,EAAA,IAAA,CAAAyB,EAAAA,EAAAA,CAAAA,MAAA,CAC3BzB,WAAA,EAAiCV,mBAAAA,CAAAA,EAAAA,MAAW,KAAA,SAAA,MAAAmC,MAAA,CAC5CzB,WAAA,EAAA,oBAAA,CAAA,EAAkCV,MAAW,KAAA,OAAA,CAAA,EAAA,EAAA,CAAAmC,MAAA,CAC7CzB,WAAA,EAAA,qBAAA,CAAA,EAAmCV,MAAW,KAAA,QAAA,CAAA,EAAA,EAAA,CAAAmC,MAAA,CAC9CzB,WAAA,EAAA,sBAAA,CAAA,EAAoCV,MAAW,KAAA,SAAA,CAAA,EAClDV,KAAA,CAAMuC,SAAY,EAAA,CAAC,CAACvC,KAAM,CAAAuC,SAAA,CAC5B,CAAA;AAAA,GAAA,iBAEAR,KAAA,CAAAK,aAAA,CAAA,KAAA,EAAA;AACCG,IAAAA,SAAA,EAAWI,UAAW,CAAAE,EAAAA,CAAAA,MAAA,CAAGzB,WAAiC,EAAA,oBAAA,CAAA,EAAAwB,eAAA,CAAA,EAAA,EAAA,EAAA,CAAAC,MAAA,CACpDzB,WAAsC,EAAAS,wBAAAA,CAAAA,EAAAA,QAAA,CAC3C,CAAA;AACDiB,IAAAA,OAAS,EAAAN,WAAAA;AAAA,GAAA,iBAERT,KAAA,CAAAK,aAAA,CAAA,KAAA,EAAA;AACCG,IAAAA,SAAA,EAAWI,UAAW,CAAA,EAAA,CAAAE,MAAA,CAAGzB,WAAgC,wBAAAwB,eAAA,CAAA,EAAA,EAAA,EAAA,CAAAC,MAAA,CACnDzB,WAAA,EAAAyB,cAAAA,CAAAA,CAAAA,MAAA,CAA0BnC,MAAW,CAAA,EAAAA,MAAA,CAC1C,CAAA;GAEA,EAAAoB,QACH,kBACCC,KAAA,CAAAK,aAAA,CAAA,KAAA,EAAA;IAAIG,qBAAcnB,WAAA,EAAA,sBAAA,CAAA;AAAA,GAAA,iBAChBW,KAAA,CAAAK,aAAA,CAAA,KAAA,EAAA;IAAIG,qBAAcnB,WAAA,EAAA,oBAAA,CAAA;GAAkC,EAAAf,KAAM,kBAC1D0B,KAAA,CAAAK,aAAA,CAAA,KAAA,EAAA;IAAIG,qBAAcnB,WAAA,EAAA,0BAAA,CAAA;AAAwC,GAAA,EAAAd,OAAQ,CAClE,EAAAE,QAAA,kBAAYuB,KAAA,CAAAK,aAAA,CAAA,KAAA,EAAA;IAAIG,qBAAcnB,WAAA,EAAA,oBAAA,CAAA;AAAA,GAAA,EAAkCZ,QAAS,CAAA,GAAS,IACrF,CACF,CACF,CAAA,CAAA;AAEJ,EAAA;AAEAV,QAAA,CAASiD,WAAc,GAAA,UAAA;;;;"}