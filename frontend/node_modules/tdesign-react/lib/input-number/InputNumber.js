/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-cb0a3966.js';
import React, { forwardRef, useRef, useImperativeHandle } from 'react';
import { ChevronDownIcon, RemoveIcon, ChevronUpIcon, AddIcon } from 'tdesign-icons-react';
import classNames from 'classnames';
import { Input } from '../input/index.js';
import { Button } from '../button/index.js';
import useInputNumber from './useInputNumber.js';
import useGlobalIcon from '../hooks/useGlobalIcon.js';
import { inputNumberDefaultProps } from './defaultProps.js';
import useDefaultProps from '../hooks/useDefaultProps.js';
import '../_chunks/dep-eca3a3de.js';
import '../input/Input.js';
import '../_chunks/dep-6b660ef0.js';
import '../_chunks/dep-48805ab8.js';
import '../_chunks/dep-026a4c6b.js';
import 'lodash-es';
import '../hooks/useLayoutEffect.js';
import '../_chunks/dep-3a09424a.js';
import '../_util/forwardRefWithStatics.js';
import 'hoist-non-react-statics';
import '../hooks/useConfig.js';
import '../config-provider/ConfigContext.js';
import '../_chunks/dep-f97636ce.js';
import '../_chunks/dep-9dbbf468.js';
import 'dayjs';
import '../input/InputGroup.js';
import '../hooks/useControlled.js';
import '../_util/noop.js';
import '../locale/LocalReceiver.js';
import '../config-provider/ConfigProvider.js';
import '../input/defaultProps.js';
import '../_util/parseTNode.js';
import '../_chunks/dep-b908e1fe.js';
import '../input/useLengthLimit.js';
import '../_chunks/dep-6af6bc60.js';
import '../_chunks/dep-87d110df.js';
import '../button/Button.js';
import '../hooks/useDomRefCallback.js';
import '../hooks/useRipple.js';
import '../_chunks/dep-c48e2ca1.js';
import '../hooks/useAnimation.js';
import '../loading/index.js';
import '../loading/Loading.js';
import '../common/Portal.js';
import 'react-dom';
import '../loading/gradient.js';
import '../loading/defaultProps.js';
import '../loading/plugin.js';
import '../_util/react-render.js';
import '../_chunks/dep-52ff3837.js';
import '../common/PluginContainer.js';
import '../button/defaultProps.js';
import '../_chunks/dep-76b39920.js';
import '../hooks/useCommonClassName.js';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function TdInputNumber(originalProps, ref) {
  var _useGlobalIcon = useGlobalIcon({
      ChevronDownIcon: ChevronDownIcon,
      RemoveIcon: RemoveIcon,
      ChevronUpIcon: ChevronUpIcon,
      AddIcon: AddIcon
    }),
    ChevronDownIcon$1 = _useGlobalIcon.ChevronDownIcon,
    RemoveIcon$1 = _useGlobalIcon.RemoveIcon,
    ChevronUpIcon$1 = _useGlobalIcon.ChevronUpIcon,
    AddIcon$1 = _useGlobalIcon.AddIcon;
  var props = useDefaultProps(originalProps, inputNumberDefaultProps);
  var _useInputNumber = useInputNumber(props),
    classPrefix = _useInputNumber.classPrefix,
    wrapClasses = _useInputNumber.wrapClasses,
    addClasses = _useInputNumber.addClasses,
    reduceClasses = _useInputNumber.reduceClasses,
    listeners = _useInputNumber.listeners,
    isError = _useInputNumber.isError,
    inputRef = _useInputNumber.inputRef,
    userInput = _useInputNumber.userInput,
    handleAdd = _useInputNumber.handleAdd,
    handleReduce = _useInputNumber.handleReduce,
    onInnerInputChange = _useInputNumber.onInnerInputChange;
  var wrapRef = useRef(null);
  var status = isError ? "error" : props.status;
  var addIcon = props.theme === "column" ? /* @__PURE__ */React.createElement(ChevronUpIcon$1, {
    size: props.size
  }) : /* @__PURE__ */React.createElement(AddIcon$1, {
    size: props.size
  });
  var reduceIcon = props.theme === "column" ? /* @__PURE__ */React.createElement(ChevronDownIcon$1, {
    size: props.size
  }) : /* @__PURE__ */React.createElement(RemoveIcon$1, {
    size: props.size
  });
  useImperativeHandle(ref, function () {
    return {
      currentElement: wrapRef.current,
      inputElement: inputRef.current
    };
  });
  return /* @__PURE__ */React.createElement("div", {
    className: classNames(wrapClasses, props.className),
    style: props.style,
    ref: wrapRef
  }, props.theme !== "normal" && /* @__PURE__ */React.createElement(Button, {
    className: reduceClasses,
    disabled: props.disabled,
    onClick: handleReduce,
    variant: "outline",
    shape: "square",
    icon: reduceIcon
  }), /* @__PURE__ */React.createElement(Input, _objectSpread(_objectSpread({
    ref: inputRef,
    autocomplete: "off",
    disabled: props.disabled,
    readonly: props.readonly,
    placeholder: props.placeholder,
    autoWidth: props.autoWidth,
    align: props.align || (props.theme === "row" ? "center" : void 0),
    status: status,
    label: props.label,
    suffix: props.suffix,
    value: userInput,
    onChange: onInnerInputChange,
    size: props.size
  }, listeners), props.inputProps || {})), props.theme !== "normal" && /* @__PURE__ */React.createElement(Button, {
    className: addClasses,
    disabled: props.disabled,
    onClick: handleAdd,
    variant: "outline",
    shape: "square",
    icon: addIcon
  }), props.tips && /* @__PURE__ */React.createElement("div", {
    className: classNames("".concat(classPrefix, "-input__tips"), "".concat(classPrefix, "-input__tips--").concat(status))
  }, props.tips));
}
var InputNumber = /*#__PURE__*/forwardRef(TdInputNumber);
InputNumber.displayName = "InputNumber";

export { InputNumber as default };
//# sourceMappingURL=InputNumber.js.map
