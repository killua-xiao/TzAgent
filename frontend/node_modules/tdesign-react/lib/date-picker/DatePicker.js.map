{"version":3,"file":"DatePicker.js","sources":["../../../components/date-picker/DatePicker.tsx"],"sourcesContent":["import React, { forwardRef, useCallback, useEffect } from 'react';\n\nimport classNames from 'classnames';\nimport dayjs from 'dayjs';\nimport { isDate } from 'lodash-es';\n\nimport { formatDate, formatTime, getDefaultFormat, parseToDayjs } from '@tdesign/common-js/date-picker/format';\nimport { addMonth, covertToDate, extractTimeObj, isSame, subtractMonth } from '@tdesign/common-js/date-picker/utils';\n\nimport useConfig from '../hooks/useConfig';\nimport useDefaultProps from '../hooks/useDefaultProps';\nimport useLatest from '../hooks/useLatest';\nimport useUpdateEffect from '../hooks/useUpdateEffect';\nimport { useLocaleReceiver } from '../locale/LocalReceiver';\nimport SelectInput from '../select-input';\nimport { datePickerDefaultProps } from './defaultProps';\nimport useSingle from './hooks/useSingle';\nimport SinglePanel from './panel/SinglePanel';\n\nimport type { StyledProps } from '../common';\nimport type { TagInputRemoveContext } from '../tag-input';\nimport type { DateMultipleValue, DateValue, PresetDate, TdDatePickerProps } from './type';\n\nexport interface DatePickerProps extends TdDatePickerProps, StyledProps {}\n\nconst DatePicker = forwardRef<HTMLDivElement, DatePickerProps>((originalProps, ref) => {\n  const { classPrefix } = useConfig();\n\n  const props = useDefaultProps<DatePickerProps>(originalProps, datePickerDefaultProps);\n\n  const {\n    className,\n    style,\n    disabled,\n    mode,\n    enableTimePicker,\n    disableDate,\n    firstDayOfWeek,\n    presets,\n    defaultTime,\n    timePickerProps,\n    presetsPlacement,\n    needConfirm,\n    multiple,\n    label,\n    disableTime,\n    onClear,\n    onPick,\n  } = props;\n\n  const {\n    inputValue,\n    popupVisible,\n    inputProps,\n    popupProps,\n    tagInputProps,\n    value,\n    year,\n    month,\n    time,\n    onChange,\n    setIsHoverCell,\n    setInputValue,\n    setPopupVisible,\n    setTime,\n    setYear,\n    setMonth,\n    cacheValue,\n    setCacheValue,\n  } = useSingle(props);\n\n  const [local] = useLocaleReceiver('datePicker');\n  const { format, timeFormat, valueType } = getDefaultFormat({\n    mode,\n    format: props.format,\n    valueType: props.valueType,\n    enableTimePicker: multiple ? false : enableTimePicker,\n  });\n\n  const onTriggerNeedConfirm = useLatest(() => {\n    if (needConfirm || !enableTimePicker || popupVisible) return;\n    const nextValue = formatDate(inputValue, { format });\n    if (nextValue) {\n      const currentValue = formatDate(value, { format });\n      if (currentValue === nextValue) return;\n      onChange(formatDate(inputValue, { format, targetFormat: valueType }), {\n        dayjsValue: parseToDayjs(inputValue, format),\n        trigger: 'confirm',\n      });\n    } else {\n      setInputValue(\n        formatDate(value, {\n          format,\n        }),\n      );\n    }\n  });\n\n  const handlePopupInvisible = () => {\n    setPopupVisible(false);\n    props.popupProps?.onVisibleChange?.(false, {});\n  };\n\n  useUpdateEffect(() => {\n    //  日期时间选择器不需要点击确认按钮完成的操作\n    onTriggerNeedConfirm.current();\n  }, [popupVisible]);\n\n  useEffect(() => {\n    if (multiple) return;\n    // 面板展开重置数据\n    // Date valueType、week mode 、quarter mode nad empty string don't need to be parsed\n    const dateValue =\n      value && !isDate(value) && !['week', 'quarter'].includes(props.mode)\n        ? covertToDate(value as string, valueType)\n        : value;\n    setCacheValue(formatDate(dateValue, { format }));\n    setInputValue(formatDate(dateValue, { format }));\n\n    if (popupVisible) {\n      setYear(parseToDayjs(value as DateValue, format).year());\n      setMonth(parseToDayjs(value as DateValue, format).month());\n      setTime(formatTime(value, format, timeFormat, defaultTime));\n    } else {\n      setIsHoverCell(false);\n    }\n    // eslint-disable-next-line\n  }, [popupVisible]);\n\n  // 日期 hover\n  function onCellMouseEnter(date: Date) {\n    if (multiple) return;\n    setIsHoverCell(true);\n    setInputValue(formatDate(date, { format }));\n  }\n\n  // 日期 leave\n  function onCellMouseLeave() {\n    if (multiple) return;\n    setIsHoverCell(false);\n    setInputValue(formatDate(cacheValue, { format }));\n  }\n\n  // 日期点击\n  function onCellClick(date: Date) {\n    onPick?.(date);\n    setIsHoverCell(false);\n    // date 模式自动切换年月\n    if (mode === 'date') {\n      setYear(date.getFullYear());\n      setMonth(date.getMonth());\n    }\n    if (enableTimePicker) {\n      setCacheValue(formatDate(date, { format }));\n      if (props.needConfirm) return;\n      handlePopupInvisible();\n      onChange(formatDate(date, { format, targetFormat: valueType }), {\n        dayjsValue: parseToDayjs(date, format),\n        trigger: 'pick',\n      });\n    } else {\n      if (multiple) {\n        const newDate = processDate(date);\n        onChange(newDate, {\n          dayjsValue: parseToDayjs(date, format),\n          trigger: 'pick',\n        });\n        return;\n      }\n      handlePopupInvisible();\n      onChange(formatDate(date, { format, targetFormat: valueType }), {\n        dayjsValue: parseToDayjs(date, format),\n        trigger: 'pick',\n      });\n    }\n  }\n  // 头部快速切换\n  const onJumperClick = React.useCallback(\n    ({ trigger }) => {\n      const monthCountMap = { date: 1, week: 1, month: 12, quarter: 12, year: 120 };\n      const monthCount = monthCountMap[mode] || 0;\n\n      const current = new Date(year, month);\n\n      let next = null;\n      if (trigger === 'prev') {\n        next = subtractMonth(current, monthCount);\n      } else if (trigger === 'current') {\n        next = new Date();\n      } else if (trigger === 'next') {\n        next = addMonth(current, monthCount);\n      }\n\n      const nextYear = next.getFullYear();\n      const nextMonth = next.getMonth();\n\n      setYear(nextYear);\n      setMonth(nextMonth);\n    },\n    [year, month, mode, setYear, setMonth],\n  );\n\n  // timePicker 点击\n  function onTimePickerChange(val: string) {\n    setTime(val);\n\n    const { hours, minutes, seconds, milliseconds, meridiem } = extractTimeObj(val);\n\n    // am pm 12小时制转化 24小时制\n    let nextHours = hours;\n    if (/am/i.test(meridiem) && nextHours === 12) nextHours -= 12;\n    if (/pm/i.test(meridiem) && nextHours < 12) nextHours += 12;\n    const currentDate = !dayjs(inputValue, format).isValid() ? dayjs() : dayjs(inputValue, format);\n    const nextDate = currentDate.hour(nextHours).minute(minutes).second(seconds).millisecond(milliseconds).toDate();\n    setInputValue(formatDate(nextDate, { format }));\n    setCacheValue(formatDate(nextDate, { format }));\n\n    onPick?.(nextDate);\n  }\n\n  // 确定\n  function onConfirmClick({ e }) {\n    const nextValue = formatDate(inputValue, { format });\n    props?.onConfirm?.({ e, date: nextValue });\n    handlePopupInvisible();\n    if (nextValue) {\n      onChange(formatDate(inputValue, { format, targetFormat: valueType }), {\n        dayjsValue: parseToDayjs(inputValue, format),\n        trigger: 'confirm',\n      });\n    } else {\n      setInputValue(formatDate(value, { format }));\n    }\n  }\n\n  // 预设\n  function onPresetClick(preset, context: { preset: PresetDate; e: React.MouseEvent<HTMLDivElement> }) {\n    let presetValue = preset;\n    if (typeof preset === 'function') {\n      presetValue = preset();\n    }\n    const formattedPreset = formatDate(presetValue, { format, targetFormat: valueType });\n    const formattedInput = formatDate(presetValue, { format });\n\n    setInputValue(formattedInput);\n    setCacheValue(formattedInput);\n\n    setTime(formatTime(presetValue, format, timeFormat, props.defaultTime));\n    setYear(parseToDayjs(presetValue, format).year());\n    setMonth(parseToDayjs(presetValue, format).month());\n\n    // 先回调 onVisibleChange\n    handlePopupInvisible();\n    // 再回调 onChange（方便用户覆盖弹窗开闭状态）\n    onChange(formattedPreset, {\n      dayjsValue: parseToDayjs(presetValue, format),\n      trigger: 'preset',\n    });\n    props.onPresetClick?.(context);\n  }\n\n  const onYearChange = useCallback((year: number) => {\n    setYear(year);\n    // eslint-disable-next-line\n  }, []);\n\n  const onMonthChange = useCallback((month: number) => {\n    setMonth(month);\n    // eslint-disable-next-line\n  }, []);\n\n  function processDate(date: Date) {\n    let isSameDate: boolean;\n    const currentValue = (value || []) as DateMultipleValue;\n    if (mode !== 'week')\n      isSameDate = currentValue.some((val) =>\n        isSame(parseToDayjs(val, format).toDate(), date, mode, local.dayjsLocale),\n      );\n    else {\n      isSameDate = currentValue.some((val) => val === dayjs(date).locale(local.dayjsLocale).format(format));\n    }\n    let currentDate: DateMultipleValue;\n\n    if (!isSameDate) {\n      currentDate = currentValue.concat(formatDate(date, { format, targetFormat: valueType }));\n    } else {\n      currentDate = currentValue.filter(\n        (val) =>\n          formatDate(val, { format, targetFormat: valueType }) !==\n          formatDate(date, { format, targetFormat: valueType }),\n      );\n    }\n\n    return currentDate?.sort((a, b) => dayjs(a).valueOf() - dayjs(b).valueOf());\n  }\n\n  const onTagRemoveClick = (ctx: TagInputRemoveContext) => {\n    if (['week', 'quarter'].includes(props.mode)) {\n      onChange?.(ctx.value, {\n        trigger: 'tag-remove',\n      });\n      return;\n    }\n\n    const removeDate = dayjs(ctx.item).toDate();\n    const newDate = processDate(removeDate);\n    onChange?.(newDate, {\n      dayjsValue: parseToDayjs(removeDate, format),\n      trigger: 'tag-remove',\n    });\n  };\n\n  const onTagClearClick = ({ e }) => {\n    e.stopPropagation();\n    handlePopupInvisible();\n    onChange([], { dayjsValue: dayjs(), trigger: 'clear' });\n    onClear?.({ e });\n  };\n\n  const panelProps = {\n    value: cacheValue,\n    year,\n    month,\n    mode,\n    format,\n    presets,\n    time: multiple ? false : time,\n    disableDate,\n    firstDayOfWeek,\n    timePickerProps,\n    enableTimePicker: multiple ? false : enableTimePicker,\n    presetsPlacement,\n    popupVisible,\n    needConfirm,\n    multiple,\n    onCellClick,\n    onCellMouseEnter,\n    onCellMouseLeave,\n    onJumperClick,\n    onConfirmClick,\n    onPresetClick,\n    onYearChange,\n    onMonthChange,\n    onTimePickerChange,\n    disableTime,\n  };\n\n  return (\n    <div className={classNames(`${classPrefix}-date-picker`, className)} style={style} ref={ref}>\n      <SelectInput\n        disabled={disabled}\n        value={inputValue}\n        status={props.status}\n        tips={props.tips}\n        borderless={props.borderless}\n        label={label}\n        popupProps={popupProps}\n        inputProps={inputProps}\n        popupVisible={popupVisible}\n        panel={<SinglePanel {...panelProps} />}\n        multiple={multiple}\n        tagInputProps={{\n          onRemove: onTagRemoveClick,\n          ...tagInputProps,\n        }}\n        onClear={onTagClearClick}\n      />\n    </div>\n  );\n});\n\nDatePicker.displayName = 'DatePicker';\n\nexport default DatePicker;\n"],"names":["DatePicker","forwardRef","originalProps","ref","_useConfig","useConfig","classPrefix","props","useDefaultProps","datePickerDefaultProps","className","style","disabled","mode","enableTimePicker","disableDate","firstDayOfWeek","presets","defaultTime","timePickerProps","presetsPlacement","needConfirm","multiple","label","disableTime","onClear","onPick","_useSingle","useSingle","inputValue","popupVisible","inputProps","popupProps","tagInputProps","value","year","month","time","onChange","setIsHoverCell","setInputValue","setPopupVisible","setTime","setYear","setMonth","cacheValue","setCacheValue","_useLocaleReceiver","useLocaleReceiver","_useLocaleReceiver2","_slicedToArray","local","_getDefaultFormat","getDefaultFormat","format","valueType","timeFormat","onTriggerNeedConfirm","useLatest","nextValue","formatDate","currentValue","targetFormat","dayjsValue","parseToDayjs","trigger","handlePopupInvisible","_props$popupProps","_props$popupProps$onV","onVisibleChange","call","useUpdateEffect","current","useEffect","dateValue","isDate","includes","covertToDate","formatTime","onCellMouseEnter","date","onCellMouseLeave","onCellClick","getFullYear","getMonth","newDate","processDate","onJumperClick","React","useCallback","_ref","monthCountMap","week","quarter","monthCount","Date","next","subtractMonth","addMonth","nextYear","nextMonth","onTimePickerChange","val","_extractTimeObj","extractTimeObj","hours","minutes","seconds","milliseconds","meridiem","nextHours","test","currentDate","dayjs","isValid","nextDate","hour","minute","second","millisecond","toDate","onConfirmClick","_ref2","_props$onConfirm","e","onConfirm","onPresetClick","preset","context","_props$onPresetClick","presetValue","formattedPreset","formattedInput","onYearChange","onMonthChange","_currentDate","isSameDate","some","isSame","dayjsLocale","locale","concat","filter","sort","a","b","valueOf","onTagRemoveClick","ctx","removeDate","item","onTagClearClick","_ref3","stopPropagation","panelProps","createElement","classNames","SelectInput","status","tips","borderless","panel","SinglePanel","_objectSpread","onRemove","displayName"],"mappings":"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"}