{"version":3,"file":"RangePanel.js","sources":["../../../../components/date-picker/panel/RangePanel.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport { isFunction } from 'lodash-es';\nimport { getDefaultFormat, parseToDayjs } from '@tdesign/common-js/date-picker/format';\nimport useConfig from '../../hooks/useConfig';\nimport { StyledProps } from '../../common';\nimport PanelContent from './PanelContent';\nimport ExtraContent from './ExtraContent';\nimport useTableData from '../hooks/useTableData';\nimport useDisableDate from '../hooks/useDisableDate';\nimport useDefaultProps from '../../hooks/useDefaultProps';\nimport { parseToDateTime } from '../utils';\n\nimport type { TdDateRangePickerProps } from '../type';\nimport type { TdTimePickerProps } from '../../time-picker';\n\nexport interface RangePanelProps extends TdDateRangePickerProps, StyledProps {\n  hoverValue?: string[];\n  activeIndex?: number;\n  isFirstValueSelected?: boolean;\n  popupVisible?: boolean;\n  panelPreselection?: boolean;\n  year?: number[];\n  month?: number[];\n  time?: string[];\n  cancelRangeSelectLimit?: boolean;\n  onClick?: (context: { e: React.MouseEvent<HTMLDivElement> }) => void;\n  onCellClick?: (date: Date, context: { e: React.MouseEvent<HTMLDivElement>; partial: 'start' | 'end' }) => void;\n  onCellMouseEnter?: (date: Date, context: { partial: 'start' | 'end' }) => void;\n  onCellMouseLeave?: (context: { e: React.MouseEvent<HTMLDivElement> }) => void;\n  onJumperClick?: (context: { e?: MouseEvent; trigger: string; partial: 'start' | 'end' }) => void;\n  onConfirmClick?: (context: { e: React.MouseEvent<HTMLButtonElement> }) => void;\n  onPresetClick?: any;\n  onYearChange?: (year: number, context: { partial: 'start' | 'end' }) => void;\n  onMonthChange?: (month: number, context: { partial: 'start' | 'end' }) => void;\n  onTimePickerChange?: TdTimePickerProps['onChange'];\n}\n\nconst RangePanel = forwardRef<HTMLDivElement, RangePanelProps>((originalProps, ref) => {\n  const { classPrefix, datePicker: globalDatePickerConfig } = useConfig();\n  const panelName = `${classPrefix}-date-range-picker__panel`;\n  const props = useDefaultProps<RangePanelProps>(originalProps, {\n    mode: 'date',\n    panelPreselection: true,\n    enableTimePicker: false,\n    presetsPlacement: 'bottom',\n    needConfirm: true,\n  });\n  const {\n    value = [],\n    hoverValue = [],\n    mode,\n    presets,\n    enableTimePicker,\n    presetsPlacement,\n    disableDate: disableDateFromProps,\n    firstDayOfWeek = globalDatePickerConfig.firstDayOfWeek,\n    isFirstValueSelected,\n    needConfirm,\n    style,\n    className,\n    activeIndex,\n    year,\n    month,\n    time = [],\n    panelPreselection,\n    onPresetClick,\n    cancelRangeSelectLimit,\n    onClick,\n    onConfirmClick,\n    disableTime,\n  } = props;\n\n  const { format } = getDefaultFormat({\n    mode: props.mode,\n    format: props.format,\n    enableTimePicker: props.enableTimePicker,\n  });\n\n  const disableDateOptions = useDisableDate({\n    disableDate: disableDateFromProps,\n    mode,\n    format,\n    start:\n      isFirstValueSelected && activeIndex === 1\n        ? new Date(parseToDayjs(value[0], format, 'start').toDate().setHours(0, 0, 0))\n        : undefined,\n    end:\n      isFirstValueSelected && activeIndex === 0\n        ? new Date(parseToDayjs(value[1], format).toDate().setHours(23, 59, 59))\n        : undefined,\n  });\n\n  const disableTimeOptions: TdTimePickerProps['disableTime'] = (h, m, s, ms) => {\n    if (!isFunction(disableTime)) {\n      return {};\n    }\n\n    const [startTime, endTime] = value || [];\n\n    return disableTime([parseToDateTime(startTime, format), parseToDateTime(endTime, format, [h, m, s, ms])], {\n      partial: activeIndex === 0 ? 'start' : 'end',\n    });\n  };\n\n  const [startYear, endYear] = year;\n  const [startMonth, endMonth] = month;\n\n  // 是否隐藏预选状态,只有 value 有值的时候需要隐藏\n  const hidePreselection = !panelPreselection && value.length === 2;\n\n  const startTableData = useTableData({\n    isRange: true,\n    start: value[0] ? parseToDayjs(value[0], format).toDate() : undefined,\n    end: value[1] ? parseToDayjs(value[1], format).toDate() : undefined,\n    hoverStart: !hidePreselection && hoverValue[0] ? parseToDayjs(hoverValue[0], format).toDate() : undefined,\n    hoverEnd: !hidePreselection && hoverValue[1] ? parseToDayjs(hoverValue[1], format).toDate() : undefined,\n    year: startYear,\n    month: startMonth,\n    mode,\n    firstDayOfWeek,\n    cancelRangeSelectLimit,\n    ...disableDateOptions,\n  });\n  const endTableData = useTableData({\n    isRange: true,\n    start: value[0] ? parseToDayjs(value[0], format).toDate() : undefined,\n    end: value[1] ? parseToDayjs(value[1], format).toDate() : undefined,\n    hoverStart: !hidePreselection && hoverValue[0] ? parseToDayjs(hoverValue[0], format).toDate() : undefined,\n    hoverEnd: !hidePreselection && hoverValue[1] ? parseToDayjs(hoverValue[1], format).toDate() : undefined,\n    year: mode === 'year' && endYear - startYear <= 9 ? endYear + 9 : endYear,\n    month: endMonth,\n    mode,\n    firstDayOfWeek,\n    cancelRangeSelectLimit,\n    ...disableDateOptions,\n  });\n\n  const panelContentProps = {\n    mode,\n    format,\n    firstDayOfWeek,\n\n    popupVisible: props.popupVisible,\n    enableTimePicker: props.enableTimePicker,\n    timePickerProps: {\n      disableTime: disableTimeOptions,\n      ...props.timePickerProps,\n    },\n    onMonthChange: props.onMonthChange,\n    onYearChange: props.onYearChange,\n    onJumperClick: props.onJumperClick,\n    onCellClick: props.onCellClick,\n    onCellMouseEnter: props.onCellMouseEnter,\n    onCellMouseLeave: props.onCellMouseLeave,\n    onTimePickerChange: props.onTimePickerChange,\n  };\n\n  return (\n    <div\n      ref={ref}\n      style={style}\n      className={classNames(panelName, className, {\n        [`${panelName}--direction-row`]: ['left', 'right'].includes(presetsPlacement),\n      })}\n      onClick={(e) => onClick?.({ e })}\n    >\n      {['top', 'left'].includes(presetsPlacement) ? (\n        <ExtraContent\n          presets={presets}\n          selectedValue={value[activeIndex]}\n          enableTimePicker={enableTimePicker}\n          onPresetClick={onPresetClick}\n          onConfirmClick={onConfirmClick}\n          presetsPlacement={presetsPlacement}\n          needConfirm={needConfirm}\n        />\n      ) : null}\n      <div className={`${panelName}-content-wrapper`}>\n        {!enableTimePicker ? (\n          [\n            <PanelContent\n              key=\"startPanel\"\n              partial={'start'}\n              year={startYear}\n              month={startMonth}\n              time={time[activeIndex]}\n              tableData={startTableData}\n              value={value}\n              {...panelContentProps}\n            />,\n            <PanelContent\n              key=\"endPanel\"\n              partial={'end'}\n              year={endYear}\n              month={endMonth}\n              time={time[activeIndex]}\n              value={value}\n              tableData={endTableData}\n              internalYear={year}\n              {...panelContentProps}\n            />,\n          ]\n        ) : (\n          <PanelContent\n            key=\"start\"\n            partial={activeIndex ? 'end' : 'start'}\n            year={activeIndex ? endYear : startYear}\n            month={activeIndex ? endMonth : startMonth}\n            time={activeIndex ? time[1] : time[0]}\n            value={value}\n            tableData={activeIndex ? endTableData : startTableData}\n            {...panelContentProps}\n          />\n        )}\n      </div>\n      {['bottom', 'right'].includes(presetsPlacement) ? (\n        <ExtraContent\n          presets={presets}\n          selectedValue={value[activeIndex]}\n          enableTimePicker={enableTimePicker}\n          onPresetClick={onPresetClick}\n          onConfirmClick={onConfirmClick}\n          presetsPlacement={presetsPlacement}\n          needConfirm={needConfirm}\n        />\n      ) : null}\n    </div>\n  );\n});\n\nRangePanel.displayName = 'RangePanel';\n\nexport default RangePanel;\n"],"names":["RangePanel","forwardRef","originalProps","ref","_useConfig","useConfig","classPrefix","globalDatePickerConfig","datePicker","panelName","props","useDefaultProps","mode","panelPreselection","enableTimePicker","presetsPlacement","needConfirm","_props$value","value","_props$hoverValue","hoverValue","presets","disableDateFromProps","disableDate","_props$firstDayOfWeek","firstDayOfWeek","isFirstValueSelected","style","className","activeIndex","year","month","_props$time","time","onPresetClick","cancelRangeSelectLimit","onClick","onConfirmClick","disableTime","_getDefaultFormat","getDefaultFormat","format","disableDateOptions","useDisableDate","start","Date","parseToDayjs","toDate","setHours","end","disableTimeOptions","h","m","s","ms","isFunction","_ref","_ref2","_slicedToArray","startTime","endTime","parseToDateTime","partial","_year","startYear","endYear","_month","startMonth","endMonth","hidePreselection","length","startTableData","useTableData","_objectSpread","isRange","hoverStart","hoverEnd","endTableData","panelContentProps","popupVisible","timePickerProps","onMonthChange","onYearChange","onJumperClick","onCellClick","onCellMouseEnter","onCellMouseLeave","onTimePickerChange","React","createElement","classNames","_defineProperty","concat","includes","e","ExtraContent","selectedValue","PanelContent","key","tableData","internalYear","displayName"],"mappings":"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"}