/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-cb0a3966.js';
import { _ as _slicedToArray } from '../../_chunks/dep-48805ab8.js';
import React, { forwardRef } from 'react';
import classNames from 'classnames';
import { isFunction } from 'lodash-es';
import { g as getDefaultFormat, p as parseToDayjs } from '../../_chunks/dep-2c0a85a4.js';
import useConfig from '../../hooks/useConfig.js';
import PanelContent from './PanelContent.js';
import ExtraContent from './ExtraContent.js';
import useTableData from '../hooks/useTableData.js';
import useDisableDate from '../hooks/useDisableDate.js';
import useDefaultProps from '../../hooks/useDefaultProps.js';
import { parseToDateTime } from '../utils.js';
import '../../_chunks/dep-eca3a3de.js';
import '../../_chunks/dep-026a4c6b.js';
import 'dayjs';
import '../../_chunks/dep-9dbbf468.js';
import '../../_chunks/dep-f9b15bc8.js';
import '../../_chunks/dep-b908e1fe.js';
import '../../config-provider/ConfigContext.js';
import '../../_chunks/dep-f97636ce.js';
import '../base/Header.js';
import '../../_chunks/dep-87d110df.js';
import '../../locale/LocalReceiver.js';
import '../../config-provider/ConfigProvider.js';
import '../../select/index.js';
import '../../select/base/Select.js';
import '../../_chunks/dep-6b660ef0.js';
import '../../_util/composeRefs.js';
import '../../_util/forwardRefWithStatics.js';
import 'hoist-non-react-statics';
import '../../_util/helper.js';
import '../../_util/noop.js';
import '../../_util/parseTNode.js';
import '../../common/FakeArrow.js';
import '../../hooks/useControlled.js';
import '../../loading/index.js';
import '../../loading/Loading.js';
import '../../_chunks/dep-3a09424a.js';
import '../../common/Portal.js';
import 'react-dom';
import '../../hooks/useLayoutEffect.js';
import '../../loading/gradient.js';
import '../../_chunks/dep-c48e2ca1.js';
import '../../_chunks/dep-6af6bc60.js';
import '../../hooks/useDomRefCallback.js';
import '../../loading/defaultProps.js';
import '../../loading/plugin.js';
import '../../_util/react-render.js';
import '../../_chunks/dep-52ff3837.js';
import '../../common/PluginContainer.js';
import '../../select-input/index.js';
import '../../select-input/SelectInput.js';
import '../../popup/index.js';
import '../../popup/Popup.js';
import 'react-transition-group';
import '../../_util/ref.js';
import 'react-is';
import '../../_util/isFragment.js';
import '../../hooks/useAnimation.js';
import '../../hooks/useAttach.js';
import '../../hooks/useMutationObserver.js';
import '../../hooks/useLatest.js';
import '../../hooks/usePopper.js';
import '@popperjs/core';
import 'react-fast-compare';
import '../../hooks/useWindowSize.js';
import '../../popup/defaultProps.js';
import '../../popup/hooks/useTrigger.js';
import '../../_util/listener.js';
import '../../popup/utils/transition.js';
import '../../popup/PopupPlugin.js';
import '../../select-input/useSingle.js';
import '../../input/index.js';
import '../../input/Input.js';
import 'tdesign-icons-react';
import '../../hooks/useGlobalIcon.js';
import '../../input/InputGroup.js';
import '../../input/defaultProps.js';
import '../../input/useLengthLimit.js';
import '../../select-input/useMultiple.js';
import '../../tag-input/index.js';
import '../../tag-input/TagInput.js';
import '../../hooks/useDragSorter.js';
import '../../hooks/useEventCallback.js';
import '../../tag-input/defaultProps.js';
import '../../tag-input/useHover.js';
import '../../tag-input/useTagList.js';
import '../../tag/index.js';
import '../../tag/Tag.js';
import '../../_chunks/dep-3c3d29db.js';
import '../../tag/defaultProps.js';
import '../../tag/CheckTag.js';
import '../../_chunks/dep-dbcf7b24.js';
import '../../tag/CheckTagGroup.js';
import '../../tag-input/useTagScroll.js';
import '../../select-input/useOverlayInnerStyle.js';
import '../../select-input/defaultProps.js';
import '../../select/defaultProps.js';
import '../../_chunks/dep-72472aa7.js';
import '../../select/base/OptionGroup.js';
import '../../select/base/Option.js';
import '../../hooks/useRipple.js';
import '../../select/base/PopupContent.js';
import '../../select/hooks/usePanelVirtualScroll.js';
import '../../hooks/useVirtualScroll.js';
import '../../pagination/index.js';
import '../../pagination/Pagination.js';
import '../../input-number/index.js';
import '../../input-number/InputNumber.js';
import '../../button/index.js';
import '../../button/Button.js';
import '../../button/defaultProps.js';
import '../../input-number/useInputNumber.js';
import '../../_chunks/dep-76b39920.js';
import '../../hooks/useCommonClassName.js';
import '../../input-number/defaultProps.js';
import '../../input-adornment/InputAdornment.js';
import '../../pagination/hooks/useBoundaryJumper.js';
import '../../pagination/hooks/usePrevNextJumper.js';
import '../../pagination/hooks/usePageNumber.js';
import '../../pagination/hooks/useTotal.js';
import '../../pagination/validators.js';
import '../../pagination/defaultProps.js';
import '../../pagination/PaginationMini.js';
import '../base/Table.js';
import '../base/Cell.js';
import '../../_chunks/dep-b1c8a9c9.js';
import '../../_chunks/dep-8ef7b882.js';
import '../../time-picker/index.js';
import '../../time-picker/TimePicker.js';
import '../../_chunks/dep-2990bb49.js';
import '../../time-picker/hooks/useTimePickerTextConfig.js';
import '../../hooks/useDebounce.js';
import '../../hooks/usePersistFn.js';
import '../../hooks/usePropsRef.js';
import '../../time-picker/TimeRangePicker.js';
import '../../range-input/index.js';
import '../../range-input/RangeInput.js';
import '../../range-input/defaultProps.js';
import '../../range-input/RangeInputPopup.js';
import '../../time-picker/panel/TimePickerPanel.js';
import '../../time-picker/defaultProps.js';
import '../base/Footer.js';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var RangePanel = /*#__PURE__*/forwardRef(function (originalProps, ref) {
  var _useConfig = useConfig(),
    classPrefix = _useConfig.classPrefix,
    globalDatePickerConfig = _useConfig.datePicker;
  var panelName = "".concat(classPrefix, "-date-range-picker__panel");
  var props = useDefaultProps(originalProps, {
    mode: "date",
    panelPreselection: true,
    enableTimePicker: false,
    presetsPlacement: "bottom",
    needConfirm: true
  });
  var _props$value = props.value,
    value = _props$value === void 0 ? [] : _props$value,
    _props$hoverValue = props.hoverValue,
    hoverValue = _props$hoverValue === void 0 ? [] : _props$hoverValue,
    mode = props.mode,
    presets = props.presets,
    enableTimePicker = props.enableTimePicker,
    presetsPlacement = props.presetsPlacement,
    disableDateFromProps = props.disableDate,
    _props$firstDayOfWeek = props.firstDayOfWeek,
    firstDayOfWeek = _props$firstDayOfWeek === void 0 ? globalDatePickerConfig.firstDayOfWeek : _props$firstDayOfWeek,
    isFirstValueSelected = props.isFirstValueSelected,
    needConfirm = props.needConfirm,
    style = props.style,
    className = props.className,
    activeIndex = props.activeIndex,
    year = props.year,
    month = props.month,
    _props$time = props.time,
    time = _props$time === void 0 ? [] : _props$time,
    panelPreselection = props.panelPreselection,
    onPresetClick = props.onPresetClick,
    cancelRangeSelectLimit = props.cancelRangeSelectLimit,
    _onClick = props.onClick,
    onConfirmClick = props.onConfirmClick,
    disableTime = props.disableTime;
  var _getDefaultFormat = getDefaultFormat({
      mode: props.mode,
      format: props.format,
      enableTimePicker: props.enableTimePicker
    }),
    format = _getDefaultFormat.format;
  var disableDateOptions = useDisableDate({
    disableDate: disableDateFromProps,
    mode: mode,
    format: format,
    start: isFirstValueSelected && activeIndex === 1 ? new Date(parseToDayjs(value[0], format, "start").toDate().setHours(0, 0, 0)) : void 0,
    end: isFirstValueSelected && activeIndex === 0 ? new Date(parseToDayjs(value[1], format).toDate().setHours(23, 59, 59)) : void 0
  });
  var disableTimeOptions = function disableTimeOptions(h, m, s, ms) {
    if (!isFunction(disableTime)) {
      return {};
    }
    var _ref = value || [],
      _ref2 = _slicedToArray(_ref, 2),
      startTime = _ref2[0],
      endTime = _ref2[1];
    return disableTime([parseToDateTime(startTime, format), parseToDateTime(endTime, format, [h, m, s, ms])], {
      partial: activeIndex === 0 ? "start" : "end"
    });
  };
  var _year = _slicedToArray(year, 2),
    startYear = _year[0],
    endYear = _year[1];
  var _month = _slicedToArray(month, 2),
    startMonth = _month[0],
    endMonth = _month[1];
  var hidePreselection = !panelPreselection && value.length === 2;
  var startTableData = useTableData(_objectSpread({
    isRange: true,
    start: value[0] ? parseToDayjs(value[0], format).toDate() : void 0,
    end: value[1] ? parseToDayjs(value[1], format).toDate() : void 0,
    hoverStart: !hidePreselection && hoverValue[0] ? parseToDayjs(hoverValue[0], format).toDate() : void 0,
    hoverEnd: !hidePreselection && hoverValue[1] ? parseToDayjs(hoverValue[1], format).toDate() : void 0,
    year: startYear,
    month: startMonth,
    mode: mode,
    firstDayOfWeek: firstDayOfWeek,
    cancelRangeSelectLimit: cancelRangeSelectLimit
  }, disableDateOptions));
  var endTableData = useTableData(_objectSpread({
    isRange: true,
    start: value[0] ? parseToDayjs(value[0], format).toDate() : void 0,
    end: value[1] ? parseToDayjs(value[1], format).toDate() : void 0,
    hoverStart: !hidePreselection && hoverValue[0] ? parseToDayjs(hoverValue[0], format).toDate() : void 0,
    hoverEnd: !hidePreselection && hoverValue[1] ? parseToDayjs(hoverValue[1], format).toDate() : void 0,
    year: mode === "year" && endYear - startYear <= 9 ? endYear + 9 : endYear,
    month: endMonth,
    mode: mode,
    firstDayOfWeek: firstDayOfWeek,
    cancelRangeSelectLimit: cancelRangeSelectLimit
  }, disableDateOptions));
  var panelContentProps = {
    mode: mode,
    format: format,
    firstDayOfWeek: firstDayOfWeek,
    popupVisible: props.popupVisible,
    enableTimePicker: props.enableTimePicker,
    timePickerProps: _objectSpread({
      disableTime: disableTimeOptions
    }, props.timePickerProps),
    onMonthChange: props.onMonthChange,
    onYearChange: props.onYearChange,
    onJumperClick: props.onJumperClick,
    onCellClick: props.onCellClick,
    onCellMouseEnter: props.onCellMouseEnter,
    onCellMouseLeave: props.onCellMouseLeave,
    onTimePickerChange: props.onTimePickerChange
  };
  return /* @__PURE__ */React.createElement("div", {
    ref: ref,
    style: style,
    className: classNames(panelName, className, _defineProperty({}, "".concat(panelName, "--direction-row"), ["left", "right"].includes(presetsPlacement))),
    onClick: function onClick(e) {
      return _onClick === null || _onClick === void 0 ? void 0 : _onClick({
        e: e
      });
    }
  }, ["top", "left"].includes(presetsPlacement) ? /* @__PURE__ */React.createElement(ExtraContent, {
    presets: presets,
    selectedValue: value[activeIndex],
    enableTimePicker: enableTimePicker,
    onPresetClick: onPresetClick,
    onConfirmClick: onConfirmClick,
    presetsPlacement: presetsPlacement,
    needConfirm: needConfirm
  }) : null, /* @__PURE__ */React.createElement("div", {
    className: "".concat(panelName, "-content-wrapper")
  }, !enableTimePicker ? [/* @__PURE__ */React.createElement(PanelContent, _objectSpread({
    key: "startPanel",
    partial: "start",
    year: startYear,
    month: startMonth,
    time: time[activeIndex],
    tableData: startTableData,
    value: value
  }, panelContentProps)), /* @__PURE__ */React.createElement(PanelContent, _objectSpread({
    key: "endPanel",
    partial: "end",
    year: endYear,
    month: endMonth,
    time: time[activeIndex],
    value: value,
    tableData: endTableData,
    internalYear: year
  }, panelContentProps))] : /* @__PURE__ */React.createElement(PanelContent, _objectSpread({
    key: "start",
    partial: activeIndex ? "end" : "start",
    year: activeIndex ? endYear : startYear,
    month: activeIndex ? endMonth : startMonth,
    time: activeIndex ? time[1] : time[0],
    value: value,
    tableData: activeIndex ? endTableData : startTableData
  }, panelContentProps))), ["bottom", "right"].includes(presetsPlacement) ? /* @__PURE__ */React.createElement(ExtraContent, {
    presets: presets,
    selectedValue: value[activeIndex],
    enableTimePicker: enableTimePicker,
    onPresetClick: onPresetClick,
    onConfirmClick: onConfirmClick,
    presetsPlacement: presetsPlacement,
    needConfirm: needConfirm
  }) : null);
});
RangePanel.displayName = "RangePanel";

export { RangePanel as default };
//# sourceMappingURL=RangePanel.js.map
