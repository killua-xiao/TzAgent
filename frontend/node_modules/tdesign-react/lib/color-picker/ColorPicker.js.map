{"version":3,"file":"ColorPicker.js","sources":["../../../components/color-picker/ColorPicker.tsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport { Popup, PopupProps } from '../popup';\nimport { ColorPickerProps, TdColorContext } from './interface';\nimport useClassName from './hooks/useClassNames';\nimport useControlled from '../hooks/useControlled';\nimport ColorTrigger from './components/trigger';\nimport ColorPanel from './components/panel/index';\nimport { colorPickerDefaultProps } from './defaultProps';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\nconst ColorPicker: React.FC<ColorPickerProps> = (props) => {\n  const baseClassName = useClassName();\n  const { popupProps, clearable, disabled, borderless, inputProps, onChange, onClear, colorModes, ...rest } =\n    useDefaultProps<ColorPickerProps>(props, colorPickerDefaultProps);\n  const { overlayClassName, overlayInnerStyle = {}, ...restPopupProps } = popupProps || {};\n\n  const [innerValue, setInnerValue] = useControlled(props, 'value', onChange);\n  const triggerRef = useRef<HTMLDivElement>(null);\n  const colorPanelRef = useRef(null);\n\n  const popProps: PopupProps = {\n    placement: 'bottom-left',\n    expandAnimation: true,\n    trigger: 'click',\n    ...restPopupProps,\n    overlayClassName: [baseClassName, overlayClassName],\n    overlayInnerStyle: {\n      padding: 0,\n      ...overlayInnerStyle,\n    },\n  };\n\n  return (\n    <Popup\n      {...popProps}\n      content={\n        !disabled && (\n          <ColorPanel\n            {...rest}\n            disabled={disabled}\n            value={innerValue}\n            colorModes={colorModes}\n            onChange={(value: string, context: TdColorContext) => setInnerValue(value, context)}\n            ref={colorPanelRef}\n          />\n        )\n      }\n    >\n      <div className={`${baseClassName}__trigger`} ref={triggerRef}>\n        <ColorTrigger\n          clearable={clearable}\n          disabled={disabled}\n          borderless={borderless}\n          inputProps={inputProps}\n          value={innerValue}\n          onChange={setInnerValue}\n          onClear={onClear}\n        />\n      </div>\n    </Popup>\n  );\n};\n\nColorPicker.displayName = 'ColorPicker';\n\nexport default React.memo(ColorPicker);\n"],"names":["ColorPicker","props","baseClassName","useClassName","_useDefaultProps","useDefaultProps","colorPickerDefaultProps","popupProps","clearable","disabled","borderless","inputProps","onChange","onClear","colorModes","rest","_objectWithoutProperties","_excluded","_ref","overlayClassName","overlayInnerStyle","_ref$overlayInnerStyl","restPopupProps","_excluded2","_useControlled","useControlled","_useControlled2","_slicedToArray","innerValue","setInnerValue","triggerRef","useRef","colorPanelRef","popProps","_objectSpread","placement","expandAnimation","trigger","padding","React","createElement","Popup","content","ColorPanel","value","context","ref","className","ColorTrigger","displayName","memo"],"mappings":"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"}