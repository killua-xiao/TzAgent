{"version":3,"file":"swatches.js","sources":["../../../../../components/color-picker/components/panel/swatches.tsx"],"sourcesContent":["import React from 'react';\nimport classnames from 'classnames';\nimport { DeleteIcon as TdDeleteIcon, AddIcon as TdAddIcon } from 'tdesign-icons-react';\nimport Color from '@tdesign/common-js/color-picker/color';\nimport useGlobalIcon from '../../../hooks/useGlobalIcon';\nimport { TdColorBaseProps } from '../../interface';\nimport useCommonClassName from '../../../hooks/useCommonClassName';\n\nexport interface TdColorSwathcesProps extends TdColorBaseProps {\n  colors?: string[];\n  title?: String;\n  editable?: Boolean;\n  onSetColor?: Function;\n  handleAddColor?: Function;\n}\n\nconst Swatches = (props: TdColorSwathcesProps) => {\n  const { baseClassName, colors = [], editable = false, title, onChange, disabled, onSetColor, handleAddColor } = props;\n  const { DeleteIcon, AddIcon } = useGlobalIcon({ DeleteIcon: TdDeleteIcon, AddIcon: TdAddIcon });\n  const swatchesClass = `${baseClassName}__swatches`;\n  const { STATUS: statusClassNames } = useCommonClassName();\n  const isEqualCurrentColor = (color: string) => Color.compare(color, props.color.css);\n\n  // 移除颜色\n  const selectedColorIndex = () => colors.findIndex((color) => isEqualCurrentColor(color));\n  const handleRemoveColor = () => {\n    const selectedIndex = selectedColorIndex();\n    if (selectedIndex > -1) {\n      const newColors = colors.filter((item, index) => index !== selectedIndex);\n      onChange(newColors);\n    }\n  };\n\n  const handleClick = (color: string) => onSetColor(color);\n\n  return (\n    <div className={swatchesClass}>\n      {title ? (\n        <h3 className={`${swatchesClass}--title`}>\n          <span>{title}</span>\n          {editable && (\n            <div className={`${swatchesClass}--actions`}>\n              <span role=\"button\" className={`${baseClassName}__icon`} onClick={() => handleAddColor()}>\n                <AddIcon />\n              </span>\n              {colors.length > 0 ? (\n                <span role=\"button\" className={`${baseClassName}__icon`} onClick={() => handleRemoveColor()}>\n                  <DeleteIcon />\n                </span>\n              ) : null}\n            </div>\n          )}\n        </h3>\n      ) : (\n        <></>\n      )}\n      <ul className={classnames(`${swatchesClass}--items`, 'narrow-scrollbar')}>\n        {colors.map((color) => (\n          <li\n            className={classnames(\n              `${swatchesClass}--item`,\n              isEqualCurrentColor(color) && editable ? statusClassNames.active : '',\n            )}\n            key={color}\n            onClick={() => {\n              if (disabled) {\n                return;\n              }\n              handleClick(color);\n            }}\n          >\n            <div className={classnames(`${swatchesClass}--item__color`, `${baseClassName}--bg-alpha`)}>\n              <span\n                className={`${swatchesClass}--item__inner`}\n                style={{\n                  background: color,\n                }}\n              ></span>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default React.memo(Swatches);\n"],"names":["Swatches","props","baseClassName","_props$colors","colors","_props$editable","editable","title","onChange","disabled","onSetColor","handleAddColor","_useGlobalIcon","useGlobalIcon","DeleteIcon","TdDeleteIcon","AddIcon","TdAddIcon","swatchesClass","_useCommonClassName","useCommonClassName","statusClassNames","STATUS","isEqualCurrentColor","color","Color","compare","css","selectedColorIndex","findIndex","handleRemoveColor","selectedIndex","newColors","filter","item","index","handleClick","React","createElement","className","role","onClick","length","Fragment","classnames","concat","map","active","key","style","background","memo"],"mappings":"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"}