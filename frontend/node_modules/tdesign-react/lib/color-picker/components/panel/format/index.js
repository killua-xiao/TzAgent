/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../../../_chunks/dep-cb0a3966.js';
import { _ as _slicedToArray } from '../../../../_chunks/dep-48805ab8.js';
import React, { useState } from 'react';
import '../../../../_chunks/dep-e0e49a93.js';
import { g as getColorFormatOptions, F as FormatInputs } from '../../../../_chunks/dep-7b1ffd7e.js';
import { Select } from '../../../../select/index.js';
import '../../../../_chunks/dep-eca3a3de.js';
import '../../../../_chunks/dep-026a4c6b.js';
import '../../../../_chunks/dep-46885238.js';
import '../../../../_chunks/dep-3c3d29db.js';
import '../../../../_chunks/dep-3ac1dd01.js';
import 'lodash-es';
import '../../../../_chunks/dep-87d110df.js';
import '../../../../input/index.js';
import '../../../../input/Input.js';
import '../../../../_chunks/dep-6b660ef0.js';
import 'classnames';
import 'tdesign-icons-react';
import '../../../../hooks/useLayoutEffect.js';
import '../../../../_chunks/dep-3a09424a.js';
import '../../../../_util/forwardRefWithStatics.js';
import 'hoist-non-react-statics';
import '../../../../hooks/useConfig.js';
import '../../../../config-provider/ConfigContext.js';
import '../../../../_chunks/dep-f97636ce.js';
import '../../../../_chunks/dep-9dbbf468.js';
import 'dayjs';
import '../../../../hooks/useGlobalIcon.js';
import '../../../../input/InputGroup.js';
import '../../../../hooks/useControlled.js';
import '../../../../_util/noop.js';
import '../../../../locale/LocalReceiver.js';
import '../../../../config-provider/ConfigProvider.js';
import '../../../../input/defaultProps.js';
import '../../../../_util/parseTNode.js';
import '../../../../_chunks/dep-b908e1fe.js';
import '../../../../input/useLengthLimit.js';
import '../../../../_chunks/dep-6af6bc60.js';
import '../../../../hooks/useDefaultProps.js';
import '../../../../input-number/index.js';
import '../../../../input-number/InputNumber.js';
import '../../../../button/index.js';
import '../../../../button/Button.js';
import '../../../../hooks/useDomRefCallback.js';
import '../../../../hooks/useRipple.js';
import '../../../../_chunks/dep-c48e2ca1.js';
import '../../../../hooks/useAnimation.js';
import '../../../../loading/index.js';
import '../../../../loading/Loading.js';
import '../../../../common/Portal.js';
import 'react-dom';
import '../../../../loading/gradient.js';
import '../../../../loading/defaultProps.js';
import '../../../../loading/plugin.js';
import '../../../../_util/react-render.js';
import '../../../../_chunks/dep-52ff3837.js';
import '../../../../common/PluginContainer.js';
import '../../../../button/defaultProps.js';
import '../../../../input-number/useInputNumber.js';
import '../../../../_chunks/dep-76b39920.js';
import '../../../../hooks/useCommonClassName.js';
import '../../../../input-number/defaultProps.js';
import '../../../../select/base/Select.js';
import '../../../../_util/composeRefs.js';
import '../../../../_util/helper.js';
import '../../../../common/FakeArrow.js';
import '../../../../select-input/index.js';
import '../../../../select-input/SelectInput.js';
import '../../../../popup/index.js';
import '../../../../popup/Popup.js';
import 'react-transition-group';
import '../../../../_util/ref.js';
import 'react-is';
import '../../../../_util/isFragment.js';
import '../../../../hooks/useAttach.js';
import '../../../../hooks/useMutationObserver.js';
import '../../../../hooks/useLatest.js';
import '../../../../hooks/usePopper.js';
import '@popperjs/core';
import 'react-fast-compare';
import '../../../../hooks/useWindowSize.js';
import '../../../../popup/defaultProps.js';
import '../../../../popup/hooks/useTrigger.js';
import '../../../../_util/listener.js';
import '../../../../popup/utils/transition.js';
import '../../../../popup/PopupPlugin.js';
import '../../../../select-input/useSingle.js';
import '../../../../select-input/useMultiple.js';
import '../../../../tag-input/index.js';
import '../../../../tag-input/TagInput.js';
import '../../../../hooks/useDragSorter.js';
import '../../../../hooks/useEventCallback.js';
import '../../../../tag-input/defaultProps.js';
import '../../../../tag-input/useHover.js';
import '../../../../tag-input/useTagList.js';
import '../../../../tag/index.js';
import '../../../../tag/Tag.js';
import '../../../../tag/defaultProps.js';
import '../../../../tag/CheckTag.js';
import '../../../../_chunks/dep-dbcf7b24.js';
import '../../../../tag/CheckTagGroup.js';
import '../../../../tag-input/useTagScroll.js';
import '../../../../select-input/useOverlayInnerStyle.js';
import '../../../../select-input/defaultProps.js';
import '../../../../select/defaultProps.js';
import '../../../../_chunks/dep-72472aa7.js';
import '../../../../select/base/OptionGroup.js';
import '../../../../select/base/Option.js';
import '../../../../select/base/PopupContent.js';
import '../../../../select/hooks/usePanelVirtualScroll.js';
import '../../../../hooks/useVirtualScroll.js';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var FormatPanel = function FormatPanel(props) {
  var enableAlpha = props.enableAlpha,
    baseClassName = props.baseClassName,
    format = props.format,
    selectInputProps = props.selectInputProps;
  var _useState = useState(format),
    _useState2 = _slicedToArray(_useState, 2),
    formatMode = _useState2[0],
    setFormatMode = _useState2[1];
  var handleModeChange = function handleModeChange(v) {
    setFormatMode(v);
  };
  return /* @__PURE__ */React.createElement("div", {
    className: "".concat(baseClassName, "__format")
  }, /* @__PURE__ */React.createElement("div", {
    className: "".concat(baseClassName, "__format--item")
  }, /* @__PURE__ */React.createElement(Select, {
    size: "small",
    className: "".concat(baseClassName, "__format-mode-select"),
    popupProps: _objectSpread({
      overlayClassName: "".concat(baseClassName, "__select-options")
    }, selectInputProps === null || selectInputProps === void 0 ? void 0 : selectInputProps.popupProps),
    autoWidth: true,
    value: formatMode,
    onChange: handleModeChange
  }, getColorFormatOptions(enableAlpha).map(function (item) {
    return /* @__PURE__ */React.createElement(Select.Option, {
      key: item,
      value: item,
      label: item,
      style: {
        fontSize: "12px"
      }
    });
  }))), /* @__PURE__ */React.createElement("div", {
    className: "".concat(baseClassName, "__format--item")
  }, /* @__PURE__ */React.createElement(FormatInputs, _objectSpread(_objectSpread({}, props), {}, {
    format: formatMode
  }))));
};
var FormatPanel$1 = /*#__PURE__*/React.memo(FormatPanel);

export { FormatPanel$1 as default };
//# sourceMappingURL=index.js.map
