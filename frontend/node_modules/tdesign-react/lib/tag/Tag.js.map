{"version":3,"file":"Tag.js","sources":["../../../components/tag/Tag.tsx"],"sourcesContent":["import React, { ForwardRefRenderFunction, FocusEvent, forwardRef, useMemo } from 'react';\nimport classNames from 'classnames';\nimport { CloseIcon as TdCloseIcon } from 'tdesign-icons-react';\nimport tinycolor from 'tinycolor2';\nimport noop from '../_util/noop';\nimport useConfig from '../hooks/useConfig';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport { StyledProps } from '../common';\nimport { TdTagProps } from './type';\nimport { tagDefaultProps } from './defaultProps';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\n/**\n * Tag 组件支持的属性。\n */\nexport interface TagProps extends TdTagProps, StyledProps {\n  /**\n   * 标签内容\n   */\n  tabIndex?: number;\n  onFocus?: (e: FocusEvent<HTMLDivElement>) => void;\n  onBlur?: (e: FocusEvent<HTMLDivElement>) => void;\n}\n\nexport const TagFunction: ForwardRefRenderFunction<HTMLDivElement, TagProps> = (originalProps, ref) => {\n  const props = useDefaultProps<TagProps>(originalProps, tagDefaultProps);\n  const {\n    theme,\n    size,\n    shape,\n    variant,\n    closable,\n    maxWidth,\n    icon,\n    content,\n    onClick = noop,\n    onClose = noop,\n    className,\n    style,\n    disabled,\n    children,\n    color,\n    title: titleAttr,\n    ...otherTagProps\n  } = props;\n\n  const { classPrefix } = useConfig();\n  const { CloseIcon } = useGlobalIcon({\n    CloseIcon: TdCloseIcon,\n  });\n  const tagClassPrefix = `${classPrefix}-tag`;\n\n  const sizeMap = {\n    large: `${classPrefix}-size-l`,\n    small: `${classPrefix}-size-s`,\n  };\n\n  const tagClassNames = classNames(\n    tagClassPrefix,\n    `${tagClassPrefix}--${theme}`,\n    `${tagClassPrefix}--${variant}`,\n    {\n      [`${tagClassPrefix}--${shape}`]: shape !== 'square',\n      [`${tagClassPrefix}--ellipsis`]: !!maxWidth,\n      [`${tagClassPrefix}--disabled`]: disabled,\n    },\n    sizeMap[size],\n    className,\n  );\n\n  /**\n   * 删除 Icon\n   */\n  const deleteIcon = (\n    <CloseIcon\n      onClick={(e) => {\n        if (disabled) return;\n        onClose({ e });\n      }}\n      className={`${tagClassPrefix}__icon-close`}\n    />\n  );\n\n  const title = useMemo(() => {\n    if (Reflect.has(props, 'title')) return titleAttr;\n    if (children && typeof children === 'string') return children;\n    if (content && typeof content === 'string') return content;\n  }, [children, content, props, titleAttr]);\n  const titleAttribute = title ? { title } : undefined;\n\n  const getTagStyle = useMemo(() => {\n    if (!color) return style;\n    const luminance = tinycolor(color).getLuminance();\n\n    const calculatedStyle: React.CSSProperties = {};\n\n    calculatedStyle.color = luminance > 0.5 ? 'black' : 'white';\n    if (variant === 'outline' || variant === 'light-outline') {\n      calculatedStyle.borderColor = color;\n    }\n\n    if (variant !== 'outline') {\n      const getLightestShade = () => {\n        const { r, g, b } = tinycolor(color).toRgb();\n        // alpha 0.1  is designed by @wen1kang\n        return `rgba(${r}, ${g}, ${b}, 0.1)`;\n      };\n\n      calculatedStyle.backgroundColor = variant === 'dark' ? color : getLightestShade();\n    }\n    if (variant !== 'dark') {\n      calculatedStyle.color = color;\n    }\n    return { ...calculatedStyle, ...style };\n  }, [color, variant, style]);\n\n  const getTextStyle = useMemo(() => {\n    if (!maxWidth) return {};\n\n    return {\n      maxWidth: isNaN(Number(maxWidth)) ? String(maxWidth) : `${maxWidth}px`,\n    };\n  }, [maxWidth]);\n\n  const tag = (\n    <div\n      ref={ref}\n      className={tagClassNames}\n      onClick={(e) => {\n        if (disabled) return;\n        onClick({ e });\n      }}\n      style={getTagStyle}\n      {...otherTagProps}\n    >\n      <>\n        {icon}\n        <span className={maxWidth ? `${tagClassPrefix}--text` : undefined} style={getTextStyle} {...titleAttribute}>\n          {children ?? content}\n        </span>\n        {closable && !disabled && deleteIcon}\n      </>\n    </div>\n  );\n\n  return tag;\n};\n\nexport const Tag = forwardRef(TagFunction);\n\nTag.displayName = 'Tag';\n\nexport default Tag;\n"],"names":["TagFunction","originalProps","ref","props","useDefaultProps","tagDefaultProps","theme","size","shape","variant","closable","maxWidth","icon","content","_props$onClick","onClick","noop","_props$onClose","onClose","className","style","disabled","children","color","titleAttr","title","otherTagProps","_objectWithoutProperties","_excluded","_useConfig","useConfig","classPrefix","_useGlobalIcon","useGlobalIcon","CloseIcon","TdCloseIcon","tagClassPrefix","sizeMap","large","small","tagClassNames","classNames","concat","_defineProperty","deleteIcon","React","createElement","e","useMemo","Reflect","has","titleAttribute","getTagStyle","luminance","tinycolor","getLuminance","calculatedStyle","borderColor","getLightestShade","_tinycolor$toRgb","toRgb","r","g","b","backgroundColor","_objectSpread","getTextStyle","isNaN","Number","String","tag","Fragment","Tag","forwardRef","displayName"],"mappings":"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"}