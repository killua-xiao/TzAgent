import React from 'react';
import { StyledProps } from '../../common';
import { SelectValue, TdOptionProps, TdSelectProps, SelectKeysType, SelectOption } from '../type';
/**
 * Option 组件属性
 */
export interface SelectOptionProps extends StyledProps, TdOptionProps, Pick<TdSelectProps, 'size' | 'multiple' | 'max'> {
    selectedValue?: SelectValue;
    children?: React.ReactNode;
    onSelect?: (value: string | number, context: {
        label?: string;
        selected?: boolean;
        event: React.MouseEvent<HTMLLIElement>;
        restData?: Record<string, any>;
    }) => void;
    onCheckAllChange?: (checkAll: boolean, e: React.MouseEvent<HTMLLIElement>) => void;
    restData?: Record<string, any>;
    keys?: SelectKeysType;
    optionLength?: number;
    isVirtual?: boolean;
    onRowMounted?: (rowData: {
        ref: HTMLElement;
        data: SelectOption;
    }) => void;
}
declare const Option: React.FC<SelectOptionProps>;
export default Option;
