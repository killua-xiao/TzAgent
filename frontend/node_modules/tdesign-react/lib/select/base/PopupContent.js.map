{"version":3,"file":"PopupContent.js","sources":["../../../../components/select/base/PopupContent.tsx"],"sourcesContent":["import React, { Children, isValidElement, cloneElement, useRef, CSSProperties, useMemo } from 'react';\nimport classNames from 'classnames';\nimport { isEqual } from 'lodash-es';\nimport { useLocaleReceiver } from '../../locale/LocalReceiver';\nimport { getSelectValueArr } from '../util/helper';\nimport {\n  TdSelectProps,\n  SelectValue,\n  TdOptionProps,\n  SelectValueChangeTrigger,\n  SelectOption,\n  SelectOptionGroup,\n} from '../type';\nimport useConfig from '../../hooks/useConfig';\nimport usePanelVirtualScroll from '../hooks/usePanelVirtualScroll';\nimport Option, { SelectOptionProps } from './Option';\nimport OptionGroup from './OptionGroup';\n\ninterface SelectPopupProps\n  extends Pick<\n    TdSelectProps,\n    | 'value'\n    | 'size'\n    | 'multiple'\n    | 'empty'\n    | 'options'\n    | 'max'\n    | 'loadingText'\n    | 'loading'\n    | 'valueType'\n    | 'keys'\n    | 'panelTopContent'\n    | 'panelBottomContent'\n    | 'scroll'\n  > {\n  onChange?: (\n    value: SelectValue,\n    context?: {\n      label?: string | number;\n      value?: SelectValue;\n      restData?: Record<string, any>;\n      e: React.MouseEvent<HTMLLIElement>;\n      trigger: SelectValueChangeTrigger;\n    },\n  ) => void;\n  /**\n   * 是否展示popup\n   */\n  showPopup: boolean;\n  /**\n   * 控制popup展示的函数\n   */\n  setShowPopup: (show: boolean) => void;\n  children?: React.ReactNode;\n  onCheckAllChange?: (checkAll: boolean, e: React.MouseEvent<HTMLLIElement>) => void;\n  getPopupInstance?: () => HTMLDivElement;\n}\n\nconst PopupContent = React.forwardRef<HTMLDivElement, SelectPopupProps>((props, ref) => {\n  const {\n    value,\n    size,\n    max,\n    multiple,\n    showPopup,\n    setShowPopup,\n    empty,\n    loadingText,\n    loading,\n    valueType,\n    children,\n    keys,\n    panelTopContent,\n    panelBottomContent,\n    onChange,\n    onCheckAllChange,\n    getPopupInstance,\n    options: propsOptions,\n    scroll: propsScroll,\n  } = props;\n\n  // 国际化文本初始化\n  const [local, t] = useLocaleReceiver('select');\n  const emptyText = t(local.empty);\n  const popupContentRef = useRef<HTMLDivElement>(null);\n\n  popupContentRef.current = getPopupInstance();\n\n  const { visibleData, handleRowMounted, isVirtual, panelStyle, cursorStyle } = usePanelVirtualScroll({\n    popupContentRef,\n    scroll: propsScroll,\n    options: propsOptions,\n    size,\n  });\n\n  // 全部可选选项\n  const selectableOptions = useMemo(() => {\n    const uniqueOptions = {};\n    propsOptions?.forEach((option: SelectOption) => {\n      if ((option as SelectOptionGroup).group) {\n        (option as SelectOptionGroup).children.forEach((item) => {\n          if (!item.disabled && !item.checkAll) {\n            uniqueOptions[item.value] = item;\n          }\n        });\n      } else if (!(option as TdOptionProps).disabled && !(option as TdOptionProps).checkAll) {\n        uniqueOptions[(option as TdOptionProps).value] = option;\n      }\n    });\n    return Object.values(uniqueOptions);\n  }, [propsOptions]);\n\n  const { classPrefix } = useConfig();\n  if (!children && !propsOptions) {\n    return null;\n  }\n\n  const onSelect: SelectOptionProps['onSelect'] = (selectedValue, { label, selected, event, restData }) => {\n    const isValObj = valueType === 'object';\n    let objVal = {};\n    if (isValObj) {\n      objVal = { ...restData };\n      if (!keys?.label) {\n        Object.assign(objVal, { label });\n      }\n      if (!keys?.value) {\n        Object.assign(objVal, { value: selectedValue });\n      }\n    }\n\n    if (!Object.keys(objVal).length) {\n      Object.assign(objVal, { [keys?.label || 'label']: label, [keys?.value || 'value']: selectedValue });\n    }\n\n    if (multiple) {\n      // calc multiple select values\n      const values = getSelectValueArr(value, selectedValue, selected, valueType, keys, objVal);\n      onChange(values, { label, value: selectedValue, e: event, trigger: selected ? 'uncheck' : 'check' });\n    } else {\n      // calc single select value\n      const selectVal = valueType === 'object' ? objVal : selectedValue;\n\n      if (!isEqual(value, selectVal)) {\n        onChange(selectVal, { label, value: selectVal, e: event, trigger: 'check' });\n      }\n      setShowPopup(!showPopup);\n    }\n  };\n\n  const childrenWithProps = Children.map(children, (child) => {\n    if (isValidElement(child)) {\n      const addedProps = { size, max, multiple, selectedValue: value, onSelect };\n      return cloneElement(child, { ...addedProps });\n    }\n    return child;\n  });\n\n  // 渲染 options\n  const renderOptions = (options: SelectOption[]) => {\n    if (options) {\n      // 通过 options API配置的\n      return (\n        <ul className={`${classPrefix}-select__list`}>\n          {options.map((item, index) => {\n            const { group, divider, ...rest } = item as SelectOptionGroup;\n            if (group) {\n              return (\n                <OptionGroup label={group} divider={divider} key={index}>\n                  {renderOptions(rest.children)}\n                </OptionGroup>\n              );\n            }\n\n            const { value: optionValue, label, disabled, content, children, ...restData } = item as TdOptionProps;\n            return (\n              <Option\n                key={index}\n                max={max}\n                label={label}\n                value={optionValue}\n                onSelect={onSelect}\n                selectedValue={value}\n                optionLength={selectableOptions.length}\n                multiple={multiple}\n                size={size}\n                disabled={disabled}\n                restData={restData}\n                keys={keys}\n                content={content}\n                onCheckAllChange={onCheckAllChange}\n                onRowMounted={handleRowMounted}\n                {...(isVirtual\n                  ? {\n                      isVirtual,\n                      bufferSize: propsScroll?.bufferSize,\n                      scrollType: propsScroll?.type,\n                    }\n                  : {})}\n                {...restData}\n              >\n                {children}\n              </Option>\n            );\n          })}\n        </ul>\n      );\n    }\n    return <ul className={`${classPrefix}-select__list`}>{childrenWithProps}</ul>;\n  };\n\n  const isEmpty =\n    (Array.isArray(childrenWithProps) && !childrenWithProps.length) || (propsOptions && propsOptions.length === 0);\n\n  const renderPanel = (renderedOptions: SelectOption[], extraStyle?: CSSProperties) => (\n    <div\n      ref={ref}\n      className={classNames(`${classPrefix}-select__dropdown-inner`, {\n        [`${classPrefix}-select__dropdown-inner--size-s`]: size === 'small',\n        [`${classPrefix}-select__dropdown-inner--size-l`]: size === 'large',\n        [`${classPrefix}-select__dropdown-inner--size-m`]: size === 'medium',\n      })}\n      style={extraStyle}\n    >\n      {loading && <div className={`${classPrefix}-select__loading-tips`}>{loadingText}</div>}\n      {!loading && isEmpty && (\n        <div className={`${classPrefix}-select__empty`}>{empty ? empty : <p>{emptyText}</p>}</div>\n      )}\n      {!loading && !isEmpty && renderOptions(renderedOptions)}\n    </div>\n  );\n  if (isVirtual) {\n    return (\n      <>\n        {panelTopContent}\n        <div>\n          <div style={cursorStyle}></div>\n          {renderPanel(visibleData, panelStyle)}\n        </div>\n        {panelBottomContent}\n      </>\n    );\n  }\n\n  return (\n    <>\n      {panelTopContent}\n      {renderPanel(propsOptions)}\n      {panelBottomContent}\n    </>\n  );\n});\n\nexport default PopupContent;\n"],"names":["PopupContent","React","forwardRef","props","ref","value","size","max","multiple","showPopup","setShowPopup","empty","loadingText","loading","valueType","children","keys","panelTopContent","panelBottomContent","onChange","onCheckAllChange","getPopupInstance","propsOptions","options","propsScroll","scroll","_useLocaleReceiver","useLocaleReceiver","_useLocaleReceiver2","_slicedToArray","local","t","emptyText","popupContentRef","useRef","current","_usePanelVirtualScrol","usePanelVirtualScroll","visibleData","handleRowMounted","isVirtual","panelStyle","cursorStyle","selectableOptions","useMemo","uniqueOptions","forEach","option","group","item","disabled","checkAll","Object","values","_useConfig","useConfig","classPrefix","onSelect","selectedValue","_ref","label","selected","event","restData","isValObj","objVal","_objectSpread","assign","length","_defineProperty","getSelectValueArr","e","trigger","selectVal","isEqual","childrenWithProps","Children","map","child","isValidElement","addedProps","cloneElement","renderOptions","createElement","className","index","divider","rest","_objectWithoutProperties","_excluded","OptionGroup","key","optionValue","content","_excluded2","Option","optionLength","onRowMounted","bufferSize","scrollType","type","isEmpty","Array","isArray","renderPanel","renderedOptions","extraStyle","classNames","concat","style","Fragment"],"mappings":"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"}