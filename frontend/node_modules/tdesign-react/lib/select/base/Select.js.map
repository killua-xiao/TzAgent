{"version":3,"file":"Select.js","sources":["../../../../components/select/base/Select.tsx"],"sourcesContent":["import React, {\n  Children,\n  KeyboardEvent,\n  WheelEvent,\n  cloneElement,\n  isValidElement,\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport classNames from 'classnames';\nimport { debounce, get, isFunction } from 'lodash-es';\nimport composeRefs from '../../_util/composeRefs';\nimport forwardRefWithStatics from '../../_util/forwardRefWithStatics';\nimport { getOffsetTopToContainer } from '../../_util/helper';\nimport noop from '../../_util/noop';\nimport { parseContentTNode } from '../../_util/parseTNode';\nimport FakeArrow from '../../common/FakeArrow';\nimport useConfig from '../../hooks/useConfig';\nimport useControlled from '../../hooks/useControlled';\nimport useDefaultProps from '../../hooks/useDefaultProps';\nimport Loading from '../../loading';\nimport { useLocaleReceiver } from '../../locale/LocalReceiver';\nimport SelectInput, { type SelectInputValue, type SelectInputValueChangeContext } from '../../select-input';\nimport Tag from '../../tag';\nimport { selectDefaultProps } from '../defaultProps';\nimport useOptions, { isSelectOptionGroup } from '../hooks/useOptions';\nimport { getSelectValueArr, getSelectedOptions } from '../util/helper';\nimport Option from './Option';\nimport OptionGroup from './OptionGroup';\nimport PopupContent from './PopupContent';\n\nimport type { StyledProps } from '../../common';\nimport type { PopupVisibleChangeContext } from '../../popup';\nimport type { SelectOption, SelectValue, SelectValueChangeTrigger, TdOptionProps, TdSelectProps } from '../type';\n\nexport interface SelectProps<T = SelectOption> extends TdSelectProps<T>, StyledProps {\n  // 子节点\n  children?: React.ReactNode;\n  onMouseEnter?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n  onMouseLeave?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n}\n\ntype OptionsType = TdOptionProps[];\n\nconst Select = forwardRefWithStatics(\n  (originalProps: SelectProps, ref: React.Ref<HTMLDivElement>) => {\n    const props = useDefaultProps<SelectProps>(originalProps, selectDefaultProps);\n    // 国际化文本初始化\n    const [local, t] = useLocaleReceiver('select');\n    const emptyText = t(local.loadingText);\n\n    const {\n      readonly,\n      borderless,\n      autoWidth,\n      creatable,\n      loadingText = emptyText,\n      max,\n      popupProps,\n      reserveKeyword,\n      className,\n      style,\n      disabled,\n      size,\n      multiple,\n      placeholder,\n      clearable,\n      prefixIcon,\n      options,\n      filterable,\n      loading,\n      empty,\n      valueType,\n      keys,\n      children,\n      collapsedItems,\n      minCollapsedNum,\n      valueDisplay,\n      showArrow,\n      inputProps,\n      panelBottomContent,\n      panelTopContent,\n      selectInputProps,\n      tagInputProps,\n      tagProps,\n      scroll,\n      suffixIcon,\n      label,\n      filter,\n      onFocus,\n      onBlur,\n      onClear = noop,\n      onCreate,\n      onRemove,\n      onSearch,\n      onEnter,\n      onPopupVisibleChange,\n    } = props;\n\n    const [value, onChange] = useControlled(props, 'value', props.onChange);\n    const selectInputRef = useRef(null);\n    const { classPrefix } = useConfig();\n    const { overlayClassName, onScroll, onScrollToBottom, ...restPopupProps } = popupProps || {};\n    const [isScrolling, toggleIsScrolling] = useState(false);\n\n    const name = `${classPrefix}-select`; // t-select\n\n    const [showPopup, setShowPopup] = useControlled(props, 'popupVisible', onPopupVisibleChange);\n    const [inputValue, onInputChange] = useControlled(props, 'inputValue', props.onInputChange);\n\n    const { currentOptions, setCurrentOptions, tmpPropOptions, valueToOption, selectedOptions } = useOptions(\n      keys,\n      options,\n      children,\n      valueType,\n      value,\n      reserveKeyword,\n    );\n\n    const selectedLabel = useMemo(() => {\n      if (multiple) {\n        return selectedOptions.map((selectedOption) => get(selectedOption || {}, keys?.label || 'label') || '');\n      }\n      return get(selectedOptions[0] || {}, keys?.label || 'label') || undefined;\n    }, [selectedOptions, keys, multiple]);\n\n    const handleShowPopup = (visible: boolean, ctx: PopupVisibleChangeContext) => {\n      if (disabled) return;\n      visible && toggleIsScrolling(false);\n      !visible && onInputChange('', { trigger: 'blur' });\n      setShowPopup(visible, ctx);\n    };\n\n    // 可以根据触发来源，自由定制标签变化时的筛选器行为\n    const onTagChange = (_currentTags: SelectInputValue, context) => {\n      const { trigger, index, item, e } = context;\n      // backspace\n      if (trigger === 'backspace') {\n        e.stopPropagation();\n\n        let closest = -1;\n        let len = index;\n        while (len >= 0) {\n          const option = selectedOptions[len];\n          if (!isSelectOptionGroup(option) && !option.disabled) {\n            closest = len;\n            break;\n          }\n          len -= 1;\n        }\n        if (closest < 0) {\n          return;\n        }\n        const values = getSelectValueArr(value, value[closest], true, valueType, keys);\n\n        // 处理onChange回调中的selectedOptions参数\n        const { currentSelectedOptions } = getSelectedOptions(values, multiple, valueType, keys, valueToOption);\n        onChange(values, { e, trigger, selectedOptions: currentSelectedOptions });\n        return;\n      }\n\n      if (trigger === 'tag-remove') {\n        e?.stopPropagation?.();\n        const values = getSelectValueArr(value, value[index], true, valueType, keys);\n        // 处理onChange回调中的selectedOptions参数\n        const { currentSelectedOptions } = getSelectedOptions(values, multiple, valueType, keys, valueToOption);\n\n        onChange(values, { e, trigger, selectedOptions: currentSelectedOptions });\n        if (isFunction(onRemove)) {\n          onRemove({\n            value: value[index],\n            data: {\n              label: item,\n              value: value[index],\n            },\n            e,\n          });\n        }\n      }\n    };\n\n    const onCheckAllChange = (checkAll: boolean, e: React.MouseEvent<HTMLLIElement>) => {\n      const isDisabledCheckAll = (opt: TdOptionProps) => opt.checkAll && opt.disabled;\n      if (!multiple || currentOptions.some((opt) => !isSelectOptionGroup(opt) && isDisabledCheckAll(opt))) {\n        return;\n      }\n\n      const isSelectableOption = (opt: TdOptionProps) => !opt.checkAll && !opt.disabled;\n      const getOptionValue = (option: SelectOption) =>\n        valueType === 'object' ? option : option[keys?.value || 'value'];\n\n      const values = [];\n      currentOptions.forEach((option) => {\n        if (isSelectOptionGroup(option)) {\n          option.children.forEach((item) => {\n            if (isSelectableOption(item)) {\n              values.push(getOptionValue(item));\n            }\n          });\n        } else if (isSelectableOption(option)) {\n          values.push(getOptionValue(option));\n        }\n      });\n\n      const { currentSelectedOptions, allSelectedValue } = getSelectedOptions(\n        values,\n        multiple,\n        valueType,\n        keys,\n        valueToOption,\n      );\n\n      const checkAllValue =\n        !checkAll && allSelectedValue.length !== (props.value as Array<SelectOption>)?.length ? allSelectedValue : [];\n\n      onChange?.(checkAllValue, {\n        e,\n        trigger: !checkAll ? 'check' : 'uncheck',\n        selectedOptions: currentSelectedOptions,\n      });\n    };\n\n    // 选中 Popup 某项\n    const handleChange = (\n      value: string | number | Array<string | number | Record<string, string | number>>,\n      context: {\n        e: React.MouseEvent<HTMLLIElement>;\n        trigger: SelectValueChangeTrigger;\n        value?: SelectValue;\n        label?: string;\n      },\n    ) => {\n      const selectedValue = multiple ? context.value : value;\n\n      if (multiple) {\n        !reserveKeyword && inputValue && onInputChange('', { e: context.e, trigger: 'change' });\n      }\n      if (creatable && isFunction(onCreate)) {\n        if ((options as OptionsType).filter((option) => option.value === selectedValue).length === 0) {\n          onCreate(selectedValue as string); // 手动输入 此时为string\n        }\n      }\n      // 处理onChange回调中的selectedOptions参数\n      const { currentSelectedOptions, currentOption } = getSelectedOptions(\n        value,\n        multiple,\n        valueType,\n        keys,\n        valueToOption,\n        selectedValue,\n      );\n      onChange?.(value, {\n        e: context.e,\n        trigger: context.trigger,\n        selectedOptions: currentSelectedOptions,\n        option: currentOption,\n      });\n\n      if (multiple && context?.trigger === 'uncheck' && isFunction(onRemove)) {\n        const value = context?.value;\n        const option = (options as OptionsType).find((option) => option.value === value);\n        onRemove({\n          value,\n          data: option,\n          e: context.e,\n        });\n      }\n    };\n\n    // 处理filter逻辑\n    const handleFilter = (value: string) => {\n      let filteredOptions: SelectOption[] = [];\n      if (filterable && isFunction(onSearch)) {\n        return;\n      }\n      if (!value) {\n        setCurrentOptions(tmpPropOptions);\n        return;\n      }\n\n      const filterLabels = [];\n      const filterMethods = (option: SelectOption) => {\n        if (filter && isFunction(filter)) {\n          return filter(value, option);\n        }\n        const upperValue = value.toUpperCase();\n        return (option?.label || '').toUpperCase().includes(upperValue);\n      };\n\n      tmpPropOptions?.forEach((option) => {\n        if (isSelectOptionGroup(option)) {\n          filteredOptions.push({\n            ...option,\n            children: option.children?.filter((child) => {\n              if (filterMethods(child)) {\n                filterLabels.push(child.label);\n                return true;\n              }\n              return false;\n            }),\n          });\n        } else if (filterMethods(option)) {\n          filterLabels.push(option.label);\n          filteredOptions.push(option);\n        }\n      });\n      const isSameLabelOptionExist = filterLabels.includes(value);\n      if (creatable && !isSameLabelOptionExist) {\n        filteredOptions = filteredOptions.concat([{ label: value, value }]);\n      }\n      setCurrentOptions(filteredOptions);\n    };\n\n    // 处理输入框逻辑\n    const handleInputChange = (value: string, context: SelectInputValueChangeContext) => {\n      if (context.trigger !== 'clear') {\n        onInputChange(value, { e: context.e, trigger: 'input' });\n      }\n      if (value === undefined) {\n        return;\n      }\n      if (isFunction(onSearch)) {\n        onSearch(value, { e: context.e as KeyboardEvent<HTMLDivElement> });\n        return;\n      }\n    };\n\n    const handleClear = (context) => {\n      context.e.stopPropagation();\n      if (Array.isArray(value)) {\n        onChange([], { ...context, trigger: 'clear', selectedOptions: [] });\n      } else {\n        onChange(null, { ...context, trigger: 'clear', selectedOptions: [] });\n      }\n      onClear(context);\n    };\n\n    useEffect(() => {\n      if (typeof inputValue !== 'undefined') {\n        handleFilter(String(inputValue));\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [inputValue, tmpPropOptions]);\n\n    // 渲染后置图标\n    const renderSuffixIcon = () => {\n      if (suffixIcon) {\n        return suffixIcon;\n      }\n      if (loading) {\n        return (\n          <Loading className={classNames(`${name}__right-icon`, `${name}__active-icon`)} loading={true} size=\"small\" />\n        );\n      }\n\n      return showArrow && <FakeArrow className={`${name}__right-icon`} isActive={showPopup} disabled={disabled} />;\n    };\n    const getPopupInstance = useCallback(() => (selectInputRef as any).current?.getPopupContentElement(), []);\n\n    const childrenWithProps = Children.map(children, (child) => {\n      if (isValidElement(child)) {\n        const addedProps = { multiple };\n        return cloneElement(child, { ...addedProps });\n      }\n      return child;\n    });\n    // 渲染主体内容\n    const renderContent = () => {\n      const popupContentProps = {\n        onChange: handleChange,\n        value,\n        className,\n        size,\n        multiple,\n        showPopup,\n        // popup弹出层内容只会在点击事件之后触发 并且无任何透传参数\n        setShowPopup: (show: boolean) => handleShowPopup(show, {}),\n        options: currentOptions,\n        empty,\n        max,\n        loadingText,\n        loading,\n        valueType,\n        keys,\n        panelBottomContent,\n        panelTopContent,\n        onCheckAllChange,\n        getPopupInstance,\n        scroll,\n      };\n      return <PopupContent {...popupContentProps}>{childrenWithProps}</PopupContent>;\n    };\n\n    const renderValueDisplay = useMemo(() => {\n      if (!valueDisplay) {\n        if (!multiple) {\n          if (typeof selectedLabel !== 'string') {\n            return selectedLabel;\n          }\n          return '';\n        }\n        return ({ value: val }) =>\n          val.slice(0, minCollapsedNum ? minCollapsedNum : val.length).map((v: string, key: number) => {\n            const filterOption: SelectOption & { disabled?: boolean } = options?.find((option) => option.label === v);\n            return (\n              <Tag\n                key={key}\n                closable={!filterOption?.disabled && !disabled && !readonly}\n                size={size}\n                {...tagProps}\n                onClose={({ e }) => {\n                  e.stopPropagation();\n                  e?.nativeEvent?.stopImmediatePropagation?.();\n                  const values = getSelectValueArr(value, value[key], true, valueType, keys);\n\n                  const { currentSelectedOptions } = getSelectedOptions(\n                    values,\n                    multiple,\n                    valueType,\n                    keys,\n                    valueToOption,\n                    value,\n                  );\n                  onChange(values, {\n                    e,\n                    selectedOptions: currentSelectedOptions,\n                    trigger: 'tag-remove',\n                  });\n                  tagProps?.onClose?.({ e });\n\n                  onRemove?.({\n                    value: value[key],\n                    data: { label: v, value: value[key] },\n                    e: e as unknown as React.MouseEvent<HTMLDivElement, MouseEvent>,\n                  });\n                }}\n              >\n                {v}\n              </Tag>\n            );\n          });\n      }\n      if (typeof valueDisplay === 'string') {\n        return valueDisplay;\n      }\n      if (multiple) {\n        return ({ onClose }) => parseContentTNode(valueDisplay, { value: selectedOptions, onClose });\n      }\n      return parseContentTNode(valueDisplay, { value: selectedLabel, onClose: noop });\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [\n      valueDisplay,\n      multiple,\n      selectedLabel,\n      minCollapsedNum,\n      options,\n      disabled,\n      readonly,\n      size,\n      tagProps,\n      value,\n      valueType,\n      keys,\n      valueToOption,\n      onRemove,\n      selectedOptions,\n    ]);\n\n    // 将第一个选中的 option 置于列表可见范围的最后一位\n    const updateScrollTop = (content: HTMLDivElement) => {\n      if (!content || isScrolling) {\n        return;\n      }\n      const firstSelectedNode: HTMLDivElement = content.querySelector(`.${classPrefix}-is-selected`);\n      if (!multiple && firstSelectedNode) {\n        const { paddingBottom } = getComputedStyle(firstSelectedNode);\n        const { marginBottom } = getComputedStyle(content);\n        const elementBottomHeight = parseInt(paddingBottom, 10) + parseInt(marginBottom, 10);\n        // 小于0时不需要特殊处理，会被设为0\n        const updateValue =\n          getOffsetTopToContainer(firstSelectedNode, content) -\n          content.offsetTop -\n          (content.clientHeight - firstSelectedNode.clientHeight) +\n          elementBottomHeight;\n\n        // 通过 setTimeout 确保组件渲染完成后再设置 scrollTop\n        setTimeout(() => {\n          // eslint-disable-next-line no-param-reassign\n          content.scrollTop = updateValue;\n        });\n      }\n    };\n\n    const { onMouseEnter, onMouseLeave } = props;\n\n    const handleEnter = (_, context: { inputValue: string; e: KeyboardEvent<HTMLDivElement> }) => {\n      onEnter?.({ ...context, value });\n    };\n\n    const handleScroll = ({ e }: { e: WheelEvent<HTMLDivElement> }) => {\n      toggleIsScrolling(true);\n\n      onScroll?.({ e });\n      if (onScrollToBottom) {\n        const debounceOnScrollBottom = debounce((e) => onScrollToBottom({ e }), 100);\n\n        const { scrollTop, clientHeight, scrollHeight } = e.target as HTMLDivElement;\n        if (clientHeight + Math.floor(scrollTop) === scrollHeight) {\n          debounceOnScrollBottom(e);\n        }\n      }\n    };\n    return (\n      <div\n        className={classNames(`${name}__wrap`, className)}\n        style={style}\n        onMouseEnter={onMouseEnter}\n        onMouseLeave={onMouseLeave}\n      >\n        <SelectInput\n          autoWidth={!style?.width && autoWidth}\n          ref={composeRefs(ref, selectInputRef)}\n          className={name}\n          readonly={readonly}\n          autofocus={props.autofocus}\n          allowInput={(filterable ?? local.filterable) || isFunction(filter)}\n          multiple={multiple}\n          value={selectedLabel}\n          options={selectedOptions}\n          valueDisplay={renderValueDisplay}\n          clearable={clearable}\n          disabled={disabled}\n          status={props.status}\n          tips={props.tips}\n          borderless={borderless}\n          label={label}\n          suffix={props.suffix}\n          prefixIcon={prefixIcon}\n          suffixIcon={renderSuffixIcon()}\n          panel={renderContent()}\n          placeholder={!multiple && showPopup && selectedLabel ? selectedLabel : placeholder || t(local.placeholder)}\n          inputValue={inputValue}\n          tagInputProps={{\n            size,\n            ...tagInputProps,\n          }}\n          tagProps={{ size, ...tagProps }}\n          inputProps={{\n            size,\n            ...inputProps,\n          }}\n          minCollapsedNum={minCollapsedNum}\n          collapsedItems={collapsedItems}\n          updateScrollTop={updateScrollTop}\n          popupProps={{\n            overlayClassName: [`${name}__dropdown`, overlayClassName],\n            onScroll: handleScroll,\n            ...restPopupProps,\n          }}\n          popupVisible={showPopup}\n          onPopupVisibleChange={handleShowPopup}\n          onTagChange={onTagChange}\n          onInputChange={handleInputChange}\n          onFocus={onFocus}\n          onEnter={handleEnter}\n          onBlur={(_, context) => {\n            onBlur?.({ value, e: context.e as React.FocusEvent<HTMLDivElement> });\n          }}\n          onClear={handleClear}\n          {...selectInputProps}\n        />\n      </div>\n    );\n  },\n  { Option, OptionGroup },\n);\n\nSelect.displayName = 'Select';\n\nexport default Select;\n"],"names":["Select","forwardRefWithStatics","originalProps","ref","props","useDefaultProps","selectDefaultProps","_useLocaleReceiver","useLocaleReceiver","_useLocaleReceiver2","_slicedToArray","local","t","emptyText","loadingText","readonly","borderless","autoWidth","creatable","_props$loadingText","max","popupProps","reserveKeyword","className","style","disabled","size","multiple","placeholder","clearable","prefixIcon","options","filterable","loading","empty","valueType","keys","children","collapsedItems","minCollapsedNum","valueDisplay","showArrow","inputProps","panelBottomContent","panelTopContent","selectInputProps","tagInputProps","tagProps","scroll","suffixIcon","label","filter","onFocus","onBlur","_props$onClear","onClear","noop","onCreate","onRemove","onSearch","onEnter","onPopupVisibleChange","_useControlled","useControlled","onChange","_useControlled2","value","selectInputRef","useRef","_useConfig","useConfig","classPrefix","_ref","overlayClassName","onScroll","onScrollToBottom","restPopupProps","_objectWithoutProperties","_excluded","_useState","useState","_useState2","isScrolling","toggleIsScrolling","name","_useControlled3","_useControlled4","showPopup","setShowPopup","_useControlled5","onInputChange","_useControlled6","inputValue","_useOptions","useOptions","currentOptions","setCurrentOptions","tmpPropOptions","valueToOption","selectedOptions","selectedLabel","useMemo","map","selectedOption","get","handleShowPopup","visible","ctx","trigger","onTagChange","_currentTags","context","index","item","e","stopPropagation","closest","len","option","isSelectOptionGroup","values","getSelectValueArr","_getSelectedOptions","getSelectedOptions","currentSelectedOptions","_e$stopPropagation","call","_getSelectedOptions2","isFunction","data","onCheckAllChange","checkAll","_props$value","isDisabledCheckAll","opt","some","isSelectableOption","getOptionValue","forEach","push","_getSelectedOptions3","allSelectedValue","checkAllValue","length","handleChange","selectedValue","_getSelectedOptions4","currentOption","find","handleFilter","filteredOptions","filterLabels","filterMethods","upperValue","toUpperCase","includes","_option$children","_objectSpread","child","isSameLabelOptionExist","concat","handleInputChange","handleClear","Array","isArray","useEffect","String","renderSuffixIcon","React","createElement","Loading","classNames","FakeArrow","isActive","getPopupInstance","useCallback","_selectInputRef$curre","current","getPopupContentElement","childrenWithProps","Children","isValidElement","addedProps","cloneElement","renderContent","popupContentProps","show","PopupContent","renderValueDisplay","_ref2","val","slice","v","key","filterOption","Tag","closable","onClose","_ref3","_e$nativeEvent","_e$nativeEvent$stopIm","_tagProps$onClose","nativeEvent","stopImmediatePropagation","_getSelectedOptions5","_ref4","parseContentTNode","updateScrollTop","content","firstSelectedNode","querySelector","_getComputedStyle","getComputedStyle","paddingBottom","_getComputedStyle2","marginBottom","elementBottomHeight","parseInt","updateValue","getOffsetTopToContainer","offsetTop","clientHeight","setTimeout","scrollTop","onMouseEnter","onMouseLeave","handleEnter","_","handleScroll","_ref5","debounceOnScrollBottom","debounce","_e$target","target","scrollHeight","Math","floor","SelectInput","width","composeRefs","autofocus","allowInput","status","tips","suffix","panel","popupVisible","Option","OptionGroup","displayName"],"mappings":"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"}