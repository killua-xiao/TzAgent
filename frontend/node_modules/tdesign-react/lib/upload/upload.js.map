{"version":3,"file":"upload.js","sources":["../../../components/upload/upload.tsx"],"sourcesContent":["import React, { ForwardedRef, forwardRef } from 'react';\nimport { UploadIcon as TdUploadIcon } from 'tdesign-icons-react';\nimport classNames from 'classnames';\nimport NormalFile from './themes/NormalFile';\nimport DraggerFile from './themes/DraggerFile';\nimport ImageCard from './themes/ImageCard';\nimport MultipleFlowList from './themes/MultipleFlowList';\nimport useUpload from './hooks/useUpload';\nimport Button from '../button';\nimport { uploadDefaultProps } from './defaultProps';\nimport { CommonDisplayFileProps, UploadProps, UploadRef } from './interface';\nimport { UploadDragEvents } from './hooks/useDrag';\nimport CustomFile from './themes/CustomFile';\nimport { UploadFile } from './type';\nimport parseTNode from '../_util/parseTNode';\n\nimport useDefaultProps from '../hooks/useDefaultProps';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\n\n// const Upload = forwardRef((props: UploadProps, ref) => {\nfunction TdUpload<T extends UploadFile = UploadFile>(originalProps: UploadProps<T>, ref: ForwardedRef<UploadRef>) {\n  const props = useDefaultProps<UploadProps<T>>(originalProps, uploadDefaultProps);\n  const { theme, imageProps } = props;\n  const {\n    locale,\n    classPrefix,\n    triggerUploadText,\n    toUploadFiles,\n    displayFiles,\n    uploadValue,\n    sizeOverLimitMessage,\n    uploading,\n    tipsClasses,\n    errorClasses,\n    placeholderClass,\n    inputRef,\n    disabled,\n    onRemove,\n    uploadFiles,\n    onNormalFileChange,\n    onDragFileChange,\n    onPasteFileChange,\n    triggerUpload,\n    cancelUpload,\n    uploadFilePercent,\n  } = useUpload(props);\n\n  React.useImperativeHandle(ref, () => ({\n    upload: inputRef.current,\n    uploading,\n    uploadFilePercent,\n    triggerUpload,\n    uploadFiles,\n    cancelUpload,\n  }));\n\n  const { UploadIcon } = useGlobalIcon({\n    UploadIcon: TdUploadIcon,\n  });\n\n  const renderTrigger = () => {\n    const getDefaultTrigger = () => {\n      if (theme === 'file-input') {\n        return (\n          <Button disabled={disabled} variant=\"outline\" {...props.triggerButtonProps}>\n            {triggerUploadText}\n          </Button>\n        );\n      }\n      return (\n        <Button disabled={disabled} variant=\"outline\" icon={<UploadIcon />} {...props.triggerButtonProps}>\n          {triggerUploadText}\n        </Button>\n      );\n    };\n    return (\n      parseTNode(props.trigger, { dragActive: false, files: uploadValue }) || props.children || getDefaultTrigger()\n    );\n  };\n\n  const triggerElement = renderTrigger();\n\n  const commonDisplayFileProps: CommonDisplayFileProps = {\n    accept: props.accept,\n    files: uploadValue,\n    toUploadFiles,\n    displayFiles,\n    theme,\n    abridgeName: props.abridgeName,\n    placeholder: props.placeholder,\n    disabled: props.disabled,\n    tips: props.tips,\n    sizeOverLimitMessage,\n    uploading,\n    classPrefix,\n    tipsClasses,\n    errorClasses,\n    placeholderClass,\n    locale,\n    autoUpload: props.autoUpload,\n    showUploadProgress: props.showUploadProgress,\n    fileListDisplay: props.fileListDisplay,\n    imageViewerProps: props.imageViewerProps,\n    onRemove,\n  };\n\n  const dragProps: UploadDragEvents = {\n    onDragFileChange,\n    onDragenter: props.onDragenter,\n    onDragleave: props.onDragleave,\n    onDrop: props.onDrop,\n  };\n\n  const getNormalFileNode = () => (\n    <NormalFile {...commonDisplayFileProps} multiple={props.multiple}>\n      <div className={`${classPrefix}-upload__trigger`} onClick={triggerUpload}>\n        {triggerElement}\n      </div>\n    </NormalFile>\n  );\n\n  const getSingleFileDraggerUploadNode = () => (\n    <DraggerFile\n      {...commonDisplayFileProps}\n      dragEvents={dragProps}\n      trigger={props.trigger}\n      cancelUpload={cancelUpload}\n      triggerUpload={triggerUpload}\n      uploadFiles={uploadFiles}\n    />\n  );\n\n  const getImageCardUploadNode = () => (\n    <ImageCard\n      {...commonDisplayFileProps}\n      multiple={props.multiple}\n      max={props.max}\n      showUploadProgress={props.showUploadProgress}\n      triggerUpload={triggerUpload}\n      uploadFiles={uploadFiles}\n      cancelUpload={cancelUpload}\n      onPreview={props.onPreview}\n      showImageFileName={props.showImageFileName}\n      imageProps={imageProps}\n    />\n  );\n\n  const getFlowListNode = () => (\n    <MultipleFlowList\n      {...commonDisplayFileProps}\n      isBatchUpload={props.isBatchUpload}\n      draggable={props.draggable}\n      dragEvents={dragProps}\n      uploadFiles={uploadFiles}\n      cancelUpload={cancelUpload}\n      onPreview={props.onPreview}\n      showThumbnail={props.showThumbnail}\n      showImageFileName={props.showImageFileName}\n      uploadButton={props.uploadButton}\n      cancelUploadButton={props.cancelUploadButton}\n    >\n      <div className={`${classPrefix}-upload__trigger`} onClick={triggerUpload}>\n        {triggerElement}\n      </div>\n    </MultipleFlowList>\n  );\n\n  const getCustomFile = () => (\n    <CustomFile\n      {...commonDisplayFileProps}\n      draggable={props.draggable}\n      dragContent={props.dragContent}\n      dragEvents={dragProps}\n      triggerUpload={triggerUpload}\n      childrenNode={props.children}\n      trigger={props.trigger}\n    >\n      {triggerElement}\n    </CustomFile>\n  );\n\n  const uploadClasses = [\n    props.className,\n    `${classPrefix}-upload`,\n    {\n      [`${classPrefix}-upload--theme-${props.theme}`]: props.theme === 'file-input',\n    },\n  ];\n\n  return (\n    <div\n      className={classNames(uploadClasses)}\n      style={props.style}\n      onPaste={props.uploadPastedFiles ? onPasteFileChange : undefined}\n    >\n      <input\n        ref={inputRef}\n        type=\"file\"\n        disabled={disabled}\n        onChange={onNormalFileChange}\n        multiple={props.multiple}\n        accept={props.accept}\n        hidden\n      />\n      {['file', 'file-input'].includes(theme) && !props.draggable && getNormalFileNode()}\n      {['file', 'image'].includes(theme) && props.draggable && getSingleFileDraggerUploadNode()}\n      {theme === 'image' && !props.draggable && getImageCardUploadNode()}\n      {['image-flow', 'file-flow'].includes(theme) && getFlowListNode()}\n      {theme === 'custom' && getCustomFile()}\n      {props.tips && (\n        <small className={classNames([tipsClasses, { [`${classPrefix}-upload__tips-${props.status}`]: props.status }])}>\n          {props.tips}\n        </small>\n      )}\n\n      {sizeOverLimitMessage && <small className={classNames(errorClasses)}>{sizeOverLimitMessage}</small>}\n    </div>\n  );\n}\n\nexport type UploadOuterForwardRef = {\n  <T>(props: UploadProps<T> & { ref?: ForwardedRef<UploadRef> }): ReturnType<typeof TdUpload>;\n} & React.ForwardRefExoticComponent<UploadProps>;\n\nconst Upload = forwardRef(TdUpload) as UploadOuterForwardRef;\n\nUpload.displayName = 'Upload';\n\nexport default Upload;\n"],"names":["TdUpload","originalProps","ref","props","useDefaultProps","uploadDefaultProps","theme","imageProps","_useUpload","useUpload","locale","classPrefix","triggerUploadText","toUploadFiles","displayFiles","uploadValue","sizeOverLimitMessage","uploading","tipsClasses","errorClasses","placeholderClass","inputRef","disabled","onRemove","uploadFiles","onNormalFileChange","onDragFileChange","onPasteFileChange","triggerUpload","cancelUpload","uploadFilePercent","React","useImperativeHandle","upload","current","_useGlobalIcon","useGlobalIcon","UploadIcon","TdUploadIcon","renderTrigger","getDefaultTrigger","createElement","Button","_objectSpread","variant","triggerButtonProps","icon","parseTNode","trigger","dragActive","files","children","triggerElement","commonDisplayFileProps","accept","abridgeName","placeholder","tips","autoUpload","showUploadProgress","fileListDisplay","imageViewerProps","dragProps","onDragenter","onDragleave","onDrop","getNormalFileNode","NormalFile","multiple","className","onClick","getSingleFileDraggerUploadNode","DraggerFile","dragEvents","getImageCardUploadNode","ImageCard","max","onPreview","showImageFileName","getFlowListNode","MultipleFlowList","isBatchUpload","draggable","showThumbnail","uploadButton","cancelUploadButton","getCustomFile","CustomFile","dragContent","childrenNode","uploadClasses","concat","_defineProperty","classNames","style","onPaste","uploadPastedFiles","type","onChange","hidden","includes","status","Upload","forwardRef","displayName"],"mappings":"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"}