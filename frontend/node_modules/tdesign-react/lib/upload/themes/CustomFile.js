/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../../_chunks/dep-cb0a3966.js';
import React from 'react';
import useDrag from '../hooks/useDrag.js';
import parseTNode from '../../_util/parseTNode.js';
import '../../_chunks/dep-eca3a3de.js';
import '../../_chunks/dep-48805ab8.js';
import '../../_chunks/dep-026a4c6b.js';
import '../../_chunks/dep-f83e4452.js';
import '../../_chunks/dep-b908e1fe.js';
import 'lodash-es';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var CustomFile = function CustomFile(props) {
  var classPrefix = props.classPrefix,
    displayFiles = props.displayFiles,
    accept = props.accept;
  var drag = useDrag(_objectSpread(_objectSpread({}, props.dragEvents), {}, {
    accept: accept
  }));
  var dragActive = drag.dragActive;
  var dragEvents = props.draggable ? {
    onDrop: drag.handleDrop,
    onDragEnter: drag.handleDragenter,
    onDragOver: drag.handleDragover,
    onDragLeave: drag.handleDragleave
  } : {};
  var renderDragContent = function renderDragContent() {
    var childrenContent = parseTNode(props.childrenNode, {
      dragActive: dragActive,
      files: displayFiles
    });
    var triggerContent = parseTNode(props.trigger, {
      dragActive: dragActive,
      files: displayFiles
    });
    return /* @__PURE__ */React.createElement("div", _objectSpread(_objectSpread({
      className: "".concat(classPrefix, "-upload__dragger ").concat(classPrefix, "-upload__dragger-center")
    }, dragEvents), {}, {
      onClick: props.triggerUpload
    }), /* @__PURE__ */React.createElement("div", {
      className: "".concat(classPrefix, "-upload__trigger")
    }, parseTNode(props.dragContent, {
      dragActive: dragActive,
      files: displayFiles
    }) || triggerContent || childrenContent));
  };
  return /* @__PURE__ */React.createElement(React.Fragment, null, props.draggable ? renderDragContent() : /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-upload__trigger"),
    onClick: props.triggerUpload
  }, props.childrenNode || props.children));
};
CustomFile.displayName = "CustomFile";

export { CustomFile as default };
//# sourceMappingURL=CustomFile.js.map
