/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _toConsumableArray } from '../../_chunks/dep-87d110df.js';
import { _ as _defineProperty } from '../../_chunks/dep-cb0a3966.js';
import { _ as _objectWithoutProperties } from '../../_chunks/dep-6b660ef0.js';
import React from 'react';
import { AddIcon, BrowseIcon, DeleteIcon, ErrorCircleFilledIcon } from 'tdesign-icons-react';
import classNames from 'classnames';
import { a as abridgeName } from '../../_chunks/dep-f83e4452.js';
import { Loading } from '../../loading/index.js';
import useGlobalIcon from '../../hooks/useGlobalIcon.js';
import { ImageViewer } from '../../image-viewer/index.js';
import parseTNode from '../../_util/parseTNode.js';
import { Link } from '../../link/index.js';
import { Image } from '../../image/index.js';
import '../../_chunks/dep-026a4c6b.js';
import '../../_chunks/dep-eca3a3de.js';
import '../../_chunks/dep-b908e1fe.js';
import '../../loading/Loading.js';
import '../../_chunks/dep-48805ab8.js';
import '../../_chunks/dep-3a09424a.js';
import 'lodash-es';
import '../../hooks/useConfig.js';
import '../../config-provider/ConfigContext.js';
import '../../_chunks/dep-f97636ce.js';
import '../../_chunks/dep-9dbbf468.js';
import 'dayjs';
import '../../common/Portal.js';
import 'react-dom';
import '../../hooks/useLayoutEffect.js';
import '../../loading/gradient.js';
import '../../_chunks/dep-c48e2ca1.js';
import '../../_chunks/dep-6af6bc60.js';
import '../../hooks/useDomRefCallback.js';
import '../../loading/defaultProps.js';
import '../../hooks/useDefaultProps.js';
import '../../loading/plugin.js';
import '../../_util/react-render.js';
import '../../_chunks/dep-52ff3837.js';
import '../../common/PluginContainer.js';
import '../../config-provider/ConfigProvider.js';
import '../../image-viewer/ImageViewer.js';
import '../../_chunks/dep-6a010af7.js';
import '../../_chunks/dep-76b39920.js';
import '../../hooks/useImagePreviewUrl.js';
import '../../locale/LocalReceiver.js';
import '../../tooltip/index.js';
import '../../tooltip/Tooltip.js';
import '../../popup/index.js';
import '../../popup/Popup.js';
import 'react-transition-group';
import '../../_util/ref.js';
import 'react-is';
import '../../_util/isFragment.js';
import '../../hooks/useAnimation.js';
import '../../hooks/useAttach.js';
import '../../hooks/useControlled.js';
import '../../_util/noop.js';
import '../../hooks/useMutationObserver.js';
import '../../hooks/useLatest.js';
import '../../hooks/usePopper.js';
import '@popperjs/core';
import 'react-fast-compare';
import '../../hooks/useWindowSize.js';
import '../../popup/defaultProps.js';
import '../../popup/hooks/useTrigger.js';
import '../../_util/composeRefs.js';
import '../../_util/listener.js';
import '../../popup/utils/transition.js';
import '../../popup/PopupPlugin.js';
import '../../tooltip/defaultProps.js';
import '../../tooltip/TooltipLite.js';
import '../../hooks/useSwitch.js';
import '../../hooks/usePersistFn.js';
import '../../dialog/index.js';
import '../../dialog/Dialog.js';
import '../../hooks/useDeepEffect.js';
import '../../hooks/useSetState.js';
import '../../dialog/defaultProps.js';
import '../../dialog/DialogCard.js';
import '../../button/index.js';
import '../../button/Button.js';
import '../../hooks/useRipple.js';
import '../../button/defaultProps.js';
import '../../dialog/hooks/useDialogDrag.js';
import '../../hooks/useMouseEvent.js';
import '../../dialog/hooks/useDialogEsc.js';
import '../../dialog/hooks/useDialogPosition.js';
import '../../dialog/hooks/useLockStyle.js';
import '../../_chunks/dep-51092aec.js';
import '../../dialog/utils.js';
import '../../dialog/plugin.js';
import '../../image-viewer/hooks/useIconMap.js';
import '../../image-viewer/hooks/useIndex.js';
import '../../image-viewer/hooks/useMirror.js';
import '../../image-viewer/hooks/usePosition.js';
import '../../image-viewer/hooks/useRotate.js';
import '../../image-viewer/hooks/useScale.js';
import '../../image-viewer/utils.js';
import '../../image-viewer/defaultProps.js';
import '../../image-viewer/hooks/useImageScale.js';
import '../../image-viewer/hooks/useList.js';
import '../../image-viewer/hooks/useViewerScale.js';
import '../../image/Image.js';
import '../../_chunks/dep-4450afc0.js';
import '../../image/defaultProps.js';
import '../../space/index.js';
import '../../space/Space.js';
import '../../space/defaultProps.js';
import '../../link/Link.js';
import '../../link/defaultProps.js';

var _excluded = ["className"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var ImageCard = function ImageCard(props) {
  var _locale$triggerUpload;
  var displayFiles = props.displayFiles,
    locale = props.locale,
    classPrefix = props.classPrefix,
    multiple = props.multiple,
    _props$max = props.max,
    max = _props$max === void 0 ? 0 : _props$max,
    onRemove = props.onRemove,
    disabled = props.disabled,
    fileListDisplay = props.fileListDisplay,
    _props$imageProps = props.imageProps,
    imageProps = _props$imageProps === void 0 ? {} : _props$imageProps;
  var _useGlobalIcon = useGlobalIcon({
      AddIcon: AddIcon,
      BrowseIcon: BrowseIcon,
      DeleteIcon: DeleteIcon,
      ErrorCircleFilledIcon: ErrorCircleFilledIcon
    }),
    BrowseIcon$1 = _useGlobalIcon.BrowseIcon,
    DeleteIcon$1 = _useGlobalIcon.DeleteIcon,
    AddIcon$1 = _useGlobalIcon.AddIcon,
    ErrorCircleFilledIcon$1 = _useGlobalIcon.ErrorCircleFilledIcon;
  var imageClassName = imageProps.className,
    restImageProps = _objectWithoutProperties(imageProps, _excluded);
  var showTrigger = React.useMemo(function () {
    if (multiple) {
      return !max || displayFiles.length < max;
    }
    return !(displayFiles !== null && displayFiles !== void 0 && displayFiles[0]);
  }, [displayFiles, max, multiple]);
  var renderMainContent = function renderMainContent(file, index) {
    return /* @__PURE__ */React.createElement("div", {
      className: "".concat(classPrefix, "-upload__card-content ").concat(classPrefix, "-upload__card-box")
    }, /* @__PURE__ */React.createElement(Image, _objectSpread(_objectSpread({
      fit: "contain",
      className: classNames("".concat(classPrefix, "-upload__card-image"), imageClassName)
    }, restImageProps), {}, {
      src: file.url || file.raw
    })), /* @__PURE__ */React.createElement("div", {
      className: "".concat(classPrefix, "-upload__card-mask")
    }, /* @__PURE__ */React.createElement("span", {
      className: "".concat(classPrefix, "-upload__card-mask-item"),
      onClick: function onClick(e) {
        return e.stopPropagation();
      }
    }, /* @__PURE__ */React.createElement(ImageViewer, _objectSpread({
      trigger: function trigger(_ref) {
        var open = _ref.open;
        return /* @__PURE__ */React.createElement(BrowseIcon$1, {
          onClick: function onClick(e) {
            var _props$onPreview;
            (_props$onPreview = props.onPreview) === null || _props$onPreview === void 0 || _props$onPreview.call(props, {
              file: file,
              index: index,
              e: e
            });
            open();
          }
        });
      },
      images: displayFiles.map(function (t) {
        return t.url || t.raw;
      }),
      defaultIndex: index
    }, props.imageViewerProps))), !disabled && /* @__PURE__ */React.createElement(React.Fragment, null, /* @__PURE__ */React.createElement("span", {
      className: "".concat(classPrefix, "-upload__card-mask-item-divider")
    }), /* @__PURE__ */React.createElement("span", {
      className: "".concat(classPrefix, "-upload__card-mask-item"),
      onClick: function onClick(e) {
        return e.stopPropagation();
      }
    }, /* @__PURE__ */React.createElement(DeleteIcon$1, {
      onClick: function onClick(e) {
        return onRemove === null || onRemove === void 0 ? void 0 : onRemove({
          e: e,
          file: file,
          index: index
        });
      }
    })))));
  };
  var renderProgressFile = function renderProgressFile(file, loadCard) {
    var _locale$progress;
    return /* @__PURE__ */React.createElement("div", {
      className: classNames([loadCard, "".concat(classPrefix, "-upload__").concat(props.theme, "-").concat(file.status)])
    }, /* @__PURE__ */React.createElement(Loading, {
      loading: true,
      size: "medium"
    }), /* @__PURE__ */React.createElement("p", null, locale === null || locale === void 0 || (_locale$progress = locale.progress) === null || _locale$progress === void 0 ? void 0 : _locale$progress.uploadingText, props.showUploadProgress ? " ".concat(file.percent, "%") : ""));
  };
  var renderFailFile = function renderFailFile(file, index, loadCard) {
    var _file$response, _locale$progress2;
    return /* @__PURE__ */React.createElement("div", {
      className: loadCard
    }, /* @__PURE__ */React.createElement(ErrorCircleFilledIcon$1, null), /* @__PURE__ */React.createElement("p", null, ((_file$response = file.response) === null || _file$response === void 0 ? void 0 : _file$response.error) || (locale === null || locale === void 0 || (_locale$progress2 = locale.progress) === null || _locale$progress2 === void 0 ? void 0 : _locale$progress2.failText)), /* @__PURE__ */React.createElement("div", {
      className: "".concat(classPrefix, "-upload__card-mask")
    }, /* @__PURE__ */React.createElement("span", {
      className: "".concat(classPrefix, "-upload__card-mask-item"),
      onClick: function onClick(e) {
        return e.stopPropagation();
      }
    }, /* @__PURE__ */React.createElement(DeleteIcon$1, {
      onClick: function onClick(e) {
        var _props$onRemove;
        return (_props$onRemove = props.onRemove) === null || _props$onRemove === void 0 ? void 0 : _props$onRemove.call(props, {
          e: e,
          file: file,
          index: index
        });
      }
    }))));
  };
  var cardItemClasses = "".concat(classPrefix, "-upload__card-item ").concat(classPrefix, "-is-background");
  if (fileListDisplay) {
    return /* @__PURE__ */React.createElement("div", null, parseTNode(fileListDisplay, {
      triggerUpload: props.triggerUpload,
      uploadFiles: props.uploadFiles,
      cancelUpload: props.cancelUpload,
      onPreview: props.onPreview,
      onRemove: props.onRemove,
      toUploadFiles: props.toUploadFiles,
      sizeOverLimitMessage: props.sizeOverLimitMessage,
      locale: props.locale,
      files: displayFiles
    }));
  }
  return /* @__PURE__ */React.createElement("div", null, /* @__PURE__ */React.createElement("ul", {
    className: "".concat(classPrefix, "-upload__card")
  }, displayFiles === null || displayFiles === void 0 ? void 0 : displayFiles.map(function (file, index) {
    var loadCard = "".concat(classPrefix, "-upload__card-container ").concat(classPrefix, "-upload__card-box");
    var fileName = props.abridgeName ? abridgeName.apply(void 0, [file.name].concat(_toConsumableArray(props.abridgeName))) : file.name;
    var fileNameClassName = "".concat(classPrefix, "-upload__card-name");
    return /* @__PURE__ */React.createElement("li", {
      className: cardItemClasses,
      key: index
    }, file.status === "progress" && renderProgressFile(file, loadCard), file.status === "fail" && renderFailFile(file, index, loadCard), !["progress", "fail"].includes(file.status) && renderMainContent(file, index), fileName && props.showImageFileName && (file.url ? /* @__PURE__ */React.createElement(Link, {
      href: file.url,
      className: fileNameClassName,
      target: "_blank",
      hover: "color",
      size: "small"
    }, fileName) : /* @__PURE__ */React.createElement("span", {
      className: fileNameClassName
    }, fileName)));
  }), showTrigger && /* @__PURE__ */React.createElement("li", {
    className: cardItemClasses,
    onClick: props.triggerUpload
  }, /* @__PURE__ */React.createElement("div", {
    className: classNames(["".concat(classPrefix, "-upload__image-add"), "".concat(classPrefix, "-upload__card-container"), "".concat(classPrefix, "-upload__card-box"), _defineProperty({}, "".concat(classPrefix, "-is-disabled"), props.disabled)])
  }, /* @__PURE__ */React.createElement(AddIcon$1, null), /* @__PURE__ */React.createElement("p", {
    className: classNames(["".concat(classPrefix, "-size-s"), "".concat(classPrefix, "-upload__add-text")])
  }, locale === null || locale === void 0 || (_locale$triggerUpload = locale.triggerUploadText) === null || _locale$triggerUpload === void 0 ? void 0 : _locale$triggerUpload.image)))));
};
ImageCard.displayName = "ImageCard";

export { ImageCard as default };
//# sourceMappingURL=ImageCard.js.map
