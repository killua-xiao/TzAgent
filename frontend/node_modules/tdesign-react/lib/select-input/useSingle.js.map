{"version":3,"file":"useSingle.js","sources":["../../../components/select-input/useSingle.tsx"],"sourcesContent":["import React, { useRef, MouseEvent } from 'react';\nimport { isObject, pick } from 'lodash-es';\nimport classNames from 'classnames';\nimport { SelectInputCommonProperties } from './interface';\nimport Input, { InputRef, TdInputProps } from '../input';\nimport { TdSelectInputProps } from './type';\nimport { Loading } from '../loading';\nimport useConfig from '../hooks/useConfig';\nimport useControlled from '../hooks/useControlled';\n\nexport interface RenderSelectSingleInputParams {\n  tPlaceholder: string;\n}\n\n// single 和 multiple 共有特性\nconst COMMON_PROPERTIES = [\n  'status',\n  'clearable',\n  'disabled',\n  'label',\n  'placeholder',\n  'readonly',\n  'suffix',\n  'suffixIcon',\n  'onPaste',\n  'onEnter',\n  'onMouseenter',\n  'onMouseleave',\n  'size',\n  'prefixIcon',\n];\n\nconst DEFAULT_KEYS: TdSelectInputProps['keys'] = {\n  label: 'label',\n  value: 'value',\n};\n\nfunction getInputValue(value: TdSelectInputProps['value'], keys: TdSelectInputProps['keys']) {\n  const iKeys = keys || DEFAULT_KEYS;\n  return isObject(value) ? value[iKeys.label] : value;\n}\n\nexport default function useSingle(props: TdSelectInputProps) {\n  const { value, keys, loading } = props;\n  const { classPrefix } = useConfig();\n  const inputRef = useRef<InputRef>(null);\n  const [inputValue, setInputValue] = useControlled(props, 'inputValue', props.onInputChange);\n\n  const commonInputProps: SelectInputCommonProperties = {\n    ...pick(props, COMMON_PROPERTIES),\n    suffixIcon: loading ? <Loading loading size=\"small\" /> : props.suffixIcon,\n  };\n\n  const onInnerClear = (context: { e: MouseEvent<SVGSVGElement> }) => {\n    context?.e?.stopPropagation();\n    props.onClear?.(context);\n    setInputValue('', { trigger: 'clear' });\n  };\n\n  const onInnerInputChange: TdInputProps['onChange'] = (value, context) => {\n    if (props.allowInput) {\n      setInputValue(value, { ...context, trigger: 'input' });\n    }\n  };\n\n  const handleEmptyPanelBlur = (value: string, { e }: { e: React.FocusEvent<HTMLInputElement> }) => {\n    props.onBlur?.(value, { e, inputValue: value });\n  };\n\n  const renderSelectSingle = (popupVisible: boolean) => {\n    // 单选，值的呈现方式\n    const singleValueDisplay: any = !props.multiple ? props.valueDisplay : null;\n    const displayedValue = popupVisible && props.allowInput ? inputValue : getInputValue(value, keys);\n    return (\n      <Input\n        ref={inputRef}\n        {...commonInputProps}\n        autoWidth={props.autoWidth}\n        allowInput={props.allowInput}\n        placeholder={singleValueDisplay ? '' : props.placeholder}\n        value={singleValueDisplay ? ' ' : displayedValue}\n        label={\n          (props.label || singleValueDisplay) && (\n            <>\n              {props.label}\n              {singleValueDisplay as React.ReactNode}\n            </>\n          )\n        }\n        onChange={onInnerInputChange}\n        onClear={onInnerClear}\n        // [Important Info]: SelectInput.blur is not equal to Input, example: click popup panel\n        onFocus={(val, context) => {\n          props.onFocus?.(value, { ...context, inputValue: val });\n          // focus might not need to change input value. it will caught some curious errors in tree-select\n          // !popupVisible && setInputValue(getInputValue(value, keys), { ...context, trigger: 'input' });\n        }}\n        onEnter={(val, context) => {\n          props.onEnter?.(value, { ...context, inputValue: val });\n        }}\n        // onBlur need to triggered by input when popup panel is null\n        onBlur={!props.panel ? handleEmptyPanelBlur : null}\n        {...props.inputProps}\n        inputClass={classNames(props.inputProps?.className, {\n          [`${classPrefix}-input--focused`]: popupVisible,\n          [`${classPrefix}-is-focused`]: popupVisible,\n        })}\n      />\n    );\n  };\n\n  return {\n    inputRef,\n    commonInputProps,\n    singleInputValue: inputValue,\n    onInnerClear,\n    renderSelectSingle,\n  };\n}\n"],"names":["COMMON_PROPERTIES","DEFAULT_KEYS","label","value","getInputValue","keys","iKeys","isObject","useSingle","props","loading","_useConfig","useConfig","classPrefix","inputRef","useRef","_useControlled","useControlled","onInputChange","_useControlled2","_slicedToArray","inputValue","setInputValue","commonInputProps","_objectSpread","pick","suffixIcon","React","createElement","Loading","size","onInnerClear","context","_context$e","_props$onClear","e","stopPropagation","onClear","call","trigger","onInnerInputChange","allowInput","handleEmptyPanelBlur","_ref","_props$onBlur","onBlur","renderSelectSingle","popupVisible","_props$inputProps","singleValueDisplay","multiple","valueDisplay","displayedValue","Input","ref","autoWidth","placeholder","Fragment","onChange","onFocus","val","_props$onFocus","onEnter","_props$onEnter","panel","inputProps","inputClass","classNames","className","_defineProperty","concat","singleInputValue"],"mappings":"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"}