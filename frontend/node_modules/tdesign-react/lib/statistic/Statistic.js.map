{"version":3,"file":"Statistic.js","sources":["../../../common/js/statistic/tween.ts","../../../common/js/statistic/utils.ts","../../../components/statistic/Statistic.tsx"],"sourcesContent":["/**\n * Inspired by https://github.com/PengJiyuan/b-tween\n * requestAnimationFrame https://caniuse.com/requestanimationframe\n * TDesign vue 2 need to ensure compatibility with users who are using IE and Vue2,\n * it is necessary to use setInterval instead of requestAnimationFrame when the browser version is less than 9\n */\nimport { getIEVersion } from '../utils/helper';\n\nexport interface TweenSettings {\n  from: Record<string, number>;\n  to: Record<string, number>;\n  duration?: number;\n  delay?: number;\n  onStart?: (keys: Record<string, number>) => void;\n  onUpdate?: (keys: Record<string, number>) => void;\n  onFinish?: (keys: Record<string, number>) => void;\n}\n\nconst quartOut = (t: number) => 1 - Math.abs((t - 1) ** 4);\n\nexport default class Tween {\n  private from: Record<string, number>;\n\n  private to: Record<string, number>;\n\n  private duration: number;\n\n  private onStart?: (keys: Record<string, number>) => void;\n\n  private onUpdate: (keys: Record<string, number>) => void;\n\n  private onFinish?: (keys: Record<string, number>) => void;\n\n  private startTime: number;\n\n  private started: boolean;\n\n  private finished: boolean;\n\n  private timer: number | NodeJS.Timer | null;\n\n  private keys: Record<string, number>;\n\n  constructor({\n    from,\n    to,\n    duration = 200,\n    onStart,\n    onUpdate = () => {},\n    onFinish,\n  }: TweenSettings) {\n    this.from = from;\n    this.to = to;\n    this.duration = duration;\n    this.onStart = onStart;\n    this.onUpdate = onUpdate;\n    this.onFinish = onFinish;\n    this.startTime = Date.now();\n    this.started = false;\n    this.finished = false;\n    this.timer = null;\n    this.keys = {};\n    Object.entries(from).forEach(([key, value]) => {\n      if (this.to[key] === undefined) {\n        this.to[key] = value;\n      }\n    });\n\n    Object.entries(to).forEach(([key, value]) => {\n      if (this.from[key] === undefined) {\n        this.from[key] = value;\n      }\n    });\n  }\n\n  private time = 0;\n\n  private elapsed = 0;\n\n  private update() {\n    this.time = Date.now();\n    if (this.time < this.startTime || this.finished) return;\n\n    if (this.elapsed >= this.duration) {\n      this.finished = true;\n      this.onFinish?.(this.keys);\n      return;\n    }\n    const elapsed = Math.min(this.time - this.startTime, this.duration);\n    this.elapsed = elapsed;\n    const progress = quartOut(elapsed / this.duration);\n\n    Object.keys(this.to).forEach((key) => {\n      const delta = this.to[key] - this.from[key];\n      this.keys[key] = this.from[key] + delta * progress;\n    });\n\n    if (!this.started) {\n      this.onStart?.(this.keys);\n      this.started = true;\n    }\n\n    this.onUpdate(this.keys);\n  }\n\n  private polyfillStart() {\n    const elapsed = Date.now() - this.startTime;\n    const interval = quartOut(elapsed / this.duration);\n\n    this.timer = setInterval(() => {\n      this.update();\n      if (this.finished) {\n        clearInterval(this.timer as number);\n      }\n    }, interval);\n  }\n\n  private normalStart() {\n    const tick = () => {\n      this.update();\n      this.timer = requestAnimationFrame(tick);\n\n      if (this.finished) {\n        cancelAnimationFrame(this.timer);\n        this.timer = null;\n      }\n    };\n    tick();\n  }\n\n  public start() {\n    this.startTime = Date.now();\n    // IE < 10\n    if (getIEVersion() < 10) this.polyfillStart();\n    else this.normalStart();\n  }\n\n  public stop() {\n    // IE < 10\n    if (getIEVersion() < 10) clearInterval(this.timer as number);\n    else cancelAnimationFrame(this.timer as number);\n    this.timer = null;\n  }\n}\n","/**\n * 颜色映射\n */\nexport const COLOR_MAP = {\n  black: 'var(--td-text-color-primary)',\n  blue: 'var(--td-brand-color)',\n  red: 'var(--td-error-color)',\n  orange: 'var(--td-warning-color)',\n  green: 'var(--td-success-color)',\n};\n\nexport function getFormatValue(value:number | undefined | string, decimalPlaces:number, separator:string) {\n  const options = {\n    minimumFractionDigits: decimalPlaces ?? 0,\n    maximumFractionDigits: decimalPlaces ?? 20,\n    useGrouping: !!separator,\n  };\n  // replace的替换的方案仅能应对大部分地区\n  return value.toLocaleString(undefined, options).replace(/,|，/g, separator);\n}\n","import React, { forwardRef, useEffect, useImperativeHandle, useMemo, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport { isNumber, isFunction } from 'lodash-es';\nimport {\n  ArrowTriangleDownFilledIcon as TDArrowTriangleDownFilledIcon,\n  ArrowTriangleUpFilledIcon as TDArrowTriangleUpFilledIcon,\n} from 'tdesign-icons-react';\nimport Tween from '@tdesign/common-js/statistic/tween';\nimport { getFormatValue, COLOR_MAP } from '@tdesign/common-js/statistic/utils';\nimport { TdStatisticProps } from './type';\nimport { statisticDefaultProps } from './defaultProps';\nimport { StyledProps } from '../common';\nimport useConfig from '../hooks/useConfig';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport useDefaultProps from '../hooks/useDefaultProps';\nimport useIsFirstRender from '../hooks/useIsFirstRender';\n\nimport Skeleton from '../skeleton';\n\nexport interface StatisticProps extends TdStatisticProps, StyledProps {}\n\nexport interface StatisticRef {\n  start: (from?: number, to?: number) => void;\n}\n\nconst Statistic = forwardRef<StatisticRef, StatisticProps>((props, ref) => {\n  const {\n    className,\n    style,\n    animation,\n    animationStart,\n    color,\n    decimalPlaces,\n    extra,\n    format,\n    loading,\n    prefix,\n    separator,\n    suffix,\n    title,\n    trend,\n    trendPlacement,\n    unit,\n    value,\n  } = useDefaultProps<StatisticProps>(props, statisticDefaultProps);\n  const { classPrefix } = useConfig();\n  const { ArrowTriangleUpFilledIcon } = useGlobalIcon({ ArrowTriangleUpFilledIcon: TDArrowTriangleUpFilledIcon });\n  const { ArrowTriangleDownFilledIcon } = useGlobalIcon({\n    ArrowTriangleDownFilledIcon: TDArrowTriangleDownFilledIcon,\n  });\n\n  /**\n   * init value\n   */\n  const [innerValue, setInnerValue] = useState(animation?.valueFrom ?? value);\n  const numberValue = useMemo(() => (isNumber(value) ? value : 0), [value]);\n  const tween = useRef(null);\n  const isFirstRender = useIsFirstRender();\n\n  const start = (from: number = animation?.valueFrom ?? 0, to: number = numberValue) => {\n    if (from !== to) {\n      tween.current = new Tween({\n        from: {\n          value: from,\n        },\n        to: {\n          value: to,\n        },\n        duration: animation?.duration,\n        onUpdate: (keys) => {\n          setInnerValue(keys.value);\n        },\n        onFinish: () => {\n          setInnerValue(to);\n        },\n      });\n      tween.current?.start();\n    }\n  };\n\n  const formatValue = useMemo(() => {\n    let formatInnerValue: number | string | undefined = innerValue;\n\n    if (isFunction(format)) {\n      return format(formatInnerValue);\n    }\n\n    // replace的替换的方案仅能应对大部分地区\n    formatInnerValue = getFormatValue(formatInnerValue, decimalPlaces, separator);\n\n    return formatInnerValue;\n  }, [innerValue, decimalPlaces, separator, format]);\n\n  const valueStyle = useMemo(\n    () => ({\n      color: COLOR_MAP[color as keyof typeof COLOR_MAP] || color,\n    }),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [color],\n  );\n\n  useEffect(() => {\n    //  第一次渲染不执行，否则导致初始formValue失效\n    if (isFirstRender) return;\n\n    setInnerValue(value);\n\n    animationStart && animation && start();\n\n    return () => {\n      if (tween.current) {\n        tween.current.stop();\n      }\n    };\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value]);\n\n  useEffect(() => {\n    animationStart && animation && !tween.current && start();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [animationStart]);\n\n  useImperativeHandle(ref, () => ({\n    start,\n  }));\n\n  const trendIcons = {\n    increase: <ArrowTriangleUpFilledIcon />,\n    decrease: <ArrowTriangleDownFilledIcon />,\n  };\n\n  const trendIcon = trend ? trendIcons[trend] : null;\n\n  const prefixRender = prefix || (trendIcon && trendPlacement !== 'right' ? trendIcon : null);\n  const suffixRender = suffix || (trendIcon && trendPlacement === 'right' ? trendIcon : null);\n\n  return (\n    <div className={classNames(`${classPrefix}-statistic`, className)} style={style}>\n      {title && <div className={`${classPrefix}-statistic-title`}>{title}</div>}\n      <Skeleton animation=\"gradient\" theme=\"text\" loading={!!loading}>\n        <div className={`${classPrefix}-statistic-content`} style={valueStyle}>\n          {prefixRender && <span className={`${classPrefix}-statistic-content-prefix`}>{prefixRender}</span>}\n          <span className={`${classPrefix}-statistic-content-value`}>{formatValue}</span>\n          {unit && <span className={`${classPrefix}-statistic-content-unit`}>{unit}</span>}\n          {suffixRender && <span className={`${classPrefix}-statistic-content-suffix`}>{suffixRender}</span>}\n        </div>\n      </Skeleton>\n      {extra && <div className={`${classPrefix}-statistic-extra`}>{extra}</div>}\n    </div>\n  );\n});\n\nStatistic.displayName = 'Statistic';\nexport default Statistic;\n"],"names":["quartOut","t","Math","abs","pow","Tween","_ref","_this","from","to","_ref$duration","duration","onStart","_ref$onUpdate","onUpdate","onFinish","_classCallCheck","_defineProperty","startTime","Date","now","started","finished","timer","keys","Object","entries","forEach","_ref2","_ref3","_slicedToArray","key","value","_ref4","_ref5","_createClass","update","_this2","time","elapsed","_this$onFinish","call","min","progress","delta","_this$onStart","polyfillStart","_this3","interval","setInterval","clearInterval","normalStart","_this4","tick","requestAnimationFrame","cancelAnimationFrame","start","getIEVersion","stop","COLOR_MAP","black","blue","red","orange","green","getFormatValue","decimalPlaces","separator","options","minimumFractionDigits","maximumFractionDigits","useGrouping","toLocaleString","replace","Statistic","forwardRef","props","ref","_animation$valueFrom","_useDefaultProps","useDefaultProps","statisticDefaultProps","className","style","animation","animationStart","color","extra","format","loading","prefix","suffix","title","trend","trendPlacement","unit","_useConfig","useConfig","classPrefix","_useGlobalIcon","useGlobalIcon","ArrowTriangleUpFilledIcon","TDArrowTriangleUpFilledIcon","_useGlobalIcon2","ArrowTriangleDownFilledIcon","TDArrowTriangleDownFilledIcon","_useState","useState","valueFrom","_useState2","innerValue","setInnerValue","numberValue","useMemo","isNumber","tween","useRef","isFirstRender","useIsFirstRender","_animation$valueFrom2","arguments","length","undefined","_tween$current","current","formatValue","formatInnerValue","isFunction","valueStyle","useEffect","useImperativeHandle","trendIcons","increase","decrease","trendIcon","prefixRender","suffixRender","React","createElement","classNames","concat","Skeleton","theme","displayName"],"mappings":"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"}