/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-cb0a3966.js';
import { _ as _slicedToArray } from '../_chunks/dep-48805ab8.js';
import React, { forwardRef } from 'react';
import classNames from 'classnames';
import useConfig from '../hooks/useConfig.js';
import useDomRefCallback from '../hooks/useDomRefCallback.js';
import useRipple from '../hooks/useRipple.js';
import { dropdownItemDefaultProps } from './defaultProps.js';
import { pxCompat } from '../_util/helper.js';
import useDefaultProps from '../hooks/useDefaultProps.js';
import '../_chunks/dep-eca3a3de.js';
import '../_chunks/dep-026a4c6b.js';
import '../config-provider/ConfigContext.js';
import 'lodash-es';
import '../_chunks/dep-f97636ce.js';
import '../_chunks/dep-9dbbf468.js';
import 'dayjs';
import '../_chunks/dep-c48e2ca1.js';
import '../hooks/useAnimation.js';
import '../_chunks/dep-3a09424a.js';
import '../_chunks/dep-6b660ef0.js';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var DropdownItem = /*#__PURE__*/forwardRef(function (props, ref) {
  var _useDefaultProps = useDefaultProps(props, dropdownItemDefaultProps),
    children = _useDefaultProps.children,
    className = _useDefaultProps.className,
    active = _useDefaultProps.active,
    disabled = _useDefaultProps.disabled,
    value = _useDefaultProps.value,
    theme = _useDefaultProps.theme,
    prefixIcon = _useDefaultProps.prefixIcon,
    maxColumnWidth = _useDefaultProps.maxColumnWidth,
    minColumnWidth = _useDefaultProps.minColumnWidth,
    onClick = _useDefaultProps.onClick,
    style = _useDefaultProps.style,
    isSubmenu = _useDefaultProps.isSubmenu;
  var _useConfig = useConfig(),
    classPrefix = _useConfig.classPrefix;
  var _useDomRefCallback = useDomRefCallback(),
    _useDomRefCallback2 = _slicedToArray(_useDomRefCallback, 2),
    dropdownItemDom = _useDomRefCallback2[0],
    setRefCurrent = _useDomRefCallback2[1];
  useRipple(isSubmenu || disabled ? null : (ref === null || ref === void 0 ? void 0 : ref.current) || dropdownItemDom);
  var handleItemClick = function handleItemClick(e) {
    if (disabled) return;
    onClick === null || onClick === void 0 || onClick(value, {
      e: e
    });
  };
  return /* @__PURE__ */React.createElement(React.Fragment, null, /* @__PURE__ */React.createElement("li", {
    className: classNames(className, "".concat(classPrefix, "-dropdown__item--theme-").concat(theme), _defineProperty(_defineProperty({}, "".concat(classPrefix, "-dropdown__item--active"), active), "".concat(classPrefix, "-dropdown__item--disabled"), disabled)),
    onClick: handleItemClick,
    style: _objectSpread({
      maxWidth: pxCompat(maxColumnWidth),
      minWidth: pxCompat(minColumnWidth)
    }, style),
    ref: ref || setRefCurrent
  }, prefixIcon ? /* @__PURE__ */React.createElement("div", {
    className: "".concat(classPrefix, "-dropdown__item-icon")
  }, prefixIcon) : null, children));
});
DropdownItem.displayName = "DropdownItem";

export { DropdownItem as default };
//# sourceMappingURL=DropdownItem.js.map
