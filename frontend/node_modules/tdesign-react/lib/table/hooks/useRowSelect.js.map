{"version":3,"file":"useRowSelect.js","sources":["../../../../components/table/hooks/useRowSelect.tsx"],"sourcesContent":["// 行选中相关功能：单选 + 多选\n\nimport React, { useEffect, useState, MouseEvent, useMemo } from 'react';\nimport { intersection, get, isFunction } from 'lodash-es';\nimport { isRowSelectedDisabled } from '@tdesign/common-js/table/utils';\nimport log from '@tdesign/common-js/log/index';\nimport useControlled from '../../hooks/useControlled';\nimport {\n  PrimaryTableCellParams,\n  PrimaryTableCol,\n  RowClassNameParams,\n  TableRowData,\n  TdBaseTableProps,\n  TdPrimaryTableProps,\n} from '../type';\nimport { TableClassName } from './useClassName';\nimport Checkbox from '../../checkbox';\nimport Radio from '../../radio';\nimport { ClassName } from '../../common';\n\nconst selectedRowDataMap = new Map<string | number, TableRowData>();\n\nexport default function useRowSelect(\n  props: TdPrimaryTableProps,\n  tableSelectedClasses: TableClassName['tableSelectedClasses'],\n) {\n  const { selectedRowKeys, columns, data, rowKey, indeterminateSelectedRowKeys } = props;\n  const { pagination, reserveSelectedRowOnPaginate } = props;\n  const [currentPaginateData, setCurrentPaginateData] = useState<TableRowData[]>(data);\n  const [selectedRowClassNames, setSelectedRowClassNames] = useState<TdBaseTableProps['rowClassName']>();\n  const [tSelectedRowKeys, setTSelectedRowKeys] = useControlled(props, 'selectedRowKeys', props.onSelectChange, {\n    defaultSelectedRowKeys: props.defaultSelectedRowKeys || [],\n  });\n  const selectColumn = columns.find(({ type }) => ['multiple', 'single'].includes(type));\n\n  const canSelectedRows = useMemo(() => {\n    const currentData = reserveSelectedRowOnPaginate ? data : currentPaginateData;\n    return currentData?.filter((row, rowIndex): boolean => !isDisabled(row, rowIndex)) || [];\n    // eslint-disable-next-line\n  }, [reserveSelectedRowOnPaginate, data, currentPaginateData]);\n\n  // 选中的行，和所有可以选择的行，交集，用于计算 isSelectedAll 和 isIndeterminate\n  const intersectionKeys = intersection(\n    tSelectedRowKeys,\n    canSelectedRows.map((t) => get(t, rowKey || 'id')),\n  );\n\n  useEffect(\n    () => {\n      if (reserveSelectedRowOnPaginate) return;\n      // 分页变化时，在 onPageChange 中设置 setCurrentPaginateData，PrimaryTable 中\n      const { pageSize, current, defaultPageSize, defaultCurrent } = pagination;\n      const tPageSize = pageSize || defaultPageSize;\n      const tCurrent = current || defaultCurrent;\n      const newData = data.slice(tPageSize * (tCurrent - 1), tPageSize * tCurrent);\n      setCurrentPaginateData(newData);\n    },\n    // eslint-disable-next-line\n    [data, reserveSelectedRowOnPaginate],\n  );\n\n  useEffect(\n    () => {\n      if (!selectColumn && (!tSelectedRowKeys || !tSelectedRowKeys.length)) return;\n      const disabledRowFunc = (p: RowClassNameParams<TableRowData>): ClassName =>\n        selectColumn.disabled(p) ? tableSelectedClasses.disabled : '';\n      const disabledRowClass = selectColumn?.disabled ? disabledRowFunc : undefined;\n      const selected = new Set(tSelectedRowKeys);\n      const selectedRowClassFunc = ({ row }: RowClassNameParams<TableRowData>) => {\n        const rowId = get(row, rowKey || 'id');\n        return selected.has(rowId) ? tableSelectedClasses.selected : '';\n      };\n      const selectedRowClass = selected.size ? selectedRowClassFunc : undefined;\n      setSelectedRowClassNames([disabledRowClass, selectedRowClass]);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [data, columns, tSelectedRowKeys, selectColumn, rowKey],\n  );\n\n  function isDisabled(row: Record<string, any>, rowIndex: number): boolean {\n    return isRowSelectedDisabled(selectColumn, row, rowIndex);\n  }\n\n  function getSelectedHeader() {\n    return () => {\n      const isIndeterminate = intersectionKeys.length > 0 && intersectionKeys.length < canSelectedRows.length;\n      const isChecked =\n        intersectionKeys.length !== 0 &&\n        canSelectedRows.length !== 0 &&\n        intersectionKeys.length === canSelectedRows.length;\n      return (\n        <Checkbox\n          checked={isChecked}\n          indeterminate={isIndeterminate}\n          disabled={!canSelectedRows.length}\n          onChange={handleSelectAll}\n        />\n      );\n    };\n  }\n\n  function getRowSelectDisabledData(p: PrimaryTableCellParams<TableRowData>) {\n    const { col, row, rowIndex } = p;\n    const disabled: boolean = typeof col.disabled === 'function' ? col.disabled({ row, rowIndex }) : col.disabled;\n    const checkProps = isFunction(col.checkProps) ? col.checkProps({ row, rowIndex }) : col.checkProps;\n    return {\n      disabled: disabled || checkProps?.disabled,\n      checkProps,\n    };\n  }\n\n  function renderSelectCell(p: PrimaryTableCellParams<TableRowData>) {\n    const { col: column, row = {} } = p;\n    const checked = tSelectedRowKeys.includes(get(row, rowKey || 'id'));\n    const { disabled, checkProps } = getRowSelectDisabledData(p);\n    const selectBoxProps = {\n      checked,\n      disabled,\n      ...checkProps,\n      onChange: () => {\n        handleSelectChange(row);\n      },\n    };\n    // 选中行功能中，点击 checkbox/radio 需阻止事件冒泡，避免触发不必要的 onRowClick\n    const onCheckClick = (p: { e: MouseEvent<HTMLLabelElement> } | MouseEvent<HTMLLabelElement>) => {\n      const e = 'e' in p ? p.e : p;\n      e?.stopPropagation();\n    };\n    if (column.type === 'single') return <Radio {...selectBoxProps} onClick={onCheckClick} />;\n    if (column.type === 'multiple') {\n      const isIndeterminate = indeterminateSelectedRowKeys?.length\n        ? indeterminateSelectedRowKeys.includes(get(row, rowKey))\n        : false;\n      return <Checkbox indeterminate={isIndeterminate} {...selectBoxProps} onClick={onCheckClick} />;\n    }\n    return null;\n  }\n\n  const allowUncheck = useMemo(() => {\n    const singleSelectCol = columns.find((col) => col.type === 'single');\n    if (!singleSelectCol || !singleSelectCol.checkProps || !('allowUncheck' in singleSelectCol.checkProps))\n      return false;\n    return singleSelectCol.checkProps.allowUncheck;\n  }, [columns]);\n\n  function handleSelectChange(row: TableRowData = {}) {\n    let selectedRowKeys = [...tSelectedRowKeys];\n    const reRowKey = rowKey || 'id';\n    const id = get(row, reRowKey);\n    const selectedRowIndex = selectedRowKeys.indexOf(id);\n    const isExisted = selectedRowIndex !== -1;\n    if (selectColumn.type === 'multiple') {\n      isExisted ? selectedRowKeys.splice(selectedRowIndex, 1) : selectedRowKeys.push(id);\n    } else if (selectColumn.type === 'single') {\n      selectedRowKeys = isExisted && allowUncheck ? [] : [id];\n    } else {\n      log.warn('Table', '`column.type` must be one of `multiple` and `single`');\n      return;\n    }\n    setTSelectedRowKeys(selectedRowKeys, {\n      selectedRowData: selectedRowKeys.map((t) => selectedRowDataMap.get(t)),\n      currentRowKey: id,\n      currentRowData: row,\n      type: isExisted ? 'uncheck' : 'check',\n    });\n  }\n\n  function handleSelectAll(checked: boolean) {\n    const reRowKey = rowKey || 'id';\n    const canSelectedRowKeys = canSelectedRows.map((record) => get(record, reRowKey));\n    const disabledSelectedRowKeys = selectedRowKeys?.filter((id) => !canSelectedRowKeys.includes(id)) || [];\n    const allIds = checked ? [...disabledSelectedRowKeys, ...canSelectedRowKeys] : [...disabledSelectedRowKeys];\n    setTSelectedRowKeys(allIds, {\n      selectedRowData: checked ? allIds.map((t) => selectedRowDataMap.get(t)) : [],\n      type: checked ? 'check' : 'uncheck',\n      currentRowKey: 'CHECK_ALL_BOX',\n    });\n  }\n\n  function formatToRowSelectColumn(col: PrimaryTableCol) {\n    const isSelection = ['multiple', 'single'].includes(col.type);\n    if (!isSelection) return col;\n    return {\n      ...col,\n      width: col.width || 64,\n      className: tableSelectedClasses.checkCell,\n      cell: (p: PrimaryTableCellParams<TableRowData>) => renderSelectCell(p),\n      title: col.type === 'multiple' ? getSelectedHeader() : col.title,\n    };\n  }\n\n  const onInnerSelectRowClick: TdPrimaryTableProps['onRowClick'] = ({ row, index }) => {\n    const selectedColIndex = props.columns.findIndex((item) => item.colKey === 'row-select');\n    if (selectedColIndex === -1) return;\n    const { disabled } = getRowSelectDisabledData({\n      row,\n      rowIndex: index,\n      col: props.columns[selectedColIndex],\n      colIndex: selectedColIndex,\n    });\n    if (disabled) return;\n    handleSelectChange(row);\n  };\n\n  useEffect(() => {\n    for (let i = 0, len = data.length; i < len; i++) {\n      selectedRowDataMap.set(get(data[i], rowKey || 'id'), data[i]);\n    }\n  }, [data, rowKey]);\n\n  return {\n    selectedRowClassNames,\n    currentPaginateData,\n    setCurrentPaginateData,\n    setTSelectedRowKeys,\n    formatToRowSelectColumn,\n    onInnerSelectRowClick,\n  };\n}\n"],"names":["selectedRowDataMap","Map","useRowSelect","props","tableSelectedClasses","selectedRowKeys","columns","data","rowKey","indeterminateSelectedRowKeys","pagination","reserveSelectedRowOnPaginate","_useState","useState","_useState2","_slicedToArray","currentPaginateData","setCurrentPaginateData","_useState3","_useState4","selectedRowClassNames","setSelectedRowClassNames","_useControlled","useControlled","onSelectChange","defaultSelectedRowKeys","_useControlled2","tSelectedRowKeys","setTSelectedRowKeys","selectColumn","find","_ref","type","includes","canSelectedRows","useMemo","currentData","filter","row","rowIndex","isDisabled","intersectionKeys","intersection","map","t","get","useEffect","pageSize","current","defaultPageSize","defaultCurrent","tPageSize","tCurrent","newData","slice","length","disabledRowFunc","p","disabled","disabledRowClass","selected","Set","selectedRowClassFunc","_ref2","rowId","has","selectedRowClass","size","isRowSelectedDisabled","getSelectedHeader","isIndeterminate","isChecked","React","createElement","Checkbox","checked","indeterminate","onChange","handleSelectAll","getRowSelectDisabledData","col","checkProps","isFunction","renderSelectCell","column","_p$row","_getRowSelectDisabled","selectBoxProps","_objectSpread","handleSelectChange","onCheckClick","e","stopPropagation","Radio","onClick","allowUncheck","singleSelectCol","arguments","undefined","reRowKey","id","selectedRowIndex","indexOf","isExisted","splice","push","log","warn","selectedRowData","currentRowKey","currentRowData","canSelectedRowKeys","record","disabledSelectedRowKeys","allIds","concat","_toConsumableArray","formatToRowSelectColumn","isSelection","width","className","checkCell","cell","title","onInnerSelectRowClick","_ref3","index","selectedColIndex","findIndex","item","colKey","_getRowSelectDisabled2","colIndex","i","len","set"],"mappings":"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"}