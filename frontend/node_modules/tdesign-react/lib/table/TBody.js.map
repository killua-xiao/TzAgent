{"version":3,"file":"TBody.js","sources":["../../../components/table/TBody.tsx"],"sourcesContent":["import React, { CSSProperties, MutableRefObject, ReactNode, useMemo } from 'react';\nimport { camelCase, get, pick } from 'lodash-es';\nimport classNames from 'classnames';\nimport TR, { ROW_LISTENERS, TABLE_PROPS } from './TR';\nimport { useLocaleReceiver } from '../locale/LocalReceiver';\nimport { TableClassName } from './hooks/useClassName';\nimport useRowspanAndColspan from './hooks/useRowspanAndColspan';\nimport { BaseTableProps, RowAndColFixedPosition } from './interface';\nimport { TdBaseTableProps } from './type';\nimport { PaginationProps } from '../pagination';\nimport { VirtualScrollConfig } from '../hooks/useVirtualScroll';\n\nexport const ROW_AND_TD_LISTENERS = ROW_LISTENERS.concat('cell-click');\nexport interface TableBodyProps extends BaseTableProps {\n  classPrefix: string;\n  ellipsisOverlayClassName: string;\n  // 固定列 left/right 具体值\n  rowAndColFixedPosition?: RowAndColFixedPosition;\n  showColumnShadow?: { left: boolean; right: boolean };\n  tableRef?: MutableRefObject<HTMLDivElement>;\n  tableContentRef?: MutableRefObject<HTMLDivElement>;\n  cellEmptyContent: TdBaseTableProps['cellEmptyContent'];\n  tableWidth?: MutableRefObject<number>;\n  isWidthOverflow?: boolean;\n  virtualConfig: VirtualScrollConfig;\n  pagination?: PaginationProps;\n  allTableClasses?: TableClassName;\n  handleRowMounted?: (rowData: any) => void;\n}\n\n// table 到 body 的相同属性\nexport const extendTableProps = [\n  'rowKey',\n  'rowClassName',\n  'rowAttributes',\n  'loading',\n  'empty',\n  'fixedRows',\n  'firstFullRow',\n  'lastFullRow',\n  'rowspanAndColspan',\n  'scroll',\n  'cellEmptyContent',\n  'onCellClick',\n  'onPageChange',\n  'onRowClick',\n  'onRowDblclick',\n  'onRowMouseover',\n  'onRowMousedown',\n  'onRowMouseenter',\n  'onRowMouseleave',\n  'onRowMouseup',\n  'onScroll',\n  'onScrollX',\n  'onScrollY',\n];\n\nexport default function TBody(props: TableBodyProps) {\n  // 如果不是变量复用，没必要对每一个参数进行解构（解构过程需要单独的内存空间存储临时变量）\n  const { data, columns, rowKey, firstFullRow, lastFullRow, virtualConfig, allTableClasses } = props;\n  const [global, t] = useLocaleReceiver('table');\n  const { tableFullRowClasses, tableBaseClass } = allTableClasses;\n  const { skipSpansMap } = useRowspanAndColspan(data, columns, rowKey, props.rowspanAndColspan);\n  const columnLength = columns.length;\n  const dataLength = data?.length;\n\n  const tbodyClasses = useMemo(() => [tableBaseClass.body], [tableBaseClass.body]);\n  const hasFullRowConfig = useMemo(() => firstFullRow || lastFullRow, [firstFullRow, lastFullRow]);\n\n  const renderEmpty = (columns: TableBodyProps['columns']) => (\n    <tr className={classNames([tableBaseClass.emptyRow, { [tableFullRowClasses.base]: props.isWidthOverflow }])}>\n      <td colSpan={columns.length}>\n        <div\n          className={classNames([tableBaseClass.empty, { [tableFullRowClasses.innerFullRow]: props.isWidthOverflow }])}\n          style={props.isWidthOverflow ? { width: `${props.tableWidth.current}px` } : {}}\n        >\n          {props.empty || t(global.empty)}\n        </div>\n      </td>\n    </tr>\n  );\n\n  const getFullRow = (columnLength: number, type: 'first-full-row' | 'last-full-row') => {\n    const tType = camelCase(type);\n    const fullRowNode = {\n      'first-full-row': firstFullRow,\n      'last-full-row': lastFullRow,\n    }[type];\n\n    if (!fullRowNode) return null;\n    const isFixedToLeft = props.isWidthOverflow && columns.find((col) => col.fixed === 'left');\n    const classes = [tableFullRowClasses.base, tableFullRowClasses[tType]];\n    /** innerFullRow 和 innerFullElement 同时存在，是为了保证 固定列时，当前行不随内容进行横向滚动 */\n    return (\n      <tr className={classNames(classes)}>\n        <td colSpan={columnLength}>\n          <div\n            className={classNames({ [tableFullRowClasses.innerFullRow]: isFixedToLeft })}\n            style={isFixedToLeft ? { width: `${props.tableWidth.current}px` } : {}}\n          >\n            <div className={tableFullRowClasses.innerFullElement}>{fullRowNode}</div>\n          </div>\n        </td>\n      </tr>\n    );\n  };\n\n  const firstFullRowNode = useMemo(\n    () => getFullRow(columnLength, 'first-full-row'),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [firstFullRow, columnLength, getFullRow],\n  );\n\n  const lastFullRowNode = useMemo(\n    () => getFullRow(columnLength, 'last-full-row'),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [lastFullRow, columnLength, getFullRow],\n  );\n\n  const isSkipSnapsMapNotFinish = Boolean(props.rowspanAndColspan && !skipSpansMap.size);\n\n  const getTRNodeList = () => {\n    if (isSkipSnapsMapNotFinish) return null;\n    const trNodeList: ReactNode[] = [];\n    const properties = [\n      'classPrefix',\n      'ellipsisOverlayClassName',\n      'rowAndColFixedPosition',\n      'scroll',\n      'tableRef',\n      'tableContentRef',\n      'trs',\n      'bufferSize',\n      'isVirtual',\n      'rowHeight',\n      'scrollType',\n    ];\n\n    const renderData = virtualConfig.isVirtualScroll ? virtualConfig.visibleData : data;\n\n    renderData?.forEach((row, rowIndex) => {\n      const trProps = {\n        ...pick(props, TABLE_PROPS),\n        rowKey: props.rowKey || 'id',\n        row,\n        columns,\n        // eslint-disable-next-line\n        rowIndex: row.__VIRTUAL_SCROLL_INDEX || rowIndex,\n        dataLength,\n        skipSpansMap,\n        virtualConfig,\n        classPrefix: props.classPrefix,\n        ellipsisOverlayClassName: props.ellipsisOverlayClassName,\n        ...pick(props, properties),\n        pagination: props.pagination,\n      };\n      if (props.onCellClick) {\n        trProps.onCellClick = props.onCellClick;\n      }\n\n      const trNode = (\n        <TR key={get(row, props.rowKey || 'id') || rowIndex} {...trProps} onRowMounted={props.handleRowMounted}></TR>\n      );\n      trNodeList.push(trNode);\n\n      // 执行展开行渲染\n      if (props.renderExpandedRow) {\n        const p = {\n          row,\n          index: rowIndex,\n          columns,\n          tableWidth: props.tableWidth.current,\n          isWidthOverflow: props.isWidthOverflow,\n        };\n        const expandedContent = props.renderExpandedRow(p);\n        expandedContent && trNodeList.push(expandedContent);\n      }\n    });\n    return trNodeList;\n  };\n\n  const isEmpty = !data?.length && !props.loading && !hasFullRowConfig;\n\n  // 垫上隐藏的 tr 元素高度\n  const translate = `translateY(${virtualConfig.translateY}px)`;\n  const posStyle: CSSProperties = virtualConfig.isVirtualScroll\n    ? ({\n        transform: translate,\n        msTransform: translate,\n        MozTransform: translate,\n        WebkitTransform: translate,\n      } as CSSProperties)\n    : undefined;\n\n  const list = (\n    <>\n      {firstFullRowNode}\n      {getTRNodeList()}\n      {lastFullRowNode}\n    </>\n  );\n\n  return (\n    <tbody className={classNames(tbodyClasses)} style={{ ...posStyle }}>\n      {isEmpty ? renderEmpty(columns) : list}\n    </tbody>\n  );\n}\n\nTBody.displayName = 'TBody';\n"],"names":["ROW_AND_TD_LISTENERS","ROW_LISTENERS","concat","extendTableProps","TBody","props","data","columns","rowKey","firstFullRow","lastFullRow","virtualConfig","allTableClasses","_useLocaleReceiver","useLocaleReceiver","_useLocaleReceiver2","_slicedToArray","global","t","tableFullRowClasses","tableBaseClass","_useRowspanAndColspan","useRowspanAndColspan","rowspanAndColspan","skipSpansMap","columnLength","length","dataLength","tbodyClasses","useMemo","body","hasFullRowConfig","renderEmpty","React","createElement","className","classNames","emptyRow","_defineProperty","base","isWidthOverflow","colSpan","empty","innerFullRow","style","width","tableWidth","current","getFullRow","type","tType","camelCase","fullRowNode","isFixedToLeft","find","col","fixed","classes","innerFullElement","firstFullRowNode","lastFullRowNode","isSkipSnapsMapNotFinish","Boolean","size","getTRNodeList","trNodeList","properties","renderData","isVirtualScroll","visibleData","forEach","row","rowIndex","trProps","_objectSpread","pick","TABLE_PROPS","__VIRTUAL_SCROLL_INDEX","classPrefix","ellipsisOverlayClassName","pagination","onCellClick","trNode","TR","key","get","onRowMounted","handleRowMounted","push","renderExpandedRow","p","index","expandedContent","isEmpty","loading","translate","translateY","posStyle","transform","msTransform","MozTransform","WebkitTransform","list","Fragment","displayName"],"mappings":"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"}