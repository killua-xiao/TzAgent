import React, { MutableRefObject } from 'react';
import { RowAndColFixedPosition } from './interface';
import { TableRowData, TdBaseTableProps } from './type';
import { SkipSpansValue } from './hooks/useRowspanAndColspan';
import { PaginationProps } from '../pagination';
import { VirtualScrollConfig } from '../hooks/useVirtualScroll';
import { InfinityScroll } from '../common';
export type TrCommonProps = Pick<TdBaseTableProps, TrPropsKeys>;
export declare const TABLE_PROPS: readonly ["rowKey", "rowClassName", "columns", "fixedRows", "footData", "rowAttributes", "rowspanAndColspan", "scroll", "cellEmptyContent", "onCellClick", "onRowClick", "onRowDblclick", "onRowMouseover", "onRowMousedown", "onRowMouseenter", "onRowMouseleave", "onRowMouseup"];
export type TrPropsKeys = (typeof TABLE_PROPS)[number];
export interface TrProps extends TrCommonProps {
    rowKey: string;
    row?: TableRowData;
    rowIndex?: number;
    ellipsisOverlayClassName: string;
    classPrefix: string;
    dataLength?: number;
    rowAndColFixedPosition?: RowAndColFixedPosition;
    skipSpansMap?: Map<string, SkipSpansValue>;
    scrollType?: string;
    isVirtual?: boolean;
    rowHeight?: number;
    trs?: Map<number, object>;
    bufferSize?: number;
    scroll?: InfinityScroll;
    tableRef?: MutableRefObject<HTMLDivElement>;
    tableContentRef?: MutableRefObject<HTMLDivElement>;
    pagination?: PaginationProps;
    virtualConfig?: VirtualScrollConfig;
    onRowMounted?: (data: any) => void;
}
export declare const ROW_LISTENERS: string[];
declare function TR(props: TrProps): React.JSX.Element;
declare namespace TR {
    var displayName: string;
}
export default TR;
