{"version":3,"file":"EditableCell.js","sources":["../../../components/table/EditableCell.tsx"],"sourcesContent":["import React, { useEffect, useMemo, useRef, useState, MouseEvent } from 'react';\nimport { get, set, isFunction, cloneDeep } from 'lodash-es';\nimport { Edit1Icon as TdEdit1Icon } from 'tdesign-icons-react';\nimport classNames from 'classnames';\nimport log from '@tdesign/common-js/log/index';\nimport {\n  TableRowData,\n  PrimaryTableCol,\n  PrimaryTableRowEditContext,\n  PrimaryTableRowValidateContext,\n  TdBaseTableProps,\n  PrimaryTableCellParams,\n} from './type';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport { TableClassName } from './hooks/useClassName';\nimport { renderCell } from './Cell';\nimport { validate } from '../form/formModel';\nimport { AllValidateResult } from '../form/type';\nimport useConfig from '../hooks/useConfig';\n\nexport interface EditableCellProps {\n  row: TableRowData;\n  rowIndex: number;\n  col: PrimaryTableCol<TableRowData>;\n  colIndex: number;\n  oldCell: PrimaryTableCol<TableRowData>['cell'];\n  tableBaseClass?: TableClassName['tableBaseClass'];\n  /** 行编辑需要使用 editable。单元格编辑则无需使用，设置为 undefined */\n  editable?: boolean;\n  readonly?: boolean;\n  errors?: AllValidateResult[];\n  cellEmptyContent?: TdBaseTableProps['cellEmptyContent'];\n  onChange?: (context: PrimaryTableRowEditContext<TableRowData>) => void;\n  onValidate?: (context: PrimaryTableRowValidateContext<TableRowData>) => void;\n  onRuleChange?: (context: PrimaryTableRowEditContext<TableRowData>) => void;\n}\n\nconst EditableCell = (props: EditableCellProps) => {\n  const { row, col, colIndex, rowIndex, errors, editable, tableBaseClass } = props;\n  const { Edit1Icon } = useGlobalIcon({ Edit1Icon: TdEdit1Icon });\n  const tableEditableCellRef = useRef(null);\n  const isKeepEditMode = Boolean(col.edit?.keepEditMode);\n  const [isEdit, setIsEdit] = useState(() => isKeepEditMode || props.col.edit?.defaultEditable || false);\n  const [editValue, setEditValue] = useState();\n  const [errorList, setErrorList] = useState<AllValidateResult[]>([]);\n  const { classPrefix } = useConfig();\n\n  useEffect(() => {\n    if (isKeepEditMode) {\n      setIsEdit(true);\n    }\n  }, [isKeepEditMode]);\n\n  const getCurrentRow = (row: TableRowData, colKey: string, value: any) => {\n    if (!colKey) return row;\n    // handle colKey like a.b.c\n    const [firstKey, ...restKeys] = colKey.split('.') || [];\n    const newRow = { ...row };\n    if (restKeys.length) {\n      newRow[firstKey] = cloneDeep(row[firstKey]);\n      set(newRow[firstKey], restKeys.join('.'), value);\n    } else {\n      set(newRow, colKey, value);\n    }\n    return newRow;\n  };\n\n  const cellParams: PrimaryTableCellParams<TableRowData> = useMemo(\n    () => ({\n      col,\n      row,\n      colIndex,\n      rowIndex,\n    }),\n    [col, row, colIndex, rowIndex],\n  );\n\n  const cellValue = useMemo(() => get(row, col.colKey), [row, col.colKey]);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const currentRow = useMemo(() => getCurrentRow(row, col.colKey, editValue), [col.colKey, editValue, row]);\n\n  const updateEditedCellValue = (val: any) => {\n    setEditValue(val);\n  };\n\n  const editOnListeners = useMemo(\n    () => col.edit?.on?.({ ...cellParams, editedRow: currentRow, updateEditedCellValue }) || {},\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [cellParams, currentRow],\n  );\n\n  const cellNode = useMemo(() => {\n    const node = renderCell(\n      {\n        row: currentRow,\n        col: { ...col, cell: props.oldCell },\n        rowIndex: props.rowIndex,\n        colIndex: props.colIndex,\n      },\n      { cellEmptyContent: props.cellEmptyContent },\n    );\n    return node;\n  }, [col, currentRow, props.cellEmptyContent, props.colIndex, props.oldCell, props.rowIndex]);\n\n  const componentProps = useMemo(() => {\n    const { edit } = col;\n    if (!edit) return {};\n    const editProps = isFunction(edit.props)\n      ? edit.props({ ...cellParams, editedRow: currentRow, updateEditedCellValue })\n      : { ...edit.props };\n    // to remove warn: runtime-core.esm-bundler.js:38 [Vue warn]: Invalid prop: type check failed for prop \"onChange\". Expected Function, got Array\n    delete editProps.onChange;\n    delete editProps.value;\n    edit.abortEditOnEvent?.forEach((item) => {\n      delete editProps[item];\n    });\n    return editProps;\n  }, [currentRow, cellParams, col]);\n\n  const isAbortEditOnChange = useMemo(() => {\n    const { edit } = col;\n    if (!edit) return false;\n    return Boolean(edit.abortEditOnEvent?.includes('onChange'));\n  }, [col]);\n\n  const validateEdit = (trigger: 'self' | 'parent', newVal: any) =>\n    new Promise<AllValidateResult[] | boolean>((resolve) => {\n      const params: PrimaryTableRowValidateContext<TableRowData> = {\n        result: [\n          {\n            ...cellParams,\n            errorList: [],\n            value: newVal,\n          },\n        ],\n        trigger,\n      };\n      const rules = isFunction(col.edit.rules) ? col.edit.rules(cellParams) : col.edit.rules;\n      if (!col.edit || !rules || !rules.length) {\n        props.onValidate?.(params);\n        resolve(true);\n        return;\n      }\n      validate(newVal, rules).then((result) => {\n        const list = result?.filter((t) => !t.result);\n        params.result[0].errorList = list;\n        props.onValidate?.(params);\n        if (!list || !list.length) {\n          setErrorList([]);\n          resolve(true);\n        } else {\n          setErrorList(list);\n          resolve(list);\n        }\n      });\n    });\n\n  const isSame = (a: any, b: any) => {\n    if (typeof a === 'object' && typeof b === 'object') {\n      return JSON.stringify(a) === JSON.stringify(b);\n    }\n    return a === b;\n  };\n\n  const updateAndSaveAbort = (outsideAbortEvent: Function, eventName: string, ...args: any) => {\n    validateEdit('self', args[0].value).then((result) => {\n      if (result !== true) return;\n      const oldValue = get(row, col.colKey);\n      // 相同的值无需触发变化\n      if (!isSame(args[0].value, oldValue)) {\n        // 恢复数据，保持受控\n        setEditValue(oldValue);\n        outsideAbortEvent?.(...args);\n      }\n      editOnListeners[eventName]?.(args[2]);\n      // 此处必须在事件执行完成后异步销毁编辑组件，否则会导致事件清除不及时引起的其他问题\n      const timer = setTimeout(() => {\n        if (!isKeepEditMode) {\n          setIsEdit(false);\n        }\n        setErrorList([]);\n        clearTimeout(timer);\n      }, 0);\n    });\n  };\n\n  const listeners = useMemo<{ [key: string]: Function }>(() => {\n    const { edit } = col;\n    const isCellEditable = props.editable === undefined;\n    if (!isEdit || !isCellEditable) return;\n    if (!edit?.abortEditOnEvent?.length) return {};\n    // 自定义退出编辑态的事件\n    const tListeners = {};\n    const outsideAbortEvent = edit?.onEdited;\n    edit.abortEditOnEvent.forEach((itemEvent) => {\n      if (itemEvent === 'onChange') return;\n      tListeners[itemEvent] = (...args: any) => {\n        updateAndSaveAbort(\n          outsideAbortEvent,\n          itemEvent,\n          {\n            ...cellParams,\n            value: editValue,\n            trigger: itemEvent,\n            newRowData: currentRow,\n          },\n          ...args,\n        );\n      };\n    });\n    return tListeners;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [col, currentRow, isEdit, props.rowIndex]);\n\n  const onEditChange = (val: any, ...args: any) => {\n    setEditValue(val);\n    const params = {\n      ...cellParams,\n      value: val,\n      editedRow: set({ ...props.row }, props.col.colKey, val),\n    };\n    props.onChange?.(params);\n    props.onRuleChange?.(params);\n    editOnListeners.onChange?.(params);\n    const isCellEditable = props.editable === undefined;\n    if (isCellEditable && isAbortEditOnChange) {\n      const outsideAbortEvent = col.edit?.onEdited;\n      // editValue 和 currentRow 更新完成后再执行这个函数\n      updateAndSaveAbort(\n        outsideAbortEvent,\n        'change',\n        {\n          value: val,\n          trigger: 'onChange',\n          newRowData: getCurrentRow(currentRow, col.colKey, val),\n          rowIndex: props.rowIndex,\n        },\n        ...args,\n      );\n    }\n    // 数据变化时，实时校验\n    if (col.edit?.validateTrigger === 'change') {\n      validateEdit('self', val);\n    }\n  };\n\n  const documentClickHandler: EventListener = (e) => {\n    if (!col.edit || !col.edit.component) return;\n    if (!isEdit) return;\n    // @ts-ignore some browser is also only support e.path\n    const path = e.composedPath?.() || e.path || [];\n    const node = path.find((node: HTMLElement) => node.classList?.contains(`${classPrefix}-popup__content`));\n    if (node) return;\n    const outsideAbortEvent = col.edit.onEdited;\n    updateAndSaveAbort(outsideAbortEvent, '', {\n      value: editValue,\n      trigger: 'document',\n      newRowData: currentRow,\n      rowIndex: props.rowIndex,\n    });\n  };\n\n  useEffect(() => {\n    setEditValue(cellValue);\n  }, [cellValue]);\n\n  useEffect(() => {\n    if (typeof document === 'undefined') return;\n    const isCellEditable = props.editable === undefined;\n    if (!col.edit || !col.edit.component || !isCellEditable) return;\n    if (isEdit) {\n      document.addEventListener('click', documentClickHandler);\n    } else {\n      document.removeEventListener('click', documentClickHandler);\n    }\n    return () => {\n      document.removeEventListener('click', documentClickHandler);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [col.edit, isEdit, editValue]);\n\n  useEffect(() => {\n    // 退出编辑态时，恢复原始值，等待父组件传入新的 data 值\n    if (props.editable === false) {\n      setEditValue(cellValue);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cellValue, editable]);\n\n  useEffect(() => {\n    if (props.editable === true) {\n      props.onRuleChange?.({\n        ...cellParams,\n        value: cellValue,\n        editedRow: currentRow || row,\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.editable, cellValue, row, col, cellParams, currentRow]);\n\n  useEffect(() => {\n    setErrorList(errors);\n  }, [errors]);\n\n  if (props.readonly) {\n    return cellNode || null;\n  }\n\n  // 这是非编辑态\n  if ((props.editable === undefined && !isEdit) || editable === false) {\n    return (\n      <div\n        className={classNames(tableBaseClass.cellEditable)}\n        onClick={(e: MouseEvent<HTMLDivElement>) => {\n          setIsEdit(true);\n          e.stopPropagation();\n          e.nativeEvent.stopImmediatePropagation();\n        }}\n      >\n        {cellNode}\n        {col.edit?.showEditIcon !== false && <Edit1Icon />}\n      </div>\n    );\n  }\n  const Component = col.edit?.component;\n  if (!Component) {\n    log.error('Table', 'edit.component is required.');\n    return null;\n  }\n  const errorMessage = errorList?.[0]?.message;\n\n  const tmpEditOnListeners = { ...editOnListeners };\n  delete tmpEditOnListeners.onChange;\n  // remove conflict events\n  if (col.edit?.abortEditOnEvent?.length) {\n    col.edit.abortEditOnEvent.forEach((onEventName) => {\n      if (tmpEditOnListeners[onEventName]) {\n        delete tmpEditOnListeners[onEventName];\n      }\n    });\n  }\n  return (\n    <div\n      className={tableBaseClass.cellEditWrap}\n      onClick={(e) => {\n        e.stopPropagation();\n        e.nativeEvent.stopImmediatePropagation();\n      }}\n    >\n      <Component\n        ref={tableEditableCellRef}\n        status={errorMessage ? errorList?.[0]?.type || 'error' : undefined}\n        tips={errorMessage}\n        {...componentProps}\n        {...listeners}\n        {...tmpEditOnListeners}\n        value={editValue}\n        onChange={onEditChange}\n      />\n    </div>\n  );\n};\n\nEditableCell.displayName = 'EditableCell';\n\nexport default EditableCell;\n"],"names":["EditableCell","props","_col$edit","_col$edit6","_errorList$","_col$edit7","_errorList$2","row","col","colIndex","rowIndex","errors","editable","tableBaseClass","_useGlobalIcon","useGlobalIcon","Edit1Icon","TdEdit1Icon","tableEditableCellRef","useRef","isKeepEditMode","Boolean","edit","keepEditMode","_useState","useState","_props$col$edit","defaultEditable","_useState2","_slicedToArray","isEdit","setIsEdit","_useState3","_useState4","editValue","setEditValue","_useState5","_useState6","errorList","setErrorList","_useConfig","useConfig","classPrefix","useEffect","getCurrentRow","colKey","value","_ref","split","_ref2","_toArray","firstKey","restKeys","slice","newRow","_objectSpread","length","cloneDeep","set","join","cellParams","useMemo","cellValue","get","currentRow","updateEditedCellValue","val","editOnListeners","_col$edit2","_col$edit2$on","on","call","editedRow","cellNode","node","renderCell","cell","oldCell","cellEmptyContent","componentProps","_edit$abortEditOnEven","editProps","isFunction","onChange","abortEditOnEvent","forEach","item","isAbortEditOnChange","_edit$abortEditOnEven2","includes","validateEdit","trigger","newVal","Promise","resolve","params","result","rules","_props$onValidate","onValidate","validate","then","_props$onValidate2","list","filter","t","isSame","a","b","_typeof","JSON","stringify","updateAndSaveAbort","outsideAbortEvent","eventName","_len","arguments","args","Array","_key","_editOnListeners$even","oldValue","apply","timer","setTimeout","clearTimeout","listeners","_edit$abortEditOnEven3","isCellEditable","tListeners","onEdited","itemEvent","_len2","_key2","newRowData","concat","onEditChange","_props$onChange","_props$onRuleChange","_editOnListeners$onCh","_col$edit4","onRuleChange","_col$edit3","_len3","_key3","validateTrigger","documentClickHandler","e","_e$composedPath","component","path","composedPath","find","classList","_node2$classList","contains","document","addEventListener","removeEventListener","_props$onRuleChange2","readonly","_col$edit5","React","createElement","className","classNames","cellEditable","onClick","stopPropagation","nativeEvent","stopImmediatePropagation","showEditIcon","Component","log","error","errorMessage","message","tmpEditOnListeners","onEventName","cellEditWrap","ref","status","type","tips","displayName"],"mappings":"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"}