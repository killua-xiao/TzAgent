{"version":3,"file":"FilterController.js","sources":["../../../components/table/FilterController.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport { FilterIcon as TdFilterIcon } from 'tdesign-icons-react';\nimport { isEmpty } from 'lodash-es';\nimport classNames from 'classnames';\nimport log from '@tdesign/common-js/log/index';\nimport Popup, { PopupProps } from '../popup';\nimport Checkbox from '../checkbox';\nimport Radio from '../radio';\nimport Input from '../input';\nimport TButton from '../button';\nimport { PrimaryTableCol, FilterValue, TableRowData, TdPrimaryTableProps } from './type';\nimport { useLocaleReceiver } from '../locale/LocalReceiver';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport { parseContentTNode } from '../_util/parseTNode';\n\nconst CheckboxGroup = Checkbox.Group;\nconst RadioGroup = Radio.Group;\nexport interface TableFilterControllerProps {\n  filterIcon: TdPrimaryTableProps['filterIcon'];\n  tFilterValue: FilterValue;\n  innerFilterValue: FilterValue;\n  tableFilterClasses: {\n    filterable: string;\n    popup: string;\n    icon: string;\n    popupContent: string;\n    result: string;\n    inner: string;\n    bottomButtons: string;\n    contentInner: string;\n    iconWrap: string;\n  };\n  isFocusClass: string;\n  column: PrimaryTableCol;\n  colIndex: number;\n  primaryTableElement: HTMLElement;\n  popupProps: PopupProps;\n  onVisibleChange: (val: boolean) => void;\n  onReset: (column: PrimaryTableCol<TableRowData>) => void;\n  onConfirm: (column: PrimaryTableCol<TableRowData>) => void;\n  onInnerFilterChange: (val: any, column: PrimaryTableCol<TableRowData>) => void;\n}\n\nexport default function TableFilterController(props: TableFilterControllerProps) {\n  const { tFilterValue, innerFilterValue, tableFilterClasses, isFocusClass, column } = props;\n\n  const { FilterIcon } = useGlobalIcon({\n    FilterIcon: TdFilterIcon,\n  });\n  const triggerElementRef = useRef<HTMLDivElement>(null);\n  const [locale, t] = useLocaleReceiver('table');\n  const [filterPopupVisible, setFilterPopupVisible] = useState(false);\n\n  const onFilterPopupVisibleChange = (visible: boolean) => {\n    setFilterPopupVisible(visible);\n    props.onVisibleChange?.(visible);\n  };\n\n  const getFilterContent = (column: PrimaryTableCol) => {\n    const types = ['single', 'multiple', 'input'];\n    if (column.type && !types.includes(column.filter.type)) {\n      log.error('Table', `TDesign Table Error: column.filter.type must be the following: ${JSON.stringify(types)}`);\n      return;\n    }\n    const Component = {\n      single: RadioGroup,\n      multiple: CheckboxGroup,\n      input: Input,\n    }[column.filter.type];\n    if (!Component && !column?.filter?.component) return;\n    const filterComponentProps: { [key: string]: any } = {\n      options: ['single', 'multiple'].includes(column.filter.type) ? column.filter?.list : undefined,\n      ...(column.filter?.props || {}),\n      onChange: (val: any) => {\n        props.onInnerFilterChange?.(val, column);\n      },\n    };\n    if (column.colKey && innerFilterValue && column.colKey in innerFilterValue) {\n      filterComponentProps.value = innerFilterValue[column.colKey];\n    }\n    // 允许自定义触发确认搜索的事件\n    if (column.filter?.confirmEvents) {\n      column.filter.confirmEvents.forEach((event) => {\n        filterComponentProps[event] = () => {\n          setFilterPopupVisible(false);\n          props.onConfirm?.(column);\n        };\n      });\n    }\n    const FilterComponent = column?.filter?.component || Component;\n    const filter = column.filter || {};\n    return (\n      <div className={tableFilterClasses.contentInner}>\n        <FilterComponent\n          className={filter.classNames}\n          style={filter.style}\n          {...filter.attrs}\n          {...filterComponentProps}\n        />\n      </div>\n    );\n  };\n\n  const getBottomButtons = (column: PrimaryTableCol) => {\n    if (!column.filter.showConfirmAndReset) return;\n    return (\n      <div className={tableFilterClasses.bottomButtons}>\n        <TButton\n          theme=\"default\"\n          size=\"small\"\n          onClick={() => {\n            setFilterPopupVisible(false);\n            props.onReset?.(column);\n          }}\n        >\n          {locale.resetText}\n        </TButton>\n        <TButton\n          theme=\"primary\"\n          size=\"small\"\n          onClick={() => {\n            setFilterPopupVisible(false);\n            props.onConfirm?.(column);\n          }}\n        >\n          {locale.confirmText}\n        </TButton>\n      </div>\n    );\n  };\n\n  if (!column.filter || (column.filter && !Object.keys(column.filter).length)) return null;\n  const defaultFilterIcon = t(locale.filterIcon) || <FilterIcon />;\n  const filterValue = tFilterValue?.[column.colKey];\n  const isObjectTrue = typeof filterValue === 'object' && !isEmpty(filterValue);\n  // false is a valid filter value\n  const isValueExist = ![null, undefined, ''].includes(filterValue) && typeof filterValue !== 'object';\n  return (\n    <div className={classNames([tableFilterClasses.icon, { [isFocusClass]: isObjectTrue || isValueExist }])}>\n      <Popup\n        // attach={primaryTableElement ? () => primaryTableElement : undefined}\n        visible={filterPopupVisible}\n        destroyOnClose\n        trigger=\"click\"\n        placement=\"bottom-right\"\n        showArrow\n        overlayClassName={tableFilterClasses.popup}\n        onVisibleChange={(val: boolean) => onFilterPopupVisibleChange(val)}\n        content={\n          <div className={tableFilterClasses.popupContent}>\n            {getFilterContent(column)}\n            {getBottomButtons(column)}\n          </div>\n        }\n        {...props.popupProps}\n      >\n        <div ref={triggerElementRef}>\n          {parseContentTNode(props.filterIcon, { col: column, colIndex: props.colIndex }) || defaultFilterIcon}\n        </div>\n      </Popup>\n    </div>\n  );\n}\n"],"names":["CheckboxGroup","Checkbox","Group","RadioGroup","Radio","TableFilterController","props","tFilterValue","innerFilterValue","tableFilterClasses","isFocusClass","column","_useGlobalIcon","useGlobalIcon","FilterIcon","TdFilterIcon","triggerElementRef","useRef","_useLocaleReceiver","useLocaleReceiver","_useLocaleReceiver2","_slicedToArray","locale","t","_useState","useState","_useState2","filterPopupVisible","setFilterPopupVisible","onFilterPopupVisibleChange","visible","_props$onVisibleChang","onVisibleChange","call","getFilterContent","_column2$filter","_column2$filter2","_column2$filter3","_column2$filter4","_column2$filter5","types","type","includes","filter","log","error","concat","JSON","stringify","Component","single","multiple","input","Input","component","filterComponentProps","_objectSpread","options","list","onChange","val","_props$onInnerFilterC","onInnerFilterChange","colKey","value","confirmEvents","forEach","event","_props$onConfirm","onConfirm","FilterComponent","React","createElement","className","contentInner","classNames","style","attrs","getBottomButtons","showConfirmAndReset","bottomButtons","TButton","theme","size","onClick","_props$onReset","onReset","resetText","_props$onConfirm2","confirmText","Object","keys","length","defaultFilterIcon","filterIcon","filterValue","isObjectTrue","_typeof","isEmpty","isValueExist","icon","_defineProperty","Popup","destroyOnClose","trigger","placement","showArrow","overlayClassName","popup","content","popupContent","popupProps","ref","parseContentTNode","col","colIndex"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeA,IAAMA,gBAAgBC,QAAS,CAAAC,KAAA,CAAA;AAC/B,IAAMC,aAAaC,KAAM,CAAAF,KAAA,CAAA;AA2BzB,SAAwBG,sBAAsBC,KAAmC,EAAA;AAC/E,EAAA,IAAQC,YAAc,GAA+DD,KAAA,CAA7EC,YAAc;IAAAC,gBAAA,GAA+DF,KAAA,CAA/DE,gBAAA;IAAkBC,kBAAoB,GAAyBH,KAAA,CAA7CG,kBAAoB;IAAAC,YAAA,GAAyBJ,KAAA,CAAzBI,YAAA;IAAcC,SAAWL,KAAA,CAAXK;EAEpE,IAAAC,cAAA,GAAiBC,aAAc,CAAA;AACnCC,MAAAA,UAAY,EAAAC,UAAAA;AACd,KAAC,CAAA;IAFOD,YAAW,GAAAF,cAAA,CAAXE,UAAW,CAAA;AAGb,EAAA,IAAAE,iBAAA,GAAoBC,OAAuB,IAAI,CAAA,CAAA;AACrD,EAAA,IAAAC,kBAAA,GAAoBC,kBAAkB,OAAO,CAAA;IAAAC,mBAAA,GAAAC,cAAA,CAAAH,kBAAA,EAAA,CAAA,CAAA;AAAtCI,IAAAA,MAAA,GAAAF,mBAAA,CAAA,CAAA,CAAA;AAAQG,IAAAA,CAAC,GAAAH,mBAAA,CAAA,CAAA,CAAA,CAAA;AAChB,EAAA,IAAAI,SAAA,GAAoDC,SAAS,KAAK,CAAA;IAAAC,UAAA,GAAAL,cAAA,CAAAG,SAAA,EAAA,CAAA,CAAA;AAA3DG,IAAAA,kBAAA,GAAAD,UAAA,CAAA,CAAA,CAAA;AAAoBE,IAAAA,qBAAqB,GAAAF,UAAA,CAAA,CAAA,CAAA,CAAA;AAE1C,EAAA,IAAAG,0BAAA,GAA6B,SAA7BA,0BAAAA,CAA8BC,OAAqB,EAAA;AAAA,IAAA,IAAAC,qBAAA,CAAA;IACvDH,qBAAA,CAAsBE,OAAO,CAAA,CAAA;AAC7B,IAAA,CAAAC,qBAAA,GAAAzB,KAAA,CAAM0B,uDAAND,KAAAA,CAAAA,IAAAA,qBAAA,CAAAE,IAAA,CAAA3B,KAAA,EAAwBwB,OAAO,CAAA,CAAA;GACjC,CAAA;AAEM,EAAA,IAAAI,gBAAA,GAAmB,SAAnBA,gBAAAA,CAAoBvB,OAA4B,EAAA;IAAA,IAAAwB,eAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,EAAAC,gBAAA,CAAA;IACpD,IAAMC,KAAQ,GAAA,CAAC,QAAU,EAAA,UAAA,EAAY,OAAO,CAAA,CAAA;AACxC7B,IAAAA,IAAAA,OAAAA,CAAO8B,QAAQ,CAACD,KAAA,CAAME,SAAS/B,OAAO,CAAAgC,MAAA,CAAOF,IAAI,CAAG,EAAA;AACtDG,MAAAA,GAAA,CAAIC,MAAM,OAAS,oEAAAC,MAAA,CAAkEC,IAAK,CAAAC,SAAA,CAAUR,KAAK,CAAG,CAAA,CAAA,CAAA;AAC5G,MAAA,OAAA;AACF,KAAA;AACA,IAAA,IAAMS,SAAY,GAAA;AAChBC,MAAAA,MAAQ,EAAA/C,UAAA;AACRgD,MAAAA,QAAU,EAAAnD,aAAA;AACVoD,MAAAA,KAAO,EAAAC,KAAAA;AACT,KAAA,CAAE1C,QAAOgC,MAAO,CAAAF,IAAA,CAAA,CAAA;AAChB,IAAA,IAAI,CAACQ,SAAA,IAAa,EAACtC,OAAAA,KAAAA,IAAAA,IAAAA,OAAAA,KAAAA,KAAAA,CAAAA,IAAAA,CAAAA,eAAAA,GAAAA,OAAAA,CAAQgC,MAAQ,MAAAR,IAAAA,IAAAA,eAAA,eAAhBxB,eAAAA,CAAgB2C,SAAA,CAAW,EAAA,OAAA;AAC9C,IAAA,IAAMC,oBAA+C,GAAAC,aAAA,CAAAA,aAAA,CAAA;AACnDC,MAAAA,OAAS,EAAA,CAAC,QAAU,EAAA,UAAU,CAAE,CAAAf,QAAA,CAAS/B,OAAO,CAAAgC,MAAA,CAAOF,IAAI,CAAA,GAAA,CAAAL,gBAAA,GAAIzB,OAAO,CAAAgC,MAAA,MAAA,IAAA,IAAAP,gBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAPzB,gBAAAA,CAAe+C,IAAO,GAAA,KAAA,CAAA;AAAA,KAAA,EACjF/C,CAAAA,CAAAA,gBAAAA,GAAAA,OAAAA,CAAOgC,MAAQ,MAAA,IAAA,IAAAN,gBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAf1B,gBAAAA,CAAeL,KAAA,KAAS,EAAC,CAAA,EAAA,EAAA,EAAA;AAC7BqD,MAAAA,QAAA,EAAU,SAAVA,QAAAA,CAAWC,GAAa,EAAA;AAAA,QAAA,IAAAC,qBAAA,CAAA;AAChB,QAAA,CAAAA,qBAAA,GAAAvD,KAAA,CAAAwD,mBAAA,cAAAD,qBAAA,KAAA,KAAA,CAAA,IAAAA,qBAAA,CAAA5B,IAAA,CAAA3B,KAAA,EAAsBsD,KAAKjD,OAAM,CAAA,CAAA;AACzC,OAAA;KACF,CAAA,CAAA;IACA,IAAIA,OAAO,CAAAoD,MAAA,IAAUvD,gBAAoBG,IAAAA,OAAAA,CAAOoD,UAAUvD,gBAAkB,EAAA;MACrD+C,oBAAA,CAAAS,KAAA,GAAQxD,iBAAiBG,OAAO,CAAAoD,MAAA,CAAA,CAAA;AACvD,KAAA;IAEIpD,IAAAA,CAAAA,gBAAAA,GAAAA,OAAAA,CAAOgC,yCAAPhC,KAAAA,CAAAA,IAAAA,gBAAAA,CAAesD,aAAe,EAAA;MAChCtD,OAAO,CAAAgC,MAAA,CAAOsB,aAAc,CAAAC,OAAA,CAAQ,UAACC,KAAU,EAAA;AAC7CZ,QAAAA,oBAAA,CAAqBY,SAAS,YAAM;AAAA,UAAA,IAAAC,gBAAA,CAAA;UAClCxC,qBAAA,CAAsB,KAAK,CAAA,CAAA;AAC3B,UAAA,CAAAwC,gBAAA,GAAA9D,KAAA,CAAM+D,4CAAND,KAAAA,CAAAA,IAAAA,gBAAA,CAAAnC,IAAA,CAAA3B,KAAA,EAAkBK,OAAM,CAAA,CAAA;SAC1B,CAAA;AACF,OAAC,CAAA,CAAA;AACH,KAAA;AACM,IAAA,IAAA2D,eAAA,GAAkB3D,CAAAA,OAAQ,KAARA,IAAAA,IAAAA,OAAQ,gBAAA4B,gBAAA,GAAR5B,OAAQ,CAAAgC,MAAA,cAAAJ,gBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAR5B,gBAAAA,CAAgB2C,SAAa,KAAAL,SAAA,CAAA;AAC/C,IAAA,IAAAN,MAAA,GAAShC,OAAO,CAAAgC,MAAA,IAAU,EAAC,CAAA;AACjC,IAAA,sBACG4B,KAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;MAAIC,WAAWhE,kBAAmB,CAAAiE,YAAAA;KAAA,iBAChCH,KAAA,CAAAC,aAAA,CAAAF,eAAA,EAAAd,aAAA,CAAAA,aAAA,CAAA;MACCiB,WAAW9B,MAAO,CAAAgC,UAAA;MAClBC,OAAOjC,MAAO,CAAAiC,KAAAA;AAAA,KAAA,EACVjC,MAAO,CAAAkC,KAAA,GACPtB,oBAAA,CACN,CACF,CAAA,CAAA;GAEJ,CAAA;AAEM,EAAA,IAAAuB,gBAAA,GAAmB,SAAnBA,gBAAAA,CAAoBnE,OAA4B,EAAA;AAChD,IAAA,IAAA,CAACA,QAAOgC,MAAO,CAAAoC,mBAAA,EAAqB,OAAA;AACxC,IAAA,sBACGR,KAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;MAAIC,WAAWhE,kBAAmB,CAAAuE,aAAAA;AAAA,KAAA,iBAChCT,KAAA,CAAAC,aAAA,CAAAS,MAAA,EAAA;AACCC,MAAAA,KAAM,EAAA,SAAA;AACNC,MAAAA,IAAK,EAAA,OAAA;AACLC,MAAAA,SAAS,SAATA,UAAe;AAAA,QAAA,IAAAC,cAAA,CAAA;QACbzD,qBAAA,CAAsB,KAAK,CAAA,CAAA;AAC3B,QAAA,CAAAyD,cAAA,GAAA/E,KAAA,CAAMgF,wCAAND,KAAAA,CAAAA,IAAAA,cAAA,CAAApD,IAAA,CAAA3B,KAAA,EAAgBK,OAAM,CAAA,CAAA;AACxB,OAAA;AAEC,KAAA,EAAAW,MAAA,CAAOiE,SACV,CAAA,iBACChB,KAAA,CAAAC,aAAA,CAAAS,MAAA,EAAA;AACCC,MAAAA,KAAM,EAAA,SAAA;AACNC,MAAAA,IAAK,EAAA,OAAA;AACLC,MAAAA,SAAS,SAATA,UAAe;AAAA,QAAA,IAAAI,iBAAA,CAAA;QACb5D,qBAAA,CAAsB,KAAK,CAAA,CAAA;AAC3B,QAAA,CAAA4D,iBAAA,GAAAlF,KAAA,CAAM+D,6CAANmB,KAAAA,CAAAA,IAAAA,iBAAA,CAAAvD,IAAA,CAAA3B,KAAA,EAAkBK,OAAM,CAAA,CAAA;AAC1B,OAAA;AAEC,KAAA,EAAAW,MAAA,CAAOmE,WACV,CACF,CAAA,CAAA;GAEJ,CAAA;EAEI,IAAA,CAAC9E,MAAO,CAAAgC,MAAA,IAAWhC,MAAO,CAAAgC,MAAA,IAAU,CAAC+C,MAAO,CAAAC,IAAA,CAAKhF,MAAO,CAAAgC,MAAM,CAAE,CAAAiD,MAAA,EAAgB,OAAA,IAAA,CAAA;AACpF,EAAA,IAAMC,oBAAoBtE,CAAE,CAAAD,MAAA,CAAOwE,UAAU,CAAA,uCAAMhF,YAAW,EAAA,IAAA,CAAA,CAAA;EACxD,IAAAiF,WAAA,GAAcxF,iBAAAA,IAAAA,IAAAA,iBAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,aAAeI,MAAO,CAAAoD,MAAA,CAAA,CAAA;AAC1C,EAAA,IAAMiC,eAAeC,OAAA,CAAOF,WAAA,CAAA,KAAgB,QAAY,IAAA,CAACG,QAAQH,WAAW,CAAA,CAAA;EAEtE,IAAAI,YAAA,GAAe,CAAC,CAAC,IAAM,EAAA,KAAA,CAAA,EAAW,EAAE,CAAA,CAAEzD,QAAS,CAAAqD,WAAW,CAAK,IAAAE,OAAA,CAAOF,WAAgB,CAAA,KAAA,QAAA,CAAA;AAC5F,EAAA,sBACGxB,KAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAIC,IAAAA,SAAA,EAAWE,UAAW,CAAA,CAAClE,kBAAmB,CAAA2F,IAAA,EAAAC,eAAA,KAAS3F,YAAe,EAAAsF,YAAA,IAAgBG,YAAa,CAAE,CAAA,CAAA;GAAA,iBACnG5B,KAAA,CAAAC,aAAA,CAAA8B,KAAA,EAAA9C,aAAA,CAAA;AAEC1B,IAAAA,OAAS,EAAAH,kBAAA;AACT4E,IAAAA,cAAc,EAAA,IAAA;AACdC,IAAAA,OAAQ,EAAA,OAAA;AACRC,IAAAA,SAAU,EAAA,cAAA;AACVC,IAAAA,SAAS,EAAA,IAAA;IACTC,kBAAkBlG,kBAAmB,CAAAmG,KAAA;AACrC5E,IAAAA,eAAiB,EAAA,SAAjBA,eAAiBA,CAAC4B,GAAiB,EAAA;MAAA,OAAA/B,0BAAA,CAA2B+B,GAAG,CAAA,CAAA;AAAA,KAAA;AACjEiD,IAAAA,wBACGtC,KAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;MAAIC,WAAWhE,kBAAmB,CAAAqG,YAAAA;KAAA,EAChC5E,gBAAiB,CAAAvB,MAAM,CACvB,EAAAmE,gBAAA,CAAiBnE,MAAM,CAC1B,CAAA;GAEEL,EAAAA,KAAM,CAAAyG,UAAA,CAEV,iBAACxC,KAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAIwC,IAAAA,GAAK,EAAAhG,iBAAAA;AAAA,GAAA,EACPiG,iBAAkB,CAAA3G,KAAA,CAAMwF,UAAY,EAAA;AAAEoB,IAAAA,GAAK,EAAAvG,MAAA;IAAQwG,QAAU,EAAA7G,KAAA,CAAM6G,QAAAA;AAAS,GAAC,CAAK,IAAAtB,iBACrF,CACF,CACF,CAAA,CAAA;AAEJ;;;;"}