/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _defineProperty } from '../_chunks/dep-cb0a3966.js';
import { _ as _slicedToArray } from '../_chunks/dep-48805ab8.js';
import React, { useRef, useMemo, useImperativeHandle } from 'react';
import classNames from 'classnames';
import { compact, isString } from 'lodash-es';
import useConfig from '../hooks/useConfig.js';
import { useLocaleReceiver } from '../locale/LocalReceiver.js';
import forwardRefWithStatics from '../_util/forwardRefWithStatics.js';
import noop from '../_util/noop.js';
import { Loading } from '../loading/index.js';
import ListItem from './ListItem.js';
import ListItemMeta from './ListItemMeta.js';
import { listDefaultProps } from './defaultProps.js';
import useDefaultProps from '../hooks/useDefaultProps.js';
import { useListVirtualScroll } from './hooks/useListVirtualScroll.js';
import parseTNode from '../_util/parseTNode.js';
import '../_chunks/dep-eca3a3de.js';
import '../_chunks/dep-026a4c6b.js';
import '../config-provider/ConfigContext.js';
import '../_chunks/dep-f97636ce.js';
import '../_chunks/dep-9dbbf468.js';
import 'dayjs';
import '../config-provider/ConfigProvider.js';
import 'hoist-non-react-statics';
import '../loading/Loading.js';
import '../_chunks/dep-3a09424a.js';
import '../common/Portal.js';
import 'react-dom';
import '../hooks/useLayoutEffect.js';
import '../loading/gradient.js';
import '../_chunks/dep-c48e2ca1.js';
import '../_chunks/dep-6af6bc60.js';
import '../_chunks/dep-87d110df.js';
import '../hooks/useDomRefCallback.js';
import '../loading/defaultProps.js';
import '../loading/plugin.js';
import '../_util/react-render.js';
import '../_chunks/dep-52ff3837.js';
import '../common/PluginContainer.js';
import '../_chunks/dep-b908e1fe.js';
import '../hooks/useVirtualScroll.js';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var List = forwardRefWithStatics(function (props, ref) {
  var _useDefaultProps = useDefaultProps(props, listDefaultProps),
    header = _useDefaultProps.header,
    footer = _useDefaultProps.footer,
    asyncLoading = _useDefaultProps.asyncLoading,
    size = _useDefaultProps.size,
    split = _useDefaultProps.split,
    stripe = _useDefaultProps.stripe,
    layout = _useDefaultProps.layout,
    children = _useDefaultProps.children,
    className = _useDefaultProps.className,
    _useDefaultProps$onLo = _useDefaultProps.onLoadMore,
    onLoadMore = _useDefaultProps$onLo === void 0 ? noop : _useDefaultProps$onLo,
    _useDefaultProps$onSc = _useDefaultProps.onScroll,
    onScroll = _useDefaultProps$onSc === void 0 ? noop : _useDefaultProps$onSc,
    style = _useDefaultProps.style,
    scroll = _useDefaultProps.scroll;
  var wrapperRef = useRef(null);
  var _useConfig = useConfig(),
    classPrefix = _useConfig.classPrefix;
  var _useLocaleReceiver = useLocaleReceiver("list"),
    _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2),
    local = _useLocaleReceiver2[0],
    t = _useLocaleReceiver2[1];
  var listItems = useMemo(function () {
    var _compact;
    return (_compact = compact(React.Children.map(children, function (child) {
      return child === null || child === void 0 ? void 0 : child.props;
    }))) !== null && _compact !== void 0 ? _compact : [];
  }, [children]);
  var _useListVirtualScroll = useListVirtualScroll(scroll, wrapperRef, listItems),
    virtualConfig = _useListVirtualScroll.virtualConfig,
    cursorStyle = _useListVirtualScroll.cursorStyle,
    listStyle = _useListVirtualScroll.listStyle,
    isVirtualScroll = _useListVirtualScroll.isVirtualScroll,
    onInnerVirtualScroll = _useListVirtualScroll.onInnerVirtualScroll,
    scrollToElement = _useListVirtualScroll.scrollToElement;
  var COMPONENT_NAME = "".concat(classPrefix, "-list");
  var handleClickLoad = function handleClickLoad(e) {
    if (asyncLoading === "load-more") {
      onLoadMore({
        e: e
      });
    }
  };
  var handleScroll = function handleScroll(event) {
    var currentTarget = event.currentTarget;
    var scrollTop = currentTarget.scrollTop,
      offsetHeight = currentTarget.offsetHeight,
      scrollHeight = currentTarget.scrollHeight;
    var scrollBottom = scrollHeight - scrollTop - offsetHeight;
    if (isVirtualScroll) onInnerVirtualScroll(event);
    onScroll({
      e: event,
      scrollTop: scrollTop,
      scrollBottom: scrollBottom
    });
  };
  var loadElement = isString(asyncLoading) ? /* @__PURE__ */React.createElement("div", {
    className: classNames("".concat(classPrefix, "-list__load"), _defineProperty(_defineProperty({}, "".concat(classPrefix, "-list__load--loading"), asyncLoading === "loading"), "".concat(classPrefix, "-list__load--load-more"), asyncLoading === "load-more")),
    onClick: handleClickLoad
  }, asyncLoading === "loading" && /* @__PURE__ */React.createElement("div", null, /* @__PURE__ */React.createElement(Loading, {
    loading: true
  }), /* @__PURE__ */React.createElement("span", null, t(local.loadingText))), asyncLoading === "load-more" && /* @__PURE__ */React.createElement("span", null, t(local.loadingMoreText))) : asyncLoading;
  useImperativeHandle(ref, function () {
    return {
      scrollTo: scrollToElement
    };
  });
  var renderContent = function renderContent() {
    return /* @__PURE__ */React.createElement(React.Fragment, null, isVirtualScroll ? /* @__PURE__ */React.createElement(React.Fragment, null, /* @__PURE__ */React.createElement("div", {
      style: cursorStyle
    }), /* @__PURE__ */React.createElement("ul", {
      className: "".concat(COMPONENT_NAME, "__inner"),
      style: listStyle
    }, virtualConfig.visibleData.map(function (item, index) {
      return /* @__PURE__ */React.createElement(ListItem, {
        key: index,
        content: item.children
      });
    }))) : /* @__PURE__ */React.createElement("ul", {
      className: "".concat(COMPONENT_NAME, "__inner")
    }, children));
  };
  return /* @__PURE__ */React.createElement("div", {
    ref: wrapperRef,
    style: _objectSpread(_objectSpread({}, style), {}, {
      position: isVirtualScroll ? "relative" : void 0
    }),
    onScroll: handleScroll,
    className: classNames("".concat(COMPONENT_NAME), className, _defineProperty(_defineProperty(_defineProperty(_defineProperty(_defineProperty({}, "".concat(COMPONENT_NAME, "--split"), split), "".concat(COMPONENT_NAME, "--stripe"), stripe), "".concat(COMPONENT_NAME, "--vertical-action"), layout === "vertical"), "".concat(classPrefix, "-size-s"), size === "small"), "".concat(classPrefix, "-size-l"), size === "large"))
  }, header && /* @__PURE__ */React.createElement("div", {
    className: "".concat(COMPONENT_NAME, "__header")
  }, parseTNode(header)), renderContent(), asyncLoading && loadElement, footer && /* @__PURE__ */React.createElement("div", {
    className: "".concat(COMPONENT_NAME, "__footer")
  }, parseTNode(footer)));
}, {
  ListItem: ListItem,
  ListItemMeta: ListItemMeta
});
List.displayName = "List";

export { List as default };
//# sourceMappingURL=List.js.map
