{"version":3,"file":"BreadcrumbItem.js","sources":["../../../components/breadcrumb/BreadcrumbItem.tsx"],"sourcesContent":["import React, { forwardRef, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport { ChevronRightIcon as TdChevronRightIcon } from 'tdesign-icons-react';\nimport { isFunction } from 'lodash-es';\nimport useConfig from '../hooks/useConfig';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport useCommonClassName from '../hooks/useCommonClassName';\nimport { BreadcrumbItemProps } from './BreadcrumbProps';\nimport { BreadcrumbContext } from './BreadcrumbContext';\nimport parseTNode from '../_util/parseTNode';\nimport { breadcrumbItemDefaultProps } from './defaultProps';\nimport { TooltipLite } from '../tooltip';\nimport useDefaultProps from '../hooks/useDefaultProps';\nimport { isNodeOverflow } from '../_util/scroll';\n\nconst BreadcrumbItem = forwardRef<HTMLDivElement, BreadcrumbItemProps>((props, ref) => {\n  const { classPrefix } = useConfig();\n  const commonClassNames = useCommonClassName();\n  const { ChevronRightIcon } = useGlobalIcon({ ChevronRightIcon: TdChevronRightIcon });\n\n  const {\n    children,\n    separator,\n    disabled,\n    maxItemWidth,\n    maxWidth,\n    icon,\n    href,\n    to,\n    target,\n    router,\n    replace,\n    className,\n    content,\n    onClick,\n    tooltipProps,\n    readOnly: readonly,\n    ...restProps\n  } = useDefaultProps<BreadcrumbItemProps>(props, breadcrumbItemDefaultProps);\n\n  const { maxItemWidthInContext, separator: separatorInContext } = useContext(BreadcrumbContext);\n  const breadcrumbText = useRef<HTMLSpanElement>(null);\n  const [isCutOff, setIsCutOff] = useState(false);\n\n  const breadcrumbItemClassNames = classNames(`${classPrefix}-breadcrumb__item`);\n  const textWrapperClassName = `${classPrefix}-breadcrumb__inner`;\n  const textClassName = `${classPrefix}-breadcrumb__inner-text`;\n\n  const textClassNames = classNames({\n    [`${classPrefix}-breadcrumb--text-overflow`]: !readonly,\n    [commonClassNames.STATUS.disabled]: disabled,\n  });\n  const separatorClassName = `${classPrefix}-breadcrumb__separator`;\n  const linkClassName = `${classPrefix}-link`;\n\n  const maxWidthForItem = useMemo(\n    () => ({\n      maxWidth: maxWidth || maxItemWidth || maxItemWidthInContext || '120px',\n    }),\n    [maxItemWidth, maxWidth, maxItemWidthInContext],\n  );\n\n  useEffect(() => {\n    if (!breadcrumbText.current) return;\n    return setIsCutOff(isNodeOverflow(breadcrumbText.current));\n  }, [breadcrumbText]);\n\n  const textContent = (\n    <span className={textWrapperClassName} style={maxWidthForItem}>\n      {isFunction(icon) ? icon() : icon}\n      <span ref={breadcrumbText} className={textClassName}>\n        {children || content}\n      </span>\n    </span>\n  );\n\n  let itemContent = <span className={textClassNames}>{textContent}</span>;\n  if ((href || to) && !disabled) {\n    const handleRouting = () => {\n      if (href || !router) return;\n\n      replace ? router.replace(to) : router.push(to);\n    };\n    itemContent = (\n      <a className={classNames(textClassNames, linkClassName)} href={href} target={target} onClick={handleRouting}>\n        {textContent}\n      </a>\n    );\n  }\n\n  const separatorInProps = parseTNode(separator);\n  const separatorContent = separatorInProps || separatorInContext || <ChevronRightIcon style={{ opacity: '.5' }} />;\n\n  const handleClick = (e: React.MouseEvent<HTMLDivElement>) => {\n    if (disabled) return;\n    onClick?.(e);\n  };\n\n  return (\n    <div className={classNames(breadcrumbItemClassNames, className)} ref={ref} onClick={handleClick} {...restProps}>\n      {isCutOff ? (\n        <TooltipLite content={children || content} {...tooltipProps}>\n          {itemContent}\n        </TooltipLite>\n      ) : (\n        itemContent\n      )}\n      <span className={separatorClassName}>{separatorContent}</span>\n    </div>\n  );\n});\n\nBreadcrumbItem.displayName = 'BreadcrumbItem';\n\nexport default BreadcrumbItem;\n"],"names":["BreadcrumbItem","forwardRef","props","ref","_useConfig","useConfig","classPrefix","commonClassNames","useCommonClassName","_useGlobalIcon","useGlobalIcon","ChevronRightIcon","TdChevronRightIcon","_useDefaultProps","useDefaultProps","breadcrumbItemDefaultProps","children","separator","disabled","maxItemWidth","maxWidth","icon","href","to","target","router","replace","className","content","onClick","tooltipProps","readonly","readOnly","restProps","_objectWithoutProperties","_excluded","_useContext","useContext","BreadcrumbContext","maxItemWidthInContext","separatorInContext","breadcrumbText","useRef","_useState","useState","_useState2","_slicedToArray","isCutOff","setIsCutOff","breadcrumbItemClassNames","classNames","concat","textWrapperClassName","textClassName","textClassNames","_defineProperty","STATUS","separatorClassName","linkClassName","maxWidthForItem","useMemo","useEffect","current","isNodeOverflow","textContent","React","createElement","style","isFunction","itemContent","handleRouting","push","separatorInProps","parseTNode","separatorContent","opacity","handleClick","e","_objectSpread","TooltipLite","displayName"],"mappings":"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"}