{"version":3,"file":"Collapse.js","sources":["../../../components/collapse/Collapse.tsx"],"sourcesContent":["import React, { useEffect, useRef, MouseEvent } from 'react';\nimport classnames from 'classnames';\nimport { TdCollapseProps, CollapsePanelValue, CollapseValue } from './type';\nimport { StyledProps } from '../common';\nimport useConfig from '../hooks/useConfig';\nimport forwardRefWithStatics from '../_util/forwardRefWithStatics';\nimport useControlled from '../hooks/useControlled';\nimport CollapsePanel from './CollapsePanel';\nimport CollapseContext from './CollapseContext';\nimport { collapseDefaultProps } from './defaultProps';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\nimport type { CollapsePanelProps } from './CollapsePanel';\n\nexport interface CollapseProps extends TdCollapseProps, StyledProps {\n  children?: React.ReactNode;\n}\n\nconst Collapse = forwardRefWithStatics(\n  (originalProps: CollapseProps, ref: React.Ref<HTMLDivElement>) => {\n    const props = useDefaultProps<CollapseProps>(originalProps, collapseDefaultProps);\n    const { classPrefix } = useConfig();\n    const componentName = `${classPrefix}-collapse`;\n    const borderlessClass = `${classPrefix}--border-less`;\n    const { defaultExpandAll, disabled, expandIconPlacement, expandOnRowClick, expandIcon, ...rest } = props;\n    const { children, className, style, expandMutex, borderless, onChange } = rest;\n    const [collapseValue, setCollapseValue] = useControlled(props, 'value', onChange);\n    const collapseValues = useRef(collapseValue);\n    useEffect(() => {\n      collapseValues.current = collapseValue;\n    }, [collapseValue]);\n\n    const updateCollapseValue = (value: CollapsePanelValue, context?: { e: MouseEvent }) => {\n      let newValue: CollapseValue = [].concat(collapseValues.current || []);\n      const index = newValue.indexOf(value);\n      if (index >= 0) {\n        newValue.splice(index, 1);\n      } else if (expandMutex) {\n        newValue = [value];\n      } else {\n        newValue.push(value);\n      }\n      collapseValues.current = [...newValue];\n      setCollapseValue(newValue, context);\n    };\n\n    const classes = [\n      componentName,\n      {\n        [borderlessClass]: !!borderless,\n      },\n      className,\n    ];\n\n    const childrenList = React.Children.toArray(children).filter(\n      (child: React.ReactElement<CollapsePanelProps>) => (child.type as any).displayName === CollapsePanel.displayName,\n    );\n\n    const collapsePanelList = () =>\n      childrenList.map((child: React.ReactElement<any>, index: number) => {\n        const key = child.key || String(index);\n        const childProps = {\n          key,\n          index: index + 1,\n          ...child.props,\n        };\n        return React.cloneElement(child, childProps);\n      });\n\n    return (\n      <CollapseContext.Provider\n        value={{\n          defaultExpandAll,\n          disabled,\n          expandIconPlacement,\n          expandOnRowClick,\n          expandIcon,\n          updateCollapseValue,\n          collapseValue,\n        }}\n      >\n        <div className={classnames(classes)} style={style} ref={ref}>\n          {collapsePanelList()}\n        </div>\n      </CollapseContext.Provider>\n    );\n  },\n  {\n    Panel: CollapsePanel,\n  },\n);\n\nCollapse.displayName = 'Collapse';\n\nexport default Collapse;\n"],"names":["Collapse","forwardRefWithStatics","originalProps","ref","props","useDefaultProps","collapseDefaultProps","_useConfig","useConfig","classPrefix","componentName","borderlessClass","defaultExpandAll","disabled","expandIconPlacement","expandOnRowClick","expandIcon","rest","_excluded","children","className","style","expandMutex","borderless","onChange","_useControlled","useControlled","_useControlled2","_slicedToArray","collapseValue","setCollapseValue","collapseValues","useRef","useEffect","current","updateCollapseValue","value","context","newValue","concat","index","indexOf","splice","push","_toConsumableArray","classes","_defineProperty","childrenList","React","Children","toArray","filter","child","type","displayName","CollapsePanel","collapsePanelList","map","key","String","childProps","_objectSpread","cloneElement","createElement","CollapseContext","Provider","classnames","Panel"],"mappings":"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"}