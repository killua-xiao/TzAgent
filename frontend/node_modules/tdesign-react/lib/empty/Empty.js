/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

import { _ as _slicedToArray } from '../_chunks/dep-48805ab8.js';
import { _ as _defineProperty } from '../_chunks/dep-cb0a3966.js';
import React, { isValidElement } from 'react';
import classNames from 'classnames';
import { isObject, isString } from 'lodash-es';
import useDefaultProps from '../hooks/useDefaultProps.js';
import useConfig from '../hooks/useConfig.js';
import { useLocaleReceiver } from '../locale/LocalReceiver.js';
import { emptyDefaultProps } from './defaultProps.js';
import { Image } from '../image/index.js';
import MaintenanceSvg from './assets/MaintenanceSvg.js';
import NetworkErrorSvg from './assets/NetworkErrorSvg.js';
import EmptySvg from './assets/EmptySvg.js';
import FailSvg from './assets/FailSvg.js';
import SuccessSvg from './assets/SuccessSvg.js';
import '../_chunks/dep-026a4c6b.js';
import '../_chunks/dep-eca3a3de.js';
import '../config-provider/ConfigContext.js';
import '../_chunks/dep-f97636ce.js';
import '../_chunks/dep-9dbbf468.js';
import 'dayjs';
import '../config-provider/ConfigProvider.js';
import '../image/Image.js';
import '../_chunks/dep-6b660ef0.js';
import 'tdesign-icons-react';
import '../_chunks/dep-4450afc0.js';
import '../image/defaultProps.js';
import '../space/index.js';
import '../space/Space.js';
import 'react-is';
import '../_chunks/dep-6af6bc60.js';
import '../_chunks/dep-87d110df.js';
import '../space/defaultProps.js';
import '../hooks/useGlobalIcon.js';
import '../hooks/useImagePreviewUrl.js';
import '../_chunks/dep-b908e1fe.js';
import '../_chunks/dep-f83e4452.js';

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function getImageIns(data) {
  var result = data;
  if (/*#__PURE__*/isValidElement(data)) {
    result = data;
  } else if (isObject(data)) {
    result = /* @__PURE__ */React.createElement(Image, _objectSpread({}, data));
  } else if (isString(data)) {
    result = /* @__PURE__ */React.createElement(Image, {
      src: data
    });
  }
  return data ? result : null;
}
var Empty = function Empty(props) {
  var _defaultMaps$type, _typeImageProps$image, _typeImageProps$title;
  var _useDefaultProps = useDefaultProps(props, emptyDefaultProps),
    propsImage = _useDefaultProps.image,
    imageStyle = _useDefaultProps.imageStyle,
    propsDescription = _useDefaultProps.description,
    propsTitle = _useDefaultProps.title,
    type = _useDefaultProps.type,
    action = _useDefaultProps.action,
    style = _useDefaultProps.style,
    className = _useDefaultProps.className,
    _useDefaultProps$size = _useDefaultProps.size,
    size = _useDefaultProps$size === void 0 ? "medium" : _useDefaultProps$size;
  var _useConfig = useConfig(),
    classPrefix = _useConfig.classPrefix,
    empty = _useConfig.empty;
  var _useLocaleReceiver = useLocaleReceiver("empty"),
    _useLocaleReceiver2 = _slicedToArray(_useLocaleReceiver, 2),
    local = _useLocaleReceiver2[0],
    t = _useLocaleReceiver2[1];
  var defaultMaps = {
    maintenance: {
      image: empty.image.maintenance || /* @__PURE__ */React.createElement(MaintenanceSvg, null),
      title: empty.titleText.maintenance || t(local.titleText.maintenance)
    },
    success: {
      image: empty.image.success || /* @__PURE__ */React.createElement(SuccessSvg, null),
      title: empty.titleText.success || t(local.titleText.success)
    },
    fail: {
      image: empty.image.fail || /* @__PURE__ */React.createElement(FailSvg, null),
      title: empty.titleText.fail || t(local.titleText.fail)
    },
    "network-error": {
      image: empty.image.networkError || /* @__PURE__ */React.createElement(NetworkErrorSvg, null),
      title: empty.titleText.networkError || t(local.titleText.networkError)
    },
    empty: {
      image: empty.image.empty || /* @__PURE__ */React.createElement(EmptySvg, null),
      title: empty.titleText.empty || t(local.titleText.empty)
    }
  };
  var defaultSize = {
    small: "".concat(classPrefix, "-size-s"),
    medium: "".concat(classPrefix, "-size"),
    large: "".concat(classPrefix, "-size-l")
  };
  var prefix = "".concat(classPrefix, "-empty");
  var emptyClasses = classNames(prefix, className, defaultSize[size]);
  var titleClasses = classNames("".concat(prefix, "__title"));
  var imageClasses = classNames("".concat(prefix, "__image"));
  var descriptionClasses = classNames("".concat(prefix, "__description"));
  var actionCls = classNames("".concat(prefix, "__action"));
  var typeImageProps = (_defaultMaps$type = defaultMaps[type]) !== null && _defaultMaps$type !== void 0 ? _defaultMaps$type : null;
  var _image$title$descript = {
      image: propsImage ? propsImage : (_typeImageProps$image = typeImageProps === null || typeImageProps === void 0 ? void 0 : typeImageProps.image) !== null && _typeImageProps$image !== void 0 ? _typeImageProps$image : null,
      title: propsTitle ? propsTitle : (_typeImageProps$title = typeImageProps === null || typeImageProps === void 0 ? void 0 : typeImageProps.title) !== null && _typeImageProps$title !== void 0 ? _typeImageProps$title : null,
      description: propsDescription
    },
    image = _image$title$descript.image,
    description = _image$title$descript.description,
    title = _image$title$descript.title;
  function renderTitle() {
    if (!title) {
      return null;
    }
    return /* @__PURE__ */React.createElement("div", {
      className: titleClasses
    }, title);
  }
  function renderDescription() {
    if (!description) {
      return null;
    }
    return /* @__PURE__ */React.createElement("div", {
      className: descriptionClasses
    }, description);
  }
  var imageContent = getImageIns(image);
  return /* @__PURE__ */React.createElement("div", {
    className: emptyClasses,
    style: style
  }, imageContent ? /* @__PURE__ */React.createElement("div", {
    className: imageClasses,
    style: imageStyle
  }, imageContent) : null, renderTitle(), renderDescription(), action ? /* @__PURE__ */React.createElement("div", {
    className: actionCls
  }, action) : null);
};

export { Empty as default };
//# sourceMappingURL=Empty.js.map
