{"version":3,"file":"useLengthLimit.js","sources":["../../../components/input/useLengthLimit.ts"],"sourcesContent":["import { useEffect, useMemo } from 'react';\nimport log from '@tdesign/common-js/log/index';\nimport { getCharacterLength, getUnicodeLength, limitUnicodeMaxLength } from '@tdesign/common-js/utils/helper';\nimport { TdInputProps } from './type';\n\nexport interface UseLengthLimitParams {\n  value: string;\n  maxlength: number;\n  maxcharacter: number;\n  allowInputOverMax: boolean;\n  status: TdInputProps['status'];\n  onValidate: TdInputProps['onValidate'];\n}\n\nexport default function useLengthLimit(params: UseLengthLimitParams) {\n  // 文本超出数量限制时，是否允许继续输入\n  const getValueByLimitNumber = (inputValue: string) => {\n    const { allowInputOverMax, maxlength, maxcharacter } = params;\n    if (!(maxlength || maxcharacter) || allowInputOverMax || !inputValue) return inputValue;\n    if (maxlength) {\n      // input value could be unicode 😊\n      return limitUnicodeMaxLength(inputValue, maxlength);\n    }\n    if (maxcharacter) {\n      const r = getCharacterLength(inputValue, maxcharacter);\n      if (typeof r === 'object') {\n        return r.characters;\n      }\n    }\n  };\n\n  const limitNumber = useMemo(() => {\n    const { maxlength, maxcharacter, value } = params;\n    if (typeof value === 'number') return String(value);\n    if (maxlength && maxcharacter) {\n      log.warn('Input', 'Pick one of maxlength and maxcharacter please.');\n    }\n    if (maxlength) {\n      const length = value?.length ? getUnicodeLength(value) : 0;\n      return `${length}/${maxlength}`;\n    }\n    if (maxcharacter) {\n      return `${getCharacterLength(value || '')}/${maxcharacter}`;\n    }\n    return '';\n    // eslint-disable-next-line\n  }, [params.maxcharacter, params.maxlength, params.value]);\n\n  const innerStatus = useMemo(() => {\n    if (limitNumber) {\n      const [current, total] = limitNumber.split('/');\n      return Number(current) > Number(total) ? 'error' : '';\n    }\n    return '';\n  }, [limitNumber]);\n\n  const tStatus = useMemo(() => params.status || innerStatus, [params.status, innerStatus]);\n\n  const onValidateChange = () => {\n    params.onValidate?.({\n      error: innerStatus ? 'exceed-maximum' : undefined,\n    });\n  };\n\n  useEffect(() => {\n    onValidateChange();\n    // eslint-disable-next-line\n  }, [innerStatus]);\n\n  return {\n    tStatus,\n    limitNumber,\n    getValueByLimitNumber,\n  };\n}\n"],"names":["useLengthLimit","params","getValueByLimitNumber","inputValue","allowInputOverMax","maxlength","maxcharacter","limitUnicodeMaxLength","r","getCharacterLength","_typeof","characters","limitNumber","useMemo","value","String","log","warn","length","getUnicodeLength","concat","innerStatus","_limitNumber$split","split","_limitNumber$split2","_slicedToArray","current","total","Number","tStatus","status","onValidateChange","_params$onValidate","onValidate","call","error","useEffect"],"mappings":"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"}