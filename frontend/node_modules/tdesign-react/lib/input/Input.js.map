{"version":3,"file":"Input.js","sources":["../../../components/input/Input.tsx"],"sourcesContent":["import React, { useState, useRef, useImperativeHandle, useEffect } from 'react';\nimport classNames from 'classnames';\nimport {\n  BrowseIcon as TdBrowseIcon,\n  BrowseOffIcon as TdBrowseOffIcon,\n  CloseCircleFilledIcon as TdCloseCircleFilledIcon,\n} from 'tdesign-icons-react';\nimport { isFunction } from 'lodash-es';\nimport useLayoutEffect from '../hooks/useLayoutEffect';\nimport forwardRefWithStatics from '../_util/forwardRefWithStatics';\nimport useConfig from '../hooks/useConfig';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport { TdInputProps } from './type';\nimport { StyledProps, TNode, TElement } from '../common';\nimport InputGroup from './InputGroup';\nimport useControlled from '../hooks/useControlled';\nimport { useLocaleReceiver } from '../locale/LocalReceiver';\nimport { inputDefaultProps } from './defaultProps';\nimport parseTNode from '../_util/parseTNode';\nimport useLengthLimit from './useLengthLimit';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\nexport interface InputProps extends TdInputProps, StyledProps {\n  showInput?: boolean; // 控制透传readonly同时是否展示input 默认保留 因为正常Input需要撑开宽度\n  keepWrapperWidth?: boolean; // 控制透传autoWidth之后是否容器宽度也自适应 多选等组件需要用到自适应但也需要保留宽度\n}\n\nexport interface InputRef extends React.RefObject<unknown> {\n  currentElement: HTMLDivElement;\n  inputElement: HTMLInputElement;\n  focus: () => void;\n  blur: () => void;\n  select: () => void;\n}\n\ntype InputContextTrigger = 'input' | 'clear' | 'initial';\n\nconst renderIcon = (classPrefix: string, type: 'prefix' | 'suffix', icon: TNode | TElement) => {\n  const result = parseTNode(icon);\n\n  const iconClassName = icon ? `${classPrefix}-input__${type}-icon` : '';\n\n  return result ? <span className={`${classPrefix}-input__${type} ${iconClassName}`}>{result}</span> : null;\n};\n\nconst Input = forwardRefWithStatics(\n  (originalProps: InputProps, ref: React.RefObject<InputRef>) => {\n    // 国际化文本初始化\n    const [local, t] = useLocaleReceiver('input');\n    const { BrowseIcon, BrowseOffIcon, CloseCircleFilledIcon } = useGlobalIcon({\n      BrowseIcon: TdBrowseIcon,\n      BrowseOffIcon: TdBrowseOffIcon,\n      CloseCircleFilledIcon: TdCloseCircleFilledIcon,\n    });\n    const props = useDefaultProps<InputProps>(originalProps, inputDefaultProps);\n    const {\n      type,\n      autoWidth,\n      borderless,\n      placeholder = t(local.placeholder),\n      disabled,\n      status,\n      size,\n      className,\n      inputClass,\n      style,\n      prefixIcon,\n      suffixIcon,\n      clearable,\n      tips,\n      align,\n      maxlength,\n      maxcharacter,\n      showClearIconOnEmpty,\n      autofocus,\n      autocomplete,\n      readonly,\n      label,\n      suffix,\n      showInput = true,\n      keepWrapperWidth,\n      showLimitNumber,\n      allowInput,\n      allowInputOverMax,\n      name,\n      format,\n      onClick,\n      onClear,\n      onEnter,\n      onKeydown,\n      onKeyup,\n      onKeypress,\n      onFocus,\n      onBlur,\n      onPaste,\n      onMouseenter,\n      onMouseleave,\n      onWheel,\n      onCompositionstart,\n      onCompositionend,\n      onValidate,\n      onChange: onChangeFromProps,\n      ...restProps\n    } = props;\n\n    const [value, onChange] = useControlled(props, 'value', onChangeFromProps);\n    const { limitNumber, getValueByLimitNumber, tStatus } = useLengthLimit({\n      value: value === undefined ? undefined : String(value),\n      status,\n      maxlength,\n      maxcharacter,\n      allowInputOverMax,\n      onValidate,\n    });\n\n    const { classPrefix, input: inputConfig } = useConfig();\n    const composingRef = useRef(false);\n    const inputRef: React.RefObject<HTMLInputElement> = useRef(null);\n    // inputPreRef 用于预存输入框宽度，应用在 auto width 模式中\n    const inputPreRef: React.RefObject<HTMLInputElement> = useRef(null);\n    const wrapperRef: React.RefObject<HTMLDivElement> = useRef(null);\n    const [isHover, toggleIsHover] = useState(false);\n    const [isFocused, toggleIsFocused] = useState(false);\n    const [renderType, setRenderType] = useState(type);\n\n    const [composingValue, setComposingValue] = useState<string>('');\n\n    // 组件内部 input 原生控件是否处于 readonly 状态，当整个组件 readonly 时，或者处于不可输入时\n    const isInnerInputReadonly = readonly || !allowInput;\n    const isValueEnabled = value && !disabled;\n    const alwaysShowClearIcon = inputConfig?.clearTrigger === 'always';\n    const isShowClearIcon =\n      (((clearable && isValueEnabled) || showClearIconOnEmpty) && isHover) || (isValueEnabled && alwaysShowClearIcon);\n\n    const prefixIconContent = renderIcon(classPrefix, 'prefix', parseTNode(prefixIcon));\n    let suffixIconNew = suffixIcon;\n\n    if (isShowClearIcon)\n      suffixIconNew = (\n        <CloseCircleFilledIcon\n          className={`${classPrefix}-input__suffix-clear`}\n          onMouseDown={handleMouseDown}\n          onClick={handleClear}\n        />\n      );\n    if (type === 'password' && typeof suffixIcon === 'undefined') {\n      if (renderType === 'password') {\n        suffixIconNew = (\n          <BrowseOffIcon className={`${classPrefix}-input__suffix-clear`} onClick={togglePasswordVisible} />\n        );\n      } else if (renderType === 'text') {\n        suffixIconNew = <BrowseIcon className={`${classPrefix}-input__suffix-clear`} onClick={togglePasswordVisible} />;\n      }\n    }\n\n    const suffixIconContent = renderIcon(classPrefix, 'suffix', parseTNode(suffixIconNew));\n    const labelContent = isFunction(label) ? label() : label;\n    const suffixContent = isFunction(suffix) ? suffix() : suffix;\n    const limitNumberNode =\n      limitNumber && showLimitNumber ? (\n        <div\n          className={classNames(`${classPrefix}-input__limit-number`, {\n            [`${classPrefix}-is-disabled`]: disabled,\n          })}\n        >\n          {limitNumber}\n        </div>\n      ) : null;\n\n    const updateInputWidth = () => {\n      if (!autoWidth || !inputRef.current) return;\n      const { offsetWidth } = inputPreRef.current;\n      const { width } = inputPreRef.current.getBoundingClientRect();\n      // 异步渲染场景下 getBoundingClientRect 宽度为 0，需要使用 offsetWidth\n      const calcWidth = width < offsetWidth ? offsetWidth + 1 : width;\n      inputRef.current.style.width = `${calcWidth}px`;\n    };\n\n    useLayoutEffect(() => {\n      // 推迟到下一帧处理防止异步渲染 input 场景宽度计算为 0\n      requestAnimationFrame(() => {\n        updateInputWidth();\n      });\n      // eslint-disable-next-line\n    }, [autoWidth, value, placeholder, inputRef, composingValue]);\n\n    // 当元素默认为 display: none 状态，无法提前准确计算宽度，因此需要监听元素宽度变化。比如：Tabs 场景切换。\n    useEffect(() => {\n      let resizeObserver: ResizeObserver = null;\n      // IE 11 以下使用设置 minWidth 兼容；IE 11 以上使用 ResizeObserver\n      if (typeof window.ResizeObserver === 'undefined' || !inputRef.current) return;\n      resizeObserver = new window.ResizeObserver(() => {\n        updateInputWidth();\n      });\n      resizeObserver.observe(inputRef.current);\n      return () => {\n        // resizeObserver.unobserve?.(inputRef.current);\n        resizeObserver.disconnect?.();\n        resizeObserver = null;\n      };\n      // eslint-disable-next-line\n    }, [inputRef]);\n\n    useEffect(() => {\n      setRenderType(type);\n    }, [type]);\n\n    // 初始判断长度，如超限自动截断并触发onchange\n    useEffect(() => {\n      if (value) {\n        const limitedValue = getValueByLimitNumber(value);\n        if (limitedValue.length !== value.length && !allowInputOverMax) {\n          onChange?.(limitedValue, { trigger: 'initial' });\n        }\n      }\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const innerValue = composingRef.current ? composingValue : value ?? '';\n    const formatDisplayValue = format && !isFocused ? format(innerValue) : innerValue;\n\n    const renderInput = (\n      <input\n        ref={inputRef}\n        placeholder={placeholder}\n        type={renderType}\n        className={classNames(`${classPrefix}-input__inner`, {\n          [`${classPrefix}-input--soft-hidden`]: !showInput,\n        })}\n        value={formatDisplayValue}\n        readOnly={isInnerInputReadonly}\n        disabled={disabled}\n        autoComplete={autocomplete ?? (local.autocomplete || undefined)}\n        autoFocus={autofocus}\n        onChange={handleChange}\n        onKeyDown={handleKeyDown}\n        onKeyUp={handleKeyUp}\n        onKeyPress={handleKeyPress}\n        onCompositionStart={handleCompositionStart}\n        onCompositionEnd={handleCompositionEnd}\n        onFocus={handleFocus}\n        onBlur={handleBlur}\n        onPaste={handlePaste}\n        name={name}\n      />\n    );\n\n    const renderInputNode = (\n      <div\n        className={classNames(inputClass, `${classPrefix}-input`, {\n          [`${classPrefix}-is-readonly`]: readonly,\n          [`${classPrefix}-is-disabled`]: disabled,\n          [`${classPrefix}-is-focused`]: isFocused,\n          [`${classPrefix}-size-s`]: size === 'small',\n          [`${classPrefix}-size-l`]: size === 'large',\n          [`${classPrefix}-align-${align}`]: align,\n          [`${classPrefix}-is-${tStatus}`]: tStatus && tStatus !== 'default',\n          [`${classPrefix}-input--prefix`]: prefixIcon || labelContent,\n          [`${classPrefix}-input--suffix`]: suffixIconContent || suffixContent,\n          [`${classPrefix}-input--borderless`]: borderless,\n          [`${classPrefix}-input--focused`]: isFocused,\n        })}\n        onMouseEnter={handleMouseEnter}\n        onMouseLeave={handleMouseLeave}\n        onWheel={(e) => onWheel?.({ e })}\n        onClick={(e) => {\n          inputRef.current?.focus();\n          onClick?.({ e });\n        }}\n      >\n        {prefixIconContent}\n        {labelContent ? <div className={`${classPrefix}-input__prefix`}>{labelContent}</div> : null}\n        {renderInput}\n        {autoWidth && (\n          <span ref={inputPreRef} className={`${classPrefix}-input__input-pre`}>\n            {innerValue || placeholder}\n          </span>\n        )}\n        {suffixContent || limitNumberNode ? (\n          <div className={`${classPrefix}-input__suffix`}>\n            {suffixContent}\n            {limitNumberNode}\n          </div>\n        ) : null}\n        {suffixIconContent}\n      </div>\n    );\n\n    function togglePasswordVisible() {\n      if (disabled) return;\n      // 保存光标位置\n      const inputEl = inputRef.current;\n      const cursorPosition = inputRef.current?.selectionStart || 0;\n\n      const toggleType = renderType === 'password' ? 'text' : 'password';\n      setRenderType(toggleType);\n\n      requestAnimationFrame(() => {\n        inputEl?.setSelectionRange(cursorPosition, cursorPosition);\n      });\n    }\n\n    function handleChange(\n      e: React.ChangeEvent<HTMLInputElement> | React.CompositionEvent<HTMLInputElement>,\n      trigger: InputContextTrigger = 'input',\n    ) {\n      let { value: newStr } = e.currentTarget;\n      if (composingRef.current) {\n        setComposingValue(newStr);\n      } else {\n        if (props.type !== 'number') {\n          newStr = getValueByLimitNumber(newStr);\n        }\n        // 完成中文输入时同步一次 composingValue\n        setComposingValue(newStr);\n        onChange(newStr, { e, trigger });\n      }\n    }\n    // 添加MouseDown阻止冒泡，防止點擊Clear value會導致彈窗閃爍一下\n    // https://github.com/Tencent/tdesign-react/issues/2320\n    function handleMouseDown(e: React.MouseEvent<SVGSVGElement, globalThis.MouseEvent>) {\n      e.stopPropagation();\n      // 兼容React16\n      e.nativeEvent.stopImmediatePropagation();\n    }\n    function handleClear(e: React.MouseEvent<SVGSVGElement>) {\n      onChange?.('', { e, trigger: 'clear' });\n      onClear?.({ e });\n    }\n    function handleKeyDown(e: React.KeyboardEvent<HTMLInputElement>) {\n      const {\n        key,\n        currentTarget: { value },\n      } = e;\n      key === 'Enter' && onEnter?.(value, { e });\n      onKeydown?.(value, { e });\n    }\n    function handleKeyUp(e: React.KeyboardEvent<HTMLInputElement>) {\n      const {\n        currentTarget: { value },\n      } = e;\n      onKeyup?.(value, { e });\n    }\n    function handleKeyPress(e: React.KeyboardEvent<HTMLInputElement>) {\n      const {\n        currentTarget: { value },\n      } = e;\n      onKeypress?.(value, { e });\n    }\n    function handleCompositionStart(e: React.CompositionEvent<HTMLInputElement>) {\n      composingRef.current = true;\n      const {\n        currentTarget: { value },\n      } = e;\n      onCompositionstart?.(value, { e });\n    }\n    function handleCompositionEnd(e: React.CompositionEvent<HTMLInputElement>) {\n      const {\n        currentTarget: { value },\n      } = e;\n      if (composingRef.current) {\n        composingRef.current = false;\n        handleChange(e);\n      }\n      onCompositionend?.(value, { e });\n    }\n\n    function handleFocus(e: React.FocusEvent<HTMLInputElement>) {\n      const {\n        currentTarget: { value },\n      } = e;\n      onFocus?.(value, { e });\n      if (isInnerInputReadonly) return;\n      toggleIsFocused(true);\n    }\n\n    function handleBlur(e: React.FocusEvent<HTMLInputElement>) {\n      const {\n        currentTarget: { value },\n      } = e;\n      onBlur?.(value, { e });\n      if (isInnerInputReadonly) return;\n      toggleIsFocused(false);\n    }\n\n    function handlePaste(e: React.ClipboardEvent<HTMLInputElement>) {\n      const clipData = e.clipboardData;\n      const pasteValue = clipData?.getData('text/plain');\n      onPaste?.({ e, pasteValue });\n    }\n\n    function handleMouseEnter(e: React.MouseEvent<HTMLDivElement>) {\n      !readonly && toggleIsHover(true);\n      onMouseenter?.({ e });\n    }\n\n    function handleMouseLeave(e: React.MouseEvent<HTMLDivElement>) {\n      !readonly && toggleIsHover(false);\n      onMouseleave?.({ e });\n    }\n\n    useImperativeHandle(ref as InputRef, () => ({\n      currentElement: wrapperRef.current,\n      inputElement: inputRef.current,\n      focus: () => inputRef.current?.focus(),\n      blur: () => inputRef.current?.blur(),\n      select: () => inputRef.current?.select(),\n    }));\n\n    return (\n      <div\n        ref={wrapperRef}\n        style={style}\n        className={classNames(`${classPrefix}-input__wrap`, className, {\n          [`${classPrefix}-input--auto-width`]: autoWidth && !keepWrapperWidth,\n        })}\n        {...restProps}\n      >\n        {renderInputNode}\n        {tips && (\n          <div\n            className={classNames(`${classPrefix}-input__tips`, `${classPrefix}-input__tips--${tStatus || 'default'}`)}\n          >\n            {tips}\n          </div>\n        )}\n      </div>\n    );\n  },\n  { Group: InputGroup },\n);\n\nInput.displayName = 'Input';\n\nexport default Input;\n"],"names":["renderIcon","classPrefix","type","icon","result","parseTNode","iconClassName","concat","React","createElement","className","Input","forwardRefWithStatics","originalProps","ref","_classNames3","_useLocaleReceiver","useLocaleReceiver","_useLocaleReceiver2","_slicedToArray","local","t","_useGlobalIcon","useGlobalIcon","BrowseIcon","TdBrowseIcon","BrowseOffIcon","TdBrowseOffIcon","CloseCircleFilledIcon","TdCloseCircleFilledIcon","props","useDefaultProps","inputDefaultProps","autoWidth","borderless","_props$placeholder","placeholder","disabled","status","size","inputClass","style","prefixIcon","suffixIcon","clearable","tips","align","maxlength","maxcharacter","showClearIconOnEmpty","autofocus","autocomplete","readonly","label","suffix","_props$showInput","showInput","keepWrapperWidth","showLimitNumber","allowInput","allowInputOverMax","name","format","onClick","onClear","onEnter","onKeydown","onKeyup","onKeypress","onFocus","onBlur","onPaste","onMouseenter","onMouseleave","onWheel","onCompositionstart","onCompositionend","onValidate","onChangeFromProps","onChange","restProps","_objectWithoutProperties","_excluded","_useControlled","useControlled","_useControlled2","value","_useLengthLimit","useLengthLimit","String","limitNumber","getValueByLimitNumber","tStatus","_useConfig","useConfig","inputConfig","input","composingRef","useRef","inputRef","inputPreRef","wrapperRef","_useState","useState","_useState2","isHover","toggleIsHover","_useState3","_useState4","isFocused","toggleIsFocused","_useState5","_useState6","renderType","setRenderType","_useState7","_useState8","composingValue","setComposingValue","isInnerInputReadonly","isValueEnabled","alwaysShowClearIcon","clearTrigger","isShowClearIcon","prefixIconContent","suffixIconNew","onMouseDown","handleMouseDown","handleClear","togglePasswordVisible","suffixIconContent","labelContent","isFunction","suffixContent","limitNumberNode","classNames","_defineProperty","updateInputWidth","current","offsetWidth","_inputPreRef$current$","getBoundingClientRect","width","calcWidth","useLayoutEffect","requestAnimationFrame","useEffect","resizeObserver","window","ResizeObserver","observe","_resizeObserver$disco","_resizeObserver","disconnect","call","limitedValue","length","trigger","innerValue","formatDisplayValue","renderInput","readOnly","autoComplete","autoFocus","handleChange","onKeyDown","handleKeyDown","onKeyUp","handleKeyUp","onKeyPress","handleKeyPress","onCompositionStart","handleCompositionStart","onCompositionEnd","handleCompositionEnd","handleFocus","handleBlur","handlePaste","renderInputNode","onMouseEnter","handleMouseEnter","onMouseLeave","handleMouseLeave","e","_inputRef$current","focus","_inputRef$current2","inputEl","cursorPosition","selectionStart","toggleType","setSelectionRange","arguments","undefined","newStr","currentTarget","stopPropagation","nativeEvent","stopImmediatePropagation","key","clipData","clipboardData","pasteValue","getData","useImperativeHandle","currentElement","inputElement","_inputRef$current3","blur","_inputRef$current4","select","_inputRef$current5","_objectSpread","Group","InputGroup","displayName"],"mappings":"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"}