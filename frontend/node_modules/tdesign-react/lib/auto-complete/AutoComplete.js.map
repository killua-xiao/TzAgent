{"version":3,"file":"AutoComplete.js","sources":["../../../components/auto-complete/AutoComplete.tsx"],"sourcesContent":["import React, { forwardRef, useRef, useState, useImperativeHandle } from 'react';\nimport classNames from 'classnames';\nimport useControlled from '../hooks/useControlled';\nimport { ClassName, StyledProps } from '../common';\nimport { AutoCompleteOption, TdAutoCompleteProps } from './type';\nimport { autoCompleteDefaultProps } from './defaultProps';\nimport useCommonClassName from '../hooks/useCommonClassName';\nimport { useLocaleReceiver } from '../locale/LocalReceiver';\nimport Input, { InputProps, InputRef, TdInputProps } from '../input';\nimport Popup, { PopupProps, PopupRef } from '../popup';\nimport AutoCompleteOptionList, { OptionsListProps } from './OptionList';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\nexport interface AutoCompleteProps<T extends AutoCompleteOption = AutoCompleteOption>\n  extends TdAutoCompleteProps<T>,\n    StyledProps {}\n\nexport interface AutoCompleteRef {\n  inputRef: InputRef;\n  popupRef: PopupRef;\n}\n\nconst AutoComplete = forwardRef<AutoCompleteRef, AutoCompleteProps>((originalProps, ref) => {\n  const props = useDefaultProps(originalProps, autoCompleteDefaultProps);\n  const inputRef = useRef(null);\n  const popupRef = useRef(null);\n  const [tValue, setTValue] = useControlled(props, 'value', props.onChange);\n  const { classPrefix, sizeClassNames } = useCommonClassName();\n  const [global] = useLocaleReceiver('input');\n\n  const [popupVisible, setPopupVisible] = useState(false);\n  const optionListRef = useRef(null);\n\n  useImperativeHandle(ref, () => ({\n    inputRef: inputRef.current,\n    popupRef: popupRef.current,\n  }));\n\n  const getOverlayStyle = (trigger: HTMLElement, popupElement: HTMLElement) => {\n    const triggerWidth = trigger.getBoundingClientRect().width || trigger.offsetWidth || trigger.clientWidth;\n    const popupWidth =\n      popupElement.getBoundingClientRect().width || popupElement.offsetWidth || popupElement.clientWidth;\n    return {\n      width: triggerWidth >= popupWidth ? `${triggerWidth}px` : 'auto',\n      ...props.popupProps?.overlayInnerStyle,\n    };\n  };\n\n  const classes = [`${classPrefix}-auto-complete`].concat(props.className);\n  const popupClasses = (() => {\n    let classes: ClassName = [`${classPrefix}-select__dropdown`];\n    if (props.popupProps?.overlayClassName) {\n      classes = classes.concat(props.popupProps.overlayClassName);\n    }\n    return classNames(classes);\n  })();\n  const popupInnerClasses = (() => {\n    let classes: ClassName = [`${classPrefix}-select__dropdown-inner`];\n    if (props.popupProps?.overlayInnerClassName) {\n      classes = classes.concat(props.popupProps.overlayInnerClassName);\n    }\n    return classNames(classes);\n  })();\n\n  const onInputChange: TdInputProps['onChange'] = (value, context) => {\n    if (!popupVisible) {\n      setPopupVisible(true);\n    }\n    setTValue(value, context);\n  };\n\n  const innerInputProps = (() => {\n    const tProps: InputProps = {\n      value: tValue,\n      size: props.size,\n      ...props.inputProps,\n    };\n    return tProps;\n  })();\n\n  const onInnerFocus: InputProps['onFocus'] = (value, context) => {\n    setPopupVisible(true);\n    props.onFocus?.({ ...context, value });\n    const timer = setTimeout(() => {\n      optionListRef.current?.addKeyboardListener();\n      clearTimeout(timer);\n    }, 0);\n  };\n\n  const onInnerBlur: InputProps['onBlur'] = (value, context) => {\n    props.onBlur?.({ ...context, value });\n  };\n\n  const onInnerEnter: InputProps['onEnter'] = (value, context) => {\n    props.onEnter?.({ ...context, value });\n  };\n\n  const onInnerCompositionend: InputProps['onCompositionend'] = (value, context) => {\n    props.onCompositionend?.({ ...context, value });\n  };\n\n  const onInnerCompositionstart: InputProps['onCompositionstart'] = (value, context) => {\n    props.onCompositionstart?.({ ...context, value });\n  };\n\n  const onInnerSelect: OptionsListProps['onSelect'] = (value, context) => {\n    if (props.readonly || props.disabled) return;\n    setPopupVisible(false);\n    setTValue(value, context);\n    props.onSelect?.(value, context);\n  };\n\n  const onPopupVisibleChange: PopupProps['onVisibleChange'] = (visible, { trigger }) => {\n    if (trigger !== 'trigger-element-click') {\n      setPopupVisible(visible);\n    }\n  };\n\n  // 触发元素\n  const triggerNode = props.triggerElement || props.children || (\n    <Input\n      ref={inputRef}\n      placeholder={props.placeholder ?? global.placeholder}\n      tips={props.tips}\n      status={props.status}\n      readonly={props.readonly}\n      disabled={props.disabled}\n      clearable={props.clearable}\n      autofocus={props.autofocus}\n      borderless={props.borderless}\n      onClear={props.onClear}\n      onChange={onInputChange}\n      onFocus={onInnerFocus}\n      onBlur={onInnerBlur}\n      onEnter={onInnerEnter}\n      onCompositionend={onInnerCompositionend}\n      onCompositionstart={onInnerCompositionstart}\n      {...innerInputProps}\n    />\n  );\n  // 联想词列表\n  const listContent = Array.isArray(props.options) && (\n    <AutoCompleteOptionList\n      ref={optionListRef}\n      value={tValue}\n      options={props.options}\n      size={props.size}\n      sizeClassNames={sizeClassNames}\n      onSelect={onInnerSelect}\n      popupVisible={popupVisible}\n      highlightKeyword={props.highlightKeyword}\n      filterable={props.filterable}\n      filter={props.filter}\n      empty={props.empty}\n    />\n  );\n  const topContent = props.panelTopContent;\n  const bottomContent = props.panelBottomContent;\n  const panelContent =\n    topContent || listContent || bottomContent ? (\n      <div className={`${classPrefix}-auto-complete__panel`}>\n        {topContent}\n        {listContent}\n        {bottomContent}\n      </div>\n    ) : null;\n\n  const popupProps = {\n    ...props.popupProps,\n    overlayInnerStyle: getOverlayStyle,\n    overlayInnerClassName: popupInnerClasses,\n    overlayClassName: popupClasses,\n  };\n  return (\n    <div className={classNames(classes)} style={props.style}>\n      <Popup\n        ref={popupRef}\n        visible={popupVisible}\n        onVisibleChange={onPopupVisibleChange}\n        trigger=\"focus\"\n        placement=\"bottom-left\"\n        hideEmptyPopup={true}\n        content={panelContent}\n        {...popupProps}\n      >\n        {triggerNode}\n      </Popup>\n    </div>\n  );\n});\n\nAutoComplete.displayName = 'AutoComplete';\n\nexport default AutoComplete as <T extends AutoCompleteOption = AutoCompleteOption>(\n  props: AutoCompleteProps<T> & {\n    ref?: React.Ref<AutoCompleteProps>;\n  },\n) => React.ReactElement;\n"],"names":["AutoComplete","forwardRef","originalProps","ref","_props$placeholder","props","useDefaultProps","autoCompleteDefaultProps","inputRef","useRef","popupRef","_useControlled","useControlled","onChange","_useControlled2","_slicedToArray","tValue","setTValue","_useCommonClassName","useCommonClassName","classPrefix","sizeClassNames","_useLocaleReceiver","useLocaleReceiver","_useLocaleReceiver2","global","_useState","useState","_useState2","popupVisible","setPopupVisible","optionListRef","useImperativeHandle","current","getOverlayStyle","trigger","popupElement","_props$popupProps","triggerWidth","getBoundingClientRect","width","offsetWidth","clientWidth","popupWidth","_objectSpread","concat","popupProps","overlayInnerStyle","classes","className","popupClasses","_props$popupProps2","overlayClassName","classNames","popupInnerClasses","_props$popupProps3","overlayInnerClassName","onInputChange","value","context","innerInputProps","tProps","size","inputProps","onInnerFocus","_props$onFocus","onFocus","call","timer","setTimeout","_optionListRef$curren","addKeyboardListener","clearTimeout","onInnerBlur","_props$onBlur","onBlur","onInnerEnter","_props$onEnter","onEnter","onInnerCompositionend","_props$onCompositione","onCompositionend","onInnerCompositionstart","_props$onCompositions","onCompositionstart","onInnerSelect","_props$onSelect","readonly","disabled","onSelect","onPopupVisibleChange","visible","_ref","triggerNode","triggerElement","children","React","createElement","Input","placeholder","tips","status","clearable","autofocus","borderless","onClear","listContent","Array","isArray","options","AutoCompleteOptionList","highlightKeyword","filterable","filter","empty","topContent","panelTopContent","bottomContent","panelBottomContent","panelContent","style","Popup","onVisibleChange","placement","hideEmptyPopup","content","displayName"],"mappings":"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"}