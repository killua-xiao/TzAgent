{"version":3,"file":"useFormItemStyle.js","sources":["../../../../components/form/hooks/useFormItemStyle.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport useConfig from '../../hooks/useConfig';\nimport parseTNode from '../../_util/parseTNode';\nimport { ValidateStatus } from '../const';\n\nexport default function useFormItemStyle(props) {\n  const { classPrefix } = useConfig();\n\n  const {\n    className,\n    help,\n    tips,\n    snakeName,\n    status,\n    successBorder,\n    errorList,\n    successList,\n    layout,\n    verifyStatus,\n    label,\n    labelWidth,\n    labelAlign,\n    requiredMark,\n    requiredMarkPosition,\n    showErrorMessage,\n    innerRules,\n  } = props;\n\n  // 传入 status 时受控\n  const renderStatus = status || verifyStatus;\n\n  // help 文本\n  const helpNode = help && <div className={`${classPrefix}-input__help`}>{parseTNode(help)}</div>;\n\n  // 判断是否有星号\n  const needRequiredMark = requiredMark || (requiredMark ?? innerRules.filter((rule: any) => rule.required).length > 0);\n\n  // 提示文本\n  const extraNode = useMemo(() => {\n    let extra = tips ? (\n      <div className={`${classPrefix}-input__extra`} title={tips}>\n        {tips}\n      </div>\n    ) : null;\n\n    if (showErrorMessage && errorList?.[0]?.message) {\n      extra = (\n        <div className={`${classPrefix}-input__extra`} title={errorList[0].message}>\n          {errorList[0].message}\n        </div>\n      );\n    } else if (successList.length) {\n      extra = (\n        <div className={`${classPrefix}-input__extra`} title={successList[0].message}>\n          {successList[0].message}\n        </div>\n      );\n    }\n\n    return extra;\n  }, [showErrorMessage, errorList, successList, tips, classPrefix]);\n\n  // snake 在dom上显示的名字改成下划线拼接\n  const formSnakeName = snakeName.split(',').join('_');\n\n  const formItemClass = classNames(`${classPrefix}-form__item`, className, {\n    [`${classPrefix}-form-item__${formSnakeName}`]: formSnakeName,\n    [`${classPrefix}-form__item-with-help`]: helpNode,\n    [`${classPrefix}-form__item-with-extra`]: extraNode,\n  });\n\n  const formItemLabelClass = classNames(`${classPrefix}-form__label`, {\n    [`${classPrefix}-form__label--required`]: needRequiredMark,\n    [`${classPrefix}-form__label--required-right`]: needRequiredMark && requiredMarkPosition === 'right',\n    [`${classPrefix}-form__label--top`]: labelAlign === 'top' || !labelWidth,\n    [`${classPrefix}-form__label--left`]: labelAlign === 'left' && labelWidth,\n    [`${classPrefix}-form__label--right`]: labelAlign === 'right' && labelWidth,\n  });\n\n  const contentClass = () => {\n    const controlCls = `${classPrefix}-form__controls`;\n    if (!showErrorMessage) return controlCls;\n\n    const isSuccess = renderStatus === ValidateStatus.SUCCESS;\n    if (isSuccess) {\n      return classNames(controlCls, `${classPrefix}-is-success`, {\n        [`${classPrefix}-form--success-border`]: successBorder,\n      });\n    }\n\n    return classNames(controlCls, {\n      [`${classPrefix}-is-warning`]: renderStatus === 'warning',\n      [`${classPrefix}-is-error`]: ['fail', 'error'].includes(renderStatus),\n      [`${classPrefix}-form--has-error`]:\n        renderStatus === ValidateStatus.ERROR || renderStatus === ValidateStatus.WARNING,\n    });\n  };\n\n  let labelStyle = {};\n  let contentStyle = {};\n  if (label && labelWidth && labelAlign !== 'top') {\n    if (typeof labelWidth === 'number') {\n      labelStyle = { width: `${labelWidth}px` };\n      contentStyle = { marginLeft: layout !== 'inline' ? `${labelWidth}px` : '' };\n    } else {\n      labelStyle = { width: labelWidth };\n      contentStyle = { marginLeft: layout !== 'inline' ? labelWidth : '' };\n    }\n  }\n\n  return {\n    formItemClass,\n    formItemLabelClass,\n    contentClass,\n    labelStyle,\n    contentStyle,\n    helpNode,\n    extraNode,\n  };\n}\n"],"names":["useFormItemStyle","props","_useConfig","useConfig","classPrefix","className","help","tips","snakeName","status","successBorder","errorList","successList","layout","verifyStatus","label","labelWidth","labelAlign","requiredMark","requiredMarkPosition","showErrorMessage","innerRules","renderStatus","helpNode","React","createElement","parseTNode","needRequiredMark","filter","rule","required","length","extraNode","useMemo","_errorList$","extra","title","message","formSnakeName","split","join","formItemClass","classNames","concat","_defineProperty","formItemLabelClass","contentClass","controlCls","isSuccess","ValidateStatus","SUCCESS","includes","ERROR","WARNING","labelStyle","contentStyle","width","marginLeft"],"mappings":"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"}