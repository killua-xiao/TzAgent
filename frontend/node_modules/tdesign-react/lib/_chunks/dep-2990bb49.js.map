{"version":3,"file":"dep-2990bb49.js","sources":["../../../common/js/time-picker/const.ts","../../../common/js/time-picker/utils.ts","../../../components/time-picker/panel/SinglePanel.tsx"],"sourcesContent":["export const AM = 'am';\nexport const PM = 'pm';\nexport const MERIDIEM_LIST = [AM, PM];\n\nexport const TIME_PICKER_EMPTY: Array<undefined> = [undefined, undefined];\n\nexport const DEFAULT_STEPS = [1, 1, 1];\nexport const DEFAULT_FORMAT = 'HH:mm:ss';\nexport const EMPTY_VALUE = -1;\n\nexport enum EPickerCols {\n  hour = 'hour',\n  minute = 'minute',\n  second = 'second',\n  milliSecond = 'millisecond',\n  meridiem = 'meridiem',\n}\n\n// RegExp\nexport const TIME_FORMAT = /\\[([^\\]]+)]|Y{1,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g;\n// 上下午前置\nexport const PRE_MERIDIEM_FORMAT = /^(a|A)\\s+?[h]{1,2}(:[m]{1,2}(:[s]{1,2})?)?$/;\n// 上下午后置\nexport const POST_MERIDIEM_FORMAT = /^[h]{1,2}(:[m]{1,2}(:[s]{1,2})?)?(\\s+(a|A))?$/;\n// 12小时制\nexport const TWELVE_HOUR_FORMAT = /[h]{1}/;\n// HH:mm\nexport const HM_FORMAT = /[hH]{1,2}:m{1,2}/;\n// HH:mm:ss\nexport const HMS_FORMAT = /[hH]{1,2}:m{1,2}:s{1,2}/;\n","import dayjs from 'dayjs';\nimport advancedFormat from 'dayjs/plugin/advancedFormat';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\nimport { EPickerCols, TIME_FORMAT } from './const';\n\ndayjs.extend(advancedFormat);\ndayjs.extend(customParseFormat);\n\n// 判断是否输入的值是合法的timepicker的值\nexport function validateInputValue(value: string, format: string) {\n  return dayjs(value, format).format(format) === value;\n}\n\n// 转换输入值为标准格式的timepicker的值\nexport function formatInputValue(value: string, format: string) {\n  return dayjs(value, format).format(format);\n}\n\n// 计算最接近的时间点\nexport function closestLookup(\n  availableArr: Array<any>,\n  calcVal: number,\n  step: number\n) {\n  if (step <= 1) return calcVal;\n  return availableArr.sort(\n    (a, b) => Math.abs(calcVal + 1 - a) - Math.abs(calcVal + 1 - b)\n  )[0];\n}\n\nexport function getPickerCols(format:string) {\n  const renderCol: EPickerCols[] = [];\n  const {\n    meridiem, hour, minute, second, milliSecond,\n  } = EPickerCols;\n  const match = format.match(TIME_FORMAT);\n  match.forEach((m) => {\n    switch (m) {\n      case 'H':\n      case 'HH':\n      case 'h':\n      case 'hh':\n        renderCol.push(hour);\n        break;\n      case 'a':\n      case 'A':\n        renderCol.push(meridiem);\n        break;\n      case 'm':\n      case 'mm':\n        renderCol.push(minute);\n        break;\n      case 's':\n      case 'ss':\n        renderCol.push(second);\n        break;\n      case 'SSS':\n        renderCol.push(milliSecond);\n        break;\n      default:\n        break;\n    }\n  });\n  return renderCol;\n}\n","import React, {\n  FC,\n  useCallback,\n  useEffect,\n  useState,\n  useRef,\n  useMemo,\n  CSSProperties,\n  MouseEvent,\n  UIEvent,\n} from 'react';\nimport classNames from 'classnames';\nimport dayjs from 'dayjs';\nimport customParseFormat from 'dayjs/plugin/customParseFormat';\nimport { padStart, range } from 'lodash-es';\n\nimport { AM, PM, EPickerCols, MERIDIEM_LIST, TWELVE_HOUR_FORMAT } from '@tdesign/common-js/time-picker/const';\nimport { closestLookup, getPickerCols } from '@tdesign/common-js/time-picker/utils';\nimport useConfig from '../../hooks/useConfig';\nimport noop from '../../_util/noop';\nimport { useTimePickerTextConfig } from '../hooks/useTimePickerTextConfig';\n\nimport { TdTimePickerProps, TimeRangePickerPartial } from '../type';\nimport useDebounce from '../../hooks/useDebounce';\nimport { usePropRef } from '../../hooks/usePropsRef';\n\nconst timeArr = [EPickerCols.hour, EPickerCols.minute, EPickerCols.second, EPickerCols.milliSecond];\n\nconst panelOffset = {\n  top: 15,\n  bottom: 21,\n};\n\nexport interface SinglePanelProps\n  extends Pick<TdTimePickerProps, 'steps' | 'format' | 'value' | 'hideDisabledTime' | 'onPick'> {\n  disableTime?: (\n    h: number,\n    m: number,\n    s: number,\n    ms: number,\n    context?: { partial: TimeRangePickerPartial },\n  ) => Partial<{ hour: number[]; minute: number[]; second: number[] }>;\n  position?: TimeRangePickerPartial;\n  triggerScroll?: boolean;\n  resetTriggerScroll?: () => void;\n  isVisible?: boolean;\n  onChange: Function;\n}\n\n// https://github.com/iamkun/dayjs/issues/1552\ndayjs.extend(customParseFormat);\n\nconst SinglePanel: FC<SinglePanelProps> = (props) => {\n  const {\n    steps,\n    format,\n    onChange = noop,\n    value,\n    hideDisabledTime = true,\n    disableTime,\n    position = 'start',\n    triggerScroll,\n    resetTriggerScroll,\n    isVisible,\n  } = props;\n  const { classPrefix } = useConfig();\n  const TEXT_CONFIG = useTimePickerTextConfig();\n  const panelClassName = `${classPrefix}-time-picker__panel`;\n\n  const [cols, setCols] = useState<Array<EPickerCols>>([]);\n  const colsRef = useRef([]);\n  const maskRef = useRef(null);\n\n  const dayjsValue = useMemo(() => {\n    const isStepsSet = !!steps.filter((v) => Number(v) > 1).length;\n\n    if (value) return dayjs(value, format);\n\n    if (isStepsSet) return dayjs().hour(0).minute(0).second(0);\n\n    return dayjs();\n  }, [value, format, steps]);\n\n  useEffect(() => {\n    colsRef.current = colsRef.current.slice(0, cols.length);\n  }, [cols]);\n\n  useEffect(() => {\n    const renderCol = getPickerCols(format);\n    setCols(renderCol);\n  }, [format]);\n\n  // 获取每个时间的高度\n  const getItemHeight = useCallback(() => {\n    const maskDom = maskRef?.current?.querySelector('div');\n    if (!maskDom) {\n      return {\n        offsetHeight: 0,\n        margin: 0,\n      };\n    }\n    return {\n      offsetHeight: maskDom.offsetHeight,\n      margin: parseInt(getComputedStyle(maskDom).marginTop, 10),\n    };\n  }, []);\n\n  const timeItemCanUsed = useCallback(\n    (col: EPickerCols, el: string | number) => {\n      const colIdx = timeArr.indexOf(col);\n      if (colIdx !== -1) {\n        const params: [number, number, number, number] = [\n          dayjsValue.hour(),\n          dayjsValue.minute(),\n          dayjsValue.second(),\n          dayjsValue.millisecond(),\n        ];\n        params[colIdx] = Number(el);\n        return !(disableTime && disableTime?.(...params, { partial: position }))?.[col]?.includes(Number(el));\n      }\n      return true;\n    },\n    [position, disableTime, dayjsValue],\n  );\n\n  // 获取需要渲染的column\n  const getColList = useCallback(\n    (col: EPickerCols) => {\n      let count = 0;\n\n      if (timeArr.includes(col)) {\n        // hour、minute and second columns\n        const colIdx = timeArr.indexOf(col);\n        const colStep = steps[colIdx] || 1;\n\n        if (col === EPickerCols.hour) count = TWELVE_HOUR_FORMAT.test(format) ? 11 : 23;\n        // 小时最大为23 12小时制最大为11\n        else if (col === EPickerCols.milliSecond) count = 999;\n        // 毫秒最大为999\n        else count = 59;\n\n        const colList = range(0, count + 1, Number(colStep)).map((v) => padStart(String(v), 2, '0')) || [];\n\n        return hideDisabledTime && !!disableTime\n          ? colList.filter((t) => {\n              const params: [number, number, number, number] = [\n                dayjsValue.hour(),\n                dayjsValue.minute(),\n                dayjsValue.second(),\n                dayjsValue.millisecond(),\n              ];\n              params[colIdx] = Number(t);\n              return !disableTime?.(...params, { partial: position })?.[col]?.includes(Number(t));\n            })\n          : colList;\n      }\n      // meridiem column\n      return MERIDIEM_LIST;\n    },\n    [steps, format, hideDisabledTime, dayjsValue, disableTime, position],\n  );\n\n  const getScrollDistance = useCallback(\n    (col: EPickerCols, time: number | string) => {\n      if (col === EPickerCols.hour && /[h]{1}/.test(format))\n        // eslint-disable-next-line no-param-reassign\n        time = (time as number) % 12; // 一定是数字，直接 cast\n\n      const itemIdx = getColList(col).indexOf(padStart(String(time), 2, '0'));\n      const { offsetHeight, margin } = getItemHeight();\n      const timeItemTotalHeight = offsetHeight + margin;\n      const distance = Math.abs(Math.max(0, itemIdx) * timeItemTotalHeight);\n      return distance;\n    },\n    [getItemHeight, getColList, format],\n  );\n\n  const isVisibleRef = usePropRef(isVisible);\n\n  const handleScroll = useDebounce((col: EPickerCols, idx: number, e: MouseEvent | UIEvent) => {\n    // 如果不可见，不处理 scroll 事件\n    if (!isVisibleRef.current) {\n      return;\n    }\n\n    let val: number | string;\n    let formattedVal: string;\n    const scrollTop = colsRef.current[idx]?.scrollTop + panelOffset.top;\n    const { offsetHeight, margin } = getItemHeight();\n    const timeItemTotalHeight = offsetHeight + margin;\n    let colStep = Math.abs(Math.round(scrollTop / timeItemTotalHeight + 0.5));\n    const meridiem = MERIDIEM_LIST[Math.min(colStep - 1, 1)].toLowerCase(); // 处理PM、AM与am、pm\n\n    if (Number.isNaN(colStep)) colStep = 1;\n    if (timeArr.includes(col)) {\n      // hour、minute and second columns\n      let max = 59;\n      if (col === EPickerCols.hour) max = /[h]{1}/.test(format) ? 11 : 23;\n      // 小时最大为23 12小时制最大为11\n      else if (col === EPickerCols.milliSecond) max = 999; // 毫秒最大为999\n\n      const colIdx = timeArr.indexOf(col);\n      const availableArr = range(0, max + 1, Number(steps[colIdx]) || 1);\n\n      val = closestLookup(\n        availableArr,\n        Number(getColList(col)[Math.min(colStep - 1, max + 1, availableArr.length - 1)]),\n        Number(steps[colIdx]) || 1,\n      );\n      if (Number.isNaN(val)) val = availableArr[availableArr.length - 1];\n      if (col === EPickerCols.hour && cols.includes(EPickerCols.meridiem) && dayjsValue.hour() >= 12) {\n        // 如果是十二小时制需要再判断\n        val = Number(val) + 12;\n      }\n    }\n    // meridiem columns\n    else val = meridiem;\n\n    const distance = getScrollDistance(col, val);\n    if (\n      !dayjs(dayjsValue).isValid() ||\n      // 过滤键盘错误输入\n      (value && !dayjs(value, format, true).isValid())\n    ) {\n      return;\n    }\n    if (timeArr.includes(col)) {\n      if (timeItemCanUsed(col, val)) formattedVal = dayjsValue[col]?.(val).format(format);\n      else formattedVal = dayjsValue.format(format);\n    } else {\n      const currentHour = dayjsValue.hour();\n      if (meridiem === AM && currentHour >= 12) {\n        formattedVal = dayjsValue.hour(currentHour - 12).format(format);\n      } else if (meridiem === PM && currentHour < 12) {\n        formattedVal = dayjsValue.hour(currentHour + 12).format(format);\n      } else {\n        formattedVal = dayjsValue.format(format);\n      }\n    }\n\n    if (formattedVal !== value) {\n      onChange(formattedVal, e);\n    }\n\n    if (distance !== scrollTop) {\n      const scrollCtrl = colsRef.current[cols.indexOf(col)];\n      if (!scrollCtrl || scrollCtrl.scrollTop === distance) return;\n\n      scrollCtrl.scrollTo?.({\n        top: distance,\n        behavior: 'smooth',\n      });\n    }\n  }, 50);\n\n  const scrollToTime = useCallback(\n    (col: EPickerCols, time: number | string, idx: number, behavior: 'auto' | 'smooth' = 'auto') => {\n      const distance = getScrollDistance(col, time);\n      const scrollCtrl = colsRef.current[idx];\n      if (!scrollCtrl || scrollCtrl.scrollTop === distance || !timeItemCanUsed(col, time)) return;\n\n      scrollCtrl.scrollTo?.({\n        top: distance,\n        behavior,\n      });\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [getScrollDistance],\n  );\n\n  // update each columns scroll distance\n  const updateTimeScrollPos = useCallback(\n    (isAutoScroll = false) => {\n      const behavior = value && !isAutoScroll ? 'smooth' : 'auto';\n      const isStepsSet = !!steps.filter((v) => Number(v) > 1).length;\n\n      cols.forEach((col: EPickerCols, idx: number) => {\n        if (!isStepsSet || (isStepsSet && value)) {\n          // 如果没有设置大于1的steps或设置了大于1的step 正常处理滚动\n          scrollToTime(col, timeArr.includes(col) ? dayjsValue[col]?.() : dayjsValue.format('a'), idx, behavior);\n        } else {\n          // 否则初始化到每列第一个选项\n          scrollToTime(col, getColList(col)?.[0], idx, behavior);\n        }\n      });\n      resetTriggerScroll();\n    },\n    [cols, scrollToTime, dayjsValue, value, steps, getColList, resetTriggerScroll],\n  );\n\n  const handleTimeItemClick = (col: EPickerCols, el: string | number, idx: number, e: MouseEvent) => {\n    if (!timeItemCanUsed(col, el)) return;\n    if (timeArr.includes(col)) {\n      if (col === EPickerCols.hour && dayjsValue.format('a') === PM && cols.includes(EPickerCols.meridiem)) {\n        // eslint-disable-next-line no-param-reassign\n        el = Number(el) + 12;\n      }\n      scrollToTime(col, el, idx, 'smooth');\n\n      setTimeout(() => {\n        onChange(dayjsValue[col]?.(el).format(format), e);\n      }, 100);\n    } else {\n      const currentHour = dayjsValue.hour();\n      if (el === AM && currentHour >= 12) {\n        onChange(dayjsValue.hour(currentHour - 12).format(format), e);\n      } else if (el === PM && currentHour < 12) {\n        onChange(dayjsValue.hour(currentHour + 12).format(format), e);\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (value) updateTimeScrollPos(true);\n  }, [value, updateTimeScrollPos]);\n\n  useEffect(() => {\n    if (triggerScroll) updateTimeScrollPos(true);\n  }, [triggerScroll, updateTimeScrollPos]);\n\n  const isCurrent = useCallback(\n    (col: EPickerCols, colItem: string | number) => {\n      let colVal: number;\n      if (col === EPickerCols.meridiem) {\n        const currentMeridiem = dayjsValue.format('a');\n        return currentMeridiem === colItem;\n      }\n      colVal = dayjsValue[col]?.();\n      if (col === EPickerCols.hour && /[h]{1}/.test(format)) {\n        colVal %= 12;\n      }\n      return colVal === Number(colItem);\n    },\n    [format, dayjsValue],\n  );\n\n  function renderScrollCtrl() {\n    return cols.map((col, idx) => (\n      <ul\n        key={`${col}_${idx}`}\n        ref={(el) => {\n          colsRef.current[idx] = el;\n        }}\n        className={`${panelClassName}-body-scroll`}\n        onScroll={(e) => handleScroll(col, idx, e)}\n        style={\n          {\n            '--timePickerPanelOffsetTop': panelOffset.top,\n            '--timePickerPanelOffsetBottom': panelOffset.bottom,\n          } as CSSProperties\n        }\n      >\n        {getColList(col).map((el) => (\n          <li\n            key={el}\n            className={classNames(`${panelClassName}-body-scroll-item`, {\n              [`${classPrefix}-is-disabled`]: !timeItemCanUsed(col, el),\n              [`${classPrefix}-is-current`]: isCurrent(col, el),\n            })}\n            onClick={(e) => handleTimeItemClick(col, el, idx, e)}\n          >\n            {/* eslint-disable-next-line no-nested-ternary */}\n            {timeArr.includes(col)\n              ? TWELVE_HOUR_FORMAT.test(format) && col === EPickerCols.hour && el === '00'\n                ? '12'\n                : el\n              : TEXT_CONFIG[el]}\n          </li>\n        ))}\n      </ul>\n    ));\n  }\n\n  return (\n    <div className={`${panelClassName}-body`}>\n      {/* render mask */}\n      <div className={`${panelClassName}-body-active-mask`} ref={maskRef}>\n        {cols.map((col, idx) => (\n          <div key={`${col}_${idx}`} />\n        ))}\n      </div>\n      {renderScrollCtrl()}\n    </div>\n  );\n};\n\nexport default SinglePanel;\n"],"names":["AM","PM","MERIDIEM_LIST","TIME_PICKER_EMPTY","DEFAULT_STEPS","DEFAULT_FORMAT","EPickerCols","TIME_FORMAT","TWELVE_HOUR_FORMAT","dayjs","extend","advancedFormat","customParseFormat","validateInputValue","value","format","formatInputValue","closestLookup","availableArr","calcVal","step","sort","a","b","Math","abs","getPickerCols","renderCol","meridiem","hour","minute","second","milliSecond","match","forEach","m","push","timeArr","panelOffset","top","bottom","SinglePanel","props","steps","_props$onChange","onChange","noop","_props$hideDisabledTi","hideDisabledTime","disableTime","_props$position","position","triggerScroll","resetTriggerScroll","isVisible","_useConfig","useConfig","classPrefix","TEXT_CONFIG","useTimePickerTextConfig","panelClassName","_useState","useState","_useState2","_slicedToArray","cols","setCols","colsRef","useRef","maskRef","dayjsValue","useMemo","isStepsSet","filter","v","Number","length","useEffect","current","slice","getItemHeight","useCallback","_maskRef$current","maskDom","querySelector","offsetHeight","margin","parseInt","getComputedStyle","marginTop","timeItemCanUsed","col","el","colIdx","indexOf","_ref","params","millisecond","apply","partial","includes","getColList","count","colStep","test","colList","range","map","padStart","String","t","_disableTime","concat","getScrollDistance","time","itemIdx","_getItemHeight","timeItemTotalHeight","distance","max","isVisibleRef","usePropRef","handleScroll","useDebounce","idx","e","_colsRef$current$idx","val","formattedVal","scrollTop","_getItemHeight2","round","min","toLowerCase","isNaN","isValid","_dayjsValue$col","call","currentHour","_scrollCtrl$scrollTo","scrollCtrl","scrollTo","behavior","scrollToTime","_scrollCtrl$scrollTo2","updateTimeScrollPos","isAutoScroll","_dayjsValue$col2","_getColList","handleTimeItemClick","setTimeout","_dayjsValue$col3","isCurrent","colItem","_dayjsValue$col4","colVal","currentMeridiem","renderScrollCtrl","React","createElement","key","ref","className","onScroll","style","classNames","_defineProperty","onClick"],"mappings":"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"}