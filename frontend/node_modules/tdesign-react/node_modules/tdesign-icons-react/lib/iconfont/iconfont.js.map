{"version":3,"file":"iconfont.js","sources":["../../src/iconfont/iconfont.tsx"],"sourcesContent":["import {\n  forwardRef, Ref, HTMLAttributes, useEffect, createElement, CSSProperties, useMemo,\n} from 'react';\nimport classNames from 'classnames';\nimport useConfig from '../util/use-config';\nimport useSizeProps from '../util/use-size-props';\nimport { loadLink, loadStylesheet } from '../util/check-url-and-load';\n\nexport interface IconFontProps extends HTMLAttributes<HTMLElement> {\n  /**\n   * 图标类型\n   */\n  name?: string;\n\n  /**\n   * 尺寸\n   * @default undefined\n   */\n  size?: 'small' | 'medium' | 'large' | string | number;\n\n  /**\n   * 渲染容器元素\n   * @default 'i'\n   */\n  tag?: 'i' | 'span' | 'div';\n\n  /**\n   * 样式\n   */\n  style?: CSSProperties;\n\n  /**\n   * 类名\n   */\n  className?: string;\n\n  /**\n   * 图标地址\n   */\n  url?: string | string[];\n\n  /**\n   * @default true\n   */\n  loadDefaultIcons?: boolean;\n}\n\nconst CDN_ICONFONT_URL = 'https://tdesign.gtimg.com/icon/0.4.0/fonts/index.css';\n\n/**\n * 图标组件\n * iconfont 版本\n */\nexport const IconFont = forwardRef((props: IconFontProps, ref: Ref<HTMLElement>) => {\n  const { classPrefix } = useConfig();\n  const {\n    name = '',\n    size,\n    tag = 'i',\n    className: customClassName,\n    url,\n    loadDefaultIcons = true,\n    style: customStyle,\n    ...htmlProps\n  } = props;\n  const { className: sizeClassName, style: sizeStyle } = useSizeProps(size);\n\n  const isBuiltInIcon = props.url && /^t-icon-(\\w|-)+$/.test(name);\n\n  const className = useMemo(\n    () => classNames({\n      [name]: props.url,\n      [`${classPrefix}-icon`]: !props.url || isBuiltInIcon,\n      [`${classPrefix}-icon-${name}`]: !props.url,\n    }, sizeClassName, customClassName),\n    [classPrefix, customClassName, name, sizeClassName],\n  );\n\n  useEffect(() => {\n    loadStylesheet();\n  }, []);\n\n  useEffect(() => {\n    // 不加载图标\n    if (!loadDefaultIcons) {\n      return;\n    }\n\n    loadLink(CDN_ICONFONT_URL, `${classPrefix}-iconfont-stylesheet--unique-class`);\n  }, [classPrefix, loadDefaultIcons]);\n\n  // 加载 url\n  useEffect(() => {\n    const urls = Array.isArray(url) ? url : [url];\n    (urls as Array<string>).forEach((url) => {\n      loadLink(url, `${classPrefix}-iconfont-stylesheet--unique-class`);\n    });\n  }, [classPrefix, url]);\n\n  return createElement(tag, {\n    ref,\n    style: { ...customStyle, ...sizeStyle },\n    className,\n    ...htmlProps,\n  });\n});\n\nIconFont.displayName = 'Icon';\n"],"names":["CDN_ICONFONT_URL","IconFont","forwardRef","props","ref","useConfig","classPrefix","name","size","tag","customClassName","className","url","loadDefaultIcons","customStyle","style","htmlProps","useSizeProps","sizeClassName","sizeStyle","isBuiltInIcon","test","useMemo","_classNames","classNames","urls","Array","isArray","forEach","url2","createElement","displayName"],"mappings":";;;;;;;;;;;;;;;AA+CA,IAAMA,mBAAmB;IAMZC,wBAAWC,iBAAW,UAACC,OAAsBC,KAA0B;mBAC1DC;IAAhBC,yBAAAA;oBAUJH,MARFI;IAAAA,gCAAO;IACPC,OAOEL,MAPFK;iBAOEL,MANFM;IAAAA,8BAAM;IACKC,kBAKTP,MALFQ;IACAC,MAIET,MAJFS;4BAIET,MAHFU;IAAAA,sDAAmB;IACZC,cAELX,MAFFY;IACGC,2CACDb;sBACmDc,6BAAaT;IAAjDU,8BAAXP;IAAiCQ,0BAAPJ;MAE5BK,gBAAgBjB,MAAMS,OAAO,mBAAmBS,KAAKd;MAErDI,YAAYW,cAChB;IAAA,IAAAC,WAAA;IAAA,OAAMC,uEACHjB,MAAOJ,MAAMS,mDACVN,uBAAqB,CAACH,MAAMS,OAAOQ,6DACnCd,8BAAoBC,OAAS,CAACJ,MAAMS,oBACvCM,eAAeR;KAClB,CAACJ,aAAaI,iBAAiBH,MAAMW;kBAG7B,YAAM;;KAEb;kBAEO,YAAM;QAEV,CAACL,kBAAkB;;;kCAIdb,4BAAqBM;KAC7B,CAACA,aAAaO;kBAGP,YAAM;QACRY,OAAOC,MAAMC,QAAQf,OAAOA,MAAM,CAACA;IACxCa,KAAuBG,QAAQ,UAACC,MAAQ;oCAC9BA,gBAAQvB;;KAElB,CAACA,aAAaM;sBAEVkB,oBAAcrB;IACnBL,KAAAA;IACAW,uCAAYD,cAAgBK;IAC5BR,WAAAA;KACGK;AAAA;AAIPf,SAAS8B,cAAc;;;;"}