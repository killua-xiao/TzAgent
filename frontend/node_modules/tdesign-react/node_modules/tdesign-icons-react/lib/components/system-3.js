'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-cdd71ff3.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "g",
    "attrs": {
      "id": "system-3"
    },
    "children": [{
      "tag": "g",
      "attrs": {
        "id": "fill1"
      },
      "children": [{
        "tag": "path",
        "attrs": {
          "fill": "props.fillColor1",
          "d": "M16.9229 21H21V16.9229C21 15.3113 19.6888 14 18.0771 14H14V18.0772C14 19.6887 15.3112 21 16.9229 21Z"
        }
      }, {
        "tag": "path",
        "attrs": {
          "fill": "props.fillColor1",
          "d": "M7.07713 21H3V16.9229C3 15.3113 4.31124 14 5.92287 14H10V18.0772C10 19.6887 8.68876 21 7.07713 21Z"
        }
      }, {
        "tag": "path",
        "attrs": {
          "fill": "props.fillColor1",
          "d": "M16.9229 3H21V7.07705C21 8.68873 19.6888 10 18.0771 10H14V5.92277C14 4.31127 15.3112 3 16.9229 3Z"
        }
      }, {
        "tag": "path",
        "attrs": {
          "fill": "props.fillColor1",
          "d": "M7.07713 3H3V7.07705C3 8.68873 4.31124 10 5.92287 10H10V5.92277C10 4.31127 8.68876 3 7.07713 3Z"
        }
      }]
    }, {
      "tag": "g",
      "attrs": {
        "id": "stroke1"
      },
      "children": [{
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor1",
          "d": "M16.9229 21H21V16.9229C21 15.3113 19.6888 14 18.0771 14H14V18.0772C14 19.6887 15.3112 21 16.9229 21Z",
          "strokeWidth": "props.strokeWidth"
        }
      }, {
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor1",
          "d": "M7.07713 21H3V16.9229C3 15.3113 4.31124 14 5.92287 14H10V18.0772C10 19.6887 8.68876 21 7.07713 21Z",
          "strokeWidth": "props.strokeWidth"
        }
      }, {
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor1",
          "d": "M16.9229 3H21V7.07705C21 8.68873 19.6888 10 18.0771 10H14V5.92277C14 4.31127 15.3112 3 16.9229 3Z",
          "strokeWidth": "props.strokeWidth"
        }
      }, {
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor1",
          "d": "M7.07713 3H3V7.07705C3 8.68873 4.31124 10 5.92287 10H10V5.92277C10 4.31127 8.68876 3 7.07713 3Z",
          "strokeWidth": "props.strokeWidth"
        }
      }]
    }]
  }]
};
var System3Icon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "system-3",
    ref: ref,
    icon: element
  }));
});
System3Icon.displayName = "System3Icon";

exports.default = System3Icon;
//# sourceMappingURL=system-3.js.map
