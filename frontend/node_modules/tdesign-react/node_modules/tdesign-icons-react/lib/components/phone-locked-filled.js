'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-cdd71ff3.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "props.filledColor",
      "d": "M20 1H4V23H11.5V17H6V3H18V11.0205C18.7087 11.079 19.3826 11.2607 20 11.544V1Z"
    }
  }, {
    "tag": "path",
    "attrs": {
      "fill": "props.filledColor",
      "d": "M20.7495 15.75V16.5H21.998V23H12.998V16.5H14.2495V15.75C14.2495 13.9551 15.7046 12.5 17.4995 12.5C19.2944 12.5 20.7495 13.9551 20.7495 15.75ZM18.7495 15.75C18.7495 15.0596 18.1899 14.5 17.4995 14.5C16.8092 14.5 16.2495 15.0596 16.2495 15.75V16.5H18.7495V15.75Z"
    }
  }]
};
var PhoneLockedFilledIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "phone-locked-filled",
    ref: ref,
    icon: element
  }));
});
PhoneLockedFilledIcon.displayName = "PhoneLockedFilledIcon";

exports.default = PhoneLockedFilledIcon;
//# sourceMappingURL=phone-locked-filled.js.map
