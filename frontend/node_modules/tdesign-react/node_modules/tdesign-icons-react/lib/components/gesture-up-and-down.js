'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-cdd71ff3.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "g",
    "attrs": {
      "id": "gesture-up-and-down"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "id": "fill1",
        "fill": "props.fillColor1",
        "d": "M7.83121 8.90139L12.2236 16.5093L8.93781 17.543C8.59165 17.6519 8.34809 17.9625 8.32484 18.3246L8.26197 19.3037L14.1181 21.7232C14.6223 21.9315 15.1948 21.8938 15.6673 21.621L21.8035 18.0782C22.4585 17.7001 22.7979 16.9452 22.6461 16.2043L21.5145 10.6794C21.3477 9.8651 20.633 9.27914 19.8018 9.27519L15.6049 9.25528C15.2937 9.25381 14.9877 9.33502 14.7182 9.49062L12.849 10.5698L10.8721 7.14571C10.3873 6.30598 9.31356 6.01827 8.47383 6.50309C7.63411 6.9879 7.3464 8.06166 7.83121 8.90139Z"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke1",
        "stroke": "props.strokeColor1",
        "d": "M7.83121 8.90139L12.2236 16.5093L8.93781 17.543C8.59165 17.6519 8.34809 17.9625 8.32484 18.3246L8.26197 19.3037L14.1181 21.7232C14.6223 21.9315 15.1948 21.8938 15.6673 21.621L21.8035 18.0782C22.4585 17.7001 22.7979 16.9452 22.6461 16.2043L21.5145 10.6794C21.3477 9.8651 20.633 9.27914 19.8018 9.27519L15.6049 9.25528C15.2937 9.25381 14.9877 9.33502 14.7182 9.49062L12.849 10.5698L10.8721 7.14571C10.3873 6.30598 9.31356 6.01827 8.47383 6.50309C7.63411 6.9879 7.3464 8.06166 7.83121 8.90139Z",
        "strokeLinecap": "square",
        "strokeWidth": "props.strokeWidth"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke2",
        "stroke": "props.strokeColor2",
        "d": "M5.19787 4.50052V1.51524L1.4982 1.51318M5.19787 15.5005L5.19787 18.4858L1.49799 18.4863M4.01024 17.95C-0.0185398 13.4026 -0.00335695 6.52984 4.05579 1.99996",
        "strokeLinecap": "square",
        "strokeWidth": "props.strokeWidth"
      }
    }]
  }]
};
var GestureUpAndDownIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "gesture-up-and-down",
    ref: ref,
    icon: element
  }));
});
GestureUpAndDownIcon.displayName = "GestureUpAndDownIcon";

exports.default = GestureUpAndDownIcon;
//# sourceMappingURL=gesture-up-and-down.js.map
