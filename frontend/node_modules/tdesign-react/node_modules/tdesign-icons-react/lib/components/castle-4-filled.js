'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-cdd71ff3.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "props.filledColor",
      "d": "M14 2H22V22H13V17H11V22H2V2H10V8.34186C10.3217 8.2281 10.6559 8.14096 11 8.08314V7H13V8.08311C13.3441 8.14092 13.6783 8.22804 14 8.34179V2ZM6 14C6 12.2224 6.77404 10.6256 8 9.52822V4H4V20H6V14ZM16 9.52826C17.2258 10.6256 18 12.2225 18 14V20H20V4H16V9.52826ZM8.12593 13H15.874C15.6447 12.1091 15.116 11.3379 14.3993 10.7995C13.7307 10.2972 12.9017 10 12 10C11.0985 10 10.2692 10.2973 9.60061 10.7995C8.88389 11.3379 8.35516 12.109 8.12593 13Z"
    }
  }]
};
var Castle4FilledIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "castle-4-filled",
    ref: ref,
    icon: element
  }));
});
Castle4FilledIcon.displayName = "Castle4FilledIcon";

exports.default = Castle4FilledIcon;
//# sourceMappingURL=castle-4-filled.js.map
