'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-cdd71ff3.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "props.filledColor",
      "d": "M14.8091 1.36241L11.4983 7.20403L21.9016 7.20403C20.5176 4.3516 17.9368 2.1862 14.8091 1.36241Z"
    }
  }, {
    "tag": "path",
    "attrs": {
      "fill": "props.filledColor",
      "d": "M22.6191 9.12211L15.7974 9.12211L20.993 18.3358C22.2569 16.5446 22.9998 14.358 22.9998 12.0002C22.9998 11.0053 22.8674 10.0402 22.6191 9.12211Z"
    }
  }, {
    "tag": "path",
    "attrs": {
      "fill": "props.filledColor",
      "d": "M19.6664 19.8883L16.3168 13.953L11.2297 22.9737C11.4843 22.9913 11.741 23.0002 11.9998 23.0002C14.9814 23.0002 17.6861 21.8132 19.6664 19.8883Z"
    }
  }, {
    "tag": "path",
    "attrs": {
      "fill": "props.filledColor",
      "d": "M9.21356 22.6441L12.5151 16.7944H2.09693C3.48413 19.6549 6.07466 21.8248 9.21356 22.6441Z"
    }
  }, {
    "tag": "path",
    "attrs": {
      "fill": "props.filledColor",
      "d": "M1.37982 14.8763L8.20211 14.8763L3.01563 5.65176C1.74616 7.44533 0.999756 9.63686 0.999756 12.0002C0.999756 12.9945 1.1319 13.9589 1.37982 14.8763Z"
    }
  }, {
    "tag": "path",
    "attrs": {
      "fill": "props.filledColor",
      "d": "M4.34438 4.10125C6.32369 2.18281 9.02378 1.00024 11.9998 1.00024C12.2666 1.00024 12.5314 1.00977 12.7938 1.02851L7.68635 10.0462L4.34438 4.10125Z"
    }
  }]
};
var ShutterFilledIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "shutter-filled",
    ref: ref,
    icon: element
  }));
});
ShutterFilledIcon.displayName = "ShutterFilledIcon";

exports.default = ShutterFilledIcon;
//# sourceMappingURL=shutter-filled.js.map
