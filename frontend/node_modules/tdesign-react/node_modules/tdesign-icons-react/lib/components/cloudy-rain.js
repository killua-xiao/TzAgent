'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-cdd71ff3.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "g",
    "attrs": {
      "id": "cloudy-rain"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "id": "fill2",
        "fill": "props.fillColor2",
        "d": "M15.5004 11.3333C15.4755 11.3333 15.4506 11.3335 15.4258 11.3339C15.0719 9.30142 13.4937 7.66862 11.4463 7.16283C12.1118 5.878 13.4535 5 15.0004 5C17.2095 5 19.0004 6.79086 19.0004 9C19.0004 10.1467 18.5179 11.1807 17.7448 11.91C17.0842 11.5432 16.3177 11.3333 15.5004 11.3333Z"
      }
    }, {
      "tag": "g",
      "attrs": {
        "id": "stroke2"
      },
      "children": [{
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor2",
          "d": "M15.5004 11.3333C15.4755 11.3333 15.4506 11.3335 15.4258 11.3339C15.0719 9.30142 13.4937 7.66862 11.4463 7.16283C12.1118 5.878 13.4535 5 15.0004 5C17.2095 5 19.0004 6.79086 19.0004 9C19.0004 10.1467 18.5179 11.1807 17.7448 11.91C17.0842 11.5432 16.3177 11.3333 15.5004 11.3333Z",
          "strokeLinecap": "square",
          "strokeWidth": "props.strokeWidth"
        }
      }, {
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor2",
          "d": "M12.998 19.998H13.002V20.002H12.998V19.998Z",
          "strokeLinecap": "square",
          "strokeWidth": "props.strokeWidth"
        }
      }, {
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor2",
          "d": "M12.998 14.998H13.002V15.002H12.998V14.998Z",
          "strokeLinecap": "square",
          "strokeWidth": "props.strokeWidth"
        }
      }, {
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor2",
          "d": "M7.99805 21.998H8.00195V22.002H7.99805V21.998Z",
          "strokeLinecap": "square",
          "strokeWidth": "props.strokeWidth"
        }
      }, {
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor2",
          "d": "M7.99805 16.998H8.00195V17.002H7.99805V16.998Z",
          "strokeLinecap": "square",
          "strokeWidth": "props.strokeWidth"
        }
      }, {
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor2",
          "d": "M10.0556 4.05168L10.0531 4.05416L10.0503 4.05136L10.0528 4.04887L10.0556 4.05168Z",
          "strokeLinecap": "square",
          "strokeWidth": "props.strokeWidth"
        }
      }, {
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor2",
          "d": "M15 2L15.0035 2V2.00396L15 2.00396V2Z",
          "strokeLinecap": "square",
          "strokeWidth": "props.strokeWidth"
        }
      }, {
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor2",
          "d": "M19.9512 4.04886L19.9537 4.05135L19.9509 4.05415L19.9484 4.05166L19.9512 4.04886Z",
          "strokeLinecap": "square",
          "strokeWidth": "props.strokeWidth"
        }
      }, {
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor2",
          "d": "M22.004 9.00003V9.00355H22V9.00003H22.004Z",
          "strokeLinecap": "square",
          "strokeWidth": "props.strokeWidth"
        }
      }]
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke1",
        "stroke": "props.strokeColor1",
        "d": "M4 19.6397C2.81463 19.0724 2 17.8945 2 16.5333C2 14.8867 3.19223 13.5082 4.79079 13.1546C4.73117 12.8451 4.7 12.5261 4.7 12.2C4.7 9.32812 7.11766 7 10.1 7C12.7759 7 14.9972 8.87428 15.4254 11.3339C15.4502 11.3335 15.4751 11.3333 15.5 11.3333C17.9853 11.3333 20 13.2734 20 15.6667C20 17.4438 18.8891 18.9711 17.2995 19.6397",
        "strokeLinecap": "square",
        "strokeWidth": "props.strokeWidth"
      }
    }]
  }]
};
var CloudyRainIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "cloudy-rain",
    ref: ref,
    icon: element
  }));
});
CloudyRainIcon.displayName = "CloudyRainIcon";

exports.default = CloudyRainIcon;
//# sourceMappingURL=cloudy-rain.js.map
