'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-cdd71ff3.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "g",
    "attrs": {
      "id": "usercase"
    },
    "children": [{
      "tag": "g",
      "attrs": {
        "id": "fill1"
      },
      "children": [{
        "tag": "path",
        "attrs": {
          "fill": "props.fillColor1",
          "d": "M20.1213 9.41421C18.9497 10.1953 17.0503 10.1953 15.8787 9.41421C14.7071 8.63317 14.7071 7.36683 15.8787 6.58579C17.0503 5.80474 18.9497 5.80474 20.1213 6.58579C21.2929 7.36683 21.2929 8.63317 20.1213 9.41421Z"
        }
      }, {
        "tag": "path",
        "attrs": {
          "fill": "props.fillColor1",
          "d": "M20.1213 17.4142C18.9497 18.1953 17.0503 18.1953 15.8787 17.4142C14.7071 16.6332 14.7071 15.3668 15.8787 14.5858C17.0503 13.8047 18.9497 13.8047 20.1213 14.5858C21.2929 15.3668 21.2929 16.6332 20.1213 17.4142Z"
        }
      }, {
        "tag": "path",
        "attrs": {
          "fill": "props.fillColor1",
          "d": "M6.41421 9.41421C5.63317 10.1953 4.36683 10.1953 3.58579 9.41421C2.80474 8.63317 2.80474 7.36683 3.58579 6.58579C4.36683 5.80474 5.63317 5.80474 6.41421 6.58579C7.19526 7.36683 7.19526 8.63317 6.41421 9.41421Z"
        }
      }]
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke1",
        "stroke": "props.strokeColor1",
        "d": "M3 13H7M4.99984 16.0001V10.0001M4.99984 16.0001L3 17.999M4.99984 16.0001L7.00173 17.999M20.1213 9.41421C18.9497 10.1953 17.0503 10.1953 15.8787 9.41421C14.7071 8.63317 14.7071 7.36684 15.8787 6.58579C17.0503 5.80474 18.9497 5.80474 20.1213 6.58579C21.2929 7.36684 21.2929 8.63317 20.1213 9.41421ZM20.1213 17.4142C18.9497 18.1953 17.0503 18.1953 15.8787 17.4142C14.7071 16.6332 14.7071 15.3668 15.8787 14.5858C17.0503 13.8047 18.9497 13.8047 20.1213 14.5858C21.2929 15.3668 21.2929 16.6332 20.1213 17.4142ZM6.41421 9.41421C5.63317 10.1953 4.36684 10.1953 3.58579 9.41421C2.80474 8.63317 2.80474 7.36684 3.58579 6.58579C4.36684 5.80474 5.63317 5.80474 6.41421 6.58579C7.19526 7.36684 7.19526 8.63317 6.41421 9.41421Z",
        "strokeLinecap": "square",
        "strokeWidth": "props.strokeWidth"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke2",
        "stroke": "props.strokeColor2",
        "d": "M10.5 8H11.5M10.5 16H11.5",
        "strokeLinecap": "square",
        "strokeWidth": "props.strokeWidth"
      }
    }]
  }]
};
var UsercaseIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "usercase",
    ref: ref,
    icon: element
  }));
});
UsercaseIcon.displayName = "UsercaseIcon";

exports.default = UsercaseIcon;
//# sourceMappingURL=usercase.js.map
