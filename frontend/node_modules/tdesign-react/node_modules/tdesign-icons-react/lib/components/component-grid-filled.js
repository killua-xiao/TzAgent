'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-cdd71ff3.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "props.filledColor",
      "d": "M7.25 2.04297H2V7.29297L7.25 7.29297V2.04297ZM9.25 2.04297V7.29297H14.75V2.04297H9.25ZM16.75 2.04297V7.29297L22 7.29297V2.04297H16.75ZM22 9.29297L16.75 9.29297V14.793H22V9.29297ZM22 16.793H16.75V22.043H22V16.793ZM14.75 22.043V16.793L9.25 16.793V22.043H14.75ZM7.25 22.043V16.793H2V22.043H7.25ZM2 14.793H7.25V9.29297L2 9.29297V14.793ZM9.25 14.793V9.29297L14.75 9.29297V14.793L9.25 14.793Z"
    }
  }]
};
var ComponentGridFilledIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "component-grid-filled",
    ref: ref,
    icon: element
  }));
});
ComponentGridFilledIcon.displayName = "ComponentGridFilledIcon";

exports.default = ComponentGridFilledIcon;
//# sourceMappingURL=component-grid-filled.js.map
