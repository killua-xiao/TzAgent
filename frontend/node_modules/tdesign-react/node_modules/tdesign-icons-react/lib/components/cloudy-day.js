'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-cdd71ff3.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "g",
    "attrs": {
      "id": "cloudy-day"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "id": "fill1",
        "fill": "props.fillColor1",
        "d": "M2 16.5333C2 18.4479 3.52223 20 5.4 20H14.75C17.0972 20 19 18.0599 19 15.6667C19 15.0761 18.8841 14.5131 18.6743 14C18.0338 12.434 16.518 11.3333 14.75 11.3333C14.7265 11.3333 14.703 11.3335 14.6796 11.3339C14.2752 8.87428 12.1772 7 9.65 7C6.83335 7 4.55 9.32812 4.55 12.2C4.55 12.5261 4.57944 12.8451 4.63575 13.1546C3.12599 13.5082 2 14.8867 2 16.5333Z"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "fill2",
        "fill": "props.fillColor2",
        "d": "M14.7497 11.3333C14.7261 11.3333 14.7027 11.3335 14.6792 11.3339C14.3002 9.02865 12.4336 7.23758 10.1201 7.02183C10.5565 5.28554 12.128 4 13.9997 4C15.8827 4 17.4618 5.30116 17.887 7.05344C18.0859 7.01832 18.2906 7 18.4997 7C20.4326 7 21.9997 8.567 21.9997 10.5C21.9997 12.2632 20.1739 14 18.6739 14C18.0334 12.434 16.5176 11.3333 14.7497 11.3333Z"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke2",
        "stroke": "props.strokeColor2",
        "d": "M14.7497 11.3333C14.7261 11.3333 14.7027 11.3335 14.6792 11.3339C14.3002 9.02865 12.4336 7.23758 10.1201 7.02183C10.5565 5.28554 12.128 4 13.9997 4C15.8827 4 17.4618 5.30116 17.887 7.05344C18.0859 7.01832 18.2906 7 18.4997 7C20.4326 7 21.9997 8.567 21.9997 10.5C21.9997 12.2632 20.1739 14 18.6739 14C18.0334 12.434 16.5176 11.3333 14.7497 11.3333Z",
        "strokeWidth": "props.strokeWidth"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke1",
        "stroke": "props.strokeColor1",
        "d": "M2 16.5333C2 18.4479 3.52223 20 5.4 20H14.75C17.0972 20 19 18.0599 19 15.6667C19 15.0761 18.8841 14.5131 18.6743 14C18.0338 12.434 16.518 11.3333 14.75 11.3333C14.7265 11.3333 14.703 11.3335 14.6796 11.3339C14.2752 8.87428 12.1772 7 9.65 7C6.83335 7 4.55 9.32812 4.55 12.2C4.55 12.5261 4.57944 12.8451 4.63575 13.1546C3.12599 13.5082 2 14.8867 2 16.5333Z",
        "strokeWidth": "props.strokeWidth"
      }
    }]
  }]
};
var CloudyDayIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "cloudy-day",
    ref: ref,
    icon: element
  }));
});
CloudyDayIcon.displayName = "CloudyDayIcon";

exports.default = CloudyDayIcon;
//# sourceMappingURL=cloudy-day.js.map
