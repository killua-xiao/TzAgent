'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-cdd71ff3.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "g",
    "attrs": {
      "id": "gps"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "id": "fill2",
        "fill": "props.fillColor2",
        "d": "M11.9471 17.6953L15.0004 21.9988H8.89453L11.9471 17.6953Z"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke1",
        "stroke": "props.strokeColor1",
        "d": "M19.3369 18.7482C20.9779 16.9695 21.9804 14.5928 21.9804 11.9819C21.9804 6.46959 17.5118 2.00098 11.9995 2.00098C6.48716 2.00098 2.01855 6.46959 2.01855 11.9819C2.01855 14.5928 3.02103 16.9695 4.66207 18.7482M16.0433 15.7286C16.9476 14.7484 17.5 13.4387 17.5 12C17.5 8.96244 15.0376 6.5 12 6.5C8.96243 6.5 6.5 8.96244 6.5 12C6.5 13.4387 7.05242 14.7484 7.95672 15.7286M11.9471 17.6953L15.0004 21.9988H8.89453L11.9471 17.6953ZM13 12C13 12.5523 12.5523 13 12 13C11.4477 13 11 12.5523 11 12C11 11.4477 11.4477 11 12 11C12.5523 11 13 11.4477 13 12Z",
        "strokeLinecap": "square",
        "strokeWidth": "props.strokeWidth"
      }
    }]
  }]
};
var GpsIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "gps",
    ref: ref,
    icon: element
  }));
});
GpsIcon.displayName = "GpsIcon";

exports.default = GpsIcon;
//# sourceMappingURL=gps.js.map
