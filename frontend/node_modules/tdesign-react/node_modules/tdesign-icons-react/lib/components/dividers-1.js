'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-cdd71ff3.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "g",
    "attrs": {
      "id": "dividers-1"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "id": "fill2",
        "fill": "props.fillColor2",
        "d": "M15.4275 8.73669C15.4275 10.5679 13.8931 12.0525 12.0004 12.0525C10.1076 12.0525 8.57324 10.5679 8.57324 8.73669C8.57324 6.90543 10.1076 5.4209 12.0004 5.4209C13.8931 5.4209 15.4275 6.90543 15.4275 8.73669Z"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke1",
        "stroke": "props.strokeColor1",
        "d": "M12.0004 5.42105C10.1076 5.42105 8.57325 6.90558 8.57325 8.73684C8.57325 10.5681 10.1076 12.0526 12.0004 12.0526C13.8931 12.0526 15.4275 10.5681 15.4275 8.73684C15.4275 6.90558 13.8931 5.42105 12.0004 5.42105ZM12.0004 5.42105V2M20.3022 16.3018C15.0428 18.6998 8.95772 18.6998 3.69824 16.3018M9.57037 11.075L4.00367 22H4.00024L9.57037 11.075ZM14.4301 11.075L19.9968 22H20.0002L14.4301 11.075Z",
        "strokeLinecap": "square",
        "strokeWidth": "props.strokeWidth"
      }
    }]
  }]
};
var Dividers1Icon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "dividers-1",
    ref: ref,
    icon: element
  }));
});
Dividers1Icon.displayName = "Dividers1Icon";

exports.default = Dividers1Icon;
//# sourceMappingURL=dividers-1.js.map
