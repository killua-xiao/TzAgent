'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-cdd71ff3.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "g",
    "attrs": {
      "id": "palette-1"
    },
    "children": [{
      "tag": "g",
      "attrs": {
        "id": "fill1"
      },
      "children": [{
        "tag": "path",
        "attrs": {
          "fill": "props.fillColor1",
          "d": "M15.8889 6.9375C15.8889 9.11212 14.1477 10.875 12 10.875C9.8522 10.875 8.11108 9.11212 8.11108 6.9375C8.11108 4.76288 9.8522 3 12 3C14.1477 3 15.8889 4.76288 15.8889 6.9375Z"
        }
      }, {
        "tag": "path",
        "attrs": {
          "fill": "props.fillColor1",
          "d": "M9.77778 17.0625C9.77778 19.2371 8.03666 21 5.88889 21C3.74111 21 2 19.2371 2 17.0625C2 14.8879 3.74111 13.125 5.88889 13.125C8.03666 13.125 9.77778 14.8879 9.77778 17.0625Z"
        }
      }, {
        "tag": "path",
        "attrs": {
          "fill": "props.fillColor1",
          "d": "M21.9999 17.0625C21.9999 19.2371 20.2588 21 18.1111 21C15.9633 21 14.2222 19.2371 14.2222 17.0625C14.2222 14.8879 15.9633 13.125 18.1111 13.125C20.2588 13.125 21.9999 14.8879 21.9999 17.0625Z"
        }
      }]
    }, {
      "tag": "g",
      "attrs": {
        "id": "stroke1"
      },
      "children": [{
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor1",
          "d": "M15.8889 6.9375C15.8889 9.11212 14.1477 10.875 12 10.875C9.8522 10.875 8.11108 9.11212 8.11108 6.9375C8.11108 4.76288 9.8522 3 12 3C14.1477 3 15.8889 4.76288 15.8889 6.9375Z",
          "strokeWidth": "props.strokeWidth"
        }
      }, {
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor1",
          "d": "M9.77778 17.0625C9.77778 19.2371 8.03666 21 5.88889 21C3.74111 21 2 19.2371 2 17.0625C2 14.8879 3.74111 13.125 5.88889 13.125C8.03666 13.125 9.77778 14.8879 9.77778 17.0625Z",
          "strokeWidth": "props.strokeWidth"
        }
      }, {
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor1",
          "d": "M21.9999 17.0625C21.9999 19.2371 20.2588 21 18.1111 21C15.9633 21 14.2222 19.2371 14.2222 17.0625C14.2222 14.8879 15.9633 13.125 18.1111 13.125C20.2588 13.125 21.9999 14.8879 21.9999 17.0625Z",
          "strokeWidth": "props.strokeWidth"
        }
      }]
    }]
  }]
};
var Palette1Icon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "palette-1",
    ref: ref,
    icon: element
  }));
});
Palette1Icon.displayName = "Palette1Icon";

exports.default = Palette1Icon;
//# sourceMappingURL=palette-1.js.map
