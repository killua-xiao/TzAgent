'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-cdd71ff3.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "g",
    "attrs": {
      "id": "corn"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "id": "fill1",
        "fill": "props.fillColor1",
        "d": "M20 8.99999C21.2888 7.39096 23.0764 4.65866 21.2189 2.79125C19.355 0.91738 16.6122 2.71023 15 3.99999L9.62239 8.25177C10.3291 10.3354 10.198 13.1392 9 15C10.8537 13.8065 13.6446 13.6724 15.7232 14.3692C17.1494 12.5799 18.5754 10.7905 20 8.99999Z"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "fill2",
        "fill": "props.fillColor2",
        "d": "M13.9999 18.5C16.9999 16.25 18.4999 16 18.4999 16C18.4999 16 17.447 14.9471 15.7231 14.3692C13.6445 13.6724 10.8536 13.8065 8.9999 15C10.1979 13.1393 10.329 10.3355 9.62229 8.25179C9.04265 6.54275 7.9999 5.5 7.9999 5.5C7.9999 5.5 7.7499 7 5.4999 10C3.9999 12 -0.4001 16.8 3.9999 20C7.1999 24.4 11.9999 20 13.9999 18.5Z"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke1",
        "stroke": "props.strokeColor1",
        "d": "M9 15C10.198 13.1393 10.3291 10.3355 9.62239 8.25179L15.0001 3.99999M9 15C10.8537 13.8065 13.6446 13.6724 15.7232 14.3692C17.1494 12.58 18.5755 10.7905 20.0001 8.99999M9 15L21.219 2.79125M21.219 2.79125C23.0765 4.65866 21.2889 7.39096 20.0001 8.99999M21.219 2.79125C19.3551 0.917381 16.6123 2.71023 15.0001 3.99999M20.0001 8.99999L15.0001 3.99999M17.3508 12.3271L11.6632 6.63477",
        "strokeWidth": "props.strokeWidth"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke2",
        "stroke": "props.strokeColor2",
        "d": "M3.9999 20C7.1999 24.4 11.9999 20 13.9999 18.5C16.9999 16.25 18.4999 16 18.4999 16C18.4999 16 17.447 14.9471 15.7231 14.3692C13.6445 13.6724 10.8536 13.8065 8.9999 15M3.9999 20L8.9999 15M3.9999 20C-0.4001 16.8 3.9999 12 5.4999 10C7.7499 7 7.9999 5.5 7.9999 5.5C7.9999 5.5 9.04265 6.54275 9.62229 8.25179C10.329 10.3355 10.1979 13.1393 8.9999 15",
        "strokeLinecap": "square",
        "strokeWidth": "props.strokeWidth"
      }
    }]
  }]
};
var CornIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "corn",
    ref: ref,
    icon: element
  }));
});
CornIcon.displayName = "CornIcon";

exports.default = CornIcon;
//# sourceMappingURL=corn.js.map
