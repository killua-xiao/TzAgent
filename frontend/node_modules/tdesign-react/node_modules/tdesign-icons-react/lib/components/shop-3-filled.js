'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-cdd71ff3.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "props.filledColor",
      "d": "M2 21.9999V8.62515C2.93941 9.33104 4.10759 9.75 5.375 9.75C6.61448 9.75 7.75906 9.34917 8.6875 8.67138C9.61594 9.34917 10.7605 9.75 12 9.75C13.2395 9.75 14.3841 9.34917 15.3125 8.67138C16.2409 9.34917 17.3855 9.75 18.625 9.75C19.8924 9.75 21.0606 9.33104 22 8.62515V21.9999H16.5V13.9999H7.5V21.9999H2Z"
    }
  }, {
    "tag": "path",
    "attrs": {
      "fill": "props.filledColor",
      "d": "M5.375 7.75C3.8408 7.75 2.52921 6.79692 2 5.45053V2H22V5.45053C21.4708 6.79692 20.1592 7.75 18.625 7.75C17.9214 7.75 17.2646 7.54955 16.7087 7.20263C16.0976 6.82133 15.6083 6.2631 15.3125 5.59962C15.0167 6.2631 14.5274 6.82133 13.9163 7.20263C13.3604 7.54955 12.7036 7.75 12 7.75C11.2964 7.75 10.6396 7.54955 10.0837 7.20263C9.47259 6.82133 8.98331 6.2631 8.6875 5.59962C8.3917 6.2631 7.90241 6.82133 7.29134 7.20263C6.73537 7.54955 6.0786 7.75 5.375 7.75Z"
    }
  }, {
    "tag": "path",
    "attrs": {
      "fill": "props.filledColor",
      "d": "M9.5 21.9999V15.9999H14.5V21.9999H9.5Z"
    }
  }]
};
var Shop3FilledIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "shop-3-filled",
    ref: ref,
    icon: element
  }));
});
Shop3FilledIcon.displayName = "Shop3FilledIcon";

exports.default = Shop3FilledIcon;
//# sourceMappingURL=shop-3-filled.js.map
