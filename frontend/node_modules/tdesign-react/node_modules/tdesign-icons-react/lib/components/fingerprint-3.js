'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-cdd71ff3.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "g",
    "attrs": {
      "id": "fingerprint-3"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "id": "stroke1",
        "stroke": "props.strokeColor1",
        "d": "M3 13V11C3 6.02944 7.02944 2 12 2C13.3369 2 14.6057 2.29148 15.7463 2.81436M19.4965 21.0001C20.4623 18.8654 21 16.4955 21 14.0001V11.0001C21 8.77009 20.1889 6.7295 18.8457 5.15723M8.42713 8.26367C7.84562 9.02187 7.5 9.9705 7.5 10.9999V11.9999M16.5 11C16.5 8.51472 14.4853 6.5 12 6.5M3 17.4999H4C5.27316 17.4999 6.38755 16.8201 7 15.8037M14.3579 21C15.5348 19.262 16.2857 17.212 16.4608 15M12 11V14C12 17.012 10.3354 19.6353 7.87598 21",
        "strokeLinecap": "square",
        "strokeWidth": "props.strokeWidth"
      }
    }]
  }]
};
var Fingerprint3Icon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "fingerprint-3",
    ref: ref,
    icon: element
  }));
});
Fingerprint3Icon.displayName = "Fingerprint3Icon";

exports.default = Fingerprint3Icon;
//# sourceMappingURL=fingerprint-3.js.map
