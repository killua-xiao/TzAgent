'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-cdd71ff3.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "g",
    "attrs": {
      "id": "gesture-slide-left-and-right"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "id": "fill1",
        "fill": "props.fillColor1",
        "d": "M13.7555 11.52V7.56622C13.7555 6.59659 12.9694 5.81055 11.9998 5.81055C11.0302 5.81055 10.2441 6.59659 10.2441 7.56622V16.3511L6.88164 15.6034C6.5274 15.5246 6.1612 15.6718 5.95999 15.9738L5.41602 16.7903L9.27779 21.8137C9.61032 22.2462 10.125 22.4997 10.6706 22.4997H17.7561C18.5123 22.4997 19.1837 22.0157 19.4228 21.2982L21.2052 15.9477C21.4679 15.1591 21.1419 14.2943 20.4241 13.8752L16.7994 11.7596C16.5306 11.6027 16.225 11.52 15.9138 11.52H13.7555Z"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke1",
        "stroke": "props.strokeColor1",
        "d": "M10.2441 16.3511V7.56622C10.2441 6.59659 11.0302 5.81055 11.9998 5.81055C12.9694 5.81055 13.7555 6.59659 13.7555 7.56622V11.52H15.9138C16.0767 11.52 16.2381 11.5427 16.3935 11.5868C16.5349 11.6269 16.6713 11.6848 16.7994 11.7596L20.4241 13.8752C21.1419 14.2943 21.4679 15.1591 21.2052 15.9477L19.4228 21.2982C19.1837 22.0157 18.5123 22.4997 17.7561 22.4997H10.6706C10.125 22.4997 9.61032 22.2462 9.27779 21.8137L5.41602 16.7903L5.95999 15.9738C6.1612 15.6718 6.5274 15.5246 6.88164 15.6034L10.2441 16.3511Z",
        "strokeLinecap": "square",
        "strokeWidth": "props.strokeWidth"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke2",
        "stroke": "props.strokeColor2",
        "d": "M17.4985 6.19982H20.4837L20.4858 2.50015M6.49846 6.19982L3.51318 6.19982L3.5127 2.49995M4 5.05587C8.54724 0.983065 15.4538 0.983983 20 5.05862",
        "strokeLinecap": "square",
        "strokeWidth": "props.strokeWidth"
      }
    }]
  }]
};
var GestureSlideLeftAndRightIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "gesture-slide-left-and-right",
    ref: ref,
    icon: element
  }));
});
GestureSlideLeftAndRightIcon.displayName = "GestureSlideLeftAndRightIcon";

exports.default = GestureSlideLeftAndRightIcon;
//# sourceMappingURL=gesture-slide-left-and-right.js.map
