'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-cdd71ff3.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "g",
    "attrs": {
      "id": "map-aiming"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "id": "fill1",
        "fill": "props.fillColor1",
        "d": "M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "fill2",
        "fill": "props.fillColor2",
        "d": "M17.5559 11.9996C17.5559 15.0679 15.0686 17.5552 12.0004 17.5552C8.93213 17.5552 6.44482 15.0679 6.44482 11.9996C6.44482 8.9314 8.93213 6.44409 12.0004 6.44409C15.0686 6.44409 17.5559 8.9314 17.5559 11.9996Z"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke1",
        "stroke": "props.strokeColor1",
        "d": "M22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z",
        "strokeLinecap": "square",
        "strokeWidth": "props.strokeWidth"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke2",
        "stroke": "props.strokeColor2",
        "d": "M17.5557 11.9997C17.5557 15.0679 15.0684 17.5552 12.0002 17.5552M17.5557 11.9997C17.5557 8.93143 15.0684 6.44412 12.0002 6.44412M17.5557 11.9997H18.6668M12.0002 17.5552C8.93191 17.5552 6.44461 15.0679 6.44461 11.9997M12.0002 17.5552V18.6663M6.44461 11.9997C6.44461 8.93143 8.93191 6.44412 12.0002 6.44412M6.44461 11.9997H5.3335M12.0002 6.44412V5.33301M13.1111 11.9998C13.1111 12.6134 12.6137 13.1109 12 13.1109C11.3864 13.1109 10.8889 12.6134 10.8889 11.9998C10.8889 11.3861 11.3864 10.8887 12 10.8887C12.6137 10.8887 13.1111 11.3861 13.1111 11.9998Z",
        "strokeLinecap": "square",
        "strokeWidth": "props.strokeWidth"
      }
    }]
  }]
};
var MapAimingIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "map-aiming",
    ref: ref,
    icon: element
  }));
});
MapAimingIcon.displayName = "MapAimingIcon";

exports.default = MapAimingIcon;
//# sourceMappingURL=map-aiming.js.map
