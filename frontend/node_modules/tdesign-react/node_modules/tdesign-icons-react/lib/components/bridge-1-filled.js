'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-cdd71ff3.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "props.filledColor",
      "d": "M1 1.99902H7V5.53015C7.20819 5.68425 7.52403 5.893 7.94721 6.1046C8.82493 6.54345 10.1728 6.99902 12 6.99902C13.8272 6.99902 15.1751 6.54345 16.0528 6.1046C16.476 5.893 16.7918 5.68425 17 5.53015V1.99987H23V22.0003H17V16.999H7V21.9994H1V1.99902ZM7 14.999H11V8.95961C9.31362 8.82491 7.99605 8.36508 7.05279 7.89345C7.03506 7.88459 7.01746 7.87572 7 7.86685V14.999ZM13 8.95961V14.999H17V7.86685C16.9825 7.87572 16.9649 7.88459 16.9472 7.89345C16.004 8.36508 14.6864 8.82491 13 8.95961Z"
    }
  }]
};
var Bridge1FilledIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "bridge-1-filled",
    ref: ref,
    icon: element
  }));
});
Bridge1FilledIcon.displayName = "Bridge1FilledIcon";

exports.default = Bridge1FilledIcon;
//# sourceMappingURL=bridge-1-filled.js.map
