'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-cdd71ff3.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "g",
    "attrs": {
      "id": "gesture-applause"
    },
    "children": [{
      "tag": "g",
      "attrs": {
        "id": "fill1"
      },
      "children": [{
        "tag": "path",
        "attrs": {
          "fill": "props.fillColor1",
          "d": "M17.4894 13.9954L19.2042 15.7102L15.0887 19.8257L12.8544 17.5914C12.3087 17.0456 12.0021 16.3054 12.0021 15.5336L12.0021 3.95525C12.0021 3.05519 12.7224 2.32066 13.6222 2.30305C14.4138 2.28757 15.1052 2.83572 15.2706 3.60999L17.4894 13.9954Z"
        }
      }, {
        "tag": "path",
        "attrs": {
          "fill": "props.fillColor1",
          "d": "M6.50898 13.9954L4.79419 15.7102L8.9097 19.8257L11.144 17.5914C11.6897 17.0456 11.9963 16.3054 11.9963 15.5336L11.9963 3.95525C11.9963 3.05519 11.276 2.32066 10.3761 2.30305C9.58455 2.28757 8.8932 2.83572 8.72778 3.60999L6.50898 13.9954Z"
        }
      }]
    }, {
      "tag": "g",
      "attrs": {
        "id": "fill2"
      },
      "children": [{
        "tag": "path",
        "attrs": {
          "fill": "props.fillColor2",
          "d": "M19.2044 15.71L15.0889 19.8255L17.1466 21.8832L21.2621 17.7677L19.2044 15.71Z"
        }
      }, {
        "tag": "path",
        "attrs": {
          "fill": "props.fillColor2",
          "d": "M4.79408 15.71L8.90959 19.8255L6.85184 21.8832L2.73633 17.7677L4.79408 15.71Z"
        }
      }]
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke1",
        "stroke": "props.strokeColor1",
        "d": "M19.2041 15.7102L17.4893 13.9954L15.2705 3.60999C15.1051 2.83572 14.4137 2.28757 13.6221 2.30305C12.7223 2.32066 12.002 3.05519 12.002 3.95525L12.002 15.5336C12.002 16.3054 12.3086 17.0456 12.8543 17.5914L15.0886 19.8257M19.2041 15.7102L15.0886 19.8257M19.2041 15.7102L21.2619 17.7679L17.1463 21.8834L15.0886 19.8257M4.79408 15.7102L6.50888 13.9954L8.72767 3.60999C8.89309 2.83572 9.58444 2.28757 10.376 2.30305C11.2759 2.32066 11.9962 3.05519 11.9962 3.95525L11.9962 15.5336C11.9962 16.3054 11.6896 17.0456 11.1439 17.5914L8.90959 19.8257M4.79408 15.7102L8.90959 19.8257M4.79408 15.7102L2.73633 17.7679L6.85184 21.8834L8.90959 19.8257",
        "strokeLinecap": "square",
        "strokeWidth": "props.strokeWidth"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke2",
        "stroke": "props.strokeColor2",
        "d": "M4 3L3 2M4 7L3 8M20 3L21 2M20 7L21 8",
        "strokeLinecap": "square",
        "strokeWidth": "props.strokeWidth"
      }
    }]
  }]
};
var GestureApplauseIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "gesture-applause",
    ref: ref,
    icon: element
  }));
});
GestureApplauseIcon.displayName = "GestureApplauseIcon";

exports.default = GestureApplauseIcon;
//# sourceMappingURL=gesture-applause.js.map
