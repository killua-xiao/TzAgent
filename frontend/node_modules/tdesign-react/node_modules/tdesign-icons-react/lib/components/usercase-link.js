'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-cdd71ff3.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "g",
    "attrs": {
      "id": "usercase-link"
    },
    "children": [{
      "tag": "g",
      "attrs": {
        "id": "fill1"
      },
      "children": [{
        "tag": "path",
        "attrs": {
          "fill": "props.fillColor1",
          "d": "M8.12132 13.4142C6.94975 14.1953 5.05025 14.1953 3.87868 13.4142C2.70711 12.6332 2.70711 11.3668 3.87868 10.5858C5.05025 9.80474 6.94975 9.80474 8.12132 10.5858C9.29289 11.3668 9.29289 12.6332 8.12132 13.4142Z"
        }
      }, {
        "tag": "path",
        "attrs": {
          "fill": "props.fillColor1",
          "d": "M20.1213 13.4142C18.9497 14.1953 17.0503 14.1953 15.8787 13.4142C14.7071 12.6332 14.7071 11.3668 15.8787 10.5858C17.0503 9.80474 18.9497 9.80474 20.1213 10.5858C21.2929 11.3668 21.2929 12.6332 20.1213 13.4142Z"
        }
      }]
    }, {
      "tag": "g",
      "attrs": {
        "id": "stroke1"
      },
      "children": [{
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor1",
          "d": "M8.12132 13.4142C6.94975 14.1953 5.05025 14.1953 3.87868 13.4142C2.70711 12.6332 2.70711 11.3668 3.87868 10.5858C5.05025 9.80474 6.94975 9.80474 8.12132 10.5858C9.29289 11.3668 9.29289 12.6332 8.12132 13.4142Z",
          "strokeLinecap": "square",
          "strokeWidth": "props.strokeWidth"
        }
      }, {
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor1",
          "d": "M11.998 11.9961H12.002V12H11.998V11.9961Z",
          "strokeLinecap": "square",
          "strokeWidth": "props.strokeWidth"
        }
      }, {
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor1",
          "d": "M20.1213 13.4142C18.9497 14.1953 17.0503 14.1953 15.8787 13.4142C14.7071 12.6332 14.7071 11.3668 15.8787 10.5858C17.0503 9.80474 18.9497 9.80474 20.1213 10.5858C21.2929 11.3668 21.2929 12.6332 20.1213 13.4142Z",
          "strokeLinecap": "square",
          "strokeWidth": "props.strokeWidth"
        }
      }]
    }]
  }]
};
var UsercaseLinkIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "usercase-link",
    ref: ref,
    icon: element
  }));
});
UsercaseLinkIcon.displayName = "UsercaseLinkIcon";

exports.default = UsercaseLinkIcon;
//# sourceMappingURL=usercase-link.js.map
