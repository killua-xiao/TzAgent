'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-cdd71ff3.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "g",
    "attrs": {
      "id": "markup"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "id": "fill1",
        "fill": "props.fillColor1",
        "d": "M22 12C22 15.5058 20.1959 18.5903 17.4654 20.3757C17.3131 20.4753 17.1579 20.5708 17 20.6622C15.5291 21.513 13.8214 22 12 22C10.1786 22 8.47087 21.513 7 20.6622C6.84207 20.5708 6.68687 20.4753 6.53456 20.3757C3.8041 18.5903 2 15.5058 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z"
      }
    }, {
      "tag": "g",
      "attrs": {
        "id": "fill2"
      },
      "children": [{
        "tag": "path",
        "attrs": {
          "fill": "props.fillColor2",
          "d": "M7 20.6622C8.47087 21.513 10.1786 22 12 22C13.8214 22 15.5291 21.513 17 20.6622L15 13H9L7 20.6622Z"
        }
      }, {
        "tag": "path",
        "attrs": {
          "fill": "props.fillColor2",
          "d": "M10.9999 9V13H12.9999V9L11.9999 8L10.9999 9Z"
        }
      }]
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke2",
        "stroke": "props.strokeColor2",
        "d": "M7.0006 20.6622C8.47146 21.513 10.1792 22 12.0006 22C13.822 22 15.5297 21.513 17.0006 20.6622M7.0006 20.6622C6.84267 20.5708 6.68747 20.4753 6.53516 20.3757M7.0006 20.6622L9.0006 13H15.0006L17.0006 20.6622M17.466 20.3757C17.3137 20.4753 17.1585 20.5708 17.0006 20.6622M11.0005 13V9L12.0005 8L13.0005 9V13",
        "strokeWidth": "props.strokeWidth"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke1",
        "stroke": "props.strokeColor1",
        "d": "M22 12C22 15.5058 20.1959 18.5903 17.4654 20.3757C17.3131 20.4753 17.1579 20.5708 17 20.6622C15.5291 21.513 13.8214 22 12 22C10.1786 22 8.47087 21.513 7 20.6622C6.84207 20.5708 6.68687 20.4753 6.53456 20.3757C3.8041 18.5903 2 15.5058 2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12Z",
        "strokeWidth": "props.strokeWidth"
      }
    }]
  }]
};
var MarkupIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "markup",
    ref: ref,
    icon: element
  }));
});
MarkupIcon.displayName = "MarkupIcon";

exports.default = MarkupIcon;
//# sourceMappingURL=markup.js.map
