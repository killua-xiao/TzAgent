'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-cdd71ff3.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "props.filledColor",
      "d": "M11.5 2C8.46243 2 6 4.46243 6 7.5C6 10.5376 8.46243 13 11.5 13C14.5376 13 17 10.5376 17 7.5C17 4.46243 14.5376 2 11.5 2Z"
    }
  }, {
    "tag": "path",
    "attrs": {
      "fill": "props.filledColor",
      "d": "M23.6565 15.09L16.5854 22.1611L12.3428 17.9184L13.757 16.5042L16.5854 19.3326L22.2423 13.6758L23.6565 15.09Z"
    }
  }, {
    "tag": "path",
    "attrs": {
      "fill": "props.filledColor",
      "d": "M12.8762 14C12.0139 15.103 11.5 16.4915 11.5 18C11.5 19.5085 12.0139 20.897 12.8762 22H2V20C2 16.6863 4.68629 14 8 14H12.8762Z"
    }
  }]
};
var UserCheckedFilledIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "user-checked-filled",
    ref: ref,
    icon: element
  }));
});
UserCheckedFilledIcon.displayName = "UserCheckedFilledIcon";

exports.default = UserCheckedFilledIcon;
//# sourceMappingURL=user-checked-filled.js.map
