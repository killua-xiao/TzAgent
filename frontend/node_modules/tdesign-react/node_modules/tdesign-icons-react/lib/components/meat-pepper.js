'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var index = require('../_chunks/dep-cdd71ff3.js');
var React = require('react');
var icon = require('../icon.js');
require('../util/use-size-props.js');
require('../util/use-common-classname.js');
require('../util/use-config.js');
require('../util/config-context.js');
require('../util/check-url-and-load.js');

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { index._defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "g",
    "attrs": {
      "id": "meat-pepper"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "id": "fill1",
        "fill": "props.fillColor1",
        "d": "M2.36683 15.3995C2.36683 11.3997 7.37405 1.01773 12.6999 3.04998C15.4997 3.9999 15.9996 6.44428 15.9997 7.99966C17.5551 7.99981 19.8486 9.17351 20.9494 11.2994C23.5704 16.3615 12.3668 21.3999 8.36684 21.3999C6.15247 21.5302 5.14575 20.2899 4.95118 18.8154C3.47664 18.6208 2.23658 17.6138 2.36683 15.3995Z"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke1",
        "stroke": "props.strokeColor1",
        "d": "M15.9997 9.64955V7.99966M15.9997 7.99966C15.9996 6.44428 15.4997 3.9999 12.6999 3.04998C7.37405 1.01773 2.36683 11.3997 2.36683 15.3995C2.23658 17.6138 3.47664 18.6208 4.95118 18.8154C5.14575 20.2899 6.15247 21.5302 8.36684 21.3999C12.3668 21.3999 23.5704 16.3615 20.9494 11.2994C19.8486 9.17351 17.5551 7.99981 15.9997 7.99966ZM16.4498 7.30801C17.1606 6.40682 18.4252 5.39353 19.9997 4.99979",
        "strokeLinecap": "square",
        "strokeWidth": "props.strokeWidth"
      }
    }]
  }]
};
var MeatPepperIcon = /*#__PURE__*/React.forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(icon.IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "meat-pepper",
    ref: ref,
    icon: element
  }));
});
MeatPepperIcon.displayName = "MeatPepperIcon";

exports.default = MeatPepperIcon;
//# sourceMappingURL=meat-pepper.js.map
