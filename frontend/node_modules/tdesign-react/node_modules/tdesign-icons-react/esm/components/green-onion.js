import { _ as _defineProperty } from '../_chunks/dep-1f5d46b5.js';
import { forwardRef, createElement } from 'react';
import { IconBase } from '../icon.js';
import '../util/use-size-props.js';
import '../util/use-common-classname.js';
import '../util/use-config.js';
import '../util/config-context.js';
import '../util/check-url-and-load.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "g",
    "attrs": {
      "id": "green-onion"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "id": "stroke1",
        "stroke": "props.strokeColor1",
        "d": "M8.62117 2.65128C10.701 5.70242 10.8799 8.42995 9.21646 11.7266C8.00997 14.1177 5.02716 15.118 3.49226 16.619C2.02326 18.0556 1.37125 19.7965 2.78754 21.2128C4.20383 22.6291 5.94368 21.9782 7.38135 20.5081C8.88234 18.9732 9.88349 15.9912 12.2743 14.7845C15.5706 13.1206 18.2981 13.2994 21.3491 15.3792M10.3889 13.6114L20.2884 3.71194M9.32828 12.5508C13.7243 8.18783 13.7465 8.1326 13.5737 1.94141M11.4496 14.6721C15.8125 10.276 15.8678 10.2539 22.059 10.4267",
        "strokeLinecap": "square",
        "strokeWidth": "props.strokeWidth"
      }
    }]
  }]
};
var GreenOnionIcon = /*#__PURE__*/forwardRef(function (props, ref) {
  return /*#__PURE__*/createElement(IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "green-onion",
    ref: ref,
    icon: element
  }));
});
GreenOnionIcon.displayName = "GreenOnionIcon";

export default GreenOnionIcon;
//# sourceMappingURL=green-onion.js.map
