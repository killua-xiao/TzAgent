import { _ as _defineProperty } from '../_chunks/dep-1f5d46b5.js';
import { forwardRef, createElement } from 'react';
import { IconBase } from '../icon.js';
import '../util/use-size-props.js';
import '../util/use-common-classname.js';
import '../util/use-config.js';
import '../util/config-context.js';
import '../util/check-url-and-load.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "props.filledColor",
      "d": "M20.6645 5.84747L12.0003 0.845215L3.33759 5.84666L11.9995 10.8458L20.6645 5.84747ZM13.001 3.93V7.93H11.001V3.93H13.001Z"
    }
  }, {
    "tag": "path",
    "attrs": {
      "fill": "props.filledColor",
      "d": "M21.6606 7.58178L12.9993 12.5779V22.5779L21.6606 17.5773V7.58178ZM16.0256 13.169L19.4897 15.169L18.4897 16.901L15.0256 14.901L16.0256 13.169Z"
    }
  }, {
    "tag": "path",
    "attrs": {
      "fill": "props.filledColor",
      "d": "M10.9993 22.5767V12.5778L2.34009 7.58015V17.5773L10.9993 22.5767ZM8.97618 14.901L5.51207 16.901L4.51207 15.169L7.97618 13.169L8.97618 14.901Z"
    }
  }]
};
var Chart3DFilledIcon = /*#__PURE__*/forwardRef(function (props, ref) {
  return /*#__PURE__*/createElement(IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "chart-3d-filled",
    ref: ref,
    icon: element
  }));
});
Chart3DFilledIcon.displayName = "Chart3DFilledIcon";

export default Chart3DFilledIcon;
//# sourceMappingURL=chart-3d-filled.js.map
