import { _ as _defineProperty } from '../_chunks/dep-1f5d46b5.js';
import { forwardRef, createElement } from 'react';
import { IconBase } from '../icon.js';
import '../util/use-size-props.js';
import '../util/use-common-classname.js';
import '../util/use-config.js';
import '../util/config-context.js';
import '../util/check-url-and-load.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "g",
    "attrs": {
      "id": "tools-circle"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "id": "fill1",
        "fill": "props.fillColor1",
        "d": "M2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12Z"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "fill2",
        "fill": "props.fillColor2",
        "d": "M7.35963 13.0159C6.16579 11.8221 5.88434 10.0614 6.5153 8.60024L6.77999 8.65134L9.11344 10.9848L10.9863 9.11194L8.65284 6.77849L8.60161 6.51439C10.0626 5.8839 11.8229 6.16546 13.0165 7.35908C14.2035 8.54609 14.4885 10.2935 13.8715 11.7497L17.8115 15.6897L15.6902 17.811L11.7502 13.871C10.2941 14.488 8.54664 14.2029 7.35963 13.0159Z"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke1",
        "stroke": "props.strokeColor1",
        "d": "M2 12C2 6.47715 6.47715 2 12 2C17.5228 2 22 6.47715 22 12C22 17.5228 17.5228 22 12 22C6.47715 22 2 17.5228 2 12Z",
        "strokeLinecap": "square",
        "strokeWidth": "props.strokeWidth"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke2",
        "stroke": "props.strokeColor2",
        "d": "M7.35963 13.0159C6.16579 11.8221 5.88434 10.0614 6.5153 8.60024L6.77999 8.65134L9.11344 10.9848L10.9863 9.11194L8.65284 6.77849L8.60161 6.51439C10.0626 5.8839 11.8229 6.16546 13.0165 7.35908C14.2035 8.54609 14.4885 10.2935 13.8715 11.7497L17.8115 15.6897L15.6902 17.811L11.7502 13.871C10.2941 14.488 8.54664 14.2029 7.35963 13.0159Z",
        "strokeLinecap": "square",
        "strokeWidth": "props.strokeWidth"
      }
    }]
  }]
};
var ToolsCircleIcon = /*#__PURE__*/forwardRef(function (props, ref) {
  return /*#__PURE__*/createElement(IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "tools-circle",
    ref: ref,
    icon: element
  }));
});
ToolsCircleIcon.displayName = "ToolsCircleIcon";

export default ToolsCircleIcon;
//# sourceMappingURL=tools-circle.js.map
