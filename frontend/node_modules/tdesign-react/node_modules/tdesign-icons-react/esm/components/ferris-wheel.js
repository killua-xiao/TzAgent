import { _ as _defineProperty } from '../_chunks/dep-1f5d46b5.js';
import { forwardRef, createElement } from 'react';
import { IconBase } from '../icon.js';
import '../util/use-size-props.js';
import '../util/use-common-classname.js';
import '../util/use-config.js';
import '../util/config-context.js';
import '../util/check-url-and-load.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "g",
    "attrs": {
      "id": "ferris-wheel"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "id": "stroke1",
        "stroke": "props.strokeColor1",
        "d": "M8.99959 22H14.9996M8.99959 22L8.99959 17.3263M8.99959 22H5.99902M14.9996 22V17.3261M14.9996 22H17.999M8.99959 17.3263L11.999 11L14.9996 17.3261M8.99959 17.3263C9.90879 17.7582 10.9259 17.9998 11.9994 17.9998C13.0731 17.9998 14.0903 17.7581 14.9996 17.3261M20.9994 10.9998H18.9998M18.9998 10.9998C18.9998 7.13383 15.8658 3.99982 11.9998 3.99982M18.9998 10.9998C18.9998 14.8658 15.8658 17.9998 11.9998 17.9998C8.1338 17.9998 4.99979 14.8658 4.99979 10.9998M4.99979 10.9998L3 11M4.99979 10.9998C4.99979 7.13383 8.1338 3.99982 11.9998 3.99982M11.9998 3.99982L11.9994 2M19.7922 6.49889L18.0601 7.49889M5.93576 14.4989L4.2037 15.4989M19.7918 15.4988L18.0598 14.4988M5.93541 7.49879L4.20337 6.49879M16.4987 3.20441L15.4987 4.93646M8.49869 4.93683L7.49869 3.20478",
        "strokeLinecap": "square",
        "strokeWidth": "props.strokeWidth"
      }
    }]
  }]
};
var FerrisWheelIcon = /*#__PURE__*/forwardRef(function (props, ref) {
  return /*#__PURE__*/createElement(IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "ferris-wheel",
    ref: ref,
    icon: element
  }));
});
FerrisWheelIcon.displayName = "FerrisWheelIcon";

export default FerrisWheelIcon;
//# sourceMappingURL=ferris-wheel.js.map
