import { _ as _defineProperty } from '../_chunks/dep-1f5d46b5.js';
import { forwardRef, createElement } from 'react';
import { IconBase } from '../icon.js';
import '../util/use-size-props.js';
import '../util/use-common-classname.js';
import '../util/use-config.js';
import '../util/config-context.js';
import '../util/check-url-and-load.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "g",
    "attrs": {
      "id": "system-sum"
    },
    "children": [{
      "tag": "g",
      "attrs": {
        "id": "stroke1"
      },
      "children": [{
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor1",
          "d": "M15.2438 15.404C10.408 20.2398 4.96332 22.6354 3.08273 20.7549C1.20214 18.8743 3.59781 13.4296 8.43361 8.59377C13.2694 3.75797 18.7141 1.3623 20.5947 3.24289C22.4753 5.12348 20.0796 10.5682 15.2438 15.404Z",
          "strokeWidth": "props.strokeWidth"
        }
      }, {
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor1",
          "d": "M8.4341 15.404C13.2699 20.2398 18.7146 22.6354 20.5952 20.7549C22.4758 18.8743 20.0801 13.4296 15.2443 8.59377C10.4085 3.75797 4.96381 1.3623 3.08322 3.24289C1.20263 5.12348 3.5983 10.5682 8.4341 15.404Z",
          "strokeWidth": "props.strokeWidth"
        }
      }]
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke2",
        "stroke": "props.strokeColor2",
        "d": "M12 12H12.0039V12.0039H12V12Z",
        "strokeWidth": "props.strokeWidth"
      }
    }]
  }]
};
var SystemSumIcon = /*#__PURE__*/forwardRef(function (props, ref) {
  return /*#__PURE__*/createElement(IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "system-sum",
    ref: ref,
    icon: element
  }));
});
SystemSumIcon.displayName = "SystemSumIcon";

export default SystemSumIcon;
//# sourceMappingURL=system-sum.js.map
