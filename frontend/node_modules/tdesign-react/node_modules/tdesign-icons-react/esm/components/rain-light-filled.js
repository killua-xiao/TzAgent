import { _ as _defineProperty } from '../_chunks/dep-1f5d46b5.js';
import { forwardRef, createElement } from 'react';
import { IconBase } from '../icon.js';
import '../util/use-size-props.js';
import '../util/use-common-classname.js';
import '../util/use-config.js';
import '../util/config-context.js';
import '../util/check-url-and-load.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "props.filledColor",
      "d": "M11.1 3C11.0696 3 11.0392 3.00021 11.0088 3.00062C7.55127 3.04754 4.7 5.77081 4.7 9.2C4.7 9.28787 4.70189 9.37536 4.70565 9.46243C3.12452 10.158 2 11.7035 2 13.5333C2 15.309 3.06313 16.8214 4.56833 17.5417L4.77305 17.6397H18.5012L18.6872 17.5614C20.6183 16.7492 22 14.8773 22 12.6667C22 10.9439 21.1579 9.42182 19.8726 8.45334C19.6692 8.30005 19.4545 8.16039 19.2299 8.03569C18.6217 7.69802 17.9415 7.47026 17.2193 7.37863C16.5652 5.31155 14.8331 3.7225 12.6858 3.192C12.1775 3.06644 11.646 3 11.1 3Z"
    }
  }, {
    "tag": "path",
    "attrs": {
      "fill": "props.filledColor",
      "d": "M6.99805 18.998H9.00195V21.002H6.99805V18.998Z"
    }
  }, {
    "tag": "path",
    "attrs": {
      "fill": "props.filledColor",
      "d": "M14.998 18.998H17.002V21.002H14.998V18.998Z"
    }
  }, {
    "tag": "path",
    "attrs": {
      "fill": "props.filledColor",
      "d": "M13.002 20.998H10.998V23.002H13.002V20.998Z"
    }
  }]
};
var RainLightFilledIcon = /*#__PURE__*/forwardRef(function (props, ref) {
  return /*#__PURE__*/createElement(IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "rain-light-filled",
    ref: ref,
    icon: element
  }));
});
RainLightFilledIcon.displayName = "RainLightFilledIcon";

export default RainLightFilledIcon;
//# sourceMappingURL=rain-light-filled.js.map
