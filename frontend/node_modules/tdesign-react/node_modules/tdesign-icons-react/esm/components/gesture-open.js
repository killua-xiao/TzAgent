import { _ as _defineProperty } from '../_chunks/dep-1f5d46b5.js';
import { forwardRef, createElement } from 'react';
import { IconBase } from '../icon.js';
import '../util/use-size-props.js';
import '../util/use-common-classname.js';
import '../util/use-config.js';
import '../util/config-context.js';
import '../util/check-url-and-load.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "g",
    "attrs": {
      "id": "gesture-open"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "id": "fill1",
        "fill": "props.fillColor1",
        "d": "M16.2564 4.27938C16.8165 3.71938 17.7217 3.71056 18.2925 4.2595C18.7307 4.68092 18.8544 5.32192 18.627 5.86688C18.5599 6.02778 18.4691 6.17816 18.3977 6.33724L16.6407 9.9264L19.0815 15.1886L13.2508 16.9735L12.0667 9.91468C11.946 9.43398 12.054 9.43398 11.9333 9.91468L10.7492 16.9735L4.91846 15.1886L7.35928 9.9264L5.60229 6.33724C5.53092 6.17816 5.44014 6.02778 5.373 5.86688C5.1456 5.32192 5.26926 4.68092 5.70747 4.2595C6.27833 3.71056 7.18354 3.71938 7.74355 4.27938L11.2604 7.7971C11.6656 8.20229 11.921 8.72928 11.9909 9.29202C12.0106 9.45095 11.9894 9.45095 12.0091 9.29202C12.079 8.72928 12.3344 8.20229 12.7396 7.7971L16.2564 4.27938Z"
      }
    }, {
      "tag": "g",
      "attrs": {
        "id": "fill2"
      },
      "children": [{
        "tag": "path",
        "attrs": {
          "fill": "props.fillColor2",
          "d": "M21 20.1458L13.783 20.1456L13.2508 16.9734L19.0815 15.1885L21 15.1887V20.1458Z"
        }
      }, {
        "tag": "path",
        "attrs": {
          "fill": "props.fillColor2",
          "d": "M3 20.1458L10.217 20.1456L10.7492 16.9734L4.91846 15.1885L3 15.1887L3 20.1458Z"
        }
      }]
    }, {
      "tag": "g",
      "attrs": {
        "id": "stroke1"
      },
      "children": [{
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor1",
          "d": "M5.60229 6.33723L7.35928 9.92643L4.91846 15.1886L10.7492 16.9735L11.9334 9.9147C11.9845 9.71084 12.0168 9.50064 11.9909 9.29206C11.921 8.7293 11.6656 8.20229 11.2604 7.79709L7.74357 4.2794C7.18355 3.71939 6.27836 3.71054 5.70749 4.25949C5.26926 4.6809 5.14561 5.3219 5.37301 5.86686C5.44016 6.02778 5.53091 6.17815 5.60229 6.33723Z",
          "strokeLinecap": "square",
          "strokeWidth": "props.strokeWidth"
        }
      }, {
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor1",
          "d": "M18.3977 6.33723L16.6407 9.92643L19.0815 15.1886L13.2508 16.9735L12.0666 9.9147C12.0155 9.71084 11.9832 9.50064 12.0091 9.29206C12.079 8.7293 12.3344 8.20229 12.7396 7.79709L16.2564 4.2794C16.8164 3.71939 17.7216 3.71054 18.2925 4.25949C18.7307 4.6809 18.8544 5.3219 18.627 5.86686C18.5598 6.02778 18.4691 6.17815 18.3977 6.33723Z",
          "strokeLinecap": "square",
          "strokeWidth": "props.strokeWidth"
        }
      }, {
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor1",
          "d": "M21 20.1458L13.783 20.1456L13.2508 16.9734L19.0815 15.1885L21 15.1887V20.1458Z",
          "strokeLinecap": "square",
          "strokeWidth": "props.strokeWidth"
        }
      }, {
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor1",
          "d": "M3 20.1458L10.217 20.1456L10.7492 16.9734L4.91846 15.1885L3 15.1887L3 20.1458Z",
          "strokeLinecap": "square",
          "strokeWidth": "props.strokeWidth"
        }
      }]
    }]
  }]
};
var GestureOpenIcon = /*#__PURE__*/forwardRef(function (props, ref) {
  return /*#__PURE__*/createElement(IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "gesture-open",
    ref: ref,
    icon: element
  }));
});
GestureOpenIcon.displayName = "GestureOpenIcon";

export default GestureOpenIcon;
//# sourceMappingURL=gesture-open.js.map
