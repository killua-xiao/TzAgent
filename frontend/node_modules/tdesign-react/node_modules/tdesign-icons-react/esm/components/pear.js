import { _ as _defineProperty } from '../_chunks/dep-1f5d46b5.js';
import { forwardRef, createElement } from 'react';
import { IconBase } from '../icon.js';
import '../util/use-size-props.js';
import '../util/use-common-classname.js';
import '../util/use-config.js';
import '../util/config-context.js';
import '../util/check-url-and-load.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "g",
    "attrs": {
      "id": "pear"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "id": "fill1",
        "fill": "props.fillColor1",
        "d": "M18.5869 12.4871C21.0618 10.0123 20.7082 7.53738 18.5869 5.41606C16.4656 3.29474 13.9907 2.94118 11.5158 5.41606C7.27319 9.6587 6.56608 6.12316 3.3841 9.30514C1.17613 11.5131 1.26278 16.3762 6.21253 17.7904C7.62674 22.7402 12.4898 22.8268 14.6978 20.6189C17.8798 17.4369 14.3443 16.7298 18.5869 12.4871Z"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke1",
        "stroke": "props.strokeColor1",
        "d": "M19.9817 2.98145C19.2483 4.44828 18.3369 5.66342 16.8701 7.13026M18.5869 5.41611C20.7082 7.53744 21.0618 10.0123 18.5869 12.4872C14.3443 16.7298 17.8798 17.4369 14.6978 20.6189C12.4898 22.8269 7.62674 22.7402 6.21253 17.7905C1.26278 16.3763 1.17613 11.5132 3.3841 9.3052C6.56608 6.12322 7.27319 9.65876 11.5158 5.41611C13.9907 2.94124 16.4656 3.29479 18.5869 5.41611Z",
        "strokeLinecap": "square",
        "strokeWidth": "props.strokeWidth"
      }
    }]
  }]
};
var PearIcon = /*#__PURE__*/forwardRef(function (props, ref) {
  return /*#__PURE__*/createElement(IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "pear",
    ref: ref,
    icon: element
  }));
});
PearIcon.displayName = "PearIcon";

export default PearIcon;
//# sourceMappingURL=pear.js.map
