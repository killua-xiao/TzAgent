import { _ as _defineProperty } from '../_chunks/dep-1f5d46b5.js';
import { forwardRef, createElement } from 'react';
import { IconBase } from '../icon.js';
import '../util/use-size-props.js';
import '../util/use-common-classname.js';
import '../util/use-config.js';
import '../util/config-context.js';
import '../util/check-url-and-load.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "g",
    "attrs": {
      "id": "sausage"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "id": "fill1",
        "fill": "props.fillColor1",
        "d": "M14.4372 4.99927C15.6966 3.73983 17.7386 3.73983 18.998 4.99927C20.2575 6.25871 20.2575 8.30067 18.998 9.56011L9.55815 19C8.29871 20.2594 6.25676 20.2594 4.99732 19C3.73787 17.7405 3.73787 15.6986 4.99731 14.4391L14.4372 4.99927Z"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke1",
        "stroke": "props.strokeColor1",
        "d": "M19 3.00293V4.45M21 4.99941H19.55M5 20.9965L5 19.5494M3 19H4.45M18.9983 4.99941C20.2578 6.25885 20.2578 8.30081 18.9983 9.56025L9.55845 19.0001C8.29901 20.2596 6.25705 20.2596 4.99761 19.0001C3.73817 17.7407 3.73817 15.6987 4.99761 14.4393L14.4375 4.99941C15.6969 3.73997 17.7389 3.73997 18.9983 4.99941Z",
        "strokeLinecap": "square",
        "strokeWidth": "props.strokeWidth"
      }
    }]
  }]
};
var SausageIcon = /*#__PURE__*/forwardRef(function (props, ref) {
  return /*#__PURE__*/createElement(IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "sausage",
    ref: ref,
    icon: element
  }));
});
SausageIcon.displayName = "SausageIcon";

export default SausageIcon;
//# sourceMappingURL=sausage.js.map
