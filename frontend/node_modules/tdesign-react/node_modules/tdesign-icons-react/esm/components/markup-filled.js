import { _ as _defineProperty } from '../_chunks/dep-1f5d46b5.js';
import { forwardRef, createElement } from 'react';
import { IconBase } from '../icon.js';
import '../util/use-size-props.js';
import '../util/use-common-classname.js';
import '../util/use-config.js';
import '../util/config-context.js';
import '../util/check-url-and-load.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "props.filledColor",
      "d": "M12 1C5.92487 1 1 5.92487 1 12C1 18.0751 5.92487 23 12 23C18.0751 23 23 18.0751 23 12C23 5.92487 18.0751 1 12 1ZM17.61 19.0383C17.3878 19.2156 17.1571 19.3826 16.9185 19.5386C16.7814 19.6283 16.6417 19.7143 16.4996 19.7965C16.2826 19.922 16.06 20.0387 15.8321 20.1461L14.2278 13.9999H9.77277L8.16849 20.1461C7.94059 20.0387 7.71794 19.922 7.50101 19.7965C7.35889 19.7143 7.21921 19.6283 7.08211 19.5386C6.84349 19.3826 6.61276 19.2156 6.39062 19.0383L8.22781 11.9999H10.0003V8.58569L12.0003 6.58569L14.0003 8.58569V11.9999H15.7728L17.61 19.0383Z"
    }
  }]
};
var MarkupFilledIcon = /*#__PURE__*/forwardRef(function (props, ref) {
  return /*#__PURE__*/createElement(IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "markup-filled",
    ref: ref,
    icon: element
  }));
});
MarkupFilledIcon.displayName = "MarkupFilledIcon";

export default MarkupFilledIcon;
//# sourceMappingURL=markup-filled.js.map
