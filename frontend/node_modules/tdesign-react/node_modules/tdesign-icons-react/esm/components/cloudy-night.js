import { _ as _defineProperty } from '../_chunks/dep-1f5d46b5.js';
import { forwardRef, createElement } from 'react';
import { IconBase } from '../icon.js';
import '../util/use-size-props.js';
import '../util/use-common-classname.js';
import '../util/use-config.js';
import '../util/config-context.js';
import '../util/check-url-and-load.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "g",
    "attrs": {
      "id": "cloudy-night"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "id": "fill1",
        "fill": "props.fillColor1",
        "d": "M2 16.5481C2 18.4647 3.61352 20.0185 5.60391 20.0185H15.5147C18.0026 20.0185 20.0195 18.0763 20.0195 15.6805C20.0195 14.2921 19.3423 13.0561 18.2885 12.2621C17.5238 11.6859 16.5609 11.3424 15.5147 11.3424C15.4897 11.3424 15.4648 11.3426 15.44 11.343C15.0858 9.3083 13.5058 7.67373 11.4562 7.16739C11.0255 7.06098 10.574 7.00439 10.1088 7.00439C7.12322 7.00439 4.70293 9.33504 4.70293 12.21C4.70293 12.5365 4.73413 12.8559 4.79382 13.1657C3.19352 13.5196 2 14.8996 2 16.5481Z"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "fill2",
        "fill": "props.fillColor2",
        "d": "M15.5148 11.3425C15.4899 11.3425 15.465 11.3427 15.4402 11.3431C15.0859 9.30834 13.506 7.67377 11.4564 7.16742C11.0256 7.06101 10.5742 7.00443 10.109 7.00443C10.083 7.00443 10.0571 7.00461 10.0312 7.00496C10.2696 4.35636 12.3836 2.24846 15.0349 2.01953C15.0213 2.17769 15.0143 2.33775 15.0143 2.49945C15.0143 5.54031 17.4794 8.00542 20.5203 8.00542C20.682 8.00542 20.842 7.99845 21.0002 7.98479C20.8424 9.81157 19.7927 11.3833 18.2887 12.2621C18.122 12.1366 17.946 12.022 17.7617 11.9197C17.1004 11.5525 16.3331 11.3425 15.5148 11.3425Z"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke2",
        "stroke": "props.strokeColor2",
        "d": "M10.0996 6.50187C10.5429 4.09345 12.5534 2.23376 15.0345 2.01953C15.0209 2.17769 15.0139 2.33775 15.0139 2.49945C15.0139 5.54031 17.479 8.00542 20.5199 8.00542C20.6816 8.00542 20.8416 7.99845 20.9998 7.98479C20.8605 9.59732 20.0263 11.0111 18.7981 11.925",
        "strokeLinecap": "square",
        "strokeWidth": "props.strokeWidth"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke1",
        "stroke": "props.strokeColor1",
        "d": "M2 16.5481C2 18.4647 3.61352 20.0185 5.60391 20.0185H15.5147C18.0026 20.0185 20.0195 18.0763 20.0195 15.6805C20.0195 14.2921 19.3423 13.0561 18.2885 12.2621C17.5238 11.6859 16.5609 11.3424 15.5147 11.3424C15.4897 11.3424 15.4648 11.3426 15.44 11.343C15.0858 9.3083 13.5058 7.67373 11.4562 7.16739C11.0255 7.06098 10.574 7.00439 10.1088 7.00439C7.12322 7.00439 4.70293 9.33504 4.70293 12.21C4.70293 12.5365 4.73413 12.8559 4.79382 13.1657C3.19352 13.5196 2 14.8996 2 16.5481Z",
        "strokeLinecap": "square",
        "strokeWidth": "props.strokeWidth"
      }
    }]
  }]
};
var CloudyNightIcon = /*#__PURE__*/forwardRef(function (props, ref) {
  return /*#__PURE__*/createElement(IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "cloudy-night",
    ref: ref,
    icon: element
  }));
});
CloudyNightIcon.displayName = "CloudyNightIcon";

export default CloudyNightIcon;
//# sourceMappingURL=cloudy-night.js.map
