import { _ as _defineProperty } from '../_chunks/dep-1f5d46b5.js';
import { forwardRef, createElement } from 'react';
import { IconBase } from '../icon.js';
import '../util/use-size-props.js';
import '../util/use-common-classname.js';
import '../util/use-config.js';
import '../util/config-context.js';
import '../util/check-url-and-load.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "path",
    "attrs": {
      "fill": "props.filledColor",
      "d": "M17.9995 7V10.5H20.4995V22H3.49951V10.5H5.99951V7C5.99951 3.68629 8.6858 1 11.9995 1C15.3132 1 17.9995 3.68629 17.9995 7ZM7.99951 7V10.5H15.9995V7C15.9995 4.79086 14.2087 3 11.9995 3C9.79037 3 7.99951 4.79086 7.99951 7ZM11.9995 14.25C10.8949 14.25 9.99951 15.1454 9.99951 16.25C9.99951 17.3546 10.8949 18.25 11.9995 18.25C13.1041 18.25 13.9995 17.3546 13.9995 16.25C13.9995 15.1454 13.1041 14.25 11.9995 14.25Z"
    }
  }]
};
var HttpsFilledIcon = /*#__PURE__*/forwardRef(function (props, ref) {
  return /*#__PURE__*/createElement(IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "https-filled",
    ref: ref,
    icon: element
  }));
});
HttpsFilledIcon.displayName = "HttpsFilledIcon";

export default HttpsFilledIcon;
//# sourceMappingURL=https-filled.js.map
