import { _ as _defineProperty } from '../_chunks/dep-1f5d46b5.js';
import { forwardRef, createElement } from 'react';
import { IconBase } from '../icon.js';
import '../util/use-size-props.js';
import '../util/use-common-classname.js';
import '../util/use-config.js';
import '../util/config-context.js';
import '../util/check-url-and-load.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "g",
    "attrs": {
      "id": "no-result-filled"
    },
    "children": [{
      "tag": "g",
      "attrs": {
        "id": "Union"
      },
      "children": [{
        "tag": "path",
        "attrs": {
          "fill": "props.filledColor",
          "d": "M11 0H13V4H11V0Z"
        }
      }, {
        "tag": "path",
        "attrs": {
          "fill": "props.filledColor",
          "d": "M5.00098 0.585786L3.58676 2L6.50098 4.91421L7.91519 3.5L5.00098 0.585786Z"
        }
      }, {
        "tag": "path",
        "attrs": {
          "fill": "props.filledColor",
          "d": "M1 13.7344L5.41968 6H18.5803L23 13.7344V22H1V13.7344ZM6.58032 8L3.72318 13H8.90123L9.09445 13.7507C9.42754 15.0449 10.6035 16 12 16C13.3965 16 14.5725 15.0449 14.9055 13.7507L15.0988 13H20.2768L17.4197 8H6.58032Z"
        }
      }, {
        "tag": "path",
        "attrs": {
          "fill": "props.filledColor",
          "d": "M18.999 0.585786L16.0848 3.5L17.499 4.91421L20.4132 2L18.999 0.585786Z"
        }
      }]
    }]
  }]
};
var NoResultFilledIcon = /*#__PURE__*/forwardRef(function (props, ref) {
  return /*#__PURE__*/createElement(IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "no-result-filled",
    ref: ref,
    icon: element
  }));
});
NoResultFilledIcon.displayName = "NoResultFilledIcon";

export default NoResultFilledIcon;
//# sourceMappingURL=no-result-filled.js.map
