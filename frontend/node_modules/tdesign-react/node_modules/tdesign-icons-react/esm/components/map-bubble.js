import { _ as _defineProperty } from '../_chunks/dep-1f5d46b5.js';
import { forwardRef, createElement } from 'react';
import { IconBase } from '../icon.js';
import '../util/use-size-props.js';
import '../util/use-common-classname.js';
import '../util/use-config.js';
import '../util/config-context.js';
import '../util/check-url-and-load.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "g",
    "attrs": {
      "id": "map-bubble"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "id": "fill1",
        "fill": "props.fillColor1",
        "d": "M3 6.5V20L9 17.5L15 21L21 17.5V4L15 6.5L9 3L3 6.5Z"
      }
    }, {
      "tag": "g",
      "attrs": {
        "id": "fill2"
      },
      "children": [{
        "tag": "path",
        "attrs": {
          "fill": "props.fillColor2",
          "d": "M14.75 10.25C14.75 10.6642 14.4142 11 14 11C13.5858 11 13.25 10.6642 13.25 10.25C13.25 9.83579 13.5858 9.5 14 9.5C14.4142 9.5 14.75 9.83579 14.75 10.25Z"
        }
      }, {
        "tag": "path",
        "attrs": {
          "fill": "props.fillColor2",
          "d": "M17.25 14.75C17.25 15.1642 16.9142 15.5 16.5 15.5C16.0858 15.5 15.75 15.1642 15.75 14.75C15.75 14.3358 16.0858 14 16.5 14C16.9142 14 17.25 14.3358 17.25 14.75Z"
        }
      }, {
        "tag": "path",
        "attrs": {
          "fill": "props.fillColor2",
          "d": "M8.25 9.25C8.25 9.66421 7.91421 10 7.5 10C7.08579 10 6.75 9.66421 6.75 9.25C6.75 8.83579 7.08579 8.5 7.5 8.5C7.91421 8.5 8.25 8.83579 8.25 9.25Z"
        }
      }, {
        "tag": "path",
        "attrs": {
          "fill": "props.fillColor2",
          "d": "M10.75 13.75C10.75 14.1642 10.4142 14.5 10 14.5C9.58579 14.5 9.25 14.1642 9.25 13.75C9.25 13.3358 9.58579 13 10 13C10.4142 13 10.75 13.3358 10.75 13.75Z"
        }
      }]
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke1",
        "stroke": "props.strokeColor1",
        "d": "M3 6.5V20L9 17.5L15 21L21 17.5V4L15 6.5L9 3L3 6.5Z",
        "strokeWidth": "props.strokeWidth"
      }
    }, {
      "tag": "g",
      "attrs": {
        "id": "stroke2"
      },
      "children": [{
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor2",
          "d": "M14.75 10.25C14.75 10.6642 14.4142 11 14 11C13.5858 11 13.25 10.6642 13.25 10.25C13.25 9.83579 13.5858 9.5 14 9.5C14.4142 9.5 14.75 9.83579 14.75 10.25Z",
          "strokeWidth": "props.strokeWidth"
        }
      }, {
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor2",
          "d": "M17.25 14.75C17.25 15.1642 16.9142 15.5 16.5 15.5C16.0858 15.5 15.75 15.1642 15.75 14.75C15.75 14.3358 16.0858 14 16.5 14C16.9142 14 17.25 14.3358 17.25 14.75Z",
          "strokeWidth": "props.strokeWidth"
        }
      }, {
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor2",
          "d": "M8.25 9.25C8.25 9.66421 7.91421 10 7.5 10C7.08579 10 6.75 9.66421 6.75 9.25C6.75 8.83579 7.08579 8.5 7.5 8.5C7.91421 8.5 8.25 8.83579 8.25 9.25Z",
          "strokeWidth": "props.strokeWidth"
        }
      }, {
        "tag": "path",
        "attrs": {
          "stroke": "props.strokeColor2",
          "d": "M10.75 13.75C10.75 14.1642 10.4142 14.5 10 14.5C9.58579 14.5 9.25 14.1642 9.25 13.75C9.25 13.3358 9.58579 13 10 13C10.4142 13 10.75 13.3358 10.75 13.75Z",
          "strokeWidth": "props.strokeWidth"
        }
      }]
    }]
  }]
};
var MapBubbleIcon = /*#__PURE__*/forwardRef(function (props, ref) {
  return /*#__PURE__*/createElement(IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "map-bubble",
    ref: ref,
    icon: element
  }));
});
MapBubbleIcon.displayName = "MapBubbleIcon";

export default MapBubbleIcon;
//# sourceMappingURL=map-bubble.js.map
