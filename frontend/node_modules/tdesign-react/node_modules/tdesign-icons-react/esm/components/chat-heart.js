import { _ as _defineProperty } from '../_chunks/dep-1f5d46b5.js';
import { forwardRef, createElement } from 'react';
import { IconBase } from '../icon.js';
import '../util/use-size-props.js';
import '../util/use-common-classname.js';
import '../util/use-config.js';
import '../util/config-context.js';
import '../util/check-url-and-load.js';

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }
function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }
var element = {
  "tag": "svg",
  "attrs": {
    "fill": "none",
    "viewBox": "0 0 24 24",
    "width": "1em",
    "height": "1em"
  },
  "children": [{
    "tag": "g",
    "attrs": {
      "id": "chat-heart"
    },
    "children": [{
      "tag": "path",
      "attrs": {
        "id": "fill1",
        "fill": "props.fillColor1",
        "d": "M2.5 3H21.5V17H6.5L2.5 20.5L2.5 3Z"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "fill2",
        "fill": "props.fillColor2",
        "d": "M8.64143 10.091C7.76275 9.21231 7.76275 7.78769 8.64143 6.90901C9.52011 6.03033 10.9447 6.03033 11.8234 6.90901L12.0002 7.08579L12.177 6.90901C13.0556 6.03033 14.4803 6.03033 15.3589 6.90901C16.2376 7.78769 16.2376 9.21231 15.3589 10.091L12.0002 13.4497L8.64143 10.091Z",
        "fillRule": "evenodd",
        "clipRule": "evenodd"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke1",
        "stroke": "props.strokeColor1",
        "d": "M2.5 3H21.5V17H6.5L2.5 20.5L2.5 3Z",
        "strokeLinecap": "square",
        "strokeWidth": "props.strokeWidth"
      }
    }, {
      "tag": "path",
      "attrs": {
        "id": "stroke2",
        "stroke": "props.strokeColor2",
        "d": "M8.64143 10.091C7.76275 9.21231 7.76275 7.78769 8.64143 6.90901C9.52011 6.03033 10.9447 6.03033 11.8234 6.90901L12.0002 7.08579L12.177 6.90901C13.0556 6.03033 14.4803 6.03033 15.3589 6.90901C16.2376 7.78769 16.2376 9.21231 15.3589 10.091L12.0002 13.4497L8.64143 10.091Z",
        "fillRule": "evenodd",
        "strokeLinecap": "square",
        "strokeWidth": "props.strokeWidth",
        "clipRule": "evenodd"
      }
    }]
  }]
};
var ChatHeartIcon = /*#__PURE__*/forwardRef(function (props, ref) {
  return /*#__PURE__*/createElement(IconBase, _objectSpread(_objectSpread({}, props), {}, {
    id: "chat-heart",
    ref: ref,
    icon: element
  }));
});
ChatHeartIcon.displayName = "ChatHeartIcon";

export default ChatHeartIcon;
//# sourceMappingURL=chat-heart.js.map
