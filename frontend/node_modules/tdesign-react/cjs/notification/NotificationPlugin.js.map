{"version":3,"file":"NotificationPlugin.js","sources":["../../../components/notification/NotificationPlugin.ts"],"sourcesContent":["import { fetchListInstance, listMap } from './NotificationList';\nimport {\n  NotificationCloseAllMethod,\n  NotificationCloseMethod,\n  NotificationErrorMethod,\n  NotificationInfoMethod,\n  NotificationInfoOptions,\n  NotificationInstance,\n  NotificationOptions,\n  NotificationSuccessMethod,\n  NotificationThemeList,\n  NotificationWarningMethod,\n  NotificationConfigMethod,\n} from './type';\n\nimport { getConfig, setGlobalConfig } from './config';\n\n// 扩展接口声明的结构，用户使用时可得到 .info 的 ts 提示\nexport interface Notification {\n  (theme: NotificationThemeList, options: NotificationOptions): Promise<NotificationInstance>;\n  info: NotificationInfoMethod;\n  success: NotificationSuccessMethod;\n  warning: NotificationWarningMethod;\n  error: NotificationErrorMethod;\n  closeAll: NotificationCloseAllMethod;\n  close: NotificationCloseMethod;\n  config: NotificationConfigMethod;\n}\n\n/**\n * @desc 函数调用时的渲染函数\n * @param theme 主题类型\n * @param options 通知的参数\n */\nconst renderNotification = (theme: NotificationThemeList, options: NotificationInfoOptions) => {\n  if (typeof options !== 'object') return;\n\n  const configs = getConfig(options);\n  const { placement } = configs;\n\n  const attach: HTMLElement = (() => {\n    const containerId = `tdesign-notification-${placement}`;\n    const container = document.querySelector(`#${containerId}`);\n    if (container && container instanceof HTMLElement) {\n      return container;\n    }\n\n    const element: HTMLDivElement = document.createElement('div');\n    element.setAttribute('id', containerId);\n\n    if (options.attach && typeof options.attach === 'string') {\n      const container: Element = document.querySelector(options.attach);\n      if (container instanceof HTMLElement) return container.appendChild(element);\n    }\n\n    if (options.attach instanceof HTMLElement) return options.attach.appendChild(element);\n    document.body.appendChild(element);\n    return element;\n  })();\n\n  return fetchListInstance(placement, attach, configs.zIndex).then((listInstance) => listInstance.push(theme, configs));\n};\n\nexport const NotificationPlugin: Notification = (theme, props) => renderNotification(theme, props);\nNotificationPlugin.info = (options) => renderNotification('info', options);\nNotificationPlugin.success = (options) => renderNotification('success', options);\nNotificationPlugin.warning = (options) => renderNotification('warning', options);\nNotificationPlugin.error = (options) => renderNotification('error', options);\nNotificationPlugin.close = (promise) => promise.then((instance) => instance.close());\nNotificationPlugin.closeAll = () => [...listMap.values()].forEach((list) => list.removeAll());\nNotificationPlugin.config = (options) => setGlobalConfig(options);\n"],"names":["renderNotification","theme","options","_typeof","configs","getConfig","placement","attach","containerId","container","document","querySelector","concat","HTMLElement","element","createElement","setAttribute","appendChild","body","fetchListInstance","zIndex","then","listInstance","push","NotificationPlugin","props","info","success","warning","error","close","promise","instance","closeAll","_toConsumableArray","listMap","values","forEach","list","removeAll","config","setGlobalConfig"],"mappings":"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"}