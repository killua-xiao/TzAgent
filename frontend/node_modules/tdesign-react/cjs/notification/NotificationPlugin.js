/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var toConsumableArray = require('../_chunks/dep-e4e1901e.js');
var _typeof = require('../_chunks/dep-667ac7af.js');
var notification_NotificationList = require('../_chunks/dep-0d189d59.js');
var notification_config = require('./config.js');
require('../_chunks/dep-00b49251.js');
require('../_chunks/dep-0006fcfa.js');
require('react');
require('classnames');
require('tdesign-icons-react');
require('../_chunks/dep-8e4d656d.js');
require('../_util/react-render.js');
require('../_chunks/dep-65ef8e09.js');
require('react-dom');
require('../hooks/useConfig.js');
require('../config-provider/ConfigContext.js');
require('../_chunks/dep-1df1dad8.js');
require('../_chunks/dep-5b5ab11b.js');
require('dayjs');
require('../_chunks/dep-f32c03f1.js');
require('../_chunks/dep-31c4bc3d.js');
require('../_chunks/dep-eea2872a.js');
require('../_chunks/dep-25585736.js');
require('../_chunks/dep-62e73936.js');
require('../_chunks/dep-64577888.js');
require('../_chunks/dep-71455db7.js');
require('../_chunks/dep-9e5a468d.js');
require('../_chunks/dep-ec8d2dca.js');
require('../_chunks/dep-fc596d16.js');
require('../_chunks/dep-f26edb7b.js');
require('../_chunks/dep-f33c1939.js');
require('../_chunks/dep-21ece627.js');
require('../_chunks/dep-25e4aa84.js');
require('../_chunks/dep-e1fbe1c3.js');
require('../_chunks/dep-df2b541f.js');
require('../_chunks/dep-edd366db.js');
require('../_chunks/dep-a56c4939.js');
require('../_chunks/dep-6c297e20.js');
require('../_chunks/dep-b7ad4d54.js');
require('../_chunks/dep-a2cb9299.js');
require('../_chunks/dep-f981815b.js');
require('../_util/noop.js');
require('../_util/parseTNode.js');
require('../_chunks/dep-59671c87.js');
require('../hooks/useGlobalIcon.js');
require('./defaultProps.js');
require('../hooks/useDefaultProps.js');
require('../config-provider/ConfigProvider.js');
require('../_chunks/dep-ab2f63ec.js');
require('../_chunks/dep-a48c7e8b.js');
require('../_chunks/dep-3d4656ee.js');
require('../_chunks/dep-0ffc9d96.js');
require('../_chunks/dep-efe6d243.js');
require('../_chunks/dep-4b18243f.js');
require('../_chunks/dep-bff2c990.js');
require('../common/PluginContainer.js');

var renderNotification = function renderNotification(theme, options) {
  if (_typeof._typeof(options) !== "object") return;
  var configs = notification_config.getConfig(options);
  var placement = configs.placement;
  var attach = function () {
    var containerId = "tdesign-notification-".concat(placement);
    var container = document.querySelector("#".concat(containerId));
    if (container && container instanceof HTMLElement) {
      return container;
    }
    var element = document.createElement("div");
    element.setAttribute("id", containerId);
    if (options.attach && typeof options.attach === "string") {
      var container2 = document.querySelector(options.attach);
      if (container2 instanceof HTMLElement) return container2.appendChild(element);
    }
    if (options.attach instanceof HTMLElement) return options.attach.appendChild(element);
    document.body.appendChild(element);
    return element;
  }();
  return notification_NotificationList.fetchListInstance(placement, attach, configs.zIndex).then(function (listInstance) {
    return listInstance.push(theme, configs);
  });
};
var NotificationPlugin = function NotificationPlugin(theme, props) {
  return renderNotification(theme, props);
};
NotificationPlugin.info = function (options) {
  return renderNotification("info", options);
};
NotificationPlugin.success = function (options) {
  return renderNotification("success", options);
};
NotificationPlugin.warning = function (options) {
  return renderNotification("warning", options);
};
NotificationPlugin.error = function (options) {
  return renderNotification("error", options);
};
NotificationPlugin.close = function (promise) {
  return promise.then(function (instance) {
    return instance.close();
  });
};
NotificationPlugin.closeAll = function () {
  return toConsumableArray._toConsumableArray(notification_NotificationList.listMap.values()).forEach(function (list) {
    return list.removeAll();
  });
};
NotificationPlugin.config = function (options) {
  return notification_config.setGlobalConfig(options);
};

exports.NotificationPlugin = NotificationPlugin;
//# sourceMappingURL=NotificationPlugin.js.map
