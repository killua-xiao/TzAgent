{"version":3,"file":"SinglePanel.js","sources":["../../../../components/date-picker/panel/SinglePanel.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport { isFunction } from 'lodash-es';\nimport { getDefaultFormat, parseToDayjs } from '@tdesign/common-js/date-picker/format';\nimport useConfig from '../../hooks/useConfig';\nimport { StyledProps } from '../../common';\nimport PanelContent from './PanelContent';\nimport ExtraContent from './ExtraContent';\nimport type { DateValue, TdDatePickerProps } from '../type';\nimport type { TdTimePickerProps } from '../../time-picker';\nimport useTableData from '../hooks/useTableData';\nimport useDisableDate from '../hooks/useDisableDate';\nimport useDefaultProps from '../../hooks/useDefaultProps';\nimport { parseToDateTime } from '../utils';\n\nexport interface SinglePanelProps extends TdDatePickerProps, StyledProps {\n  year?: number;\n  month?: number;\n  time?: string;\n  popupVisible?: boolean;\n  onPanelClick?: (context: { e: React.MouseEvent<HTMLDivElement> }) => void;\n  onCellClick?: (date: Date, context: { e: React.MouseEvent<HTMLDivElement> }) => void;\n  onCellMouseEnter?: (date: Date) => void;\n  onCellMouseLeave?: (context: { e: React.MouseEvent<HTMLDivElement> }) => void;\n  onJumperClick?: (context: { e?: MouseEvent; trigger: string }) => void;\n  onConfirmClick?: (context: { e: React.MouseEvent<HTMLButtonElement> }) => void;\n  onPresetClick?: any;\n  onYearChange?: (year: number) => void;\n  onMonthChange?: (month: number) => void;\n  onTimePickerChange?: TdTimePickerProps['onChange'];\n}\n\nconst SinglePanel = forwardRef<HTMLDivElement, SinglePanelProps>((originalProps, ref) => {\n  const { classPrefix, datePicker: globalDatePickerConfig } = useConfig();\n  const panelName = `${classPrefix}-date-picker__panel`;\n  const props = useDefaultProps<SinglePanelProps>(originalProps, {\n    mode: 'date',\n    enableTimePicker: false,\n    presetsPlacement: 'bottom',\n  });\n  const {\n    value,\n    mode,\n    presetsPlacement,\n    firstDayOfWeek = globalDatePickerConfig.firstDayOfWeek,\n    needConfirm,\n    style,\n    className,\n    year,\n    month,\n    onPanelClick,\n    disableTime,\n  } = props;\n\n  const { format } = getDefaultFormat({\n    mode: props.mode,\n    format: props.format,\n    enableTimePicker: props.enableTimePicker,\n  });\n\n  const disableDateOptions = useDisableDate({ disableDate: props.disableDate, mode: props.mode, format });\n\n  const disableTimeOptions: TdTimePickerProps['disableTime'] = (h: number, m: number, s: number, ms: number) => {\n    if (!isFunction(disableTime) || !value) {\n      return {};\n    }\n\n    return disableTime(parseToDateTime(value as DateValue, format, [h, m, s, ms]));\n  };\n\n  const tableData = useTableData({\n    value,\n    year,\n    month,\n    mode,\n    start: value ? parseToDayjs(props.multiple ? value[0] : value, format).toDate() : undefined,\n    firstDayOfWeek,\n    multiple: props.multiple,\n    ...disableDateOptions,\n  });\n\n  const panelContentProps = {\n    mode,\n    value,\n    year,\n    month,\n    format,\n    firstDayOfWeek,\n    tableData,\n    popupVisible: props.popupVisible,\n    multiple: props.multiple,\n    time: props.time,\n    timePickerProps: {\n      disableTime: disableTimeOptions,\n      ...props.timePickerProps,\n    },\n    enableTimePicker: props.enableTimePicker,\n    onMonthChange: props.onMonthChange,\n    onYearChange: props.onYearChange,\n    onJumperClick: props.onJumperClick,\n    onCellClick: props.onCellClick,\n    onCellMouseEnter: props.onCellMouseEnter,\n    onCellMouseLeave: props.onCellMouseLeave,\n    onTimePickerChange: props.onTimePickerChange,\n  };\n\n  const extraProps = {\n    presets: props.presets,\n    enableTimePicker: props.enableTimePicker,\n    presetsPlacement: props.presetsPlacement,\n    onPresetClick: props.onPresetClick,\n    onConfirmClick: props.onConfirmClick,\n    selectedValue: props.value,\n    needConfirm,\n  };\n\n  return (\n    <div\n      ref={ref}\n      style={style}\n      className={classNames(panelName, className, {\n        [`${panelName}--direction-row`]: ['left', 'right'].includes(presetsPlacement),\n      })}\n      onClick={(e) => onPanelClick?.({ e })}\n    >\n      {['top', 'left'].includes(presetsPlacement) ? <ExtraContent {...extraProps} /> : null}\n      <PanelContent {...panelContentProps} />\n      {['bottom', 'right'].includes(presetsPlacement) ? <ExtraContent {...extraProps} /> : null}\n    </div>\n  );\n});\n\nSinglePanel.displayName = 'SinglePanel';\n\nexport default SinglePanel;\n"],"names":["SinglePanel","forwardRef","originalProps","ref","_useConfig","useConfig","classPrefix","globalDatePickerConfig","datePicker","panelName","props","useDefaultProps","mode","enableTimePicker","presetsPlacement","value","_props$firstDayOfWeek","firstDayOfWeek","needConfirm","style","className","year","month","onPanelClick","disableTime","_getDefaultFormat","getDefaultFormat","format","disableDateOptions","useDisableDate","disableDate","disableTimeOptions","h","m","s","ms","isFunction","parseToDateTime","tableData","useTableData","_objectSpread","start","parseToDayjs","multiple","toDate","panelContentProps","popupVisible","time","timePickerProps","onMonthChange","onYearChange","onJumperClick","onCellClick","onCellMouseEnter","onCellMouseLeave","onTimePickerChange","extraProps","presets","onPresetClick","onConfirmClick","selectedValue","React","createElement","classNames","_defineProperty","concat","includes","onClick","e","ExtraContent","PanelContent","displayName"],"mappings":"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"}