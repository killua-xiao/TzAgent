{"version":3,"file":"DateRangePickerPanel.js","sources":["../../../components/date-picker/DateRangePickerPanel.tsx"],"sourcesContent":["import React, { forwardRef, useState, useMemo } from 'react';\nimport dayjs from 'dayjs';\nimport { formatDate, getDefaultFormat, parseToDayjs } from '@tdesign/common-js/date-picker/format';\nimport { subtractMonth, addMonth, extractTimeObj } from '@tdesign/common-js/date-picker/utils';\nimport log from '@tdesign/common-js/log/index';\nimport { StyledProps } from '../common';\nimport {\n  TdDateRangePickerPanelProps,\n  DatePickerYearChangeTrigger,\n  DatePickerMonthChangeTrigger,\n  DatePickerTimeChangeTrigger,\n  PresetDate,\n} from './type';\nimport RangePanel from './panel/RangePanel';\nimport useRangeValue from './hooks/useRangeValue';\nimport useDefaultProps from '../hooks/useDefaultProps';\nimport { dateCorrection } from './utils';\n\nexport interface DateRangePickerPanelProps extends TdDateRangePickerPanelProps, StyledProps {}\n\nconst DateRangePickerPanel = forwardRef<HTMLDivElement, DateRangePickerPanelProps>((originalProps, ref) => {\n  const props = useDefaultProps(originalProps, { mode: 'date', defaultValue: [], panelPreselection: true });\n\n  const {\n    className,\n    style,\n    mode,\n    enableTimePicker,\n    disableDate,\n    firstDayOfWeek,\n    presets,\n    timePickerProps,\n    presetsPlacement,\n    panelPreselection,\n    onPanelClick,\n  } = props;\n\n  const {\n    value,\n    year,\n    month,\n    time = [],\n    onChange,\n    setTime,\n    setYear,\n    setMonth,\n    isFirstValueSelected,\n    setIsFirstValueSelected,\n    cacheValue,\n    setCacheValue,\n  } = useRangeValue(props);\n\n  const { format } = getDefaultFormat({\n    mode,\n    enableTimePicker,\n    format: props.format,\n  });\n\n  // 记录面板是否选中过\n  const [isSelected, setIsSelected] = useState(false);\n  const [isHoverCell, setIsHoverCell] = useState(false);\n  const [hoverValue, setHoverValue] = useState([]);\n  const activeIndex = useMemo(() => (isFirstValueSelected ? 1 : 0), [isFirstValueSelected]);\n\n  // 日期 hover\n  function onCellMouseEnter(date: Date) {\n    setIsHoverCell(true);\n    const nextValue = [...hoverValue];\n    nextValue[activeIndex] = formatDate(date, { format });\n    setHoverValue(nextValue);\n  }\n\n  // 日期 leave\n  function onCellMouseLeave() {\n    setIsHoverCell(false);\n    setHoverValue(cacheValue);\n  }\n\n  // 日期点击\n  function onCellClick(date: Date, { e, partial }) {\n    setIsSelected(true);\n\n    const nextValue = [...cacheValue];\n    nextValue[activeIndex] = formatDate(date, { format });\n    setCacheValue(nextValue);\n\n    props.onCellClick?.({ date: nextValue.map((v) => dayjs(v).toDate()), e, partial: activeIndex ? 'end' : 'start' });\n\n    // date 模式自动切换年月\n    if (mode === 'date') {\n      // 选择了不属于面板中展示月份的日期\n      const partialIndex = partial === 'start' ? 0 : 1;\n      const isAdditional = dayjs(date).month() !== month[partialIndex];\n      if (isAdditional) {\n        // 保证左侧时间小于右侧\n        if (activeIndex === 0) setMonth([dayjs(date).month(), Math.min(dayjs(date).month() + 1, 11)]);\n        if (activeIndex === 1) setMonth([Math.max(dayjs(date).month() - 1, 0), dayjs(date).month()]);\n      }\n    }\n\n    // 有时间选择器走 confirm 逻辑\n    if (enableTimePicker) return;\n\n    // 首次点击不关闭、确保两端都有有效值并且无时间选择器时点击后自动关闭\n    if (nextValue.length === 2 && isFirstValueSelected) {\n      onChange(formatDate(nextValue, { format, autoSwap: true }), {\n        dayjsValue: nextValue.map((v) => parseToDayjs(v, format)),\n        trigger: 'pick',\n      });\n      setIsFirstValueSelected(false);\n    } else {\n      // 记录选中一次\n      setIsFirstValueSelected(true);\n    }\n  }\n\n  // 头部快速切换\n  function onJumperClick({ trigger, partial }) {\n    const partialIndex = partial === 'start' ? 0 : 1;\n\n    const triggerMap = { '-1': 'arrow-previous', 1: 'arrow-next' };\n    const monthCountMap = { date: 1, week: 1, month: 12, quarter: 12, year: 120 };\n    const monthCount = monthCountMap[mode] || 0;\n    const current = new Date(year[partialIndex], month[partialIndex]);\n\n    let next = null;\n    if (trigger === 'prev') {\n      next = subtractMonth(current, monthCount);\n    } else if (trigger === 'current') {\n      next = new Date();\n    } else if (trigger === 'next') {\n      next = addMonth(current, monthCount);\n    }\n\n    let nextYear = [...year];\n    nextYear[partialIndex] = next.getFullYear();\n    let nextMonth = [...month];\n    nextMonth[partialIndex] = next.getMonth();\n    const onlyYearSelect = ['year', 'quarter', 'month'].includes(mode);\n\n    const correctedDate = dateCorrection(partialIndex, nextYear, nextMonth, onlyYearSelect);\n    nextYear = correctedDate.nextYear;\n    nextMonth = correctedDate.nextMonth;\n\n    if (year.some((y) => !nextYear.includes(y))) {\n      props.onYearChange?.({\n        partial,\n        year: nextYear[partialIndex],\n        date: value.map((v) => parseToDayjs(v, format).toDate()),\n        trigger: trigger === 'current' ? 'today' : (`year-${triggerMap[trigger]}` as DatePickerYearChangeTrigger),\n      });\n    }\n\n    if (month.some((m) => !nextMonth.includes(m))) {\n      props.onMonthChange?.({\n        partial,\n        month: nextMonth[partialIndex],\n        date: value.map((v) => parseToDayjs(v, format).toDate()),\n        trigger: trigger === 'current' ? 'today' : (`month-${triggerMap[trigger]}` as DatePickerMonthChangeTrigger),\n      });\n    }\n\n    setYear(nextYear);\n    setMonth(nextMonth);\n  }\n\n  // time-picker 点击\n  function onTimePickerChange(val: string) {\n    const { hours, minutes, seconds, milliseconds, meridiem } = extractTimeObj(val);\n\n    const nextInputValue = [...cacheValue];\n    const changedInputValue = cacheValue[activeIndex];\n    const currentDate = !dayjs(changedInputValue, format).isValid()\n      ? dayjs().year(year[activeIndex]).month(month[activeIndex])\n      : dayjs(changedInputValue, format);\n    // am pm 12小时制转化 24小时制\n    let nextHours = hours;\n    if (/am/i.test(meridiem) && nextHours === 12) nextHours -= 12;\n    if (/pm/i.test(meridiem) && nextHours < 12) nextHours += 12;\n\n    const nextDate = currentDate.hour(nextHours).minute(minutes).second(seconds).millisecond(milliseconds).toDate();\n    nextInputValue[activeIndex] = nextDate;\n\n    const nextTime = [...time];\n    nextTime[activeIndex] = val;\n    setTime(nextTime);\n\n    setIsSelected(true);\n    setCacheValue(formatDate(nextInputValue, { format }));\n\n    props.onTimeChange?.({\n      time: val,\n      partial: activeIndex ? 'end' : 'start',\n      date: value.map((v) => dayjs(v).toDate()),\n      trigger: 'time-hour' as DatePickerTimeChangeTrigger,\n    });\n  }\n\n  // 确定\n  function onConfirmClick({ e }) {\n    const nextValue = [...cacheValue];\n\n    // 首次点击不关闭、确保两端都有有效值并且无时间选择器时点击后自动关闭\n    if (nextValue.length === 2 && isFirstValueSelected) {\n      onChange(formatDate(nextValue, { format, autoSwap: true }), {\n        dayjsValue: nextValue.map((v) => parseToDayjs(v, format)),\n        trigger: 'confirm',\n      });\n      setYear(nextValue.map((v) => dayjs(v, format).year()));\n      setMonth(nextValue.map((v) => dayjs(v, format).month()));\n      setIsFirstValueSelected(false);\n    } else {\n      setIsFirstValueSelected(true);\n    }\n\n    props.onConfirm?.({ date: value.map((v) => dayjs(v).toDate()), e });\n  }\n\n  // 预设\n  function onPresetClick(presetValue, context: { preset: PresetDate; e: React.MouseEvent<HTMLDivElement> }) {\n    const presetVal = typeof presetValue === 'function' ? presetValue() : presetValue;\n\n    if (!Array.isArray(presetVal)) {\n      log.error('DateRangePickerPanel', `preset: ${presetValue} must be Array!`);\n    } else {\n      onChange(formatDate(presetVal, { format, autoSwap: true }), {\n        dayjsValue: presetVal.map((p) => parseToDayjs(p, format)),\n        trigger: 'preset',\n      });\n    }\n\n    props.onPresetClick?.(context);\n  }\n\n  function onYearChange(nextVal: number, { partial }) {\n    let partialIndex = partial === 'start' ? 0 : 1;\n    if (enableTimePicker) partialIndex = activeIndex;\n\n    let nextYear = [...year];\n    nextYear[partialIndex] = nextVal;\n    let nextMonth = [...month];\n    nextYear[partialIndex] = nextVal;\n    // 年/季度/月份场景下，头部只有年选择器\n    const onlyYearSelect = ['year', 'quarter', 'month'].includes(mode);\n    // 保证左侧时间不大于右侧\n    const correctedDate = dateCorrection(partialIndex, nextYear, nextMonth, onlyYearSelect);\n    nextYear = correctedDate.nextYear;\n    nextMonth = correctedDate.nextMonth;\n\n    setYear(nextYear);\n    !onlyYearSelect && setMonth(nextMonth);\n\n    props.onYearChange?.({\n      partial,\n      year: nextYear[partialIndex],\n      date: value.map((v) => dayjs(v).toDate()),\n      trigger: 'year-select',\n    });\n  }\n\n  function onMonthChange(nextVal: number, { partial }) {\n    let partialIndex = partial === 'start' ? 0 : 1;\n    if (enableTimePicker) partialIndex = activeIndex;\n\n    const nextMonth = [...month];\n    nextMonth[partialIndex] = nextVal;\n    // 保证左侧时间不大于右侧\n    if (year[0] === year[1]) {\n      if (partialIndex === 0) {\n        // 操作了左侧区间, 处理右侧区间小于或等于左侧区间的场景，交互上始终报错右侧比左侧大 1\n        if (nextMonth[1] <= nextMonth[0]) {\n          nextMonth[1] = nextMonth[0] + 1;\n          if (nextMonth[1] === 12) {\n            // 处理跨年的边界场景\n            nextMonth[1] = 0;\n            setYear((currentYear) => [currentYear[0], currentYear[1] + 1]);\n          }\n        }\n      }\n      if (partialIndex === 1) {\n        // 操作了右侧区间, 处理右侧区间小于或等于左侧区间的场景，交互上始终报错左侧比右侧小 1\n        nextMonth[0] = Math.min(nextMonth[0], nextMonth[1]);\n        if (nextMonth[0] >= nextMonth[1]) {\n          nextMonth[0] -= 1;\n          if (nextMonth[0] === -1) {\n            // 处理跨年的边界场景\n            nextMonth[0] = 11;\n            setYear((currentYear) => [currentYear[0] - 1, currentYear[1]]);\n          }\n        }\n      }\n    }\n\n    setMonth(nextMonth);\n\n    props.onMonthChange?.({\n      partial,\n      month: nextMonth[partialIndex],\n      date: value.map((v) => dayjs(v).toDate()),\n      trigger: 'month-select',\n    });\n  }\n\n  const panelProps = {\n    hoverValue: isHoverCell ? hoverValue : [],\n    value: isSelected ? cacheValue : value,\n    year,\n    month,\n    mode,\n    format,\n    presets,\n    time,\n    disableDate,\n    firstDayOfWeek,\n    timePickerProps,\n    enableTimePicker,\n    presetsPlacement,\n    activeIndex,\n    panelPreselection,\n    onCellMouseEnter,\n    onCellMouseLeave,\n    onCellClick,\n    onJumperClick,\n    onConfirmClick,\n    onPresetClick,\n    onYearChange,\n    onMonthChange,\n    onTimePickerChange,\n    onPanelClick,\n  };\n\n  return <RangePanel ref={ref} className={className} style={style} {...panelProps} />;\n});\n\nDateRangePickerPanel.displayName = 'DateRangePickerPanel';\n\nexport default DateRangePickerPanel;\n"],"names":["DateRangePickerPanel","forwardRef","originalProps","ref","props","useDefaultProps","mode","defaultValue","panelPreselection","className","style","enableTimePicker","disableDate","firstDayOfWeek","presets","timePickerProps","presetsPlacement","onPanelClick","_useRangeValue","useRangeValue","value","year","month","_useRangeValue$time","time","onChange","setTime","setYear","setMonth","isFirstValueSelected","setIsFirstValueSelected","cacheValue","setCacheValue","_getDefaultFormat","getDefaultFormat","format","_useState","useState","_useState2","_slicedToArray","isSelected","setIsSelected","_useState3","_useState4","isHoverCell","setIsHoverCell","_useState5","_useState6","hoverValue","setHoverValue","activeIndex","useMemo","onCellMouseEnter","date","nextValue","_toConsumableArray","formatDate","onCellMouseLeave","onCellClick","_ref","_props$onCellClick","e","partial","call","map","v","dayjs","toDate","partialIndex","isAdditional","Math","min","max","length","autoSwap","dayjsValue","parseToDayjs","trigger","onJumperClick","_ref2","triggerMap","monthCountMap","week","quarter","monthCount","current","Date","next","subtractMonth","addMonth","nextYear","getFullYear","nextMonth","getMonth","onlyYearSelect","includes","correctedDate","dateCorrection","some","y","_props$onYearChange","onYearChange","concat","m","_props$onMonthChange","onMonthChange","onTimePickerChange","val","_props$onTimeChange","_extractTimeObj","extractTimeObj","hours","minutes","seconds","milliseconds","meridiem","nextInputValue","changedInputValue","currentDate","isValid","nextHours","test","nextDate","hour","minute","second","millisecond","nextTime","onTimeChange","onConfirmClick","_ref3","_props$onConfirm","onConfirm","onPresetClick","presetValue","context","_props$onPresetClick","presetVal","Array","isArray","log","error","p","nextVal","_ref4","_props$onYearChange2","_ref5","_props$onMonthChange2","currentYear","panelProps","React","createElement","RangePanel","_objectSpread","displayName"],"mappings":"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"}