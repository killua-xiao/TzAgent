/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-0006fcfa.js');
var React = require('react');
var dayjs = require('dayjs');
var format = require('../_chunks/dep-0227e11a.js');
var utils = require('../_chunks/dep-193875c0.js');
var datePicker_panel_SinglePanel = require('./panel/SinglePanel.js');
var datePicker_hooks_useSingleValue = require('./hooks/useSingleValue.js');
var hooks_useDefaultProps = require('../hooks/useDefaultProps.js');
require('../_chunks/dep-667ac7af.js');
require('../_chunks/dep-5b5ab11b.js');
require('../_chunks/dep-1d328330.js');
require('../_chunks/dep-59671c87.js');
require('../_chunks/dep-4ed9eda4.js');
require('../_chunks/dep-25585736.js');
require('../_chunks/dep-64577888.js');
require('../_chunks/dep-62e73936.js');
require('../_chunks/dep-8e4d656d.js');
require('../_chunks/dep-00b49251.js');
require('../_chunks/dep-2f64b46d.js');
require('../_chunks/dep-cf14666e.js');
require('../_chunks/dep-fc596d16.js');
require('../_chunks/dep-79629634.js');
require('../_chunks/dep-ec8d2dca.js');
require('../_chunks/dep-7a148045.js');
require('../_chunks/dep-f981815b.js');
require('../_chunks/dep-e1fbe1c3.js');
require('../_chunks/dep-9e5a468d.js');
require('../_chunks/dep-f33c1939.js');
require('classnames');
require('../hooks/useConfig.js');
require('../config-provider/ConfigContext.js');
require('../_chunks/dep-1df1dad8.js');
require('../_chunks/dep-f32c03f1.js');
require('../_chunks/dep-31c4bc3d.js');
require('../_chunks/dep-eea2872a.js');
require('../_chunks/dep-71455db7.js');
require('../_chunks/dep-f26edb7b.js');
require('../_chunks/dep-21ece627.js');
require('../_chunks/dep-25e4aa84.js');
require('../_chunks/dep-df2b541f.js');
require('../_chunks/dep-edd366db.js');
require('../_chunks/dep-a56c4939.js');
require('../_chunks/dep-6c297e20.js');
require('../_chunks/dep-b7ad4d54.js');
require('../_chunks/dep-a2cb9299.js');
require('./panel/PanelContent.js');
require('./base/Header.js');
require('../_chunks/dep-e4e1901e.js');
require('../locale/LocalReceiver.js');
require('../config-provider/ConfigProvider.js');
require('../_chunks/dep-ab2f63ec.js');
require('../_chunks/dep-a48c7e8b.js');
require('../_chunks/dep-3d4656ee.js');
require('../_chunks/dep-0ffc9d96.js');
require('../_chunks/dep-efe6d243.js');
require('../_chunks/dep-4b18243f.js');
require('../_chunks/dep-bff2c990.js');
require('../select/index.js');
require('../select/base/Select.js');
require('../_chunks/dep-8fa3a4c2.js');
require('../_util/composeRefs.js');
require('../_util/forwardRefWithStatics.js');
require('hoist-non-react-statics');
require('../_util/helper.js');
require('../_chunks/dep-840b1644.js');
require('../_chunks/dep-255ceed8.js');
require('../_chunks/dep-66114ce9.js');
require('../_chunks/dep-62d1dd66.js');
require('../_util/noop.js');
require('../_util/parseTNode.js');
require('../common/FakeArrow.js');
require('../hooks/useControlled.js');
require('../loading/index.js');
require('../loading/Loading.js');
require('../_chunks/dep-381fa848.js');
require('../common/Portal.js');
require('react-dom');
require('../hooks/useLayoutEffect.js');
require('../loading/gradient.js');
require('../_chunks/dep-dc4ce063.js');
require('../_chunks/dep-002fcc1e.js');
require('../_chunks/dep-2ffa3ff1.js');
require('../hooks/useDomRefCallback.js');
require('../loading/defaultProps.js');
require('../loading/plugin.js');
require('../_util/react-render.js');
require('../_chunks/dep-65ef8e09.js');
require('../common/PluginContainer.js');
require('../select-input/index.js');
require('../select-input/SelectInput.js');
require('../popup/index.js');
require('../popup/Popup.js');
require('react-transition-group');
require('../_util/ref.js');
require('react-is');
require('../_util/isFragment.js');
require('../hooks/useAnimation.js');
require('../hooks/useAttach.js');
require('../hooks/useMutationObserver.js');
require('../hooks/useLatest.js');
require('../_chunks/dep-eb6d55c1.js');
require('../_chunks/dep-014b9b78.js');
require('../_chunks/dep-abdd786a.js');
require('../_chunks/dep-a231fdc5.js');
require('../hooks/usePopper.js');
require('@popperjs/core');
require('react-fast-compare');
require('../hooks/useWindowSize.js');
require('../popup/defaultProps.js');
require('../popup/hooks/useTrigger.js');
require('../_util/listener.js');
require('../popup/utils/transition.js');
require('../popup/PopupPlugin.js');
require('../select-input/useSingle.js');
require('../input/index.js');
require('../input/Input.js');
require('tdesign-icons-react');
require('../hooks/useGlobalIcon.js');
require('../input/InputGroup.js');
require('../input/defaultProps.js');
require('../input/useLengthLimit.js');
require('../_chunks/dep-1e4197a4.js');
require('../_chunks/dep-3398c1f2.js');
require('../_chunks/dep-e57bdc8f.js');
require('../_chunks/dep-22b1740a.js');
require('../_chunks/dep-373af7a2.js');
require('../_chunks/dep-fc29b8b5.js');
require('../select-input/useMultiple.js');
require('../tag-input/index.js');
require('../tag-input/TagInput.js');
require('../hooks/useDragSorter.js');
require('../hooks/useEventCallback.js');
require('../tag-input/defaultProps.js');
require('../tag-input/useHover.js');
require('../tag-input/useTagList.js');
require('../tag/index.js');
require('../tag/Tag.js');
require('../_chunks/dep-4d5c26af.js');
require('../tag/defaultProps.js');
require('../tag/CheckTag.js');
require('../_chunks/dep-4406837c.js');
require('../tag/CheckTagGroup.js');
require('../tag-input/useTagScroll.js');
require('../select-input/useOverlayInnerStyle.js');
require('../select-input/defaultProps.js');
require('../select/defaultProps.js');
require('../_chunks/dep-e83bd2ab.js');
require('../select/base/OptionGroup.js');
require('../select/base/Option.js');
require('../hooks/useRipple.js');
require('../_chunks/dep-0c8c9057.js');
require('../select/base/PopupContent.js');
require('../select/hooks/usePanelVirtualScroll.js');
require('../hooks/useVirtualScroll.js');
require('../pagination/index.js');
require('../pagination/Pagination.js');
require('../input-number/index.js');
require('../input-number/InputNumber.js');
require('../button/index.js');
require('../button/Button.js');
require('../button/defaultProps.js');
require('../input-number/useInputNumber.js');
require('../_chunks/dep-e75d22fc.js');
require('../_chunks/dep-221787fe.js');
require('../hooks/useCommonClassName.js');
require('../input-number/defaultProps.js');
require('../input-adornment/InputAdornment.js');
require('../pagination/hooks/useBoundaryJumper.js');
require('../pagination/hooks/usePrevNextJumper.js');
require('../pagination/hooks/usePageNumber.js');
require('../pagination/hooks/useTotal.js');
require('../pagination/validators.js');
require('../pagination/defaultProps.js');
require('../_chunks/dep-d5e8c967.js');
require('../_chunks/dep-9a375a19.js');
require('../_chunks/dep-d915c90f.js');
require('../pagination/PaginationMini.js');
require('./base/Table.js');
require('./base/Cell.js');
require('../time-picker/index.js');
require('../time-picker/TimePicker.js');
require('../_chunks/dep-47323e89.js');
require('../time-picker/hooks/useTimePickerTextConfig.js');
require('../hooks/useDebounce.js');
require('../hooks/usePersistFn.js');
require('../hooks/usePropsRef.js');
require('../time-picker/TimeRangePicker.js');
require('../range-input/index.js');
require('../range-input/RangeInput.js');
require('../range-input/defaultProps.js');
require('../range-input/RangeInputPopup.js');
require('../time-picker/panel/TimePickerPanel.js');
require('../time-picker/defaultProps.js');
require('./panel/ExtraContent.js');
require('./base/Footer.js');
require('./hooks/useTableData.js');
require('./hooks/useDisableDate.js');
require('./utils.js');
require('../_chunks/dep-bfc07219.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { defineProperty._defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var DatePickerPanel = /*#__PURE__*/React.forwardRef(function (originalProps, ref) {
  var props = hooks_useDefaultProps["default"](originalProps, {
    mode: "date",
    defaultValue: "",
    needConfirm: true
  });
  var _useSingleValue = datePicker_hooks_useSingleValue["default"](props),
    value = _useSingleValue.value,
    onChange = _useSingleValue.onChange,
    time = _useSingleValue.time,
    setTime = _useSingleValue.setTime,
    month = _useSingleValue.month,
    setMonth = _useSingleValue.setMonth,
    year = _useSingleValue.year,
    setYear = _useSingleValue.setYear,
    cacheValue = _useSingleValue.cacheValue,
    setCacheValue = _useSingleValue.setCacheValue;
  var className = props.className,
    style = props.style,
    mode = props.mode,
    enableTimePicker = props.enableTimePicker,
    disableDate = props.disableDate,
    firstDayOfWeek = props.firstDayOfWeek,
    presets = props.presets,
    timePickerProps = props.timePickerProps,
    presetsPlacement = props.presetsPlacement,
    needConfirm = props.needConfirm,
    onPanelClick = props.onPanelClick,
    disableTime = props.disableTime;
  var _getDefaultFormat = format.getDefaultFormat({
      mode: mode,
      format: props.format,
      enableTimePicker: enableTimePicker
    }),
    format$1 = _getDefaultFormat.format;
  function onCellClick(date, _ref) {
    var _props$onCellClick;
    var e = _ref.e;
    (_props$onCellClick = props.onCellClick) === null || _props$onCellClick === void 0 || _props$onCellClick.call(props, {
      date: date,
      e: e
    });
    if (mode === "date") {
      setYear(date.getFullYear());
      setMonth(date.getMonth());
    }
    if (enableTimePicker) {
      setCacheValue(format.formatDate(date, {
        format: format$1
      }));
    } else {
      onChange(format.formatDate(date, {
        format: format$1
      }), {
        dayjsValue: format.parseToDayjs(date, format$1),
        trigger: "pick"
      });
    }
  }
  function onJumperClick(_ref2) {
    var trigger = _ref2.trigger;
    var triggerMap = {
      prev: "arrow-previous",
      next: "arrow-next"
    };
    var monthCountMap = {
      date: 1,
      week: 1,
      month: 12,
      quarter: 12,
      year: 120
    };
    var monthCount = monthCountMap[mode] || 0;
    var current = new Date(year, month);
    var next = null;
    if (trigger === "prev") {
      next = utils.subtractMonth(current, monthCount);
    } else if (trigger === "current") {
      next = new Date();
    } else if (trigger === "next") {
      next = utils.addMonth(current, monthCount);
    }
    var nextYear = next.getFullYear();
    var nextMonth = next.getMonth();
    if (year !== nextYear) {
      var _props$onYearChange;
      (_props$onYearChange = props.onYearChange) === null || _props$onYearChange === void 0 || _props$onYearChange.call(props, {
        year: nextYear,
        date: format.parseToDayjs(value, format$1).toDate(),
        trigger: trigger === "current" ? "today" : "year-".concat(triggerMap[trigger])
      });
    }
    if (month !== nextMonth) {
      var _props$onMonthChange;
      (_props$onMonthChange = props.onMonthChange) === null || _props$onMonthChange === void 0 || _props$onMonthChange.call(props, {
        month: nextMonth,
        date: format.parseToDayjs(value, format$1).toDate(),
        trigger: trigger === "current" ? "today" : "month-".concat(triggerMap[trigger])
      });
    }
    setYear(nextYear);
    setMonth(nextMonth);
  }
  function onTimePickerChange(val) {
    var _props$onTimeChange;
    setTime(val);
    var _extractTimeObj = utils.extractTimeObj(val),
      hours = _extractTimeObj.hours,
      minutes = _extractTimeObj.minutes,
      seconds = _extractTimeObj.seconds,
      milliseconds = _extractTimeObj.milliseconds,
      meridiem = _extractTimeObj.meridiem;
    var nextHours = hours;
    if (/am/i.test(meridiem) && nextHours === 12) nextHours -= 12;
    if (/pm/i.test(meridiem) && nextHours < 12) nextHours += 12;
    var currentDate = !dayjs__default["default"](cacheValue, format$1).isValid() ? dayjs__default["default"]() : dayjs__default["default"](cacheValue, format$1);
    var nextDate = currentDate.hour(nextHours).minute(minutes).second(seconds).millisecond(milliseconds).toDate();
    setCacheValue(format.formatDate(nextDate, {
      format: format$1
    }));
    (_props$onTimeChange = props.onTimeChange) === null || _props$onTimeChange === void 0 || _props$onTimeChange.call(props, {
      time: val,
      date: format.parseToDayjs(value, format$1).toDate(),
      trigger: "time-hour"
    });
  }
  function onConfirmClick(_ref3) {
    var _props$onConfirm;
    var e = _ref3.e;
    onChange(format.formatDate(cacheValue, {
      format: format$1
    }), {
      dayjsValue: format.parseToDayjs(cacheValue, format$1),
      trigger: "confirm"
    });
    (_props$onConfirm = props.onConfirm) === null || _props$onConfirm === void 0 || _props$onConfirm.call(props, {
      date: dayjs__default["default"](value).toDate(),
      e: e
    });
  }
  function onPresetClick(presetValue, context) {
    var _props$onPresetClick;
    var presetVal = typeof presetValue === "function" ? presetValue() : presetValue;
    onChange(format.formatDate(presetVal, {
      format: format$1
    }), {
      dayjsValue: format.parseToDayjs(presetVal, format$1),
      trigger: "preset"
    });
    (_props$onPresetClick = props.onPresetClick) === null || _props$onPresetClick === void 0 || _props$onPresetClick.call(props, context);
  }
  function onYearChange(year2) {
    var _props$onYearChange2;
    setYear(year2);
    (_props$onYearChange2 = props.onYearChange) === null || _props$onYearChange2 === void 0 || _props$onYearChange2.call(props, {
      year: year2,
      date: format.parseToDayjs(value, format$1).toDate(),
      trigger: "year-select"
    });
  }
  function onMonthChange(month2) {
    var _props$onMonthChange2;
    setMonth(month2);
    (_props$onMonthChange2 = props.onMonthChange) === null || _props$onMonthChange2 === void 0 || _props$onMonthChange2.call(props, {
      month: month2,
      date: format.parseToDayjs(value, format$1).toDate(),
      trigger: "month-select"
    });
  }
  var panelProps = {
    value: cacheValue,
    year: year,
    month: month,
    mode: mode,
    format: format$1,
    presets: presets,
    time: time,
    disableDate: disableDate,
    firstDayOfWeek: firstDayOfWeek,
    timePickerProps: timePickerProps,
    enableTimePicker: enableTimePicker,
    presetsPlacement: presetsPlacement,
    needConfirm: needConfirm,
    onCellClick: onCellClick,
    onJumperClick: onJumperClick,
    onConfirmClick: onConfirmClick,
    onPresetClick: onPresetClick,
    onYearChange: onYearChange,
    onMonthChange: onMonthChange,
    onTimePickerChange: onTimePickerChange,
    onPanelClick: onPanelClick,
    disableTime: disableTime
  };
  return /* @__PURE__ */React__default["default"].createElement(datePicker_panel_SinglePanel["default"], _objectSpread({
    ref: ref,
    className: className,
    style: style
  }, panelProps));
});
DatePickerPanel.displayName = "DatePickerPanel";

exports["default"] = DatePickerPanel;
//# sourceMappingURL=DatePickerPanel.js.map
