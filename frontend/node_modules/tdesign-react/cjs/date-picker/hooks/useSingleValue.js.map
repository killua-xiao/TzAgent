{"version":3,"file":"useSingleValue.js","sources":["../../../../components/date-picker/hooks/useSingleValue.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport {\n  formatDate,\n  formatTime,\n  isValidDate,\n  getDefaultFormat,\n  parseToDayjs,\n  extractTimeFormat,\n} from '@tdesign/common-js/date-picker/format';\nimport log from '@tdesign/common-js/log/index';\nimport useControlled from '../../hooks/useControlled';\nimport { TdDatePickerProps } from '../type';\n\nexport default function useSingleValue(props: TdDatePickerProps) {\n  const [value, onChange] = useControlled(props, 'value', props.onChange);\n\n  const { format, timeFormat } = getDefaultFormat({\n    mode: props.mode,\n    format: props.format,\n    enableTimePicker: props.multiple ? false : props.enableTimePicker,\n  });\n\n  if (props.enableTimePicker) {\n    if (!extractTimeFormat(format))\n      log.error('DatePicker', `format: ${format} is invalid，time selection must include time formatting HH:mm:ss`);\n  }\n\n  const [time, setTime] = useState(() =>\n    formatTime(props.multiple ? value?.[0] : value, format, timeFormat, props.defaultTime),\n  );\n  const [month, setMonth] = useState<number>(() => parseToDayjs(props.multiple ? value?.[0] : value, format).month());\n  const [year, setYear] = useState<number>(() => parseToDayjs(props.multiple ? value?.[0] : value, format).year());\n  const [cacheValue, setCacheValue] = useState(() => formatDate(props.multiple ? value?.[0] : value, { format })); // 缓存选中值，panel 点击时更改\n\n  // 输入框响应 value 变化\n  useEffect(() => {\n    if (!value) {\n      setCacheValue('');\n      return;\n    }\n    if (!isValidDate(value, format)) return;\n\n    setCacheValue(formatDate(value, { format }));\n    setTime(formatTime(value, format, timeFormat, props.defaultTime));\n    // eslint-disable-next-line\n  }, [value]);\n\n  return {\n    year,\n    month,\n    value,\n    time,\n    cacheValue,\n    onChange,\n    setYear,\n    setMonth,\n    setTime,\n    setCacheValue,\n  };\n}\n"],"names":["useSingleValue","props","_useControlled","useControlled","onChange","_useControlled2","_slicedToArray","value","_getDefaultFormat","getDefaultFormat","mode","format","enableTimePicker","multiple","timeFormat","extractTimeFormat","log","error","concat","_useState","useState","formatTime","defaultTime","_useState2","time","setTime","_useState3","parseToDayjs","month","_useState4","setMonth","_useState5","year","_useState6","setYear","_useState7","formatDate","_useState8","cacheValue","setCacheValue","useEffect","isValidDate"],"mappings":"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"}