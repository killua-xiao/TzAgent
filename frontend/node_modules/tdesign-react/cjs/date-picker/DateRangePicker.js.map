{"version":3,"file":"DateRangePicker.js","sources":["../../../components/date-picker/DateRangePicker.tsx"],"sourcesContent":["import React, { forwardRef, useEffect, useState } from 'react';\n\nimport classNames from 'classnames';\nimport dayjs from 'dayjs';\n\nimport {\n  formatDate,\n  formatTime,\n  getDefaultFormat,\n  initYearMonthTime,\n  isValidDate,\n  parseToDayjs,\n} from '@tdesign/common-js/date-picker/format';\nimport { addMonth, extractTimeObj, subtractMonth } from '@tdesign/common-js/date-picker/utils';\nimport log from '@tdesign/common-js/log/index';\n\nimport useConfig from '../hooks/useConfig';\nimport useDefaultProps from '../hooks/useDefaultProps';\nimport { RangeInputPopup } from '../range-input';\nimport { dateRangePickerDefaultProps } from './defaultProps';\nimport useRange from './hooks/useRange';\nimport RangePanel from './panel/RangePanel';\nimport { dateCorrection } from './utils';\n\nimport type { StyledProps } from '../common';\nimport type { DateRangeValue, PresetDate, TdDateRangePickerProps } from './type';\n\nexport interface DateRangePickerProps extends TdDateRangePickerProps, StyledProps {}\n\nconst DateRangePicker = forwardRef<HTMLDivElement, DateRangePickerProps>((originalProps, ref) => {\n  const { classPrefix, datePicker: globalDatePickerConfig } = useConfig();\n\n  const props = useDefaultProps<DateRangePickerProps>(originalProps, dateRangePickerDefaultProps);\n\n  const {\n    className,\n    style,\n    disabled,\n    mode,\n    enableTimePicker,\n    disableDate,\n    firstDayOfWeek = globalDatePickerConfig.firstDayOfWeek,\n    presets,\n    timePickerProps,\n    presetsPlacement,\n    panelPreselection,\n    cancelRangeSelectLimit,\n    onPick,\n    disableTime,\n  } = props;\n\n  const {\n    inputValue,\n    popupVisible,\n    rangeInputProps,\n    popupProps,\n    value,\n    year,\n    month,\n    time,\n    activeIndex,\n    isHoverCell,\n    setActiveIndex,\n    onChange,\n    setIsHoverCell,\n    setInputValue,\n    setPopupVisible,\n    setTime,\n    setYear,\n    setMonth,\n    isFirstValueSelected,\n    setIsFirstValueSelected,\n    cacheValue,\n    setCacheValue,\n  } = useRange(props);\n\n  const { format, timeFormat, valueType } = getDefaultFormat({\n    mode,\n    enableTimePicker,\n    format: props.format,\n    valueType: props.valueType,\n  });\n\n  // 记录面板是否选中过\n  const [isSelected, setIsSelected] = useState(false);\n\n  const handlePopupInvisible = () => {\n    setPopupVisible(false);\n    props.popupProps?.onVisibleChange?.(false, {});\n  };\n\n  useEffect(() => {\n    // 面板展开重置数据\n    if (popupVisible) {\n      setIsSelected(false);\n      setCacheValue(formatDate(value || [], { format }));\n      setTime(\n        formatTime(\n          value || [dayjs().format(timeFormat), dayjs().format(timeFormat)],\n          format,\n          timeFormat,\n          props.defaultTime,\n        ),\n      );\n\n      // 空数据重置为当前年月\n      if (!value.length) {\n        const { year: defaultYear, month: defaultMonth } = initYearMonthTime({ value, mode, format, enableTimePicker });\n        setYear(defaultYear);\n        setMonth(defaultMonth);\n      } else if (value.length === 2 && !enableTimePicker) {\n        // 确保右侧面板月份比左侧大 避免两侧面板月份一致\n        const nextMonth = value.map((v: string) => parseToDayjs(v, format).month());\n        if (year[0] === year[1] && nextMonth[0] === nextMonth[1]) {\n          nextMonth[0] === 11 ? (nextMonth[0] -= 1) : (nextMonth[1] += 1);\n        }\n        setYear(value.map((v: string) => parseToDayjs(v, format).year()));\n        setMonth(nextMonth);\n      } else {\n        setYear(value.map((v: string) => parseToDayjs(v, format).year()));\n        setMonth(value.map((v: string) => parseToDayjs(v, format).month()));\n      }\n    } else {\n      setActiveIndex(0);\n      setIsHoverCell(false);\n      setIsFirstValueSelected(false);\n      setInputValue(formatDate(value || [], { format }));\n    }\n    // eslint-disable-next-line\n  }, [popupVisible]);\n\n  // 日期 hover\n  function onCellMouseEnter(date: Date) {\n    setIsHoverCell(true);\n    const nextValue = [...inputValue];\n    nextValue[activeIndex] = formatDate(date, { format });\n    setInputValue(nextValue);\n  }\n\n  // 日期 leave\n  function onCellMouseLeave() {\n    setIsHoverCell(false);\n    setInputValue(cacheValue);\n  }\n\n  // 日期点击\n  function onCellClick(date: Date, { e }) {\n    onPick?.(date, { e, partial: activeIndex ? 'end' : 'start' });\n\n    setIsHoverCell(false);\n    setIsSelected(true);\n\n    const nextValue = [...inputValue];\n    nextValue[activeIndex] = formatDate(date, { format });\n    setCacheValue(nextValue);\n    setInputValue(nextValue);\n\n    // 有时间选择器走 confirm 逻辑\n    if (enableTimePicker) return;\n\n    // 确保两端都是有效值\n    const notValidIndex = nextValue.findIndex((v) => !v || !isValidDate(v, format));\n\n    // 当两端都有有效值时更改 value\n    if (notValidIndex === -1 && nextValue.length === 2) {\n      // 二次修改时当其中一侧不符合上次区间规范时，清空另一侧数据\n      if (!isFirstValueSelected && parseToDayjs(nextValue[0], format).isAfter(parseToDayjs(nextValue[1], format))) {\n        nextValue[activeIndex ? 0 : 1] = '';\n        setCacheValue(nextValue);\n        setInputValue(nextValue);\n      } else {\n        onChange(formatDate(nextValue, { format, targetFormat: valueType, autoSwap: true }), {\n          dayjsValue: nextValue.map((v) => parseToDayjs(v, format)),\n          trigger: 'pick',\n        });\n      }\n    }\n\n    // 首次点击不关闭、确保两端都有有效值并且无时间选择器时点击后自动关闭\n    if (!isFirstValueSelected || !activeIndex) {\n      let nextIndex = notValidIndex;\n      if (nextIndex === -1) nextIndex = activeIndex ? 0 : 1;\n      setActiveIndex(nextIndex);\n      setIsFirstValueSelected(!!nextValue[0]);\n    } else {\n      handlePopupInvisible();\n    }\n  }\n\n  // 头部快速切换\n  function onJumperClick({ trigger, partial }) {\n    const partialIndex = partial === 'start' ? 0 : 1;\n\n    const monthCountMap = { date: 1, week: 1, month: 12, quarter: 12, year: 120 };\n    const monthCount = monthCountMap[mode] || 0;\n    const current = new Date(year[partialIndex], month[partialIndex]);\n\n    let next = null;\n    if (trigger === 'prev') {\n      next = subtractMonth(current, monthCount);\n    } else if (trigger === 'current') {\n      next = new Date();\n    } else if (trigger === 'next') {\n      next = addMonth(current, monthCount);\n    }\n\n    let nextYear = [...year];\n    nextYear[partialIndex] = next.getFullYear();\n    let nextMonth = [...month];\n    nextMonth[partialIndex] = next.getMonth();\n    const onlyYearSelect = ['year', 'quarter', 'month'].includes(mode);\n\n    const correctedDate = dateCorrection(partialIndex, nextYear, nextMonth, onlyYearSelect);\n    nextYear = correctedDate.nextYear;\n    nextMonth = correctedDate.nextMonth;\n\n    setYear(nextYear);\n    setMonth(nextMonth);\n  }\n\n  // time-picker 点击\n  function onTimePickerChange(val: string) {\n    const { hours, minutes, seconds, milliseconds, meridiem } = extractTimeObj(val);\n\n    const nextInputValue = [...inputValue];\n    const changedInputValue = inputValue[activeIndex];\n    const currentDate = !dayjs(changedInputValue, format).isValid()\n      ? dayjs().year(year[activeIndex]).month(month[activeIndex])\n      : dayjs(changedInputValue, format);\n    // am pm 12小时制转化 24小时制\n    let nextHours = hours;\n    if (/am/i.test(meridiem) && nextHours === 12) nextHours -= 12;\n    if (/pm/i.test(meridiem) && nextHours < 12) nextHours += 12;\n\n    const nextDate = currentDate.hour(nextHours).minute(minutes).second(seconds).millisecond(milliseconds).toDate();\n    nextInputValue[activeIndex] = nextDate;\n\n    const nextTime = [...time];\n    nextTime[activeIndex] = val;\n    setTime(nextTime);\n\n    setIsSelected(true);\n    setInputValue(formatDate(nextInputValue, { format }));\n    setCacheValue(formatDate(nextInputValue, { format }));\n  }\n\n  // 确定\n  function onConfirmClick({ e }) {\n    const nextValue = [...inputValue];\n    props?.onConfirm?.({ e, date: nextValue, partial: activeIndex ? 'end' : 'start' });\n\n    const notValidIndex = nextValue.findIndex((v) => !v || !isValidDate(v, format));\n\n    // 当两端都有有效值时更改 value\n    if (notValidIndex === -1 && nextValue.length === 2) {\n      // 二次修改时当其中一侧不符合上次区间规范时，清空另一侧数据\n      if (!isFirstValueSelected && parseToDayjs(nextValue[0], format).isAfter(parseToDayjs(nextValue[1], format))) {\n        nextValue[activeIndex ? 0 : 1] = '';\n        setCacheValue(nextValue);\n        setInputValue(nextValue);\n      } else {\n        onChange(formatDate(nextValue, { format, targetFormat: valueType, autoSwap: true }), {\n          dayjsValue: nextValue.map((v) => parseToDayjs(v, format)),\n          trigger: 'confirm',\n        });\n      }\n    }\n\n    // 首次点击不关闭、确保两端都有有效值并且无时间选择器时点击后自动关闭\n    if (!isFirstValueSelected || !activeIndex) {\n      let nextIndex = notValidIndex;\n      if (nextIndex === -1) nextIndex = activeIndex ? 0 : 1;\n      setActiveIndex(nextIndex);\n      setIsFirstValueSelected(!!nextValue[0]);\n    } else if (nextValue.length === 2) {\n      handlePopupInvisible();\n    }\n  }\n\n  // 预设\n  function onPresetClick(\n    preset: DateRangeValue | (() => DateRangeValue),\n    context: { preset: PresetDate; e: React.MouseEvent<HTMLDivElement> },\n  ) {\n    let presetValue = preset;\n    if (typeof preset === 'function') {\n      presetValue = preset();\n    }\n    if (!Array.isArray(presetValue)) {\n      log.error('DateRangePicker', `preset: ${preset} must be Array!`);\n    } else {\n      const formattedPreset = formatDate(presetValue, { format });\n      setInputValue(formattedPreset);\n      setCacheValue(formattedPreset);\n      setTime(formatTime(formattedPreset, format, timeFormat, props.defaultTime));\n      const newYear = formattedPreset.map((v) => parseToDayjs(v, format).year());\n      const newMonth = formattedPreset.map((v) => parseToDayjs(v, format).month());\n\n      setYear(newYear);\n      setMonth(newMonth);\n      setIsSelected(true);\n      setIsFirstValueSelected(true);\n\n      handlePopupInvisible();\n      onChange(formattedPreset, { dayjsValue: formattedPreset.map((p) => parseToDayjs(p, format)), trigger: 'preset' });\n      props.onPresetClick?.(context);\n    }\n  }\n\n  function onYearChange(nextVal: number, { partial }) {\n    let partialIndex = partial === 'start' ? 0 : 1;\n    if (enableTimePicker) partialIndex = activeIndex;\n\n    let nextYear = [...year];\n    let nextMonth = [...month];\n    nextYear[partialIndex] = nextVal;\n    // 年/季度/月份场景下，头部只有年选择器\n    const onlyYearSelect = ['year', 'quarter', 'month'].includes(mode);\n\n    const correctedDate = dateCorrection(partialIndex, nextYear, nextMonth, onlyYearSelect);\n    nextYear = correctedDate.nextYear;\n    nextMonth = correctedDate.nextMonth;\n\n    setYear(nextYear);\n    !onlyYearSelect && setMonth(nextMonth);\n  }\n\n  function onMonthChange(nextVal: number, { partial }) {\n    let partialIndex = partial === 'start' ? 0 : 1;\n    if (enableTimePicker) partialIndex = activeIndex;\n    setMonth((currentMonth) => {\n      const nextMonth = [...currentMonth];\n      nextMonth[partialIndex] = nextVal;\n      // 保证左侧时间不大于右侧\n      if (year[0] === year[1]) {\n        if (partialIndex === 0) {\n          // 操作了左侧区间, 处理右侧区间小于或等于左侧区间的场景，交互上始终报错右侧比左侧大 1\n          if (nextMonth[1] <= nextMonth[0]) {\n            nextMonth[1] = nextMonth[0] + 1;\n            if (nextMonth[1] === 12) {\n              // 处理跨年的边界场景\n              nextMonth[1] = 0;\n              setYear((currentYear) => [currentYear[0], currentYear[1] + 1]);\n            }\n          }\n        }\n        if (partialIndex === 1) {\n          // 操作了右侧区间, 处理右侧区间小于或等于左侧区间的场景，交互上始终报错左侧比右侧小 1\n          nextMonth[0] = Math.min(nextMonth[0], nextMonth[1]);\n          if (nextMonth[0] >= nextMonth[1]) {\n            nextMonth[0] -= 1;\n            if (nextMonth[0] === -1) {\n              // 处理跨年的边界场景\n              nextMonth[0] = 11;\n              setYear((currentYear) => [currentYear[0] - 1, currentYear[1]]);\n            }\n          }\n        }\n      }\n      return nextMonth;\n    });\n  }\n\n  const panelProps = {\n    hoverValue: isHoverCell ? inputValue : [],\n    value: isSelected ? cacheValue : value,\n    isFirstValueSelected,\n    panelPreselection,\n    year,\n    month,\n    mode,\n    format,\n    presets,\n    time,\n    disableDate,\n    firstDayOfWeek,\n    timePickerProps,\n    enableTimePicker,\n    presetsPlacement,\n    activeIndex,\n    popupVisible,\n    cancelRangeSelectLimit,\n    onCellClick,\n    onCellMouseEnter,\n    onCellMouseLeave,\n    onJumperClick,\n    onConfirmClick,\n    onPresetClick,\n    onYearChange,\n    onMonthChange,\n    onTimePickerChange,\n    disableTime,\n  };\n\n  return (\n    <div className={classNames(`${classPrefix}-date-range-picker`, className)} style={style} ref={ref}>\n      <RangeInputPopup\n        disabled={disabled}\n        status={props.status}\n        tips={props.tips}\n        inputValue={inputValue}\n        popupProps={popupProps}\n        rangeInputProps={rangeInputProps}\n        popupVisible={popupVisible}\n        panel={<RangePanel {...panelProps} />}\n      />\n    </div>\n  );\n});\n\nDateRangePicker.displayName = 'DateRangePicker';\n\nexport default DateRangePicker;\n"],"names":["DateRangePicker","forwardRef","originalProps","ref","_useConfig","useConfig","classPrefix","globalDatePickerConfig","datePicker","props","useDefaultProps","dateRangePickerDefaultProps","className","style","disabled","mode","enableTimePicker","disableDate","_props$firstDayOfWeek","firstDayOfWeek","presets","timePickerProps","presetsPlacement","panelPreselection","cancelRangeSelectLimit","onPick","disableTime","_useRange","useRange","inputValue","popupVisible","rangeInputProps","popupProps","value","year","month","time","activeIndex","isHoverCell","setActiveIndex","onChange","setIsHoverCell","setInputValue","setPopupVisible","setTime","setYear","setMonth","isFirstValueSelected","setIsFirstValueSelected","cacheValue","setCacheValue","_getDefaultFormat","getDefaultFormat","format","valueType","timeFormat","_useState","useState","_useState2","_slicedToArray","isSelected","setIsSelected","handlePopupInvisible","_props$popupProps","_props$popupProps$onV","onVisibleChange","call","useEffect","formatDate","formatTime","dayjs","defaultTime","length","_initYearMonthTime","initYearMonthTime","defaultYear","defaultMonth","nextMonth","map","v","parseToDayjs","onCellMouseEnter","date","nextValue","_toConsumableArray","onCellMouseLeave","onCellClick","_ref","e","partial","notValidIndex","findIndex","isValidDate","isAfter","targetFormat","autoSwap","dayjsValue","trigger","nextIndex","onJumperClick","_ref2","partialIndex","monthCountMap","week","quarter","monthCount","current","Date","next","subtractMonth","addMonth","nextYear","getFullYear","getMonth","onlyYearSelect","includes","correctedDate","dateCorrection","onTimePickerChange","val","_extractTimeObj","extractTimeObj","hours","minutes","seconds","milliseconds","meridiem","nextInputValue","changedInputValue","currentDate","isValid","nextHours","test","nextDate","hour","minute","second","millisecond","toDate","nextTime","onConfirmClick","_ref3","_props$onConfirm","onConfirm","onPresetClick","preset","context","presetValue","Array","isArray","log","error","concat","_props$onPresetClick","formattedPreset","newYear","newMonth","p","onYearChange","nextVal","_ref4","onMonthChange","_ref5","currentMonth","currentYear","Math","min","panelProps","hoverValue","React","createElement","classNames","RangeInputPopup","status","tips","panel","RangePanel","_objectSpread","displayName"],"mappings":"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"}