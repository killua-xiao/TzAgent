{"version":3,"file":"DatePicker.js","sources":["../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseIsDate.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isDate.js","../../../components/date-picker/DatePicker.tsx"],"sourcesContent":["import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar dateTag = '[object Date]';\n\n/**\n * The base implementation of `_.isDate` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n */\nfunction baseIsDate(value) {\n  return isObjectLike(value) && baseGetTag(value) == dateTag;\n}\n\nexport default baseIsDate;\n","import baseIsDate from './_baseIsDate.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsDate = nodeUtil && nodeUtil.isDate;\n\n/**\n * Checks if `value` is classified as a `Date` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n * @example\n *\n * _.isDate(new Date);\n * // => true\n *\n * _.isDate('Mon April 23 2012');\n * // => false\n */\nvar isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\nexport default isDate;\n","import React, { forwardRef, useCallback, useEffect } from 'react';\n\nimport classNames from 'classnames';\nimport dayjs from 'dayjs';\nimport { isDate } from 'lodash-es';\n\nimport { formatDate, formatTime, getDefaultFormat, parseToDayjs } from '@tdesign/common-js/date-picker/format';\nimport { addMonth, covertToDate, extractTimeObj, isSame, subtractMonth } from '@tdesign/common-js/date-picker/utils';\n\nimport useConfig from '../hooks/useConfig';\nimport useDefaultProps from '../hooks/useDefaultProps';\nimport useLatest from '../hooks/useLatest';\nimport useUpdateEffect from '../hooks/useUpdateEffect';\nimport { useLocaleReceiver } from '../locale/LocalReceiver';\nimport SelectInput from '../select-input';\nimport { datePickerDefaultProps } from './defaultProps';\nimport useSingle from './hooks/useSingle';\nimport SinglePanel from './panel/SinglePanel';\n\nimport type { StyledProps } from '../common';\nimport type { TagInputRemoveContext } from '../tag-input';\nimport type { DateMultipleValue, DateValue, PresetDate, TdDatePickerProps } from './type';\n\nexport interface DatePickerProps extends TdDatePickerProps, StyledProps {}\n\nconst DatePicker = forwardRef<HTMLDivElement, DatePickerProps>((originalProps, ref) => {\n  const { classPrefix } = useConfig();\n\n  const props = useDefaultProps<DatePickerProps>(originalProps, datePickerDefaultProps);\n\n  const {\n    className,\n    style,\n    disabled,\n    mode,\n    enableTimePicker,\n    disableDate,\n    firstDayOfWeek,\n    presets,\n    defaultTime,\n    timePickerProps,\n    presetsPlacement,\n    needConfirm,\n    multiple,\n    label,\n    disableTime,\n    onClear,\n    onPick,\n  } = props;\n\n  const {\n    inputValue,\n    popupVisible,\n    inputProps,\n    popupProps,\n    tagInputProps,\n    value,\n    year,\n    month,\n    time,\n    onChange,\n    setIsHoverCell,\n    setInputValue,\n    setPopupVisible,\n    setTime,\n    setYear,\n    setMonth,\n    cacheValue,\n    setCacheValue,\n  } = useSingle(props);\n\n  const [local] = useLocaleReceiver('datePicker');\n  const { format, timeFormat, valueType } = getDefaultFormat({\n    mode,\n    format: props.format,\n    valueType: props.valueType,\n    enableTimePicker: multiple ? false : enableTimePicker,\n  });\n\n  const onTriggerNeedConfirm = useLatest(() => {\n    if (needConfirm || !enableTimePicker || popupVisible) return;\n    const nextValue = formatDate(inputValue, { format });\n    if (nextValue) {\n      const currentValue = formatDate(value, { format });\n      if (currentValue === nextValue) return;\n      onChange(formatDate(inputValue, { format, targetFormat: valueType }), {\n        dayjsValue: parseToDayjs(inputValue, format),\n        trigger: 'confirm',\n      });\n    } else {\n      setInputValue(\n        formatDate(value, {\n          format,\n        }),\n      );\n    }\n  });\n\n  const handlePopupInvisible = () => {\n    setPopupVisible(false);\n    props.popupProps?.onVisibleChange?.(false, {});\n  };\n\n  useUpdateEffect(() => {\n    //  日期时间选择器不需要点击确认按钮完成的操作\n    onTriggerNeedConfirm.current();\n  }, [popupVisible]);\n\n  useEffect(() => {\n    if (multiple) return;\n    // 面板展开重置数据\n    // Date valueType、week mode 、quarter mode nad empty string don't need to be parsed\n    const dateValue =\n      value && !isDate(value) && !['week', 'quarter'].includes(props.mode)\n        ? covertToDate(value as string, valueType)\n        : value;\n    setCacheValue(formatDate(dateValue, { format }));\n    setInputValue(formatDate(dateValue, { format }));\n\n    if (popupVisible) {\n      setYear(parseToDayjs(value as DateValue, format).year());\n      setMonth(parseToDayjs(value as DateValue, format).month());\n      setTime(formatTime(value, format, timeFormat, defaultTime));\n    } else {\n      setIsHoverCell(false);\n    }\n    // eslint-disable-next-line\n  }, [popupVisible]);\n\n  // 日期 hover\n  function onCellMouseEnter(date: Date) {\n    if (multiple) return;\n    setIsHoverCell(true);\n    setInputValue(formatDate(date, { format }));\n  }\n\n  // 日期 leave\n  function onCellMouseLeave() {\n    if (multiple) return;\n    setIsHoverCell(false);\n    setInputValue(formatDate(cacheValue, { format }));\n  }\n\n  // 日期点击\n  function onCellClick(date: Date) {\n    onPick?.(date);\n    setIsHoverCell(false);\n    // date 模式自动切换年月\n    if (mode === 'date') {\n      setYear(date.getFullYear());\n      setMonth(date.getMonth());\n    }\n    if (enableTimePicker) {\n      setCacheValue(formatDate(date, { format }));\n      if (props.needConfirm) return;\n      handlePopupInvisible();\n      onChange(formatDate(date, { format, targetFormat: valueType }), {\n        dayjsValue: parseToDayjs(date, format),\n        trigger: 'pick',\n      });\n    } else {\n      if (multiple) {\n        const newDate = processDate(date);\n        onChange(newDate, {\n          dayjsValue: parseToDayjs(date, format),\n          trigger: 'pick',\n        });\n        return;\n      }\n      handlePopupInvisible();\n      onChange(formatDate(date, { format, targetFormat: valueType }), {\n        dayjsValue: parseToDayjs(date, format),\n        trigger: 'pick',\n      });\n    }\n  }\n  // 头部快速切换\n  const onJumperClick = React.useCallback(\n    ({ trigger }) => {\n      const monthCountMap = { date: 1, week: 1, month: 12, quarter: 12, year: 120 };\n      const monthCount = monthCountMap[mode] || 0;\n\n      const current = new Date(year, month);\n\n      let next = null;\n      if (trigger === 'prev') {\n        next = subtractMonth(current, monthCount);\n      } else if (trigger === 'current') {\n        next = new Date();\n      } else if (trigger === 'next') {\n        next = addMonth(current, monthCount);\n      }\n\n      const nextYear = next.getFullYear();\n      const nextMonth = next.getMonth();\n\n      setYear(nextYear);\n      setMonth(nextMonth);\n    },\n    [year, month, mode, setYear, setMonth],\n  );\n\n  // timePicker 点击\n  function onTimePickerChange(val: string) {\n    setTime(val);\n\n    const { hours, minutes, seconds, milliseconds, meridiem } = extractTimeObj(val);\n\n    // am pm 12小时制转化 24小时制\n    let nextHours = hours;\n    if (/am/i.test(meridiem) && nextHours === 12) nextHours -= 12;\n    if (/pm/i.test(meridiem) && nextHours < 12) nextHours += 12;\n    const currentDate = !dayjs(inputValue, format).isValid() ? dayjs() : dayjs(inputValue, format);\n    const nextDate = currentDate.hour(nextHours).minute(minutes).second(seconds).millisecond(milliseconds).toDate();\n    setInputValue(formatDate(nextDate, { format }));\n    setCacheValue(formatDate(nextDate, { format }));\n\n    onPick?.(nextDate);\n  }\n\n  // 确定\n  function onConfirmClick({ e }) {\n    const nextValue = formatDate(inputValue, { format });\n    props?.onConfirm?.({ e, date: nextValue });\n    handlePopupInvisible();\n    if (nextValue) {\n      onChange(formatDate(inputValue, { format, targetFormat: valueType }), {\n        dayjsValue: parseToDayjs(inputValue, format),\n        trigger: 'confirm',\n      });\n    } else {\n      setInputValue(formatDate(value, { format }));\n    }\n  }\n\n  // 预设\n  function onPresetClick(preset, context: { preset: PresetDate; e: React.MouseEvent<HTMLDivElement> }) {\n    let presetValue = preset;\n    if (typeof preset === 'function') {\n      presetValue = preset();\n    }\n    const formattedPreset = formatDate(presetValue, { format, targetFormat: valueType });\n    const formattedInput = formatDate(presetValue, { format });\n\n    setInputValue(formattedInput);\n    setCacheValue(formattedInput);\n\n    setTime(formatTime(presetValue, format, timeFormat, props.defaultTime));\n    setYear(parseToDayjs(presetValue, format).year());\n    setMonth(parseToDayjs(presetValue, format).month());\n\n    // 先回调 onVisibleChange\n    handlePopupInvisible();\n    // 再回调 onChange（方便用户覆盖弹窗开闭状态）\n    onChange(formattedPreset, {\n      dayjsValue: parseToDayjs(presetValue, format),\n      trigger: 'preset',\n    });\n    props.onPresetClick?.(context);\n  }\n\n  const onYearChange = useCallback((year: number) => {\n    setYear(year);\n    // eslint-disable-next-line\n  }, []);\n\n  const onMonthChange = useCallback((month: number) => {\n    setMonth(month);\n    // eslint-disable-next-line\n  }, []);\n\n  function processDate(date: Date) {\n    let isSameDate: boolean;\n    const currentValue = (value || []) as DateMultipleValue;\n    if (mode !== 'week')\n      isSameDate = currentValue.some((val) =>\n        isSame(parseToDayjs(val, format).toDate(), date, mode, local.dayjsLocale),\n      );\n    else {\n      isSameDate = currentValue.some((val) => val === dayjs(date).locale(local.dayjsLocale).format(format));\n    }\n    let currentDate: DateMultipleValue;\n\n    if (!isSameDate) {\n      currentDate = currentValue.concat(formatDate(date, { format, targetFormat: valueType }));\n    } else {\n      currentDate = currentValue.filter(\n        (val) =>\n          formatDate(val, { format, targetFormat: valueType }) !==\n          formatDate(date, { format, targetFormat: valueType }),\n      );\n    }\n\n    return currentDate?.sort((a, b) => dayjs(a).valueOf() - dayjs(b).valueOf());\n  }\n\n  const onTagRemoveClick = (ctx: TagInputRemoveContext) => {\n    if (['week', 'quarter'].includes(props.mode)) {\n      onChange?.(ctx.value, {\n        trigger: 'tag-remove',\n      });\n      return;\n    }\n\n    const removeDate = dayjs(ctx.item).toDate();\n    const newDate = processDate(removeDate);\n    onChange?.(newDate, {\n      dayjsValue: parseToDayjs(removeDate, format),\n      trigger: 'tag-remove',\n    });\n  };\n\n  const onTagClearClick = ({ e }) => {\n    e.stopPropagation();\n    handlePopupInvisible();\n    onChange([], { dayjsValue: dayjs(), trigger: 'clear' });\n    onClear?.({ e });\n  };\n\n  const panelProps = {\n    value: cacheValue,\n    year,\n    month,\n    mode,\n    format,\n    presets,\n    time: multiple ? false : time,\n    disableDate,\n    firstDayOfWeek,\n    timePickerProps,\n    enableTimePicker: multiple ? false : enableTimePicker,\n    presetsPlacement,\n    popupVisible,\n    needConfirm,\n    multiple,\n    onCellClick,\n    onCellMouseEnter,\n    onCellMouseLeave,\n    onJumperClick,\n    onConfirmClick,\n    onPresetClick,\n    onYearChange,\n    onMonthChange,\n    onTimePickerChange,\n    disableTime,\n  };\n\n  return (\n    <div className={classNames(`${classPrefix}-date-picker`, className)} style={style} ref={ref}>\n      <SelectInput\n        disabled={disabled}\n        value={inputValue}\n        status={props.status}\n        tips={props.tips}\n        borderless={props.borderless}\n        label={label}\n        popupProps={popupProps}\n        inputProps={inputProps}\n        popupVisible={popupVisible}\n        panel={<SinglePanel {...panelProps} />}\n        multiple={multiple}\n        tagInputProps={{\n          onRemove: onTagRemoveClick,\n          ...tagInputProps,\n        }}\n        onClear={onTagClearClick}\n      />\n    </div>\n  );\n});\n\nDatePicker.displayName = 'DatePicker';\n\nexport default DatePicker;\n"],"names":["dateTag","baseIsDate","value","isObjectLike","baseGetTag","nodeIsDate","nodeUtil","isDate","baseUnary","DatePicker","forwardRef","originalProps","ref","_useConfig","useConfig","classPrefix","props","useDefaultProps","datePickerDefaultProps","className","style","disabled","mode","enableTimePicker","disableDate","firstDayOfWeek","presets","defaultTime","timePickerProps","presetsPlacement","needConfirm","multiple","label","disableTime","onClear","onPick","_useSingle","useSingle","inputValue","popupVisible","inputProps","popupProps","tagInputProps","year","month","time","onChange","setIsHoverCell","setInputValue","setPopupVisible","setTime","setYear","setMonth","cacheValue","setCacheValue","_useLocaleReceiver","useLocaleReceiver","_useLocaleReceiver2","_slicedToArray","local","_getDefaultFormat","getDefaultFormat","format","valueType","timeFormat","onTriggerNeedConfirm","useLatest","nextValue","formatDate","currentValue","targetFormat","dayjsValue","parseToDayjs","trigger","handlePopupInvisible","_props$popupProps","_props$popupProps$onV","onVisibleChange","call","useUpdateEffect","current","useEffect","dateValue","includes","covertToDate","formatTime","onCellMouseEnter","date","onCellMouseLeave","onCellClick","getFullYear","getMonth","newDate","processDate","onJumperClick","React","useCallback","_ref","monthCountMap","week","quarter","monthCount","Date","next","subtractMonth","addMonth","nextYear","nextMonth","onTimePickerChange","val","_extractTimeObj","extractTimeObj","hours","minutes","seconds","milliseconds","meridiem","nextHours","test","currentDate","dayjs","isValid","nextDate","hour","minute","second","millisecond","toDate","onConfirmClick","_ref2","_props$onConfirm","e","onConfirm","onPresetClick","preset","context","_props$onPresetClick","presetValue","formattedPreset","formattedInput","onYearChange","onMonthChange","_currentDate","isSameDate","some","isSame","dayjsLocale","locale","concat","filter","sort","a","b","valueOf","onTagRemoveClick","ctx","removeDate","item","onTagClearClick","_ref3","stopPropagation","panelProps","createElement","classNames","SelectInput","status","tips","borderless","panel","SinglePanel","_objectSpread","onRemove","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;AACA,IAAIA,OAAO,GAAG,eAAe,CAAA;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,UAAUA,CAACC,KAAK,EAAE;EACzB,OAAOC,yBAAY,CAACD,KAAK,CAAC,IAAIE,sBAAU,CAACF,KAAK,CAAC,IAAIF,OAAO,CAAA;AAC5D;;ACXA;AACA,IAAIK,UAAU,GAAGC,iBAAQ,IAAIA,iBAAQ,CAACC,MAAM,CAAA;;AAE5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,MAAM,GAAGF,UAAU,GAAGG,oBAAS,CAACH,UAAU,CAAC,GAAGJ,UAAU,CAAA;AAE5D,eAAeM,MAAM;;;;ACDfE,IAAAA,UAAa,gBAAAC,gBAAA,CAA4C,UAACC,aAAA,EAAeC,GAAQ,EAAA;AAC/E,EAAA,IAAAC,UAAA,GAAkBC,0BAAU,EAAA;IAA1BC,WAAY,GAAAF,UAAA,CAAZE,WAAY,CAAA;AAEd,EAAA,IAAAC,KAAA,GAAQC,gCAAiC,CAAAN,aAAA,EAAeO,8CAAsB,CAAA,CAAA;AAE9E,EAAA,IACJC,SAAA,GAiBEH,KAAA,CAjBFG,SAAA;IACAC,KAAA,GAgBEJ,KAAA,CAhBFI,KAAA;IACAC,QAAA,GAeEL,KAAA,CAfFK,QAAA;IACAC,IAAA,GAcEN,KAAA,CAdFM,IAAA;IACAC,gBAAA,GAaEP,KAAA,CAbFO,gBAAA;IACAC,WAAA,GAYER,KAAA,CAZFQ,WAAA;IACAC,cAAA,GAWET,KAAA,CAXFS,cAAA;IACAC,OAAA,GAUEV,KAAA,CAVFU,OAAA;IACAC,WAAA,GASEX,KAAA,CATFW,WAAA;IACAC,eAAA,GAQEZ,KAAA,CARFY,eAAA;IACAC,gBAAA,GAOEb,KAAA,CAPFa,gBAAA;IACAC,WAAA,GAMEd,KAAA,CANFc,WAAA;IACAC,QAAA,GAKEf,KAAA,CALFe,QAAA;IACAC,KAAA,GAIEhB,KAAA,CAJFgB,KAAA;IACAC,WAAA,GAGEjB,KAAA,CAHFiB,WAAA;IACAC,OAAA,GAEElB,KAAA,CAFFkB,OAAA;IACAC,MAAA,GACEnB,KAAA,CADFmB,MAAA,CAAA;AAGI,EAAA,IAAAC,UAAA,GAmBFC,sCAAUrB,KAAK,CAAA;IAlBjBsB,UAAA,GAAAF,UAAA,CAAAE,UAAA;IACAC,YAAA,GAAAH,UAAA,CAAAG,YAAA;IACAC,UAAA,GAAAJ,UAAA,CAAAI,UAAA;IACAC,UAAA,GAAAL,UAAA,CAAAK,UAAA;IACAC,aAAA,GAAAN,UAAA,CAAAM,aAAA;IACAxC,KAAA,GAAAkC,UAAA,CAAAlC,KAAA;IACAyC,IAAA,GAAAP,UAAA,CAAAO,IAAA;IACAC,KAAA,GAAAR,UAAA,CAAAQ,KAAA;IACAC,IAAA,GAAAT,UAAA,CAAAS,IAAA;IACAC,QAAA,GAAAV,UAAA,CAAAU,QAAA;IACAC,cAAA,GAAAX,UAAA,CAAAW,cAAA;IACAC,aAAA,GAAAZ,UAAA,CAAAY,aAAA;IACAC,eAAA,GAAAb,UAAA,CAAAa,eAAA;IACAC,OAAA,GAAAd,UAAA,CAAAc,OAAA;IACAC,OAAA,GAAAf,UAAA,CAAAe,OAAA;IACAC,QAAA,GAAAhB,UAAA,CAAAgB,QAAA;IACAC,UAAA,GAAAjB,UAAA,CAAAiB,UAAA;IACAC,aAAA,GAAAlB,UAAA,CAAAkB,aAAA,CAAA;AAGF,EAAA,IAAAC,kBAAA,GAAgBC,sCAAA,CAAkB,YAAY,CAAA;IAAAC,mBAAA,GAAAC,4BAAA,CAAAH,kBAAA,EAAA,CAAA,CAAA;AAAvCI,IAAAA,KAAK,GAAAF,mBAAA,CAAA,CAAA,CAAA,CAAA;EACZ,IAAAG,iBAAA,GAA0CC,uBAAiB,CAAA;AACzDvC,MAAAA,IAAA,EAAAA,IAAA;MACAwC,QAAQ9C,KAAM,CAAA8C,MAAA;MACdC,WAAW/C,KAAM,CAAA+C,SAAA;AACjBxC,MAAAA,gBAAA,EAAkBQ,WAAW,KAAQ,GAAAR,gBAAAA;AACvC,KAAC,CAAA;IALOuC,QAAA,GAAAF,iBAAA,CAAAE,MAAA;IAAQE,UAAY,GAAAJ,iBAAA,CAAZI,UAAY;IAAAD,SAAA,GAAAH,iBAAA,CAAAG,SAAA,CAAA;AAOtB,EAAA,IAAAE,oBAAA,GAAuBC,2BAAU,YAAM;AACvC,IAAA,IAAApC,WAAA,IAAe,CAACP,gBAAoB,IAAAgB,YAAA,EAAc,OAAA;AACtD,IAAA,IAAM4B,SAAY,GAAAC,iBAAA,CAAW9B,UAAY,EAAA;AAAEwB,MAAAA,QAAAA,QAAAA;AAAO,KAAC,CAAA,CAAA;AACnD,IAAA,IAAIK,SAAW,EAAA;AACb,MAAA,IAAME,YAAe,GAAAD,iBAAA,CAAWlE,KAAO,EAAA;AAAE4D,QAAAA,QAAAA,QAAAA;AAAO,OAAC,CAAA,CAAA;MACjD,IAAIO,YAAiB,KAAAF,SAAA,EAAW,OAAA;AAChCrB,MAAAA,QAAA,CAASsB,kBAAW9B,UAAY,EAAA;AAAEwB,QAAAA,QAAAA;AAAQQ,QAAAA,YAAc,EAAAP,SAAAA;AAAU,OAAC,CAAG,EAAA;AACpEQ,QAAAA,UAAA,EAAYC,mBAAa,CAAAlC,UAAA,EAAYwB,QAAM,CAAA;AAC3CW,QAAAA,OAAS,EAAA,SAAA;AACX,OAAC,CAAA,CAAA;AACH,KAAO,MAAA;AACLzB,MAAAA,aAAA,CACEoB,kBAAWlE,KAAO,EAAA;AAChB4D,QAAAA,MAAA,EAAAA,QAAAA;AACF,OAAC,CACH,CAAA,CAAA;AACF,KAAA;AACF,GAAC,CAAA,CAAA;AAED,EAAA,IAAMY,uBAAuB,SAAvBA,uBAA6B;IAAA,IAAAC,iBAAA,EAAAC,qBAAA,CAAA;IACjC3B,eAAA,CAAgB,KAAK,CAAA,CAAA;IACrB,CAAA0B,iBAAA,GAAA3D,KAAA,CAAMyB,UAAY,MAAAkC,IAAAA,IAAAA,iBAAA,KAAAC,KAAAA,CAAAA,IAAAA,CAAAA,qBAAA,GAAlBD,iBAAA,CAAkBE,eAAA,cAAAD,qBAAA,KAAA,KAAA,CAAA,IAAlBA,qBAAA,CAAAE,IAAA,CAAAH,iBAAA,EAAoC,KAAO,EAAA,EAAE,CAAA,CAAA;GAC/C,CAAA;AAEAI,EAAAA,gCAAA,CAAgB,YAAM;IAEpBd,oBAAA,CAAqBe,OAAQ,EAAA,CAAA;AAC/B,GAAA,EAAG,CAACzC,YAAY,CAAC,CAAA,CAAA;AAEjB0C,EAAAA,eAAA,CAAU,YAAM;AACV,IAAA,IAAAlD,QAAA,EAAU,OAAA;AAGd,IAAA,IAAMmD,YACJhF,KAAS,IAAA,CAACK,SAAOL,KAAK,CAAA,IAAK,CAAC,CAAC,MAAA,EAAQ,SAAS,CAAA,CAAEiF,SAASnE,KAAM,CAAAM,IAAI,IAC/D8D,kBAAa,CAAAlF,KAAA,EAAiB6D,SAAS,CACvC,GAAA7D,KAAA,CAAA;AACNoD,IAAAA,aAAA,CAAcc,iBAAW,CAAAc,SAAA,EAAW;AAAEpB,MAAAA,MAAA,EAAAA,QAAAA;AAAO,KAAC,CAAC,CAAA,CAAA;AAC/Cd,IAAAA,aAAA,CAAcoB,iBAAW,CAAAc,SAAA,EAAW;AAAEpB,MAAAA,MAAA,EAAAA,QAAAA;AAAO,KAAC,CAAC,CAAA,CAAA;AAE/C,IAAA,IAAIvB,YAAc,EAAA;MAChBY,OAAA,CAAQqB,mBAAa,CAAAtE,KAAA,EAAoB4D,QAAM,CAAA,CAAEnB,MAAM,CAAA,CAAA;MACvDS,QAAA,CAASoB,mBAAa,CAAAtE,KAAA,EAAoB4D,QAAM,CAAA,CAAElB,OAAO,CAAA,CAAA;MACzDM,OAAA,CAAQmC,iBAAW,CAAAnF,KAAA,EAAO4D,QAAQ,EAAAE,UAAA,EAAYrC,WAAW,CAAC,CAAA,CAAA;AAC5D,KAAO,MAAA;MACLoB,cAAA,CAAe,KAAK,CAAA,CAAA;AACtB,KAAA;AAEF,GAAA,EAAG,CAACR,YAAY,CAAC,CAAA,CAAA;EAGjB,SAAS+C,iBAAiBC,IAAY,EAAA;AAChC,IAAA,IAAAxD,QAAA,EAAU,OAAA;IACdgB,cAAA,CAAe,IAAI,CAAA,CAAA;AACnBC,IAAAA,aAAA,CAAcoB,iBAAW,CAAAmB,IAAA,EAAM;AAAEzB,MAAAA,MAAA,EAAAA,QAAAA;AAAO,KAAC,CAAC,CAAA,CAAA;AAC5C,GAAA;EAGA,SAAS0B,gBAAmBA,GAAA;AACtB,IAAA,IAAAzD,QAAA,EAAU,OAAA;IACdgB,cAAA,CAAe,KAAK,CAAA,CAAA;AACpBC,IAAAA,aAAA,CAAcoB,iBAAW,CAAAf,UAAA,EAAY;AAAES,MAAAA,MAAA,EAAAA,QAAAA;AAAO,KAAC,CAAC,CAAA,CAAA;AAClD,GAAA;EAGA,SAAS2B,YAAYF,IAAY,EAAA;AAC/BpD,IAAAA,MAAA,aAAAA,MAAA,KAAA,KAAA,CAAA,IAAAA,MAAA,CAASoD,IAAI,CAAA,CAAA;IACbxC,cAAA,CAAe,KAAK,CAAA,CAAA;IAEpB,IAAIzB,SAAS,MAAQ,EAAA;AACX6B,MAAAA,OAAA,CAAAoC,IAAA,CAAKG,aAAa,CAAA,CAAA;AACjBtC,MAAAA,QAAA,CAAAmC,IAAA,CAAKI,UAAU,CAAA,CAAA;AAC1B,KAAA;AACA,IAAA,IAAIpE,gBAAkB,EAAA;AACpB+B,MAAAA,aAAA,CAAcc,iBAAW,CAAAmB,IAAA,EAAM;AAAEzB,QAAAA,MAAA,EAAAA,QAAAA;AAAO,OAAC,CAAC,CAAA,CAAA;MAC1C,IAAI9C,KAAM,CAAAc,WAAA,EAAa,OAAA;AACF4C,MAAAA,oBAAA,EAAA,CAAA;AACrB5B,MAAAA,QAAA,CAASsB,kBAAWmB,IAAM,EAAA;AAAEzB,QAAAA,QAAAA;AAAQQ,QAAAA,YAAc,EAAAP,SAAAA;AAAU,OAAC,CAAG,EAAA;AAC9DQ,QAAAA,UAAA,EAAYC,mBAAa,CAAAe,IAAA,EAAMzB,QAAM,CAAA;AACrCW,QAAAA,OAAS,EAAA,MAAA;AACX,OAAC,CAAA,CAAA;AACH,KAAO,MAAA;AACL,MAAA,IAAI1C,QAAU,EAAA;AACN,QAAA,IAAA6D,OAAA,GAAUC,YAAYN,IAAI,CAAA,CAAA;QAChCzC,QAAA,CAAS8C,OAAS,EAAA;AAChBrB,UAAAA,UAAA,EAAYC,mBAAa,CAAAe,IAAA,EAAMzB,QAAM,CAAA;AACrCW,UAAAA,OAAS,EAAA,MAAA;AACX,SAAC,CAAA,CAAA;AACD,QAAA,OAAA;AACF,OAAA;AACqBC,MAAAA,oBAAA,EAAA,CAAA;AACrB5B,MAAAA,QAAA,CAASsB,kBAAWmB,IAAM,EAAA;AAAEzB,QAAAA,QAAAA;AAAQQ,QAAAA,YAAc,EAAAP,SAAAA;AAAU,OAAC,CAAG,EAAA;AAC9DQ,QAAAA,UAAA,EAAYC,mBAAa,CAAAe,IAAA,EAAMzB,QAAM,CAAA;AACrCW,QAAAA,OAAS,EAAA,MAAA;AACX,OAAC,CAAA,CAAA;AACH,KAAA;AACF,GAAA;EAEA,IAAMqB,gBAAgBC,yBAAM,CAAAC,WAAA,CAC1B,UAAAC,IAAA,EAAiB;AAAA,IAAA,IAAdxB,OAAA,GAAAwB,IAAA,CAAAxB,OAAA,CAAA;AACK,IAAA,IAAAyB,aAAA,GAAgB;AAAEX,MAAAA,IAAA,EAAM,CAAG;AAAAY,MAAAA,IAAA,EAAM,CAAG;AAAAvD,MAAAA,KAAA,EAAO,EAAI;AAAAwD,MAAAA,OAAA,EAAS,EAAI;AAAAzD,MAAAA,IAAA,EAAM,GAAA;KAAI,CAAA;AACtE,IAAA,IAAA0D,UAAA,GAAaH,cAAc5E,IAAS,CAAA,IAAA,CAAA,CAAA;IAE1C,IAAM0D,OAAU,GAAA,IAAIsB,IAAK,CAAA3D,IAAA,EAAMC,KAAK,CAAA,CAAA;IAEpC,IAAI2D,IAAO,GAAA,IAAA,CAAA;IACX,IAAI9B,YAAY,MAAQ,EAAA;AACf8B,MAAAA,IAAA,GAAAC,mBAAA,CAAcxB,SAASqB,UAAU,CAAA,CAAA;AAC1C,KAAA,MAAA,IAAW5B,YAAY,SAAW,EAAA;AAChC8B,MAAAA,IAAA,GAAO,IAAID,IAAK,EAAA,CAAA;AAClB,KAAA,MAAA,IAAW7B,YAAY,MAAQ,EAAA;AACtB8B,MAAAA,IAAA,GAAAE,cAAA,CAASzB,SAASqB,UAAU,CAAA,CAAA;AACrC,KAAA;AAEM,IAAA,IAAAK,QAAA,GAAWH,KAAKb,WAAY,EAAA,CAAA;AAC5B,IAAA,IAAAiB,SAAA,GAAYJ,KAAKZ,QAAS,EAAA,CAAA;IAEhCxC,OAAA,CAAQuD,QAAQ,CAAA,CAAA;IAChBtD,QAAA,CAASuD,SAAS,CAAA,CAAA;AACpB,GAAA,EACA,CAAChE,IAAA,EAAMC,KAAO,EAAAtB,IAAA,EAAM6B,SAASC,QAAQ,CACvC,CAAA,CAAA;EAGA,SAASwD,mBAAmBC,GAAa,EAAA;IACvC3D,OAAA,CAAQ2D,GAAG,CAAA,CAAA;AAEL,IAAA,IAAAC,eAAA,GAAsDC,qBAAeF,GAAG,CAAA;MAAtEG,wBAAAA;MAAOC,OAAS,GAAAH,eAAA,CAATG,OAAS;MAAAC,OAAA,GAAAJ,eAAA,CAAAI,OAAA;MAASC,+BAAAA;MAAcC,QAAS,GAAAN,eAAA,CAATM,QAAS,CAAA;IAGxD,IAAIC,SAAY,GAAAL,KAAA,CAAA;AAChB,IAAA,IAAI,KAAM,CAAAM,IAAA,CAAKF,QAAQ,CAAA,IAAKC,SAAc,KAAA,EAAA,EAAiBA,SAAA,IAAA,EAAA,CAAA;AAC3D,IAAA,IAAI,KAAM,CAAAC,IAAA,CAAKF,QAAQ,CAAA,IAAKC,SAAY,GAAA,EAAA,EAAiBA,SAAA,IAAA,EAAA,CAAA;IACzD,IAAME,WAAc,GAAA,CAACC,yBAAM,CAAAlF,UAAA,EAAYwB,QAAM,CAAA,CAAE2D,OAAQ,EAAA,GAAID,yBAAM,EAAA,GAAIA,yBAAM,CAAAlF,UAAA,EAAYwB,QAAM,CAAA,CAAA;IAC7F,IAAM4D,QAAW,GAAAH,WAAA,CAAYI,IAAK,CAAAN,SAAS,EAAEO,MAAO,CAAAX,OAAO,CAAE,CAAAY,MAAA,CAAOX,OAAO,CAAA,CAAEY,WAAY,CAAAX,YAAY,EAAEY,MAAO,EAAA,CAAA;AAC9G/E,IAAAA,aAAA,CAAcoB,iBAAW,CAAAsD,QAAA,EAAU;AAAE5D,MAAAA,MAAA,EAAAA,QAAAA;AAAO,KAAC,CAAC,CAAA,CAAA;AAC9CR,IAAAA,aAAA,CAAcc,iBAAW,CAAAsD,QAAA,EAAU;AAAE5D,MAAAA,MAAA,EAAAA,QAAAA;AAAO,KAAC,CAAC,CAAA,CAAA;AAE9C3B,IAAAA,MAAA,aAAAA,MAAA,KAAA,KAAA,CAAA,IAAAA,MAAA,CAASuF,QAAQ,CAAA,CAAA;AACnB,GAAA;EAGS,SAAAM,cAAAA,CAAAC,KAAA,EAAsB;AAAA,IAAA,IAAAC,gBAAA,CAAA;AAAA,IAAA,IAALC,CAAA,GAAAF,KAAA,CAAAE,CAAA,CAAA;AACxB,IAAA,IAAMhE,SAAY,GAAAC,iBAAA,CAAW9B,UAAY,EAAA;AAAEwB,MAAAA,QAAAA,QAAAA;AAAO,KAAC,CAAA,CAAA;AACnD9C,IAAAA,KAAA,aAAAA,KAAA,KAAA,KAAA,CAAA,IAAA,CAAAkH,gBAAA,GAAAlH,KAAA,CAAOoH,SAAY,MAAAF,IAAAA,IAAAA,gBAAA,eAAnBA,gBAAA,CAAApD,IAAA,CAAA9D,KAAA,EAAmB;AAAEmH,MAAAA,CAAG,EAAHA,CAAG;AAAA5C,MAAAA,IAAA,EAAMpB,SAAAA;AAAU,KAAC,CAAA,CAAA;AACpBO,IAAAA,oBAAA,EAAA,CAAA;AACrB,IAAA,IAAIP,SAAW,EAAA;AACbrB,MAAAA,QAAA,CAASsB,kBAAW9B,UAAY,EAAA;AAAEwB,QAAAA,QAAAA;AAAQQ,QAAAA,YAAc,EAAAP,SAAAA;AAAU,OAAC,CAAG,EAAA;AACpEQ,QAAAA,UAAA,EAAYC,mBAAa,CAAAlC,UAAA,EAAYwB,QAAM,CAAA;AAC3CW,QAAAA,OAAS,EAAA,SAAA;AACX,OAAC,CAAA,CAAA;AACH,KAAO,MAAA;AACLzB,MAAAA,aAAA,CAAcoB,iBAAW,CAAAlE,KAAA,EAAO;AAAE4D,QAAAA,MAAA,EAAAA,QAAAA;AAAO,OAAC,CAAC,CAAA,CAAA;AAC7C,KAAA;AACF,GAAA;AAGS,EAAA,SAAAuE,aAAAA,CAAcC,QAAQC,OAAsE,EAAA;AAAA,IAAA,IAAAC,oBAAA,CAAA;IACnG,IAAIC,WAAc,GAAAH,MAAA,CAAA;AACd,IAAA,IAAA,OAAOA,WAAW,UAAY,EAAA;MAChCG,WAAA,GAAcH,MAAO,EAAA,CAAA;AACvB,KAAA;AACA,IAAA,IAAMI,kBAAkBtE,iBAAW,CAAAqE,WAAA,EAAa;AAAE3E,MAAAA,MAAQ,EAARA,QAAQ;AAAAQ,MAAAA,YAAA,EAAcP,SAAAA;AAAU,KAAC,CAAA,CAAA;AACnF,IAAA,IAAM4E,cAAiB,GAAAvE,iBAAA,CAAWqE,WAAa,EAAA;AAAE3E,MAAAA,QAAAA,QAAAA;AAAO,KAAC,CAAA,CAAA;IAEzDd,aAAA,CAAc2F,cAAc,CAAA,CAAA;IAC5BrF,aAAA,CAAcqF,cAAc,CAAA,CAAA;AAE5BzF,IAAAA,OAAA,CAAQmC,kBAAWoD,WAAa,EAAA3E,QAAA,EAAQE,UAAY,EAAAhD,KAAA,CAAMW,WAAW,CAAC,CAAA,CAAA;IACtEwB,OAAA,CAAQqB,mBAAa,CAAAiE,WAAA,EAAa3E,QAAM,CAAA,CAAEnB,MAAM,CAAA,CAAA;IAChDS,QAAA,CAASoB,mBAAa,CAAAiE,WAAA,EAAa3E,QAAM,CAAA,CAAElB,OAAO,CAAA,CAAA;AAG7B8B,IAAAA,oBAAA,EAAA,CAAA;IAErB5B,QAAA,CAAS4F,eAAiB,EAAA;AACxBnE,MAAAA,UAAA,EAAYC,mBAAa,CAAAiE,WAAA,EAAa3E,QAAM,CAAA;AAC5CW,MAAAA,OAAS,EAAA,QAAA;AACX,KAAC,CAAA,CAAA;AACD,IAAA,CAAA+D,oBAAA,GAAAxH,KAAA,CAAMqH,oDAANG,KAAAA,CAAAA,IAAAA,oBAAA,CAAA1D,IAAA,CAAA9D,KAAA,EAAsBuH,OAAO,CAAA,CAAA;AAC/B,GAAA;AAEM,EAAA,IAAAK,YAAA,GAAe5C,iBAAY,CAAA,UAACrD,KAAiB,EAAA;IACjDQ,OAAA,CAAQR,KAAI,CAAA,CAAA;GAEd,EAAG,EAAE,CAAA,CAAA;AAEC,EAAA,IAAAkG,aAAA,GAAgB7C,iBAAY,CAAA,UAACpD,MAAkB,EAAA;IACnDQ,QAAA,CAASR,MAAK,CAAA,CAAA;GAEhB,EAAG,EAAE,CAAA,CAAA;EAEL,SAASiD,YAAYN,IAAY,EAAA;AAAA,IAAA,IAAAuD,YAAA,CAAA;AAC3B,IAAA,IAAAC,UAAA,CAAA;AACE,IAAA,IAAA1E,YAAA,GAAgBnE,SAAS,EAAC,CAAA;IAChC,IAAIoB,IAAS,KAAA,MAAA,EACXyH,UAAA,GAAa1E,YAAa,CAAA2E,IAAA,CAAK,UAACnC,GAAA,EAAA;MAAA,OAC9BoC,YAAO,CAAAzE,mBAAA,CAAaqC,GAAK,EAAA/C,QAAM,CAAE,CAAAiE,MAAA,EAAU,EAAAxC,IAAA,EAAMjE,IAAM,EAAAqC,KAAA,CAAMuF,WAAW,CAAA,CAAA;KAC1E,CAAA,CAAA,KACG;AACHH,MAAAA,UAAA,GAAa1E,YAAa,CAAA2E,IAAA,CAAK,UAACnC,GAAA,EAAA;AAAA,QAAA,OAAQA,QAAQW,yBAAM,CAAAjC,IAAI,CAAE,CAAA4D,MAAA,CAAOxF,KAAM,CAAAuF,WAAW,CAAE,CAAApF,MAAA,CAAOA,QAAM,CAAC,CAAA;OAAA,CAAA,CAAA;AACtG,KAAA;AACI,IAAA,IAAAyD,WAAA,CAAA;IAEJ,IAAI,CAACwB,UAAY,EAAA;MACDxB,WAAA,GAAAlD,YAAA,CAAa+E,OAAOhF,iBAAW,CAAAmB,IAAA,EAAM;AAAEzB,QAAAA,MAAQ,EAARA,QAAQ;AAAAQ,QAAAA,YAAA,EAAcP,SAAAA;AAAU,OAAC,CAAC,CAAA,CAAA;AACzF,KAAO,MAAA;AACLwD,MAAAA,WAAA,GAAclD,YAAa,CAAAgF,MAAA,CACzB,UAACxC,GACC,EAAA;QAAA,OAAAzC,iBAAA,CAAWyC,GAAK,EAAA;AAAE/C,UAAAA,QAAAA;AAAQQ,UAAAA,YAAc,EAAAP,SAAAA;AAAU,SAAC,CAAA,KACnDK,kBAAWmB,IAAM,EAAA;AAAEzB,UAAAA,MAAQ,EAARA,QAAQ;AAAAQ,UAAAA,YAAA,EAAcP,SAAAA;AAAU,SAAC,CAAA,CAAA;AAAA,OACxD,CAAA,CAAA;AACF,KAAA;AAEA,IAAA,OAAA,CAAA+E,YAAA,GAAOvB,WAAa,MAAA,IAAA,IAAAuB,YAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAbA,YAAA,CAAaQ,IAAA,CAAK,UAACC,CAAA,EAAGC;aAAMhC,yBAAM,CAAA+B,CAAC,CAAE,CAAAE,OAAA,EAAY,GAAAjC,yBAAA,CAAMgC,CAAC,CAAA,CAAEC,SAAS,CAAA;KAAA,CAAA,CAAA;AAC5E,GAAA;AAEM,EAAA,IAAAC,gBAAA,GAAmB,SAAnBA,gBAAAA,CAAoBC,GAA+B,EAAA;AACvD,IAAA,IAAI,CAAC,MAAQ,EAAA,SAAS,EAAExE,QAAS,CAAAnE,KAAA,CAAMM,IAAI,CAAG,EAAA;MAC5CwB,QAAA,KAAA,IAAA,IAAAA,QAAA,KAAAA,KAAAA,CAAAA,IAAAA,QAAA,CAAW6G,IAAIzJ,KAAO,EAAA;AACpBuE,QAAAA,OAAS,EAAA,YAAA;AACX,OAAC,CAAA,CAAA;AACD,MAAA,OAAA;AACF,KAAA;IAEA,IAAMmF,UAAa,GAAApC,yBAAA,CAAMmC,GAAI,CAAAE,IAAI,EAAE9B,MAAO,EAAA,CAAA;AACpC,IAAA,IAAAnC,OAAA,GAAUC,YAAY+D,UAAU,CAAA,CAAA;AACtC9G,IAAAA,QAAA,aAAAA,QAAA,KAAA,KAAA,CAAA,IAAAA,QAAA,CAAW8C,OAAS,EAAA;AAClBrB,MAAAA,UAAA,EAAYC,mBAAa,CAAAoF,UAAA,EAAY9F,QAAM,CAAA;AAC3CW,MAAAA,OAAS,EAAA,YAAA;AACX,KAAC,CAAA,CAAA;GACH,CAAA;AAEA,EAAA,IAAMqF,eAAkB,GAAA,SAAlBA,eAAkBA,CAAAC,KAAA,EAAW;AAAA,IAAA,IAAR5B,CAAA,GAAA4B,KAAA,CAAA5B,CAAA,CAAA;IACzBA,CAAA,CAAE6B,eAAgB,EAAA,CAAA;AACGtF,IAAAA,oBAAA,EAAA,CAAA;IACZ5B,QAAA,CAAA,IAAI;MAAEyB,UAAA,EAAYiD,2BAAS;AAAA/C,MAAAA,OAAA,EAAS,OAAA;AAAQ,KAAC,CAAA,CAAA;AAC5CvC,IAAAA,OAAA,KAAAA,IAAAA,IAAAA,OAAA,KAAAA,KAAAA,CAAAA,IAAAA,OAAA,CAAA;AAAEiG,MAAAA,GAAAA,CAAAA;AAAE,KAAC,CAAA,CAAA;GACjB,CAAA;AAEA,EAAA,IAAM8B,UAAa,GAAA;AACjB/J,IAAAA,KAAO,EAAAmD,UAAA;AACPV,IAAAA,IAAA,EAAAA,IAAA;AACAC,IAAAA,KAAA,EAAAA,KAAA;AACAtB,IAAAA,IAAA,EAAAA,IAAA;AACAwC,IAAAA,MAAA,EAAAA,QAAA;AACApC,IAAAA,OAAA,EAAAA,OAAA;AACAmB,IAAAA,IAAA,EAAMd,WAAW,KAAQ,GAAAc,IAAA;AACzBrB,IAAAA,WAAA,EAAAA,WAAA;AACAC,IAAAA,cAAA,EAAAA,cAAA;AACAG,IAAAA,eAAA,EAAAA,eAAA;AACAL,IAAAA,gBAAA,EAAkBQ,WAAW,KAAQ,GAAAR,gBAAA;AACrCM,IAAAA,gBAAA,EAAAA,gBAAA;AACAU,IAAAA,YAAA,EAAAA,YAAA;AACAT,IAAAA,WAAA,EAAAA,WAAA;AACAC,IAAAA,QAAA,EAAAA,QAAA;AACA0D,IAAAA,WAAA,EAAAA,WAAA;AACAH,IAAAA,gBAAA,EAAAA,gBAAA;AACAE,IAAAA,gBAAA,EAAAA,gBAAA;AACAM,IAAAA,aAAA,EAAAA,aAAA;AACAkC,IAAAA,cAAA,EAAAA,cAAA;AACAK,IAAAA,aAAA,EAAAA,aAAA;AACAO,IAAAA,YAAA,EAAAA,YAAA;AACAC,IAAAA,aAAA,EAAAA,aAAA;AACAjC,IAAAA,kBAAA,EAAAA,kBAAA;AACA3E,IAAAA,WAAA,EAAAA,WAAAA;GACF,CAAA;AAEA,EAAA,sBACG8D,yBAAA,CAAAmE,aAAA,CAAA,KAAA,EAAA;IAAI/I,SAAW,EAAAgJ,8BAAA,CAAAf,EAAAA,CAAAA,MAAA,CAAcrI,WAAA,EAAA,cAAA,CAAA,EAA2BI,SAAS,CAAA;AAAGC,IAAAA,KAAA,EAAAA,KAAA;AAAcR,IAAAA,GAAA,EAAAA,GAAAA;AAAA,GAAA,iBAChFmF,yBAAA,CAAAmE,aAAA,CAAAE,6BAAA,EAAA;AACC/I,IAAAA,QAAA,EAAAA,QAAA;AACAnB,IAAAA,KAAO,EAAAoC,UAAA;IACP+H,QAAQrJ,KAAM,CAAAqJ,MAAA;IACdC,MAAMtJ,KAAM,CAAAsJ,IAAA;IACZC,YAAYvJ,KAAM,CAAAuJ,UAAA;AAClBvI,IAAAA,KAAA,EAAAA,KAAA;AACAS,IAAAA,UAAA,EAAAA,UAAA;AACAD,IAAAA,UAAA,EAAAA,UAAA;AACAD,IAAAA,YAAA,EAAAA,YAAA;AACAiI,IAAAA,sBAAQzE,yBAAA,CAAAmE,aAAA,CAAAO,uCAAA,EAAAC,aAAA,CAAA,EAAA,EAAgBT,UAAA,CAAY,CAAA;AACpClI,IAAAA,QAAA,EAAAA,QAAA;AACAW,IAAAA,aAAe,EAAAgI,aAAA,CAAA;AACbC,MAAAA,QAAU,EAAAjB,gBAAAA;AAAA,KAAA,EACPhH,aAAA,CACL;AACAR,IAAAA,OAAS,EAAA4H,eAAAA;AAAA,GACX,CACF,CAAA,CAAA;AAEJ,CAAC,EAAA;AAEDrJ,UAAA,CAAWmK,WAAc,GAAA,YAAA;;;;"}