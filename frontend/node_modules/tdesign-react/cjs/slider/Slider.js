/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-0006fcfa.js');
var _typeof = require('../_chunks/dep-667ac7af.js');
var slicedToArray = require('../_chunks/dep-8e4d656d.js');
var React = require('react');
var classNames = require('classnames');
var _util_number = require('../_util/number.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var hooks_useControlled = require('../hooks/useControlled.js');
var hooks_useDefaultProps = require('../hooks/useDefaultProps.js');
var inputNumber_InputNumber = require('../input-number/InputNumber.js');
var slider_defaultProps = require('./defaultProps.js');
var slider_SliderHandleButton = require('./SliderHandleButton.js');
var slider_utils_handleNumber = require('./utils/handleNumber.js');
var isFunction = require('../_chunks/dep-ec8d2dca.js');
var isString = require('../_chunks/dep-4ed9eda4.js');
require('../_chunks/dep-00b49251.js');
require('../config-provider/ConfigContext.js');
require('../_chunks/dep-1df1dad8.js');
require('../_chunks/dep-5b5ab11b.js');
require('dayjs');
require('../_chunks/dep-f32c03f1.js');
require('../_chunks/dep-31c4bc3d.js');
require('../_chunks/dep-eea2872a.js');
require('../_chunks/dep-25585736.js');
require('../_chunks/dep-62e73936.js');
require('../_chunks/dep-64577888.js');
require('../_chunks/dep-71455db7.js');
require('../_chunks/dep-9e5a468d.js');
require('../_chunks/dep-f26edb7b.js');
require('../_chunks/dep-f33c1939.js');
require('../_chunks/dep-21ece627.js');
require('../_chunks/dep-25e4aa84.js');
require('../_chunks/dep-fc596d16.js');
require('../_chunks/dep-e1fbe1c3.js');
require('../_chunks/dep-df2b541f.js');
require('../_chunks/dep-edd366db.js');
require('../_chunks/dep-a56c4939.js');
require('../_chunks/dep-6c297e20.js');
require('../_chunks/dep-b7ad4d54.js');
require('../_chunks/dep-a2cb9299.js');
require('../_chunks/dep-f981815b.js');
require('../_util/noop.js');
require('../_chunks/dep-66114ce9.js');
require('../_chunks/dep-62d1dd66.js');
require('../_chunks/dep-7a148045.js');
require('../_chunks/dep-255ceed8.js');
require('../_chunks/dep-79629634.js');
require('tdesign-icons-react');
require('../input/index.js');
require('../input/Input.js');
require('../_chunks/dep-8fa3a4c2.js');
require('../hooks/useLayoutEffect.js');
require('../_chunks/dep-381fa848.js');
require('../_util/forwardRefWithStatics.js');
require('hoist-non-react-statics');
require('../hooks/useGlobalIcon.js');
require('../input/InputGroup.js');
require('../locale/LocalReceiver.js');
require('../config-provider/ConfigProvider.js');
require('../_chunks/dep-ab2f63ec.js');
require('../_chunks/dep-a48c7e8b.js');
require('../_chunks/dep-3d4656ee.js');
require('../_chunks/dep-0ffc9d96.js');
require('../_chunks/dep-efe6d243.js');
require('../_chunks/dep-4b18243f.js');
require('../_chunks/dep-bff2c990.js');
require('../input/defaultProps.js');
require('../_util/parseTNode.js');
require('../_chunks/dep-59671c87.js');
require('../input/useLengthLimit.js');
require('../_chunks/dep-002fcc1e.js');
require('../_chunks/dep-e4e1901e.js');
require('../_chunks/dep-2ffa3ff1.js');
require('../button/index.js');
require('../button/Button.js');
require('../hooks/useDomRefCallback.js');
require('../hooks/useRipple.js');
require('../_chunks/dep-dc4ce063.js');
require('../hooks/useAnimation.js');
require('../loading/index.js');
require('../loading/Loading.js');
require('../common/Portal.js');
require('react-dom');
require('../loading/gradient.js');
require('../loading/defaultProps.js');
require('../loading/plugin.js');
require('../_util/react-render.js');
require('../_chunks/dep-65ef8e09.js');
require('../common/PluginContainer.js');
require('../button/defaultProps.js');
require('../input-number/useInputNumber.js');
require('../_chunks/dep-e75d22fc.js');
require('../_chunks/dep-221787fe.js');
require('../hooks/useCommonClassName.js');
require('../input-number/defaultProps.js');
require('../hooks/useMouseEvent.js');
require('../tooltip/Tooltip.js');
require('../popup/index.js');
require('../popup/Popup.js');
require('react-transition-group');
require('../_util/ref.js');
require('react-is');
require('../_util/isFragment.js');
require('../hooks/useAttach.js');
require('../hooks/useMutationObserver.js');
require('../hooks/useLatest.js');
require('../_chunks/dep-eb6d55c1.js');
require('../_chunks/dep-014b9b78.js');
require('../_chunks/dep-abdd786a.js');
require('../_chunks/dep-a231fdc5.js');
require('../_chunks/dep-cf14666e.js');
require('../hooks/usePopper.js');
require('@popperjs/core');
require('react-fast-compare');
require('../hooks/useWindowSize.js');
require('../popup/defaultProps.js');
require('../popup/hooks/useTrigger.js');
require('../_util/composeRefs.js');
require('../_util/listener.js');
require('../popup/utils/transition.js');
require('../popup/PopupPlugin.js');
require('../tooltip/defaultProps.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { defineProperty._defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var LEFT_NODE = 0;
var RIGHT_NODE = 1;
var Slider = /*#__PURE__*/React__default["default"].forwardRef(function (originalProps, ref) {
  var _useConfig = hooks_useConfig["default"](),
    classPrefix = _useConfig.classPrefix;
  var props = hooks_useDefaultProps["default"](originalProps, slider_defaultProps.sliderDefaultProps);
  var disabled = props.disabled,
    inputNumberProps = props.inputNumberProps,
    label = props.label,
    layout = props.layout,
    marks = props.marks,
    max = props.max,
    min = props.min,
    range = props.range,
    step = props.step,
    tooltipProps = props.tooltipProps,
    className = props.className,
    style = props.style,
    onChange = props.onChange;
  var sliderRef = React.useRef(null);
  var _useControlled = hooks_useControlled["default"](props, "value", onChange),
    _useControlled2 = slicedToArray._slicedToArray(_useControlled, 2),
    value = _useControlled2[0],
    internalOnChange = _useControlled2[1];
  var isVertical = layout === "vertical";
  var renderValue = Array.isArray(value) ? value : [min, value];
  var start = (renderValue[LEFT_NODE] - min) / (max - min);
  var width = (renderValue[RIGHT_NODE] - renderValue[LEFT_NODE]) / (max - min);
  var end = start + width;
  var dots = React.useMemo(function () {
    if (Array.isArray(marks)) {
      if (marks.some(function (mark) {
        return typeof mark !== "number";
      })) {
        console.warn('The props "marks" only support number!');
        return [];
      }
      return marks.map(function (mark) {
        return {
          value: mark,
          position: (mark - min) / (max - min),
          label: mark
        };
      });
    }
    if (marks && _typeof._typeof(marks) === "object") {
      var result = [];
      Object.keys(marks).forEach(function (key) {
        var numberKey = Number(key);
        if (typeof numberKey !== "number") {
          console.warn('The props "marks" key only support number!');
        } else {
          result.push({
            value: numberKey,
            label: marks[numberKey],
            position: (numberKey - min) / (max - min)
          });
        }
      });
      return result;
    }
    return [];
  }, [max, min, marks]);
  var allDots = React.useMemo(function () {
    var result = [];
    for (var i = min; i <= max; i = _util_number.accAdd(i, step)) {
      result.push({
        value: i,
        position: (i - min) / (max - min)
      });
    }
    return result;
  }, [max, min, step]);
  var startDirection = isVertical ? "bottom" : "left";
  var stepDirection = isVertical ? "top" : "left";
  var sizeKey = isVertical ? "height" : "width";
  var renderDots = isVertical ? dots.map(function (item) {
    return _objectSpread(_objectSpread({}, item), {}, {
      position: 1 - item.position
    });
  }) : dots;
  var handleInputChange = function handleInputChange(newValue, nodeIndex) {
    var safeValue = Number(newValue.toFixed(32));
    var resultValue = Math.max(Math.min(max, safeValue), min);
    if (nodeIndex === LEFT_NODE && value && safeValue > value[RIGHT_NODE]) resultValue = value[RIGHT_NODE];
    if (nodeIndex === RIGHT_NODE && value && safeValue < value[LEFT_NODE]) resultValue = value[LEFT_NODE];
    if (Array.isArray(value)) {
      var arrValue = value.slice();
      arrValue[nodeIndex] = resultValue;
      internalOnChange(arrValue);
    } else {
      internalOnChange(resultValue);
    }
  };
  var createInput = function createInput(nodeIndex) {
    var inputProps = _typeof._typeof(inputNumberProps) === "object" ? inputNumberProps : {};
    var currentValue = renderValue[nodeIndex];
    return /* @__PURE__ */React__default["default"].createElement(inputNumber_InputNumber["default"], _objectSpread({
      value: currentValue,
      onChange: function onChange(v) {
        if (typeof v !== "undefined") {
          handleInputChange(Number(v), nodeIndex);
        }
      },
      className: classNames__default["default"]("".concat(classPrefix, "-slider-input"), {
        "is-vertical": isVertical
      }),
      disabled: disabled,
      theme: "column",
      min: min,
      max: max
    }, inputProps));
  };
  var nearbyValueChange = function nearbyValueChange(value2) {
    var buttonBias = Math.abs(value2 - renderValue[LEFT_NODE]) > Math.abs(value2 - renderValue[RIGHT_NODE]) ? RIGHT_NODE : LEFT_NODE;
    handleInputChange(value2, buttonBias);
  };
  var setPosition = function setPosition(position, nodeIndex) {
    var index = 0;
    var minDistance = 1;
    for (var i = 0; i < allDots.length; i++) {
      var diff = Math.abs(allDots[i].position - position);
      if (minDistance > diff) {
        index = i;
        minDistance = diff;
      }
    }
    var value2 = allDots[index].value;
    if (nodeIndex === void 0 && range) {
      nearbyValueChange(value2);
    } else {
      handleInputChange(value2, nodeIndex);
    }
  };
  var onSliderChange = function onSliderChange(event, nodeIndex) {
    if (disabled || !sliderRef.current) return;
    var clientKey = isVertical ? "clientY" : "clientX";
    var sliderPositionInfo = sliderRef.current.getBoundingClientRect();
    var sliderOffset = sliderPositionInfo[startDirection];
    var position = (event[clientKey] - sliderOffset) / sliderPositionInfo[sizeKey] * (isVertical ? -1 : 1);
    setPosition(position, nodeIndex);
  };
  var handleClickMarks = function handleClickMarks(event, value2) {
    event.stopPropagation();
    nearbyValueChange(value2);
  };
  var createHandleButton = function createHandleButton(nodeIndex, style2) {
    var currentValue = renderValue[nodeIndex];
    var tipLabel = currentValue;
    if (isFunction.isFunction(label)) {
      tipLabel = label({
        value: currentValue,
        position: nodeIndex === LEFT_NODE ? "start" : "end"
      });
    }
    if (isString.isString(label)) {
      tipLabel = label.replace(/\$\{value\}/g, currentValue.toString());
    }
    return /* @__PURE__ */React__default["default"].createElement(slider_SliderHandleButton["default"], {
      toolTipProps: _objectSpread({
        content: tipLabel
      }, tooltipProps),
      hideTips: label === false,
      classPrefix: classPrefix,
      style: style2,
      onChange: function onChange(e) {
        return onSliderChange(e, nodeIndex);
      }
    });
  };
  return /* @__PURE__ */React__default["default"].createElement("div", {
    style: _objectSpread({}, style),
    className: classNames__default["default"]("".concat(classPrefix, "-slider__container"), {
      "is-vertical": isVertical
    }),
    ref: ref
  }, /* @__PURE__ */React__default["default"].createElement("div", {
    ref: sliderRef,
    className: classNames__default["default"]("".concat(classPrefix, "-slider"), className, defineProperty._defineProperty(defineProperty._defineProperty(defineProperty._defineProperty({}, "".concat(classPrefix, "-is-disabled"), disabled), "".concat(classPrefix, "-slider--vertical"), isVertical), "".concat(classPrefix, "-slider--with-input"), inputNumberProps)),
    onClick: onSliderChange
  }, /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"]("".concat(classPrefix, "-slider__rail"))
  }, /* @__PURE__ */React__default["default"].createElement("div", {
    style: defineProperty._defineProperty(defineProperty._defineProperty({}, startDirection, slider_utils_handleNumber.numberToPercent(start)), sizeKey, slider_utils_handleNumber.numberToPercent(width)),
    className: classNames__default["default"]("".concat(classPrefix, "-slider__track"))
  }), range ? createHandleButton(LEFT_NODE, defineProperty._defineProperty({}, startDirection, slider_utils_handleNumber.numberToPercent(start))) : null, createHandleButton(RIGHT_NODE, defineProperty._defineProperty({}, startDirection, slider_utils_handleNumber.numberToPercent(end))), /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(classPrefix, "-slider__stops")
  }, renderDots.map(function (_ref) {
    var position = _ref.position,
      value2 = _ref.value;
    if (position === 0 || position === 1) {
      return null;
    }
    return /* @__PURE__ */React__default["default"].createElement("div", {
      key: value2,
      style: defineProperty._defineProperty({}, stepDirection, slider_utils_handleNumber.numberToPercent(position)),
      className: classNames__default["default"]("".concat(classPrefix, "-slider__stop"))
    });
  })), /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"]("".concat(classPrefix, "-slider__mark"))
  }, renderDots.map(function (_ref2) {
    var position = _ref2.position,
      value2 = _ref2.value,
      label2 = _ref2.label;
    return /* @__PURE__ */React__default["default"].createElement("div", {
      key: value2,
      onClick: function onClick(event) {
        return handleClickMarks(event, value2);
      },
      style: defineProperty._defineProperty({}, stepDirection, slider_utils_handleNumber.numberToPercent(position)),
      className: classNames__default["default"]("".concat(classPrefix, "-slider__mark-text"))
    }, label2);
  })))), inputNumberProps ? /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"]("".concat(classPrefix, "-slider__input-container"), {
      "is-vertical": isVertical
    })
  }, range && createInput(LEFT_NODE), range && /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(classPrefix, "-slider__center-line")
  }), createInput(RIGHT_NODE)) : null);
});
Slider.displayName = "Slider";

exports["default"] = Slider;
//# sourceMappingURL=Slider.js.map
