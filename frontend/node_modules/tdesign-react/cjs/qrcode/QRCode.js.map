{"version":3,"file":"QRCode.js","sources":["../../../components/qrcode/QRCode.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport type { ImageSettings } from '@tdesign/common-js/qrcode/types';\nimport { QRCodeCanvas } from './QRCodeCanvas';\nimport { QRCodeSVG } from './QRCodeSVG';\nimport { TdQRCodeProps } from './type';\nimport useDefaultProps from '../hooks/useDefaultProps';\nimport { qRCodeDefaultProps } from './defaultProps';\nimport useConfig from '../hooks/useConfig';\nimport { StyledProps } from '../common';\nimport { useLocaleReceiver } from '../locale/LocalReceiver';\nimport QRcodeStatus from './QRCodeStatus';\nimport useVariables from '../hooks/useVariables';\n\nexport interface QrCodeProps extends TdQRCodeProps, StyledProps {}\n\nconst QRCode: React.FC<QrCodeProps> = (props) => {\n  const {\n    className,\n    value,\n    borderless,\n    iconSize,\n    color,\n    bgColor,\n    style,\n    icon,\n    size,\n    type,\n    status,\n    onRefresh,\n    statusRender,\n    ...rest\n  } = useDefaultProps<QrCodeProps>(props, qRCodeDefaultProps);\n  const { classPrefix } = useConfig();\n  const [locale] = useLocaleReceiver('qrcode');\n\n  const { themeFgColor, themeBgColor } = useVariables({\n    themeFgColor: '--td-text-color-primary',\n    themeBgColor: '--td-bg-color-specialcomponent',\n  });\n\n  // 获取最终的背景色值。\n  const finalBgColor = useMemo(() => bgColor || themeBgColor || 'transparent', [bgColor, themeBgColor]);\n\n  if (!value) {\n    return null;\n  }\n\n  const imageSettings: ImageSettings = {\n    src: icon as string,\n    x: undefined,\n    y: undefined,\n    height: typeof iconSize === 'number' ? iconSize : iconSize?.height ?? 40,\n    width: typeof iconSize === 'number' ? iconSize : iconSize?.width ?? 40,\n    excavate: true,\n    crossOrigin: 'anonymous',\n  };\n\n  const qrCodeProps = {\n    value,\n    size,\n    bgColor: finalBgColor,\n    fgColor: color || themeFgColor,\n    imageSettings: icon ? imageSettings : undefined,\n    ...rest,\n  };\n\n  const cls = classNames(\n    `${classPrefix}-qrcode`,\n    {\n      [`${classPrefix}-borderless`]: borderless,\n      [`${classPrefix}-qrcode-svg`]: type === 'svg',\n    },\n    className,\n  );\n\n  const mergedStyle: React.CSSProperties = {\n    backgroundColor: finalBgColor,\n    ...style,\n    width: style?.width ?? size,\n    height: style?.height ?? size,\n  };\n\n  return (\n    <div {...rest} className={cls} style={mergedStyle}>\n      {status !== 'active' && (\n        <div className={`${classPrefix}-mask`}>\n          <QRcodeStatus\n            classPrefix={classPrefix}\n            locale={locale}\n            status={status}\n            onRefresh={onRefresh}\n            statusRender={statusRender}\n          />\n        </div>\n      )}\n      {type === 'canvas' ? <QRCodeCanvas {...qrCodeProps} size={size} /> : <QRCodeSVG {...qrCodeProps} size={size} />}\n    </div>\n  );\n};\n\nQRCode.displayName = 'QRCode';\n\nexport default QRCode;\n"],"names":["QRCode","props","_iconSize$height","_iconSize$width","_style$width","_style$height","_useDefaultProps","useDefaultProps","qRCodeDefaultProps","className","value","borderless","iconSize","color","bgColor","style","icon","size","type","status","onRefresh","statusRender","rest","_objectWithoutProperties","_excluded","_useConfig","useConfig","classPrefix","_useLocaleReceiver","useLocaleReceiver","_useLocaleReceiver2","_slicedToArray","locale","_useVariables","useVariables","themeFgColor","themeBgColor","finalBgColor","useMemo","imageSettings","src","x","y","height","width","excavate","crossOrigin","qrCodeProps","_objectSpread","fgColor","cls","classNames","concat","_defineProperty","mergedStyle","backgroundColor","React","createElement","QRcodeStatus","QRCodeCanvas","QRCodeSVG","displayName"],"mappings":"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"}