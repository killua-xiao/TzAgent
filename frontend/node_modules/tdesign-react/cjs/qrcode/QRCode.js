/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-0006fcfa.js');
var slicedToArray = require('../_chunks/dep-8e4d656d.js');
var objectWithoutProperties = require('../_chunks/dep-8fa3a4c2.js');
var React = require('react');
var classNames = require('classnames');
var qrcode_QRCodeCanvas = require('./QRCodeCanvas.js');
var qrcode_QRCodeSVG = require('./QRCodeSVG.js');
var hooks_useDefaultProps = require('../hooks/useDefaultProps.js');
var qrcode_defaultProps = require('./defaultProps.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var locale_LocalReceiver = require('../locale/LocalReceiver.js');
var qrcode_QRCodeStatus = require('./QRCodeStatus.js');
var hooks_useVariables = require('../hooks/useVariables.js');
require('../_chunks/dep-667ac7af.js');
require('../_chunks/dep-00b49251.js');
require('../_chunks/dep-f088ebdd.js');
require('../_chunks/dep-69792df2.js');
require('../config-provider/ConfigContext.js');
require('../_chunks/dep-1df1dad8.js');
require('../_chunks/dep-5b5ab11b.js');
require('dayjs');
require('../_chunks/dep-f32c03f1.js');
require('../_chunks/dep-31c4bc3d.js');
require('../_chunks/dep-eea2872a.js');
require('../_chunks/dep-25585736.js');
require('../_chunks/dep-62e73936.js');
require('../_chunks/dep-64577888.js');
require('../_chunks/dep-71455db7.js');
require('../_chunks/dep-9e5a468d.js');
require('../_chunks/dep-ec8d2dca.js');
require('../_chunks/dep-fc596d16.js');
require('../_chunks/dep-f26edb7b.js');
require('../_chunks/dep-f33c1939.js');
require('../_chunks/dep-21ece627.js');
require('../_chunks/dep-25e4aa84.js');
require('../_chunks/dep-e1fbe1c3.js');
require('../_chunks/dep-df2b541f.js');
require('../_chunks/dep-edd366db.js');
require('../_chunks/dep-a56c4939.js');
require('../_chunks/dep-6c297e20.js');
require('../_chunks/dep-b7ad4d54.js');
require('../_chunks/dep-a2cb9299.js');
require('../_chunks/dep-f981815b.js');
require('../_chunks/dep-4ed9eda4.js');
require('../config-provider/ConfigProvider.js');
require('../_chunks/dep-ab2f63ec.js');
require('../_chunks/dep-a48c7e8b.js');
require('../_chunks/dep-3d4656ee.js');
require('../_chunks/dep-0ffc9d96.js');
require('../_chunks/dep-efe6d243.js');
require('../_chunks/dep-4b18243f.js');
require('../_chunks/dep-bff2c990.js');
require('tdesign-icons-react');
require('../loading/index.js');
require('../loading/Loading.js');
require('../_chunks/dep-381fa848.js');
require('../common/Portal.js');
require('react-dom');
require('../hooks/useLayoutEffect.js');
require('../loading/gradient.js');
require('../_chunks/dep-dc4ce063.js');
require('../_chunks/dep-002fcc1e.js');
require('../_chunks/dep-e4e1901e.js');
require('../_chunks/dep-2ffa3ff1.js');
require('../hooks/useDomRefCallback.js');
require('../loading/defaultProps.js');
require('../loading/plugin.js');
require('../_util/react-render.js');
require('../_chunks/dep-65ef8e09.js');
require('../common/PluginContainer.js');
require('../_chunks/dep-4406837c.js');
require('../hooks/useMutationObserver.js');
require('../hooks/useLatest.js');
require('../_chunks/dep-eb6d55c1.js');
require('../_chunks/dep-014b9b78.js');
require('../_chunks/dep-abdd786a.js');
require('../_chunks/dep-a231fdc5.js');
require('../_chunks/dep-cf14666e.js');
require('../_chunks/dep-79629634.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

var _excluded = ["className", "value", "borderless", "iconSize", "color", "bgColor", "style", "icon", "size", "type", "status", "onRefresh", "statusRender"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { defineProperty._defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var QRCode = function QRCode(props) {
  var _iconSize$height, _iconSize$width, _style$width, _style$height;
  var _useDefaultProps = hooks_useDefaultProps["default"](props, qrcode_defaultProps.qRCodeDefaultProps),
    className = _useDefaultProps.className,
    value = _useDefaultProps.value,
    borderless = _useDefaultProps.borderless,
    iconSize = _useDefaultProps.iconSize,
    color = _useDefaultProps.color,
    bgColor = _useDefaultProps.bgColor,
    style = _useDefaultProps.style,
    icon = _useDefaultProps.icon,
    size = _useDefaultProps.size,
    type = _useDefaultProps.type,
    status = _useDefaultProps.status,
    onRefresh = _useDefaultProps.onRefresh,
    statusRender = _useDefaultProps.statusRender,
    rest = objectWithoutProperties._objectWithoutProperties(_useDefaultProps, _excluded);
  var _useConfig = hooks_useConfig["default"](),
    classPrefix = _useConfig.classPrefix;
  var _useLocaleReceiver = locale_LocalReceiver.useLocaleReceiver("qrcode"),
    _useLocaleReceiver2 = slicedToArray._slicedToArray(_useLocaleReceiver, 1),
    locale = _useLocaleReceiver2[0];
  var _useVariables = hooks_useVariables["default"]({
      themeFgColor: "--td-text-color-primary",
      themeBgColor: "--td-bg-color-specialcomponent"
    }),
    themeFgColor = _useVariables.themeFgColor,
    themeBgColor = _useVariables.themeBgColor;
  var finalBgColor = React.useMemo(function () {
    return bgColor || themeBgColor || "transparent";
  }, [bgColor, themeBgColor]);
  if (!value) {
    return null;
  }
  var imageSettings = {
    src: icon,
    x: void 0,
    y: void 0,
    height: typeof iconSize === "number" ? iconSize : (_iconSize$height = iconSize === null || iconSize === void 0 ? void 0 : iconSize.height) !== null && _iconSize$height !== void 0 ? _iconSize$height : 40,
    width: typeof iconSize === "number" ? iconSize : (_iconSize$width = iconSize === null || iconSize === void 0 ? void 0 : iconSize.width) !== null && _iconSize$width !== void 0 ? _iconSize$width : 40,
    excavate: true,
    crossOrigin: "anonymous"
  };
  var qrCodeProps = _objectSpread({
    value: value,
    size: size,
    bgColor: finalBgColor,
    fgColor: color || themeFgColor,
    imageSettings: icon ? imageSettings : void 0
  }, rest);
  var cls = classNames__default["default"]("".concat(classPrefix, "-qrcode"), defineProperty._defineProperty(defineProperty._defineProperty({}, "".concat(classPrefix, "-borderless"), borderless), "".concat(classPrefix, "-qrcode-svg"), type === "svg"), className);
  var mergedStyle = _objectSpread(_objectSpread({
    backgroundColor: finalBgColor
  }, style), {}, {
    width: (_style$width = style === null || style === void 0 ? void 0 : style.width) !== null && _style$width !== void 0 ? _style$width : size,
    height: (_style$height = style === null || style === void 0 ? void 0 : style.height) !== null && _style$height !== void 0 ? _style$height : size
  });
  return /* @__PURE__ */React__default["default"].createElement("div", _objectSpread(_objectSpread({}, rest), {}, {
    className: cls,
    style: mergedStyle
  }), status !== "active" && /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(classPrefix, "-mask")
  }, /* @__PURE__ */React__default["default"].createElement(qrcode_QRCodeStatus["default"], {
    classPrefix: classPrefix,
    locale: locale,
    status: status,
    onRefresh: onRefresh,
    statusRender: statusRender
  })), type === "canvas" ? /* @__PURE__ */React__default["default"].createElement(qrcode_QRCodeCanvas.QRCodeCanvas, _objectSpread(_objectSpread({}, qrCodeProps), {}, {
    size: size
  })) : /* @__PURE__ */React__default["default"].createElement(qrcode_QRCodeSVG.QRCodeSVG, _objectSpread(_objectSpread({}, qrCodeProps), {}, {
    size: size
  })));
};
QRCode.displayName = "QRCode";

exports["default"] = QRCode;
//# sourceMappingURL=QRCode.js.map
