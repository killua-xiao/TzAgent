{"version":3,"file":"dep-d5e8c967.js","sources":["../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_customOmitClone.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/omit.js"],"sourcesContent":["import isPlainObject from './isPlainObject.js';\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nexport default customOmitClone;\n","import arrayMap from './_arrayMap.js';\nimport baseClone from './_baseClone.js';\nimport baseUnset from './_baseUnset.js';\nimport castPath from './_castPath.js';\nimport copyObject from './_copyObject.js';\nimport customOmitClone from './_customOmitClone.js';\nimport flatRest from './_flatRest.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nexport default omit;\n"],"names":["customOmitClone","value","isPlainObject","undefined","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","omit","flatRest","object","paths","result","isDeep","arrayMap","path","castPath","length","copyObject","getAllKeysIn","baseClone","baseUnset"],"mappings":";;;;;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,eAAeA,CAACC,KAAK,EAAE;AAC9B,EAAA,OAAOC,2BAAa,CAACD,KAAK,CAAC,GAAGE,SAAS,GAAGF,KAAK,CAAA;AACjD;;ACJA;AACA,IAAIG,eAAe,GAAG,CAAC;AACnBC,EAAAA,eAAe,GAAG,CAAC;AACnBC,EAAAA,kBAAkB,GAAG,CAAC,CAAA;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIC,IAAI,GAAGC,kBAAQ,CAAC,UAASC,MAAM,EAAEC,KAAK,EAAE;EAC1C,IAAIC,MAAM,GAAG,EAAE,CAAA;EACf,IAAIF,MAAM,IAAI,IAAI,EAAE;AAClB,IAAA,OAAOE,MAAM,CAAA;AACf,GAAA;EACA,IAAIC,MAAM,GAAG,KAAK,CAAA;AAClBF,EAAAA,KAAK,GAAGG,iBAAQ,CAACH,KAAK,EAAE,UAASI,IAAI,EAAE;AACrCA,IAAAA,IAAI,GAAGC,iBAAQ,CAACD,IAAI,EAAEL,MAAM,CAAC,CAAA;IAC7BG,MAAM,KAAKA,MAAM,GAAGE,IAAI,CAACE,MAAM,GAAG,CAAC,CAAC,CAAA;AACpC,IAAA,OAAOF,IAAI,CAAA;AACb,GAAC,CAAC,CAAA;EACFG,2BAAU,CAACR,MAAM,EAAES,uBAAY,CAACT,MAAM,CAAC,EAAEE,MAAM,CAAC,CAAA;AAChD,EAAA,IAAIC,MAAM,EAAE;AACVD,IAAAA,MAAM,GAAGQ,oBAAS,CAACR,MAAM,EAAEP,eAAe,GAAGC,eAAe,GAAGC,kBAAkB,EAAEN,eAAe,CAAC,CAAA;AACrG,GAAA;AACA,EAAA,IAAIgB,MAAM,GAAGN,KAAK,CAACM,MAAM,CAAA;EACzB,OAAOA,MAAM,EAAE,EAAE;AACfI,IAAAA,oBAAS,CAACT,MAAM,EAAED,KAAK,CAACM,MAAM,CAAC,CAAC,CAAA;AAClC,GAAA;AACA,EAAA,OAAOL,MAAM,CAAA;AACf,CAAC,CAAC,CAAA;AAEF,aAAeJ,IAAI;;;;"}