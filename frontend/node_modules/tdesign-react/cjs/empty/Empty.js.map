{"version":3,"file":"Empty.js","sources":["../../../components/empty/Empty.tsx"],"sourcesContent":["import React, { isValidElement } from 'react';\nimport type { ReactNode } from 'react';\nimport cls from 'classnames';\nimport { isObject, isString } from 'lodash-es';\nimport useDefaultProps from '../hooks/useDefaultProps';\nimport useConfig from '../hooks/useConfig';\nimport { useLocaleReceiver } from '../locale/LocalReceiver';\nimport { emptyDefaultProps } from './defaultProps';\nimport type { TdEmptyProps } from './type';\nimport type { StyledProps } from '../common';\nimport Image from '../image';\nimport MaintenanceSvg from './assets/MaintenanceSvg';\nimport NetworkErrorSvg from './assets/NetworkErrorSvg';\nimport EmptySvg from './assets/EmptySvg';\nimport FailSvg from './assets/FailSvg';\nimport SuccessSvg from './assets/SuccessSvg';\n\nexport interface EmptyProps extends TdEmptyProps, StyledProps {}\n\nfunction getImageIns(data: EmptyProps['image']) {\n  let result = data;\n  if (isValidElement(data)) {\n    result = data;\n  } else if (isObject(data)) {\n    result = <Image {...(data as any)} />;\n  } else if (isString(data)) {\n    result = <Image src={data} />;\n  }\n\n  return data ? (result as ReactNode) : null;\n}\n\nconst Empty: React.FC<EmptyProps> = (props) => {\n  const {\n    image: propsImage,\n    imageStyle,\n    description: propsDescription,\n    title: propsTitle,\n    type,\n    action,\n    style,\n    className,\n    size = 'medium',\n  } = useDefaultProps(props, emptyDefaultProps);\n\n  const { classPrefix, empty } = useConfig();\n  const [local, t] = useLocaleReceiver('empty');\n\n  const defaultMaps: {\n    [key in EmptyProps['type']]?: Pick<EmptyProps, 'image' | 'title'>;\n  } = {\n    maintenance: {\n      image: empty.image.maintenance || <MaintenanceSvg />,\n      title: empty.titleText.maintenance || t(local.titleText.maintenance),\n    },\n    success: {\n      image: empty.image.success || <SuccessSvg />,\n      title: empty.titleText.success || t(local.titleText.success),\n    },\n    fail: {\n      image: empty.image.fail || <FailSvg />,\n      title: empty.titleText.fail || t(local.titleText.fail),\n    },\n    'network-error': {\n      image: empty.image.networkError || <NetworkErrorSvg />,\n      title: empty.titleText.networkError || t(local.titleText.networkError),\n    },\n    empty: {\n      image: empty.image.empty || <EmptySvg />,\n      title: empty.titleText.empty || t(local.titleText.empty),\n    },\n  };\n\n  const defaultSize = {\n    small: `${classPrefix}-size-s`,\n    medium: `${classPrefix}-size`,\n    large: `${classPrefix}-size-l`,\n  };\n\n  const prefix = `${classPrefix}-empty`;\n  const emptyClasses = cls(prefix, className, defaultSize[size]);\n  const titleClasses = cls(`${prefix}__title`);\n  const imageClasses = cls(`${prefix}__image`);\n  const descriptionClasses = cls(`${prefix}__description`);\n  const actionCls = cls(`${prefix}__action`);\n\n  const typeImageProps = defaultMaps[type] ?? null;\n\n  const { image, description, title } = {\n    image: propsImage ? propsImage : typeImageProps?.image ?? null,\n    title: propsTitle ? propsTitle : typeImageProps?.title ?? null,\n    description: propsDescription,\n  };\n\n  function renderTitle() {\n    if (!title) {\n      return null;\n    }\n    return <div className={titleClasses}>{title}</div>;\n  }\n\n  function renderDescription() {\n    if (!description) {\n      return null;\n    }\n    return <div className={descriptionClasses}>{description}</div>;\n  }\n\n  const imageContent = getImageIns(image);\n\n  return (\n    <div className={emptyClasses} style={style}>\n      {imageContent ? (\n        <div className={imageClasses} style={imageStyle}>\n          {imageContent}\n        </div>\n      ) : null}\n      {renderTitle()}\n      {renderDescription()}\n      {action ? <div className={actionCls}>{action}</div> : null}\n    </div>\n  );\n};\n\nexport default Empty;\n"],"names":["getImageIns","data","result","isValidElement","isObject","React","createElement","Image","_objectSpread","isString","src","Empty","props","_defaultMaps$type","_typeImageProps$image","_typeImageProps$title","_useDefaultProps","useDefaultProps","emptyDefaultProps","propsImage","image","imageStyle","propsDescription","description","propsTitle","title","type","action","style","className","_useDefaultProps$size","size","_useConfig","useConfig","classPrefix","empty","_useLocaleReceiver","useLocaleReceiver","_useLocaleReceiver2","_slicedToArray","local","t","defaultMaps","maintenance","MaintenanceSvg","titleText","success","SuccessSvg","fail","FailSvg","networkError","NetworkErrorSvg","EmptySvg","defaultSize","small","medium","large","prefix","emptyClasses","cls","titleClasses","concat","imageClasses","descriptionClasses","actionCls","typeImageProps","_image$title$descript","renderTitle","renderDescription","imageContent"],"mappings":"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"}