{"version":3,"file":"scroll.js","sources":["../../../components/_util/scroll.ts"],"sourcesContent":["import { isString } from 'lodash-es';\nimport raf from 'raf';\nimport { ScrollContainer, ScrollContainerElement } from '../common';\nimport { isWindow } from './dom';\nimport { easeInOutCubic, EasingFunction } from './easing';\n\nexport function hasBodyScrollbar() {\n  return document.body.scrollHeight > document.documentElement.clientHeight;\n}\n\n// 用于判断节点内容是否溢出\nexport const isNodeOverflow = (ele: Element | Element[]): boolean => {\n  const { clientWidth = 0, scrollWidth = 0 } = ele as Element & { clientWidth: number; scrollWidth: number };\n\n  if (scrollWidth > clientWidth) {\n    return true;\n  }\n  return false;\n};\n\n/**\n * 获取滚动容器\n * 因为 document 不存在 scroll 等属性, 因此排除 document\n * window | HTMLElement\n * @param {ScrollContainerElement} [container='body']\n * @returns {ScrollContainer}\n */\nexport const getScrollContainer = (container: ScrollContainer = 'body'): ScrollContainerElement => {\n  if (isString(container)) {\n    return container ? (document.querySelector(container) as HTMLElement) : window;\n  }\n  if (typeof container === 'function') {\n    return container();\n  }\n  return container || window;\n};\n\n/**\n * 获取滚动距离\n *\n * @export\n * @param {ScrollTarget} target\n * @param {boolean} isLeft true 为获取 scrollLeft, false 为获取 scrollTop\n * @returns {number}\n */\nexport function getScroll(target: ScrollTarget, isLeft?: boolean): number {\n  // node 环境或者 target 为空\n  if (typeof window === 'undefined' || !target) {\n    return 0;\n  }\n  const method = isLeft ? 'scrollLeft' : 'scrollTop';\n  let result = 0;\n  if (isWindow(target)) {\n    result = (target as Window)[isLeft ? 'pageXOffset' : 'pageYOffset'];\n  } else if (target instanceof Document) {\n    result = target.documentElement[method];\n  } else if (target) {\n    result = (target as HTMLElement)[method];\n  }\n  return result;\n}\n\nexport type ScrollTarget = HTMLElement | Window | Document;\n\ninterface ScrollTopOptions {\n  container?: ScrollTarget;\n  duration?: number;\n  easing?: EasingFunction;\n}\n\nexport function scrollTo(target: number, opt: ScrollTopOptions) {\n  const { container = window, duration = 450, easing = easeInOutCubic } = opt;\n  const scrollTop = getScroll(container);\n  const startTime = Date.now();\n  return new Promise((res) => {\n    const fnc = () => {\n      const timestamp = Date.now();\n      const time = timestamp - startTime;\n      const nextScrollTop = easing(Math.min(time, duration), scrollTop, target, duration);\n      if (isWindow(container)) {\n        (container as Window).scrollTo(window.pageXOffset, nextScrollTop);\n      } else if (\n        typeof HTMLDocument !== 'undefined' &&\n        (container instanceof HTMLDocument || container.constructor.name === 'HTMLDocument')\n      ) {\n        (container as HTMLDocument).documentElement.scrollTop = nextScrollTop;\n      } else {\n        (container as HTMLElement).scrollTop = nextScrollTop;\n      }\n      if (time < duration) {\n        raf(fnc);\n      } else {\n        // 由于上面步骤设置了 scrollTop, 滚动事件可能未触发完毕\n        // 此时应该在下一帧再执行 res\n        raf(res);\n      }\n    };\n    raf(fnc);\n  });\n}\n\n/**\n * 获取当前视图滑动的距离\n * @returns { scrollTop: number, scrollLeft: number }\n */\nexport function getWindowScroll(): { scrollTop: number; scrollLeft: number } {\n  const { body } = document;\n  const docElm = document.documentElement;\n  const scrollTop = window.pageYOffset || docElm.scrollTop || body.scrollTop;\n  const scrollLeft = window.pageXOffset || docElm.scrollLeft || body.scrollLeft;\n\n  return { scrollTop, scrollLeft };\n}\n\nexport type AnchorContainer = HTMLElement | Window;\n\nexport function getOffsetTop(target: HTMLElement, container: AnchorContainer) {\n  const { top } = target.getBoundingClientRect();\n  if (container === window) {\n    // 减去 document 的边框\n    return top - document.documentElement.clientTop;\n  }\n  return top - (container as HTMLElement).getBoundingClientRect().top;\n}\n"],"names":["hasBodyScrollbar","document","body","scrollHeight","documentElement","clientHeight","isNodeOverflow","ele","_ele$clientWidth","clientWidth","_ele$scrollWidth","scrollWidth","getScrollContainer","container","arguments","length","undefined","isString","querySelector","window","getScroll","target","isLeft","method","result","isWindow","Document","scrollTo","opt","_opt$container","_opt$duration","duration","_opt$easing","easing","easeInOutCubic","scrollTop","startTime","Date","now","Promise","res","fnc","timestamp","time","nextScrollTop","Math","min","pageXOffset","HTMLDocument","constructor","name","raf","getWindowScroll","_document","docElm","pageYOffset","scrollLeft","getOffsetTop","_target$getBoundingCl","getBoundingClientRect","top","clientTop"],"mappings":"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"}