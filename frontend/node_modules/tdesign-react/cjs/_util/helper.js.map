{"version":3,"file":"helper.js","sources":["../../../components/_util/helper.ts"],"sourcesContent":["import { camelCase } from 'lodash-es';\n\nexport function omit(obj: object, fields: string[]): object {\n  const shallowCopy = {\n    ...obj,\n  };\n  for (let i = 0; i < fields.length; i++) {\n    const key = fields[i];\n    delete shallowCopy[key];\n  }\n  return shallowCopy;\n}\n\nexport function removeEmptyAttrs<T>(obj: T): Partial<T> {\n  const newObj = {};\n\n  Object.keys(obj).forEach((key) => {\n    if (typeof obj[key] !== 'undefined' || obj[key] === null) {\n      newObj[key] = obj[key];\n    }\n  });\n\n  return newObj;\n}\n\nexport function getTabElementByValue(tabs: [] = [], value: string): object {\n  const [result] = tabs.filter((item) => {\n    const { id } = item as any;\n    return id === value;\n  });\n  return result || null;\n}\n\nexport function firstUpperCase(str: string): string {\n  return str.toLowerCase().replace(/( |^)[a-z]/g, (char: string) => char.toUpperCase());\n}\n\nexport type Gradients = { [percent: string]: string };\nexport type FromTo = { from: string; to: string };\nexport type LinearGradient = { direction?: string } & (Gradients | FromTo);\nexport function getBackgroundColor(color: string | string[] | LinearGradient): string {\n  if (typeof color === 'string') {\n    return color;\n  }\n  if (Array.isArray(color)) {\n    if (color[0] && color[0][0] === '#') {\n      color.unshift('90deg');\n    }\n    return `linear-gradient( ${color.join(',')} )`;\n  }\n  const { from, to, direction = 'to right', ...rest } = color;\n  let keys = Object.keys(rest);\n  if (keys.length) {\n    keys = keys.sort((a, b) => parseFloat(a.substr(0, a.length - 1)) - parseFloat(b.substr(0, b.length - 1)));\n    const tempArr = keys.map((key: any) => `${rest[key]} ${key}`);\n    return `linear-gradient(${direction}, ${tempArr.join(',')})`;\n  }\n  return `linear-gradient(${direction}, ${from}, ${to})`;\n}\n\n// keyboard-event => onKeyboardEvent\nexport function getPropsApiByEvent(eventName: string) {\n  return camelCase(`on-${eventName}`);\n}\n\n/**\n * 兼容样式中支持 number/string 类型的传值 得出最后的结果。\n * @param param number 或 string 类型的可用于样式上的值\n * @returns 可使用的样式值。\n */\nexport function pxCompat(param: string | number) {\n  return typeof param === 'number' ? `${param}px` : param;\n}\n\n/**\n * 获取元素相对于容器(祖先)的偏移量\n * @param element 目标元素\n * @param container 容器元素\n * @returns 相对于容器的偏移量\n */\nexport function getOffsetTopToContainer(element: HTMLElement, container: HTMLElement) {\n  let { offsetTop } = element;\n\n  let current = element.offsetParent as HTMLElement;\n  while (current && current !== container) {\n    offsetTop += current.offsetTop;\n    current = current.offsetParent as HTMLElement;\n  }\n  return offsetTop;\n}\n"],"names":["omit","obj","fields","shallowCopy","_objectSpread","i","length","key","removeEmptyAttrs","newObj","Object","keys","forEach","getTabElementByValue","tabs","arguments","undefined","value","_tabs$filter","filter","item","id","_tabs$filter2","_slicedToArray","result","firstUpperCase","str","toLowerCase","replace","char","toUpperCase","getBackgroundColor","color","Array","isArray","unshift","concat","join","from","to","_color$direction","direction","rest","_excluded","sort","a","b","parseFloat","substr","tempArr","map","getPropsApiByEvent","eventName","camelCase","pxCompat","param","getOffsetTopToContainer","element","container","offsetTop","current","offsetParent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEgB,SAAAA,IAAAA,CAAKC,KAAaC,MAA0B,EAAA;AAC1D,EAAA,IAAMC,WAAc,GAAAC,aAAA,CAAA,EAAA,EACfH,GAAA,CACL,CAAA;AACA,EAAA,KAAA,IAASI,CAAI,GAAA,CAAA,EAAGA,CAAI,GAAAH,MAAA,CAAOI,QAAQD,CAAK,EAAA,EAAA;AACtC,IAAA,IAAME,MAAML,MAAO,CAAAG,CAAA,CAAA,CAAA;IACnB,OAAOF,WAAY,CAAAI,GAAA,CAAA,CAAA;AACrB,GAAA;AACO,EAAA,OAAAJ,WAAA,CAAA;AACT,CAAA;AAEO,SAASK,iBAAoBP,GAAoB,EAAA;EACtD,IAAMQ,SAAS,EAAC,CAAA;EAEhBC,MAAA,CAAOC,IAAK,CAAAV,GAAG,CAAE,CAAAW,OAAA,CAAQ,UAACL,GAAQ,EAAA;AAChC,IAAA,IAAI,OAAON,GAAI,CAAAM,GAAA,CAAA,KAAS,WAAe,IAAAN,GAAA,CAAIM,SAAS,IAAM,EAAA;AACxDE,MAAAA,MAAA,CAAOF,OAAON,GAAI,CAAAM,GAAA,CAAA,CAAA;AACpB,KAAA;AACF,GAAC,CAAA,CAAA;AAEM,EAAA,OAAAE,MAAA,CAAA;AACT,CAAA;AAEO,SAASI,oBAAqBA,GAAsC;AAAA,EAAA,IAAtCC,IAAA,GAAAC,SAAA,CAAAT,MAAA,GAAA,CAAA,IAAAS,SAAA,CAAA,CAAA,CAAA,KAAAC,SAAA,GAAAD,SAAA,CAAA,CAAA,CAAA,GAAW,EAAC,CAAA;EAAA,IAAGE,KAAuB,GAAAF,SAAA,CAAAT,MAAA,GAAAS,CAAAA,GAAAA,SAAA,MAAAC,SAAA,CAAA;EACzE,IAAAE,YAAA,GAAiBJ,IAAK,CAAAK,MAAA,CAAO,UAACC,IAAS,EAAA;AAC/B,MAAA,IAAEC,KAAOD,IAAA,CAAPC;MACR,OAAOA,EAAO,KAAAJ,KAAA,CAAA;AAChB,KAAC,CAAA;IAAAK,aAAA,GAAAC,4BAAA,CAAAL,YAAA,EAAA,CAAA,CAAA;AAHMM,IAAAA,MAAM,GAAAF,aAAA,CAAA,CAAA,CAAA,CAAA;EAIb,OAAOE,MAAU,IAAA,IAAA,CAAA;AACnB,CAAA;AAEO,SAASC,eAAeC,GAAqB,EAAA;EAC3C,OAAAA,GAAA,CAAIC,aAAc,CAAAC,OAAA,CAAQ,eAAe,UAACC,KAAA,EAAA;AAAA,IAAA,OAAiBA,KAAK,CAAAC,WAAA,EAAa,CAAA;GAAA,CAAA,CAAA;AACtF,CAAA;AAKO,SAASC,mBAAmBC,KAAmD,EAAA;AAChF,EAAA,IAAA,OAAOA,UAAU,QAAU,EAAA;AACtB,IAAA,OAAAA,KAAA,CAAA;AACT,GAAA;AACI,EAAA,IAAAC,KAAA,CAAMC,OAAQ,CAAAF,KAAK,CAAG,EAAA;AACxB,IAAA,IAAIA,KAAM,CAAA,CAAA,CAAA,IAAMA,KAAM,CAAA,CAAA,CAAA,CAAG,OAAO,GAAK,EAAA;AACnCA,MAAAA,KAAA,CAAMG,QAAQ,OAAO,CAAA,CAAA;AACvB,KAAA;AACO,IAAA,OAAA,mBAAA,CAAAC,MAAA,CAAoBJ,KAAM,CAAAK,IAAA,CAAK,GAAG,CAAA,EAAA,IAAA,CAAA,CAAA;AAC3C,GAAA;AACA,EAAA,IAAQC,IAAM,GAAwCN,KAAA,CAA9CM,IAAM;IAAAC,EAAA,GAAwCP,KAAA,CAAxCO,EAAA;IAAAC,gBAAA,GAAwCR,KAAA,CAApCS,SAAY;AAAZA,IAAAA,SAAY,GAAAD,gBAAA,KAAA,KAAA,CAAA,GAAA,UAAA,GAAAA,gBAAA;AAAeE,IAAAA,wDAASV,KAAA,EAAAW,SAAA,CAAA,CAAA;AAClD,EAAA,IAAAhC,IAAA,GAAOD,MAAO,CAAAC,IAAA,CAAK+B,IAAI,CAAA,CAAA;EAC3B,IAAI/B,KAAKL,MAAQ,EAAA;IACRK,IAAA,GAAAA,IAAA,CAAKiC,KAAK,UAACC,CAAA,EAAGC;aAAMC,UAAW,CAAAF,CAAA,CAAEG,MAAO,CAAA,CAAA,EAAGH,CAAE,CAAAvC,MAAA,GAAS,CAAC,CAAC,CAAA,GAAIyC,WAAWD,CAAE,CAAAE,MAAA,CAAO,GAAGF,CAAE,CAAAxC,MAAA,GAAS,CAAC,CAAC,CAAC,CAAA;KAAA,CAAA,CAAA;AAClG,IAAA,IAAA2C,OAAA,GAAUtC,KAAKuC,GAAI,CAAA,UAAC3C;uBAAgBmC,IAAA,CAAKnC,kBAAQA,GAAK,CAAA,CAAA;AAAA,KAAA,CAAA,CAAA;IAC5D,OAAA6B,kBAAAA,CAAAA,MAAA,CAA0BK,SAAA,EAAAL,IAAAA,CAAAA,CAAAA,MAAA,CAAca,OAAQ,CAAAZ,IAAA,CAAK,GAAG,CAAA,EAAA,GAAA,CAAA,CAAA;AAC1D,GAAA;EACO,OAAAD,kBAAAA,CAAAA,MAAA,CAAmBK,wBAAcH,IAAS,EAAA,IAAA,CAAA,CAAAF,MAAA,CAAAG,EAAA,EAAA,GAAA,CAAA,CAAA;AACnD,CAAA;AAGO,SAASY,mBAAmBC,SAAmB,EAAA;AAC7C,EAAA,OAAAC,mBAAA,CAAAjB,KAAAA,CAAAA,MAAA,CAAgBgB,SAAW,CAAA,CAAA,CAAA;AACpC,CAAA;AAOO,SAASE,SAASC,KAAwB,EAAA;EAC/C,OAAO,OAAOA,KAAA,KAAU,QAAW,MAAAnB,MAAA,CAAGmB,KAAY,EAAA,IAAA,CAAA,GAAAA,KAAA,CAAA;AACpD,CAAA;AAQgB,SAAAC,uBAAAA,CAAwBC,SAAsBC,SAAwB,EAAA;AAChF,EAAA,IAAEC,YAAcF,OAAA,CAAdE;AAEN,EAAA,IAAIC,UAAUH,OAAQ,CAAAI,YAAA,CAAA;AACf,EAAA,OAAAD,OAAA,IAAWA,YAAYF,SAAW,EAAA;IACvCC,SAAA,IAAaC,OAAQ,CAAAD,SAAA,CAAA;IACrBC,OAAA,GAAUA,OAAQ,CAAAC,YAAA,CAAA;AACpB,GAAA;AACO,EAAA,OAAAF,SAAA,CAAA;AACT;;;;;;;;;;;"}