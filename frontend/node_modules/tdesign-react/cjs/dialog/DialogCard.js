/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var objectWithoutProperties = require('../_chunks/dep-8fa3a4c2.js');
var slicedToArray = require('../_chunks/dep-8e4d656d.js');
var defineProperty = require('../_chunks/dep-0006fcfa.js');
var React = require('react');
var classNames = require('classnames');
var tdesignIconsReact = require('tdesign-icons-react');
var button_index = require('../button/index.js');
var _util_parseTNode = require('../_util/parseTNode.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var hooks_useGlobalIcon = require('../hooks/useGlobalIcon.js');
var locale_LocalReceiver = require('../locale/LocalReceiver.js');
var dialog_defaultProps = require('./defaultProps.js');
var hooks_useDefaultProps = require('../hooks/useDefaultProps.js');
var isString = require('../_chunks/dep-4ed9eda4.js');
var isObject = require('../_chunks/dep-fc596d16.js');
var isFunction = require('../_chunks/dep-ec8d2dca.js');
require('../_chunks/dep-00b49251.js');
require('../_chunks/dep-667ac7af.js');
require('../button/Button.js');
require('../hooks/useDomRefCallback.js');
require('../hooks/useRipple.js');
require('../_chunks/dep-dc4ce063.js');
require('../hooks/useAnimation.js');
require('../config-provider/ConfigContext.js');
require('../_chunks/dep-1df1dad8.js');
require('../_chunks/dep-5b5ab11b.js');
require('dayjs');
require('../_chunks/dep-f32c03f1.js');
require('../_chunks/dep-31c4bc3d.js');
require('../_chunks/dep-eea2872a.js');
require('../_chunks/dep-25585736.js');
require('../_chunks/dep-62e73936.js');
require('../_chunks/dep-64577888.js');
require('../_chunks/dep-71455db7.js');
require('../_chunks/dep-9e5a468d.js');
require('../_chunks/dep-f26edb7b.js');
require('../_chunks/dep-f33c1939.js');
require('../_chunks/dep-21ece627.js');
require('../_chunks/dep-25e4aa84.js');
require('../_chunks/dep-e1fbe1c3.js');
require('../_chunks/dep-df2b541f.js');
require('../_chunks/dep-edd366db.js');
require('../_chunks/dep-a56c4939.js');
require('../_chunks/dep-6c297e20.js');
require('../_chunks/dep-b7ad4d54.js');
require('../_chunks/dep-a2cb9299.js');
require('../_chunks/dep-f981815b.js');
require('../_chunks/dep-381fa848.js');
require('../loading/index.js');
require('../loading/Loading.js');
require('../common/Portal.js');
require('react-dom');
require('../hooks/useLayoutEffect.js');
require('../loading/gradient.js');
require('../_chunks/dep-002fcc1e.js');
require('../_chunks/dep-e4e1901e.js');
require('../_chunks/dep-2ffa3ff1.js');
require('../loading/defaultProps.js');
require('../loading/plugin.js');
require('../_util/react-render.js');
require('../_chunks/dep-65ef8e09.js');
require('../common/PluginContainer.js');
require('../config-provider/ConfigProvider.js');
require('../_chunks/dep-ab2f63ec.js');
require('../_chunks/dep-a48c7e8b.js');
require('../_chunks/dep-3d4656ee.js');
require('../_chunks/dep-0ffc9d96.js');
require('../_chunks/dep-efe6d243.js');
require('../_chunks/dep-4b18243f.js');
require('../_chunks/dep-bff2c990.js');
require('../button/defaultProps.js');
require('../_chunks/dep-59671c87.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

var _excluded = ["theme", "header", "closeBtn", "footer", "body", "children", "className", "onCancel", "onConfirm", "onCloseBtnClick", "cancelBtn", "confirmBtn", "confirmLoading"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { defineProperty._defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var renderDialogButton = function renderDialogButton(btn, defaultProps) {
  var result = null;
  if (isString.isString(btn)) {
    result = /* @__PURE__ */React__default["default"].createElement(button_index.Button, _objectSpread({}, defaultProps), btn);
  } else if (/*#__PURE__*/React.isValidElement(btn)) {
    result = btn;
  } else if (isObject.isObject(btn)) {
    result = /* @__PURE__ */React__default["default"].createElement(button_index.Button, _objectSpread(_objectSpread({}, defaultProps), btn));
  } else if (isFunction.isFunction(btn)) {
    result = btn();
  }
  return result;
};
var DialogCard = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var _useConfig = hooks_useConfig["default"](),
    classPrefix = _useConfig.classPrefix;
  var componentCls = "".concat(classPrefix, "-dialog");
  var _useGlobalIcon = hooks_useGlobalIcon["default"]({
      CloseIcon: tdesignIconsReact.CloseIcon,
      InfoCircleFilledIcon: tdesignIconsReact.InfoCircleFilledIcon,
      CheckCircleFilledIcon: tdesignIconsReact.CheckCircleFilledIcon
    }),
    CloseIcon = _useGlobalIcon.CloseIcon,
    InfoCircleFilledIcon = _useGlobalIcon.InfoCircleFilledIcon,
    CheckCircleFilledIcon = _useGlobalIcon.CheckCircleFilledIcon;
  var _useLocaleReceiver = locale_LocalReceiver.useLocaleReceiver("dialog"),
    _useLocaleReceiver2 = slicedToArray._slicedToArray(_useLocaleReceiver, 2),
    local = _useLocaleReceiver2[0],
    t = _useLocaleReceiver2[1];
  var confirmText = t(local.confirm);
  var cancelText = t(local.cancel);
  var _useDefaultProps = hooks_useDefaultProps["default"](props, dialog_defaultProps.dialogCardDefaultProps),
    theme = _useDefaultProps.theme,
    header = _useDefaultProps.header,
    closeBtn = _useDefaultProps.closeBtn,
    footer = _useDefaultProps.footer,
    body = _useDefaultProps.body,
    children = _useDefaultProps.children,
    className = _useDefaultProps.className,
    onCancel = _useDefaultProps.onCancel,
    onConfirm = _useDefaultProps.onConfirm,
    onCloseBtnClick = _useDefaultProps.onCloseBtnClick,
    _useDefaultProps$canc = _useDefaultProps.cancelBtn,
    cancelBtn = _useDefaultProps$canc === void 0 ? cancelText : _useDefaultProps$canc,
    _useDefaultProps$conf = _useDefaultProps.confirmBtn,
    confirmBtn = _useDefaultProps$conf === void 0 ? confirmText : _useDefaultProps$conf,
    confirmLoading = _useDefaultProps.confirmLoading,
    otherProps = objectWithoutProperties._objectWithoutProperties(_useDefaultProps, _excluded);
  var renderHeaderContent = function renderHeaderContent() {
    var iconMap = {
      info: /* @__PURE__ */React__default["default"].createElement(InfoCircleFilledIcon, {
        className: "".concat(classPrefix, "-is-info")
      }),
      warning: /* @__PURE__ */React__default["default"].createElement(InfoCircleFilledIcon, {
        className: "".concat(classPrefix, "-is-warning")
      }),
      error: /* @__PURE__ */React__default["default"].createElement(InfoCircleFilledIcon, {
        className: "".concat(classPrefix, "-is-error")
      }),
      danger: /* @__PURE__ */React__default["default"].createElement(InfoCircleFilledIcon, {
        className: "".concat(classPrefix, "-is-error")
      }),
      success: /* @__PURE__ */React__default["default"].createElement(CheckCircleFilledIcon, {
        className: "".concat(classPrefix, "-is-success")
      })
    };
    return /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(componentCls, "__header-content")
    }, iconMap[theme], header);
  };
  var renderCloseBtn = function renderCloseBtn() {
    if (!closeBtn) {
      return null;
    }
    var closeIcon = function closeIcon() {
      return closeBtn === true ? /* @__PURE__ */React__default["default"].createElement(CloseIcon, null) : closeBtn;
    };
    return /* @__PURE__ */React__default["default"].createElement("span", {
      className: "".concat(componentCls, "__close"),
      style: {
        marginLeft: "auto"
      },
      onClick: function onClick(e) {
        return onCloseBtnClick === null || onCloseBtnClick === void 0 ? void 0 : onCloseBtnClick({
          e: e
        });
      }
    }, closeIcon());
  };
  var renderHeader = function renderHeader() {
    return /* @__PURE__ */React__default["default"].createElement("div", {
      className: classNames__default["default"]("".concat(componentCls, "__header"))
    }, renderHeaderContent(), renderCloseBtn());
  };
  var renderFooter = function renderFooter() {
    var defaultFooter = function defaultFooter() {
      var _cancelBtn$props;
      var renderCancelBtn = renderDialogButton(cancelBtn, {
        variant: "outline",
        onClick: function onClick(e) {
          return onCancel === null || onCancel === void 0 ? void 0 : onCancel({
            e: e
          });
        },
        className: classNames__default["default"]("".concat(componentCls, "__cancel"), cancelBtn === null || cancelBtn === void 0 || (_cancelBtn$props = cancelBtn.props) === null || _cancelBtn$props === void 0 ? void 0 : _cancelBtn$props.className)
      });
      var renderConfirmBtn = renderDialogButton(confirmBtn, {
        theme: "primary",
        loading: confirmLoading,
        onClick: function onClick(e) {
          return onConfirm === null || onConfirm === void 0 ? void 0 : onConfirm({
            e: e
          });
        },
        className: classNames__default["default"]("".concat(componentCls, "__confirm"), confirmBtn === null || confirmBtn === void 0 ? void 0 : confirmBtn.className)
      });
      return /* @__PURE__ */React__default["default"].createElement(React__default["default"].Fragment, null, renderCancelBtn, renderConfirmBtn);
    };
    return /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(componentCls, "__footer")
    }, _util_parseTNode["default"](footer, null, defaultFooter()));
  };
  return /* @__PURE__ */React__default["default"].createElement("div", _objectSpread(_objectSpread({
    ref: ref
  }, otherProps), {}, {
    className: classNames__default["default"](componentCls, "".concat(componentCls, "--default"), className)
  }), !!header && renderHeader(), /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(componentCls, "__body")
  }, body || children), !!footer && renderFooter());
});
DialogCard.displayName = "DialogCard";

exports["default"] = DialogCard;
//# sourceMappingURL=DialogCard.js.map
