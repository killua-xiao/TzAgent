/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../../_chunks/dep-0006fcfa.js');
var React = require('react');
var isArray = require('../../_chunks/dep-64577888.js');
var isString = require('../../_chunks/dep-4ed9eda4.js');
require('../../_chunks/dep-667ac7af.js');
require('../../_chunks/dep-25585736.js');
require('../../_chunks/dep-62e73936.js');

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { defineProperty._defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var isImageInfo = function isImageInfo(image) {
  return !!image && !isString.isString(image) && !(image instanceof File);
};
var checkImages = function checkImages(images) {
  if (!isArray.isArray(images)) return [];
  return images.map(function (item) {
    if (isImageInfo(item)) {
      return _objectSpread({
        download: true,
        thumbnail: item.mainImage
      }, item);
    }
    return {
      mainImage: item,
      thumbnail: item,
      download: true
    };
  });
};
var useList = function useList(images) {
  return React.useMemo(function () {
    return checkImages(images);
  }, [images]);
};

exports["default"] = useList;
//# sourceMappingURL=useList.js.map
