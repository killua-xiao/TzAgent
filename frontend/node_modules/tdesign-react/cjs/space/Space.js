/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var slicedToArray = require('../_chunks/dep-8e4d656d.js');
var defineProperty = require('../_chunks/dep-0006fcfa.js');
var React = require('react');
var classNames = require('classnames');
var require$$0 = require('react-is');
var helper = require('../_chunks/dep-002fcc1e.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var space_defaultProps = require('./defaultProps.js');
var hooks_useDefaultProps = require('../hooks/useDefaultProps.js');
require('../_chunks/dep-00b49251.js');
require('../_chunks/dep-667ac7af.js');
require('../_chunks/dep-e4e1901e.js');
require('../_chunks/dep-2ffa3ff1.js');
require('../_chunks/dep-25585736.js');
require('../_chunks/dep-62e73936.js');
require('../config-provider/ConfigContext.js');
require('../_chunks/dep-1df1dad8.js');
require('../_chunks/dep-5b5ab11b.js');
require('dayjs');
require('../_chunks/dep-f32c03f1.js');
require('../_chunks/dep-31c4bc3d.js');
require('../_chunks/dep-eea2872a.js');
require('../_chunks/dep-64577888.js');
require('../_chunks/dep-71455db7.js');
require('../_chunks/dep-9e5a468d.js');
require('../_chunks/dep-ec8d2dca.js');
require('../_chunks/dep-fc596d16.js');
require('../_chunks/dep-f26edb7b.js');
require('../_chunks/dep-f33c1939.js');
require('../_chunks/dep-21ece627.js');
require('../_chunks/dep-25e4aa84.js');
require('../_chunks/dep-e1fbe1c3.js');
require('../_chunks/dep-df2b541f.js');
require('../_chunks/dep-edd366db.js');
require('../_chunks/dep-a56c4939.js');
require('../_chunks/dep-6c297e20.js');
require('../_chunks/dep-b7ad4d54.js');
require('../_chunks/dep-a2cb9299.js');
require('../_chunks/dep-f981815b.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { defineProperty._defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var SizeMap = {
  small: "8px",
  medium: "16px",
  large: "24px"
};
var defaultNeedPolyfill = helper.getFlexGapPolyFill();
var _toArray = function toArray(children) {
  var ret = [];
  React__default["default"].Children.forEach(children, function (child) {
    if (child === void 0 || child === null) {
      return;
    }
    if (Array.isArray(child)) {
      ret = ret.concat(_toArray(child));
    } else if (require$$0.isFragment(child) && child.props) {
      ret = ret.concat(_toArray(child.props.children));
    } else {
      ret.push(child);
    }
  });
  return ret;
};
var EMPTY_NODE = ["", false, null, void 0];
var Space = /*#__PURE__*/React__default["default"].forwardRef(function (originalProps, ref) {
  var props = hooks_useDefaultProps["default"](originalProps, space_defaultProps.spaceDefaultProps);
  var className = props.className,
    style = props.style,
    align = props.align,
    direction = props.direction,
    size = props.size,
    breakLine = props.breakLine,
    separator = props.separator,
    forceFlexGapPolyfill = props.forceFlexGapPolyfill;
  var _useConfig = hooks_useConfig["default"](),
    classPrefix = _useConfig.classPrefix;
  var needPolyfill = Boolean(forceFlexGapPolyfill || defaultNeedPolyfill);
  var renderStyle = React.useMemo(function () {
    var renderGap = "";
    if (Array.isArray(size)) {
      renderGap = size.map(function (s) {
        if (typeof s === "number") {
          return "".concat(s, "px");
        }
        if (typeof s === "string") {
          return SizeMap[s] || s;
        }
        return s;
      }).join(" ");
    } else if (typeof size === "string") {
      renderGap = SizeMap[size] || size;
    } else if (typeof size === "number") {
      renderGap = "".concat(size, "px");
    }
    var tStyle = _objectSpread({}, style);
    if (needPolyfill) {
      var _renderGap$split = renderGap.split(" "),
        _renderGap$split2 = slicedToArray._slicedToArray(_renderGap$split, 2),
        columnGap = _renderGap$split2[0],
        rowGap = _renderGap$split2[1];
      tStyle["--td-space-column-gap"] = columnGap;
      tStyle["--td-space-row-gap"] = rowGap || columnGap;
    } else {
      tStyle.gap = renderGap;
    }
    return tStyle;
  }, [style, size, needPolyfill]);
  var childrenNode = React__default["default"].useMemo(function () {
    var children = _toArray(props.children);
    var childCount = React__default["default"].Children.count(children);
    return React__default["default"].Children.map(children, function (child, index) {
      var showSeparator = index + 1 !== childCount && separator;
      return /* @__PURE__ */React__default["default"].createElement(React__default["default"].Fragment, null, EMPTY_NODE.includes(child) ? null : /* @__PURE__ */React__default["default"].createElement("div", {
        className: "".concat(classPrefix, "-space-item")
      }, child), showSeparator && /* @__PURE__ */React__default["default"].createElement("div", {
        className: "".concat(classPrefix, "-space-item-separator")
      }, separator));
    });
  }, [props.children, classPrefix, separator]);
  return /* @__PURE__ */React__default["default"].createElement("div", {
    ref: ref,
    style: renderStyle,
    className: classNames__default["default"]("".concat(classPrefix, "-space"), className, defineProperty._defineProperty(defineProperty._defineProperty(defineProperty._defineProperty(defineProperty._defineProperty({}, "".concat(classPrefix, "-space-align-").concat(align), align), "".concat(classPrefix, "-space-").concat(direction), direction), "".concat(classPrefix, "-space--break-line"), breakLine), "".concat(classPrefix, "-space--polyfill"), needPolyfill))
  }, childrenNode);
});
Space.displayName = "Space";

exports.SizeMap = SizeMap;
exports["default"] = Space;
//# sourceMappingURL=Space.js.map
