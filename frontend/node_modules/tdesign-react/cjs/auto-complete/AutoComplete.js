/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-0006fcfa.js');
var slicedToArray = require('../_chunks/dep-8e4d656d.js');
var React = require('react');
var classNames = require('classnames');
var hooks_useControlled = require('../hooks/useControlled.js');
var autoComplete_defaultProps = require('./defaultProps.js');
var hooks_useCommonClassName = require('../hooks/useCommonClassName.js');
var locale_LocalReceiver = require('../locale/LocalReceiver.js');
var input_index = require('../input/index.js');
var popup_index = require('../popup/index.js');
var autoComplete_OptionList = require('./OptionList.js');
var hooks_useDefaultProps = require('../hooks/useDefaultProps.js');
require('../_chunks/dep-667ac7af.js');
require('../_chunks/dep-00b49251.js');
require('../_util/noop.js');
require('../_chunks/dep-66114ce9.js');
require('../_chunks/dep-62d1dd66.js');
require('../_chunks/dep-7a148045.js');
require('../_chunks/dep-255ceed8.js');
require('../_chunks/dep-25585736.js');
require('../_chunks/dep-64577888.js');
require('../_chunks/dep-79629634.js');
require('../_chunks/dep-62e73936.js');
require('../hooks/useConfig.js');
require('../config-provider/ConfigContext.js');
require('../_chunks/dep-1df1dad8.js');
require('../_chunks/dep-5b5ab11b.js');
require('dayjs');
require('../_chunks/dep-f32c03f1.js');
require('../_chunks/dep-31c4bc3d.js');
require('../_chunks/dep-eea2872a.js');
require('../_chunks/dep-71455db7.js');
require('../_chunks/dep-9e5a468d.js');
require('../_chunks/dep-ec8d2dca.js');
require('../_chunks/dep-fc596d16.js');
require('../_chunks/dep-f26edb7b.js');
require('../_chunks/dep-f33c1939.js');
require('../_chunks/dep-21ece627.js');
require('../_chunks/dep-25e4aa84.js');
require('../_chunks/dep-e1fbe1c3.js');
require('../_chunks/dep-df2b541f.js');
require('../_chunks/dep-edd366db.js');
require('../_chunks/dep-a56c4939.js');
require('../_chunks/dep-6c297e20.js');
require('../_chunks/dep-b7ad4d54.js');
require('../_chunks/dep-a2cb9299.js');
require('../_chunks/dep-f981815b.js');
require('../_chunks/dep-4ed9eda4.js');
require('../config-provider/ConfigProvider.js');
require('../_chunks/dep-ab2f63ec.js');
require('../_chunks/dep-a48c7e8b.js');
require('../_chunks/dep-3d4656ee.js');
require('../_chunks/dep-0ffc9d96.js');
require('../_chunks/dep-efe6d243.js');
require('../_chunks/dep-4b18243f.js');
require('../_chunks/dep-bff2c990.js');
require('../input/Input.js');
require('../_chunks/dep-8fa3a4c2.js');
require('tdesign-icons-react');
require('../hooks/useLayoutEffect.js');
require('../_chunks/dep-381fa848.js');
require('../_util/forwardRefWithStatics.js');
require('hoist-non-react-statics');
require('../hooks/useGlobalIcon.js');
require('../input/InputGroup.js');
require('../input/defaultProps.js');
require('../_util/parseTNode.js');
require('../_chunks/dep-59671c87.js');
require('../input/useLengthLimit.js');
require('../_chunks/dep-002fcc1e.js');
require('../_chunks/dep-e4e1901e.js');
require('../_chunks/dep-2ffa3ff1.js');
require('../popup/Popup.js');
require('react-transition-group');
require('../_util/ref.js');
require('react-is');
require('../_util/isFragment.js');
require('../common/Portal.js');
require('react-dom');
require('../hooks/useAnimation.js');
require('../hooks/useAttach.js');
require('../hooks/useMutationObserver.js');
require('../hooks/useLatest.js');
require('../_chunks/dep-eb6d55c1.js');
require('../_chunks/dep-014b9b78.js');
require('../_chunks/dep-abdd786a.js');
require('../_chunks/dep-a231fdc5.js');
require('../_chunks/dep-cf14666e.js');
require('../hooks/usePopper.js');
require('@popperjs/core');
require('react-fast-compare');
require('../hooks/useWindowSize.js');
require('../popup/defaultProps.js');
require('../popup/hooks/useTrigger.js');
require('../_util/composeRefs.js');
require('../_util/listener.js');
require('../popup/utils/transition.js');
require('../popup/PopupPlugin.js');
require('../_chunks/dep-65ef8e09.js');
require('../_util/react-render.js');
require('../common/PluginContainer.js');
require('../_chunks/dep-5883d975.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { defineProperty._defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var AutoComplete = /*#__PURE__*/React.forwardRef(function (originalProps, ref) {
  var _props$placeholder;
  var props = hooks_useDefaultProps["default"](originalProps, autoComplete_defaultProps.autoCompleteDefaultProps);
  var inputRef = React.useRef(null);
  var popupRef = React.useRef(null);
  var _useControlled = hooks_useControlled["default"](props, "value", props.onChange),
    _useControlled2 = slicedToArray._slicedToArray(_useControlled, 2),
    tValue = _useControlled2[0],
    setTValue = _useControlled2[1];
  var _useCommonClassName = hooks_useCommonClassName["default"](),
    classPrefix = _useCommonClassName.classPrefix,
    sizeClassNames = _useCommonClassName.sizeClassNames;
  var _useLocaleReceiver = locale_LocalReceiver.useLocaleReceiver("input"),
    _useLocaleReceiver2 = slicedToArray._slicedToArray(_useLocaleReceiver, 1),
    global = _useLocaleReceiver2[0];
  var _useState = React.useState(false),
    _useState2 = slicedToArray._slicedToArray(_useState, 2),
    popupVisible = _useState2[0],
    setPopupVisible = _useState2[1];
  var optionListRef = React.useRef(null);
  React.useImperativeHandle(ref, function () {
    return {
      inputRef: inputRef.current,
      popupRef: popupRef.current
    };
  });
  var getOverlayStyle = function getOverlayStyle(trigger, popupElement) {
    var _props$popupProps;
    var triggerWidth = trigger.getBoundingClientRect().width || trigger.offsetWidth || trigger.clientWidth;
    var popupWidth = popupElement.getBoundingClientRect().width || popupElement.offsetWidth || popupElement.clientWidth;
    return _objectSpread({
      width: triggerWidth >= popupWidth ? "".concat(triggerWidth, "px") : "auto"
    }, (_props$popupProps = props.popupProps) === null || _props$popupProps === void 0 ? void 0 : _props$popupProps.overlayInnerStyle);
  };
  var classes = ["".concat(classPrefix, "-auto-complete")].concat(props.className);
  var popupClasses = function (_props$popupProps2) {
    var classes2 = ["".concat(classPrefix, "-select__dropdown")];
    if ((_props$popupProps2 = props.popupProps) !== null && _props$popupProps2 !== void 0 && _props$popupProps2.overlayClassName) {
      classes2 = classes2.concat(props.popupProps.overlayClassName);
    }
    return classNames__default["default"](classes2);
  }();
  var popupInnerClasses = function (_props$popupProps3) {
    var classes2 = ["".concat(classPrefix, "-select__dropdown-inner")];
    if ((_props$popupProps3 = props.popupProps) !== null && _props$popupProps3 !== void 0 && _props$popupProps3.overlayInnerClassName) {
      classes2 = classes2.concat(props.popupProps.overlayInnerClassName);
    }
    return classNames__default["default"](classes2);
  }();
  var onInputChange = function onInputChange(value, context) {
    if (!popupVisible) {
      setPopupVisible(true);
    }
    setTValue(value, context);
  };
  var innerInputProps = function () {
    var tProps = _objectSpread({
      value: tValue,
      size: props.size
    }, props.inputProps);
    return tProps;
  }();
  var onInnerFocus = function onInnerFocus(value, context) {
    var _props$onFocus;
    setPopupVisible(true);
    (_props$onFocus = props.onFocus) === null || _props$onFocus === void 0 || _props$onFocus.call(props, _objectSpread(_objectSpread({}, context), {}, {
      value: value
    }));
    var timer = setTimeout(function () {
      var _optionListRef$curren;
      (_optionListRef$curren = optionListRef.current) === null || _optionListRef$curren === void 0 || _optionListRef$curren.addKeyboardListener();
      clearTimeout(timer);
    }, 0);
  };
  var onInnerBlur = function onInnerBlur(value, context) {
    var _props$onBlur;
    (_props$onBlur = props.onBlur) === null || _props$onBlur === void 0 || _props$onBlur.call(props, _objectSpread(_objectSpread({}, context), {}, {
      value: value
    }));
  };
  var onInnerEnter = function onInnerEnter(value, context) {
    var _props$onEnter;
    (_props$onEnter = props.onEnter) === null || _props$onEnter === void 0 || _props$onEnter.call(props, _objectSpread(_objectSpread({}, context), {}, {
      value: value
    }));
  };
  var onInnerCompositionend = function onInnerCompositionend(value, context) {
    var _props$onCompositione;
    (_props$onCompositione = props.onCompositionend) === null || _props$onCompositione === void 0 || _props$onCompositione.call(props, _objectSpread(_objectSpread({}, context), {}, {
      value: value
    }));
  };
  var onInnerCompositionstart = function onInnerCompositionstart(value, context) {
    var _props$onCompositions;
    (_props$onCompositions = props.onCompositionstart) === null || _props$onCompositions === void 0 || _props$onCompositions.call(props, _objectSpread(_objectSpread({}, context), {}, {
      value: value
    }));
  };
  var onInnerSelect = function onInnerSelect(value, context) {
    var _props$onSelect;
    if (props.readonly || props.disabled) return;
    setPopupVisible(false);
    setTValue(value, context);
    (_props$onSelect = props.onSelect) === null || _props$onSelect === void 0 || _props$onSelect.call(props, value, context);
  };
  var onPopupVisibleChange = function onPopupVisibleChange(visible, _ref) {
    var trigger = _ref.trigger;
    if (trigger !== "trigger-element-click") {
      setPopupVisible(visible);
    }
  };
  var triggerNode = props.triggerElement || props.children || /* @__PURE__ */React__default["default"].createElement(input_index.Input, _objectSpread({
    ref: inputRef,
    placeholder: (_props$placeholder = props.placeholder) !== null && _props$placeholder !== void 0 ? _props$placeholder : global.placeholder,
    tips: props.tips,
    status: props.status,
    readonly: props.readonly,
    disabled: props.disabled,
    clearable: props.clearable,
    autofocus: props.autofocus,
    borderless: props.borderless,
    onClear: props.onClear,
    onChange: onInputChange,
    onFocus: onInnerFocus,
    onBlur: onInnerBlur,
    onEnter: onInnerEnter,
    onCompositionend: onInnerCompositionend,
    onCompositionstart: onInnerCompositionstart
  }, innerInputProps));
  var listContent = Array.isArray(props.options) && /* @__PURE__ */React__default["default"].createElement(autoComplete_OptionList["default"], {
    ref: optionListRef,
    value: tValue,
    options: props.options,
    size: props.size,
    sizeClassNames: sizeClassNames,
    onSelect: onInnerSelect,
    popupVisible: popupVisible,
    highlightKeyword: props.highlightKeyword,
    filterable: props.filterable,
    filter: props.filter,
    empty: props.empty
  });
  var topContent = props.panelTopContent;
  var bottomContent = props.panelBottomContent;
  var panelContent = topContent || listContent || bottomContent ? /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(classPrefix, "-auto-complete__panel")
  }, topContent, listContent, bottomContent) : null;
  var popupProps = _objectSpread(_objectSpread({}, props.popupProps), {}, {
    overlayInnerStyle: getOverlayStyle,
    overlayInnerClassName: popupInnerClasses,
    overlayClassName: popupClasses
  });
  return /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"](classes),
    style: props.style
  }, /* @__PURE__ */React__default["default"].createElement(popup_index.Popup, _objectSpread({
    ref: popupRef,
    visible: popupVisible,
    onVisibleChange: onPopupVisibleChange,
    trigger: "focus",
    placement: "bottom-left",
    hideEmptyPopup: true,
    content: panelContent
  }, popupProps), triggerNode));
});
AutoComplete.displayName = "AutoComplete";

exports["default"] = AutoComplete;
//# sourceMappingURL=AutoComplete.js.map
