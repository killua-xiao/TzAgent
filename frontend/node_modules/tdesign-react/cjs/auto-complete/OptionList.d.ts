import React, { MouseEvent } from 'react';
import { CommonClassNameType } from '../hooks/useCommonClassName';
import { TdAutoCompleteProps } from './type';
export interface OptionsListProps {
    sizeClassNames: CommonClassNameType['sizeClassNames'];
    value: string;
    size: TdAutoCompleteProps['size'];
    options: TdAutoCompleteProps['options'];
    popupVisible: boolean;
    highlightKeyword: boolean;
    filterable: boolean;
    filter: TdAutoCompleteProps['filter'];
    empty: TdAutoCompleteProps['empty'];
    onSelect: (keyword: string, context: {
        e: MouseEvent<HTMLLIElement> | KeyboardEvent | any;
    }) => void;
}
export interface OptionsListRef {
    addKeyboardListener: () => void;
    removeKeyboardListener: () => void;
}
declare const OptionsList: React.ForwardRefExoticComponent<OptionsListProps & React.RefAttributes<OptionsListRef>>;
export default OptionsList;
