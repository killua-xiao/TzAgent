{"version":3,"file":"InputNumber.js","sources":["../../../components/input-number/InputNumber.tsx"],"sourcesContent":["import React, { forwardRef, useImperativeHandle, useRef, ForwardedRef } from 'react';\nimport {\n  ChevronDownIcon as TdChevronDownIcon,\n  RemoveIcon as TdRemoveIcon,\n  ChevronUpIcon as TdChevronUpIcon,\n  AddIcon as TdAddIcon,\n} from 'tdesign-icons-react';\nimport classNames from 'classnames';\nimport Input from '../input';\nimport Button from '../button';\nimport useInputNumber from './useInputNumber';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport { inputNumberDefaultProps } from './defaultProps';\nimport { InputNumberValue, TdInputNumberProps } from './type';\nimport { StyledProps } from '../common';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\nexport interface InputNumberProps<T = InputNumberValue> extends TdInputNumberProps<T>, StyledProps {}\n\nexport interface InputNumberRef {\n  currentElement: ForwardedRef<HTMLDivElement>;\n  inputElement: ForwardedRef<HTMLDivElement>;\n}\n\n// https://fettblog.eu/typescript-react-generic-forward-refs/\nfunction TdInputNumber<T extends InputNumberValue = InputNumberValue>(\n  originalProps: InputNumberProps<T>,\n  ref: ForwardedRef<InputNumberRef>,\n) {\n  const { ChevronDownIcon, RemoveIcon, ChevronUpIcon, AddIcon } = useGlobalIcon({\n    ChevronDownIcon: TdChevronDownIcon,\n    RemoveIcon: TdRemoveIcon,\n    ChevronUpIcon: TdChevronUpIcon,\n    AddIcon: TdAddIcon,\n  });\n  const props = useDefaultProps<InputNumberProps<T>>(originalProps, inputNumberDefaultProps);\n  const {\n    classPrefix,\n    wrapClasses,\n    addClasses,\n    reduceClasses,\n    listeners,\n    isError,\n    inputRef,\n    userInput,\n    handleAdd,\n    handleReduce,\n    onInnerInputChange,\n  } = useInputNumber(props);\n\n  const wrapRef = useRef(null);\n\n  const status = isError ? 'error' : props.status;\n  const addIcon = props.theme === 'column' ? <ChevronUpIcon size={props.size} /> : <AddIcon size={props.size} />;\n  const reduceIcon =\n    props.theme === 'column' ? <ChevronDownIcon size={props.size} /> : <RemoveIcon size={props.size} />;\n\n  useImperativeHandle(ref, () => ({\n    currentElement: wrapRef.current,\n    inputElement: inputRef.current,\n  }));\n\n  return (\n    <div className={classNames(wrapClasses, props.className)} style={props.style} ref={wrapRef}>\n      {props.theme !== 'normal' && (\n        <Button\n          className={reduceClasses}\n          disabled={props.disabled}\n          onClick={handleReduce}\n          variant=\"outline\"\n          shape=\"square\"\n          icon={reduceIcon}\n        />\n      )}\n      <Input\n        ref={inputRef}\n        autocomplete=\"off\"\n        disabled={props.disabled}\n        readonly={props.readonly}\n        placeholder={props.placeholder}\n        autoWidth={props.autoWidth}\n        align={props.align || (props.theme === 'row' ? 'center' : undefined)}\n        status={status}\n        label={props.label}\n        suffix={props.suffix}\n        value={userInput}\n        onChange={onInnerInputChange}\n        size={props.size}\n        {...listeners}\n        {...(props.inputProps || {})}\n      />\n      {props.theme !== 'normal' && (\n        <Button\n          className={addClasses}\n          disabled={props.disabled}\n          onClick={handleAdd}\n          variant=\"outline\"\n          shape=\"square\"\n          icon={addIcon}\n        />\n      )}\n      {props.tips && (\n        <div className={classNames(`${classPrefix}-input__tips`, `${classPrefix}-input__tips--${status}`)}>\n          {props.tips}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport type InputNumberOuterForwardRef = {\n  <T>(props: InputNumberProps<T> & { ref?: ForwardedRef<InputNumberRef> }): ReturnType<typeof TdInputNumber>;\n} & React.ForwardRefExoticComponent<InputNumberProps>;\n\nconst InputNumber = forwardRef<InputNumberRef, InputNumberProps<InputNumberValue>>(TdInputNumber);\n\nInputNumber.displayName = 'InputNumber';\n\nexport default InputNumber;\n"],"names":["TdInputNumber","originalProps","ref","_useGlobalIcon","useGlobalIcon","ChevronDownIcon","TdChevronDownIcon","RemoveIcon","TdRemoveIcon","ChevronUpIcon","TdChevronUpIcon","AddIcon","TdAddIcon","props","useDefaultProps","inputNumberDefaultProps","_useInputNumber","useInputNumber","classPrefix","wrapClasses","addClasses","reduceClasses","listeners","isError","inputRef","userInput","handleAdd","handleReduce","onInnerInputChange","wrapRef","useRef","status","addIcon","theme","React","createElement","size","reduceIcon","useImperativeHandle","currentElement","current","inputElement","className","classNames","style","Button","disabled","onClick","variant","shape","icon","Input","_objectSpread","autocomplete","readonly","placeholder","autoWidth","align","label","suffix","value","onChange","inputProps","tips","concat","InputNumber","forwardRef","displayName"],"mappings":"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"}