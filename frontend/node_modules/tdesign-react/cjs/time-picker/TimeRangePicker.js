/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-0006fcfa.js');
var slicedToArray = require('../_chunks/dep-8e4d656d.js');
var React = require('react');
var classNames = require('classnames');
var dayjs = require('dayjs');
var tdesignIconsReact = require('tdesign-icons-react');
var timePicker_panel_SinglePanel = require('../_chunks/dep-47323e89.js');
var _util_noop = require('../_util/noop.js');
var hooks_useControlled = require('../hooks/useControlled.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var hooks_useGlobalIcon = require('../hooks/useGlobalIcon.js');
var rangeInput_index = require('../range-input/index.js');
var timePicker_panel_TimePickerPanel = require('./panel/TimePickerPanel.js');
var timePicker_hooks_useTimePickerTextConfig = require('./hooks/useTimePickerTextConfig.js');
var timePicker_defaultProps = require('./defaultProps.js');
var hooks_useDefaultProps = require('../hooks/useDefaultProps.js');
var isArray = require('../_chunks/dep-64577888.js');
require('../_chunks/dep-667ac7af.js');
require('../_chunks/dep-00b49251.js');
require('../_chunks/dep-1d328330.js');
require('../_chunks/dep-5b5ab11b.js');
require('../_chunks/dep-2f64b46d.js');
require('../_chunks/dep-cf14666e.js');
require('../_chunks/dep-fc596d16.js');
require('../_chunks/dep-79629634.js');
require('../_chunks/dep-25585736.js');
require('../_chunks/dep-62e73936.js');
require('../hooks/useDebounce.js');
require('../hooks/usePersistFn.js');
require('../_chunks/dep-a231fdc5.js');
require('../hooks/usePropsRef.js');
require('../_chunks/dep-f981815b.js');
require('../_chunks/dep-e1fbe1c3.js');
require('../_chunks/dep-9e5a468d.js');
require('../_chunks/dep-ec8d2dca.js');
require('../_chunks/dep-f33c1939.js');
require('../_chunks/dep-255ceed8.js');
require('../_chunks/dep-62d1dd66.js');
require('../_chunks/dep-7a148045.js');
require('../_chunks/dep-66114ce9.js');
require('../config-provider/ConfigContext.js');
require('../_chunks/dep-1df1dad8.js');
require('../_chunks/dep-f32c03f1.js');
require('../_chunks/dep-31c4bc3d.js');
require('../_chunks/dep-eea2872a.js');
require('../_chunks/dep-71455db7.js');
require('../_chunks/dep-f26edb7b.js');
require('../_chunks/dep-21ece627.js');
require('../_chunks/dep-25e4aa84.js');
require('../_chunks/dep-df2b541f.js');
require('../_chunks/dep-edd366db.js');
require('../_chunks/dep-a56c4939.js');
require('../_chunks/dep-6c297e20.js');
require('../_chunks/dep-b7ad4d54.js');
require('../_chunks/dep-a2cb9299.js');
require('../range-input/RangeInput.js');
require('../_chunks/dep-8fa3a4c2.js');
require('../input/index.js');
require('../input/Input.js');
require('../hooks/useLayoutEffect.js');
require('../_chunks/dep-381fa848.js');
require('../_chunks/dep-4ed9eda4.js');
require('../_util/forwardRefWithStatics.js');
require('hoist-non-react-statics');
require('../input/InputGroup.js');
require('../locale/LocalReceiver.js');
require('../config-provider/ConfigProvider.js');
require('../_chunks/dep-ab2f63ec.js');
require('../_chunks/dep-a48c7e8b.js');
require('../_chunks/dep-3d4656ee.js');
require('../_chunks/dep-0ffc9d96.js');
require('../_chunks/dep-efe6d243.js');
require('../_chunks/dep-4b18243f.js');
require('../_chunks/dep-bff2c990.js');
require('../input/defaultProps.js');
require('../_util/parseTNode.js');
require('../_chunks/dep-59671c87.js');
require('../input/useLengthLimit.js');
require('../_chunks/dep-002fcc1e.js');
require('../_chunks/dep-e4e1901e.js');
require('../_chunks/dep-2ffa3ff1.js');
require('../range-input/defaultProps.js');
require('../range-input/RangeInputPopup.js');
require('../popup/index.js');
require('../popup/Popup.js');
require('react-transition-group');
require('../_util/ref.js');
require('react-is');
require('../_util/isFragment.js');
require('../common/Portal.js');
require('react-dom');
require('../hooks/useAnimation.js');
require('../hooks/useAttach.js');
require('../hooks/useMutationObserver.js');
require('../hooks/useLatest.js');
require('../_chunks/dep-eb6d55c1.js');
require('../_chunks/dep-014b9b78.js');
require('../_chunks/dep-abdd786a.js');
require('../hooks/usePopper.js');
require('@popperjs/core');
require('react-fast-compare');
require('../hooks/useWindowSize.js');
require('../popup/defaultProps.js');
require('../popup/hooks/useTrigger.js');
require('../_util/composeRefs.js');
require('../_util/listener.js');
require('../popup/utils/transition.js');
require('../popup/PopupPlugin.js');
require('../_chunks/dep-65ef8e09.js');
require('../_util/react-render.js');
require('../common/PluginContainer.js');
require('../select-input/useOverlayInnerStyle.js');
require('../button/index.js');
require('../button/Button.js');
require('../hooks/useDomRefCallback.js');
require('../hooks/useRipple.js');
require('../_chunks/dep-dc4ce063.js');
require('../loading/index.js');
require('../loading/Loading.js');
require('../loading/gradient.js');
require('../loading/defaultProps.js');
require('../loading/plugin.js');
require('../button/defaultProps.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);
var dayjs__default = /*#__PURE__*/_interopDefaultLegacy(dayjs);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { defineProperty._defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function handlePositionTrans(income) {
  return income === "first" ? "start" : "end";
}
var TimeRangePicker = function TimeRangePicker(originalProps) {
  var props = hooks_useDefaultProps["default"](originalProps, timePicker_defaultProps.timeRangePickerDefaultProps);
  var TEXT_CONFIG = timePicker_hooks_useTimePickerTextConfig.useTimePickerTextConfig();
  var allowInput = props.allowInput,
    borderless = props.borderless,
    clearable = props.clearable,
    disabled = props.disabled,
    format = props.format,
    hideDisabledTime = props.hideDisabledTime,
    _props$placeholder = props.placeholder,
    placeholder = _props$placeholder === void 0 ? TEXT_CONFIG.rangePlaceholder : _props$placeholder,
    size = props.size,
    steps = props.steps,
    disableTime = props.disableTime,
    _props$onBlur = props.onBlur,
    onBlur = _props$onBlur === void 0 ? _util_noop["default"] : _props$onBlur,
    _props$onFocus = props.onFocus,
    onFocus = _props$onFocus === void 0 ? _util_noop["default"] : _props$onFocus,
    _props$onInput = props.onInput,
    onInput = _props$onInput === void 0 ? _util_noop["default"] : _props$onInput,
    style = props.style,
    className = props.className,
    presets = props.presets,
    label = props.label;
  var _useControlled = hooks_useControlled["default"](props, "value", props.onChange),
    _useControlled2 = slicedToArray._slicedToArray(_useControlled, 2),
    value = _useControlled2[0],
    onChange = _useControlled2[1];
  var _useConfig = hooks_useConfig["default"](),
    classPrefix = _useConfig.classPrefix;
  var _useGlobalIcon = hooks_useGlobalIcon["default"]({
      TimeIcon: tdesignIconsReact.TimeIcon
    }),
    TimeIcon = _useGlobalIcon.TimeIcon;
  var _useState = React.useState(false),
    _useState2 = slicedToArray._slicedToArray(_useState, 2),
    isPanelShowed = _useState2[0],
    setPanelShow = _useState2[1];
  var _useState3 = React.useState(void 0),
    _useState4 = slicedToArray._slicedToArray(_useState3, 2),
    currentPanelIdx = _useState4[0],
    setCurrentPanelIdx = _useState4[1];
  var _useState5 = React.useState(["", ""]),
    _useState6 = slicedToArray._slicedToArray(_useState5, 2),
    currentValue = _useState6[0],
    setCurrentValue = _useState6[1];
  var name = "".concat(classPrefix, "-time-picker");
  var inputClasses = classNames__default["default"]("".concat(name, "__group"), defineProperty._defineProperty({}, "".concat(classPrefix, "-is-focused"), isPanelShowed));
  var handleShowPopup = function handleShowPopup(visible, _ref) {
    var trigger = _ref.trigger;
    if (trigger === "trigger-element-click") {
      setPanelShow(true);
      return;
    }
    setPanelShow(visible);
  };
  function handlePickerValue(pickValue, currentValue2) {
    var _currentValue2$, _currentValue2$2;
    if (Array.isArray(pickValue)) return pickValue;
    return currentPanelIdx === 0 ? [pickValue, (_currentValue2$ = currentValue2[1]) !== null && _currentValue2$ !== void 0 ? _currentValue2$ : pickValue] : [(_currentValue2$2 = currentValue2[0]) !== null && _currentValue2$2 !== void 0 ? _currentValue2$2 : pickValue, pickValue];
  }
  var handleOnPick = function handleOnPick(pickValue, e) {
    var _props$onPick;
    var context;
    if (isArray.isArray(pickValue)) {
      context = {
        e: e
      };
    } else if (currentPanelIdx.value === 0) {
      context = {
        e: e,
        position: "start"
      };
    } else {
      context = {
        e: e,
        position: "end"
      };
    }
    (_props$onPick = props.onPick) === null || _props$onPick === void 0 || _props$onPick.call(props, pickValue, context);
  };
  var handleClear = function handleClear(context) {
    var e = context.e;
    e.stopPropagation();
    onChange(void 0);
    setCurrentValue(timePicker_panel_SinglePanel.TIME_PICKER_EMPTY);
  };
  var handleClick = function handleClick(_ref2) {
    var position = _ref2.position;
    setCurrentPanelIdx(position === "first" ? 0 : 1);
  };
  var handleTimeChange = function handleTimeChange(newValue, context) {
    var nextCurrentValue = handlePickerValue(newValue, currentValue);
    setCurrentValue(nextCurrentValue);
    handleOnPick(nextCurrentValue, context);
  };
  var autoSwapTime = function autoSwapTime(valueBeforeConfirm) {
    var _valueBeforeConfirm = slicedToArray._slicedToArray(valueBeforeConfirm, 2),
      startTime = _valueBeforeConfirm[0],
      endTime = _valueBeforeConfirm[1];
    var startDayjs = dayjs__default["default"](startTime, props.format);
    var endDayjs = dayjs__default["default"](endTime, props.format);
    if (startDayjs.isAfter(endDayjs, "second")) return [endTime, startTime];
    return [startTime, endTime];
  };
  var handleInputBlur = function handleInputBlur(value2, _ref3) {
    var e = _ref3.e;
    if (allowInput) {
      var isValidTime = timePicker_panel_SinglePanel.validateInputValue(currentValue[currentPanelIdx], format);
      if (isValidTime) {
        var _currentValue$, _currentValue$2;
        var formattedVal = timePicker_panel_SinglePanel.formatInputValue(currentValue[currentPanelIdx], format);
        currentPanelIdx === 0 ? setCurrentValue([formattedVal, (_currentValue$ = currentValue[1]) !== null && _currentValue$ !== void 0 ? _currentValue$ : formattedVal]) : setCurrentValue([(_currentValue$2 = currentValue[0]) !== null && _currentValue$2 !== void 0 ? _currentValue$2 : formattedVal, formattedVal]);
      }
    }
    onBlur({
      value: value2,
      e: e
    });
  };
  var handleInputChange = function handleInputChange(inputVal, _ref4) {
    var e = _ref4.e,
      position = _ref4.position;
    setCurrentValue(inputVal);
    onInput({
      value: value,
      e: e,
      position: handlePositionTrans(position)
    });
  };
  var handleClickConfirm = function handleClickConfirm() {
    var isValidTime = !currentValue.find(function (v) {
      return !timePicker_panel_SinglePanel.validateInputValue(v, format);
    });
    if (isValidTime) onChange(props.autoSwap ? autoSwapTime(currentValue) : currentValue);
    setPanelShow(false);
  };
  var handleFocus = function handleFocus(value2, _ref5) {
    var e = _ref5.e,
      position = _ref5.position;
    onFocus({
      value: value2,
      e: e,
      position: handlePositionTrans(position)
    });
  };
  React.useEffect(function () {
    setCurrentValue(isPanelShowed ? value !== null && value !== void 0 ? value : timePicker_panel_SinglePanel.TIME_PICKER_EMPTY : timePicker_panel_SinglePanel.TIME_PICKER_EMPTY);
    if (!isPanelShowed) setCurrentPanelIdx(void 0);
  }, [isPanelShowed]);
  return /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"](name, className),
    style: style
  }, /* @__PURE__ */React__default["default"].createElement(rangeInput_index.RangeInputPopup, {
    style: style,
    disabled: disabled,
    popupVisible: isPanelShowed,
    onPopupVisibleChange: handleShowPopup,
    popupProps: _objectSpread({
      overlayInnerStyle: {
        width: "auto",
        padding: 0
      }
    }, props.popupProps),
    onInputChange: handleInputChange,
    inputValue: isPanelShowed ? currentValue : value !== null && value !== void 0 ? value : timePicker_panel_SinglePanel.TIME_PICKER_EMPTY,
    rangeInputProps: _objectSpread({
      size: size,
      borderless: borderless,
      clearable: clearable,
      className: inputClasses,
      value: isPanelShowed ? currentValue : value !== null && value !== void 0 ? value : void 0,
      placeholder: placeholder,
      suffixIcon: /* @__PURE__ */React__default["default"].createElement(TimeIcon, null),
      onClear: handleClear,
      onClick: handleClick,
      onFocus: handleFocus,
      onBlur: handleInputBlur,
      readonly: !allowInput,
      activeIndex: currentPanelIdx,
      label: label
    }, props.rangeInputProps),
    tips: props.tips,
    status: props.status,
    panel: /* @__PURE__ */React__default["default"].createElement(timePicker_panel_TimePickerPanel["default"], {
      steps: steps,
      format: format,
      disableTime: disableTime,
      isShowPanel: isPanelShowed,
      hideDisabledTime: hideDisabledTime,
      isFooterDisplay: true,
      value: currentValue[currentPanelIdx || 0],
      onChange: handleTimeChange,
      handleConfirmClick: handleClickConfirm,
      position: currentPanelIdx === 0 ? "start" : "end",
      activeIndex: currentPanelIdx,
      presets: presets
    })
  }));
};
TimeRangePicker.displayName = "TimeRangePicker";

exports["default"] = TimeRangePicker;
//# sourceMappingURL=TimeRangePicker.js.map
