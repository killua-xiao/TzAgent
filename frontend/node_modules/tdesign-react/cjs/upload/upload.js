/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-0006fcfa.js');
var React = require('react');
var tdesignIconsReact = require('tdesign-icons-react');
var classNames = require('classnames');
var upload_themes_NormalFile = require('./themes/NormalFile.js');
var upload_themes_DraggerFile = require('./themes/DraggerFile.js');
var upload_themes_ImageCard = require('./themes/ImageCard.js');
var upload_themes_MultipleFlowList = require('./themes/MultipleFlowList.js');
var upload_hooks_useUpload = require('./hooks/useUpload.js');
var button_index = require('../button/index.js');
var upload_defaultProps = require('./defaultProps.js');
var upload_themes_CustomFile = require('./themes/CustomFile.js');
var _util_parseTNode = require('../_util/parseTNode.js');
var hooks_useDefaultProps = require('../hooks/useDefaultProps.js');
var hooks_useGlobalIcon = require('../hooks/useGlobalIcon.js');
require('../_chunks/dep-667ac7af.js');
require('../_chunks/dep-e4e1901e.js');
require('../_chunks/dep-00b49251.js');
require('../_chunks/dep-f4d844cc.js');
require('../_chunks/dep-59671c87.js');
require('../loading/index.js');
require('../loading/Loading.js');
require('../_chunks/dep-8e4d656d.js');
require('../_chunks/dep-381fa848.js');
require('../_chunks/dep-4ed9eda4.js');
require('../_chunks/dep-25585736.js');
require('../_chunks/dep-64577888.js');
require('../_chunks/dep-62e73936.js');
require('../hooks/useConfig.js');
require('../config-provider/ConfigContext.js');
require('../_chunks/dep-1df1dad8.js');
require('../_chunks/dep-5b5ab11b.js');
require('dayjs');
require('../_chunks/dep-f32c03f1.js');
require('../_chunks/dep-31c4bc3d.js');
require('../_chunks/dep-eea2872a.js');
require('../_chunks/dep-71455db7.js');
require('../_chunks/dep-9e5a468d.js');
require('../_chunks/dep-ec8d2dca.js');
require('../_chunks/dep-fc596d16.js');
require('../_chunks/dep-f26edb7b.js');
require('../_chunks/dep-f33c1939.js');
require('../_chunks/dep-21ece627.js');
require('../_chunks/dep-25e4aa84.js');
require('../_chunks/dep-e1fbe1c3.js');
require('../_chunks/dep-df2b541f.js');
require('../_chunks/dep-edd366db.js');
require('../_chunks/dep-a56c4939.js');
require('../_chunks/dep-6c297e20.js');
require('../_chunks/dep-b7ad4d54.js');
require('../_chunks/dep-a2cb9299.js');
require('../_chunks/dep-f981815b.js');
require('../common/Portal.js');
require('react-dom');
require('../hooks/useLayoutEffect.js');
require('../loading/gradient.js');
require('../_chunks/dep-dc4ce063.js');
require('../_chunks/dep-002fcc1e.js');
require('../_chunks/dep-2ffa3ff1.js');
require('../hooks/useDomRefCallback.js');
require('../loading/defaultProps.js');
require('../loading/plugin.js');
require('../_util/react-render.js');
require('../_chunks/dep-65ef8e09.js');
require('../common/PluginContainer.js');
require('../config-provider/ConfigProvider.js');
require('../_chunks/dep-ab2f63ec.js');
require('../_chunks/dep-a48c7e8b.js');
require('../_chunks/dep-3d4656ee.js');
require('../_chunks/dep-0ffc9d96.js');
require('../_chunks/dep-efe6d243.js');
require('../_chunks/dep-4b18243f.js');
require('../_chunks/dep-bff2c990.js');
require('../link/index.js');
require('../link/Link.js');
require('../_chunks/dep-8fa3a4c2.js');
require('../link/defaultProps.js');
require('../hooks/useCommonClassName.js');
require('./hooks/useDrag.js');
require('../image-viewer/index.js');
require('../image-viewer/ImageViewer.js');
require('../_chunks/dep-928dc549.js');
require('../_chunks/dep-e75d22fc.js');
require('../hooks/useImagePreviewUrl.js');
require('../image/index.js');
require('../image/Image.js');
require('../_chunks/dep-adacb8cb.js');
require('../locale/LocalReceiver.js');
require('../image/defaultProps.js');
require('../space/index.js');
require('../space/Space.js');
require('react-is');
require('../space/defaultProps.js');
require('../tooltip/index.js');
require('../tooltip/Tooltip.js');
require('../popup/index.js');
require('../popup/Popup.js');
require('react-transition-group');
require('../_util/ref.js');
require('../_util/isFragment.js');
require('../hooks/useAnimation.js');
require('../hooks/useAttach.js');
require('../hooks/useControlled.js');
require('../_util/noop.js');
require('../_chunks/dep-66114ce9.js');
require('../_chunks/dep-62d1dd66.js');
require('../_chunks/dep-7a148045.js');
require('../_chunks/dep-255ceed8.js');
require('../_chunks/dep-79629634.js');
require('../hooks/useMutationObserver.js');
require('../hooks/useLatest.js');
require('../_chunks/dep-eb6d55c1.js');
require('../_chunks/dep-014b9b78.js');
require('../_chunks/dep-abdd786a.js');
require('../_chunks/dep-a231fdc5.js');
require('../_chunks/dep-cf14666e.js');
require('../hooks/usePopper.js');
require('@popperjs/core');
require('react-fast-compare');
require('../hooks/useWindowSize.js');
require('../popup/defaultProps.js');
require('../popup/hooks/useTrigger.js');
require('../_util/composeRefs.js');
require('../_util/listener.js');
require('../popup/utils/transition.js');
require('../popup/PopupPlugin.js');
require('../tooltip/defaultProps.js');
require('../tooltip/TooltipLite.js');
require('../hooks/useSwitch.js');
require('../hooks/usePersistFn.js');
require('../_chunks/dep-1438af5a.js');
require('../dialog/index.js');
require('../dialog/Dialog.js');
require('../hooks/useDeepEffect.js');
require('../hooks/useSetState.js');
require('../dialog/defaultProps.js');
require('../dialog/DialogCard.js');
require('../button/Button.js');
require('../hooks/useRipple.js');
require('../button/defaultProps.js');
require('../dialog/hooks/useDialogDrag.js');
require('../hooks/useMouseEvent.js');
require('../dialog/hooks/useDialogEsc.js');
require('../dialog/hooks/useDialogPosition.js');
require('../dialog/hooks/useLockStyle.js');
require('../_chunks/dep-b73b8db7.js');
require('../dialog/utils.js');
require('../_chunks/dep-221787fe.js');
require('../dialog/plugin.js');
require('../image-viewer/hooks/useIconMap.js');
require('../image-viewer/hooks/useIndex.js');
require('../image-viewer/hooks/useMirror.js');
require('../image-viewer/hooks/usePosition.js');
require('../image-viewer/hooks/useRotate.js');
require('../image-viewer/hooks/useScale.js');
require('../image-viewer/utils.js');
require('../image-viewer/defaultProps.js');
require('../image-viewer/hooks/useImageScale.js');
require('../image-viewer/hooks/useList.js');
require('../image-viewer/hooks/useViewerScale.js');
require('../_chunks/dep-5eba010c.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { defineProperty._defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function TdUpload(originalProps, ref) {
  var props = hooks_useDefaultProps["default"](originalProps, upload_defaultProps.uploadDefaultProps);
  var theme = props.theme,
    imageProps = props.imageProps;
  var _useUpload = upload_hooks_useUpload["default"](props),
    locale = _useUpload.locale,
    classPrefix = _useUpload.classPrefix,
    triggerUploadText = _useUpload.triggerUploadText,
    toUploadFiles = _useUpload.toUploadFiles,
    displayFiles = _useUpload.displayFiles,
    uploadValue = _useUpload.uploadValue,
    sizeOverLimitMessage = _useUpload.sizeOverLimitMessage,
    uploading = _useUpload.uploading,
    tipsClasses = _useUpload.tipsClasses,
    errorClasses = _useUpload.errorClasses,
    placeholderClass = _useUpload.placeholderClass,
    inputRef = _useUpload.inputRef,
    disabled = _useUpload.disabled,
    onRemove = _useUpload.onRemove,
    uploadFiles = _useUpload.uploadFiles,
    onNormalFileChange = _useUpload.onNormalFileChange,
    onDragFileChange = _useUpload.onDragFileChange,
    onPasteFileChange = _useUpload.onPasteFileChange,
    triggerUpload = _useUpload.triggerUpload,
    cancelUpload = _useUpload.cancelUpload,
    uploadFilePercent = _useUpload.uploadFilePercent;
  React__default["default"].useImperativeHandle(ref, function () {
    return {
      upload: inputRef.current,
      uploading: uploading,
      uploadFilePercent: uploadFilePercent,
      triggerUpload: triggerUpload,
      uploadFiles: uploadFiles,
      cancelUpload: cancelUpload
    };
  });
  var _useGlobalIcon = hooks_useGlobalIcon["default"]({
      UploadIcon: tdesignIconsReact.UploadIcon
    }),
    UploadIcon = _useGlobalIcon.UploadIcon;
  var renderTrigger = function renderTrigger() {
    var getDefaultTrigger = function getDefaultTrigger() {
      if (theme === "file-input") {
        return /* @__PURE__ */React__default["default"].createElement(button_index.Button, _objectSpread({
          disabled: disabled,
          variant: "outline"
        }, props.triggerButtonProps), triggerUploadText);
      }
      return /* @__PURE__ */React__default["default"].createElement(button_index.Button, _objectSpread({
        disabled: disabled,
        variant: "outline",
        icon: /* @__PURE__ */React__default["default"].createElement(UploadIcon, null)
      }, props.triggerButtonProps), triggerUploadText);
    };
    return _util_parseTNode["default"](props.trigger, {
      dragActive: false,
      files: uploadValue
    }) || props.children || getDefaultTrigger();
  };
  var triggerElement = renderTrigger();
  var commonDisplayFileProps = {
    accept: props.accept,
    files: uploadValue,
    toUploadFiles: toUploadFiles,
    displayFiles: displayFiles,
    theme: theme,
    abridgeName: props.abridgeName,
    placeholder: props.placeholder,
    disabled: props.disabled,
    tips: props.tips,
    sizeOverLimitMessage: sizeOverLimitMessage,
    uploading: uploading,
    classPrefix: classPrefix,
    tipsClasses: tipsClasses,
    errorClasses: errorClasses,
    placeholderClass: placeholderClass,
    locale: locale,
    autoUpload: props.autoUpload,
    showUploadProgress: props.showUploadProgress,
    fileListDisplay: props.fileListDisplay,
    imageViewerProps: props.imageViewerProps,
    onRemove: onRemove
  };
  var dragProps = {
    onDragFileChange: onDragFileChange,
    onDragenter: props.onDragenter,
    onDragleave: props.onDragleave,
    onDrop: props.onDrop
  };
  var getNormalFileNode = function getNormalFileNode() {
    return /* @__PURE__ */React__default["default"].createElement(upload_themes_NormalFile["default"], _objectSpread(_objectSpread({}, commonDisplayFileProps), {}, {
      multiple: props.multiple
    }), /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(classPrefix, "-upload__trigger"),
      onClick: triggerUpload
    }, triggerElement));
  };
  var getSingleFileDraggerUploadNode = function getSingleFileDraggerUploadNode() {
    return /* @__PURE__ */React__default["default"].createElement(upload_themes_DraggerFile["default"], _objectSpread(_objectSpread({}, commonDisplayFileProps), {}, {
      dragEvents: dragProps,
      trigger: props.trigger,
      cancelUpload: cancelUpload,
      triggerUpload: triggerUpload,
      uploadFiles: uploadFiles
    }));
  };
  var getImageCardUploadNode = function getImageCardUploadNode() {
    return /* @__PURE__ */React__default["default"].createElement(upload_themes_ImageCard["default"], _objectSpread(_objectSpread({}, commonDisplayFileProps), {}, {
      multiple: props.multiple,
      max: props.max,
      showUploadProgress: props.showUploadProgress,
      triggerUpload: triggerUpload,
      uploadFiles: uploadFiles,
      cancelUpload: cancelUpload,
      onPreview: props.onPreview,
      showImageFileName: props.showImageFileName,
      imageProps: imageProps
    }));
  };
  var getFlowListNode = function getFlowListNode() {
    return /* @__PURE__ */React__default["default"].createElement(upload_themes_MultipleFlowList["default"], _objectSpread(_objectSpread({}, commonDisplayFileProps), {}, {
      isBatchUpload: props.isBatchUpload,
      draggable: props.draggable,
      dragEvents: dragProps,
      uploadFiles: uploadFiles,
      cancelUpload: cancelUpload,
      onPreview: props.onPreview,
      showThumbnail: props.showThumbnail,
      showImageFileName: props.showImageFileName,
      uploadButton: props.uploadButton,
      cancelUploadButton: props.cancelUploadButton
    }), /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(classPrefix, "-upload__trigger"),
      onClick: triggerUpload
    }, triggerElement));
  };
  var getCustomFile = function getCustomFile() {
    return /* @__PURE__ */React__default["default"].createElement(upload_themes_CustomFile["default"], _objectSpread(_objectSpread({}, commonDisplayFileProps), {}, {
      draggable: props.draggable,
      dragContent: props.dragContent,
      dragEvents: dragProps,
      triggerUpload: triggerUpload,
      childrenNode: props.children,
      trigger: props.trigger
    }), triggerElement);
  };
  var uploadClasses = [props.className, "".concat(classPrefix, "-upload"), defineProperty._defineProperty({}, "".concat(classPrefix, "-upload--theme-").concat(props.theme), props.theme === "file-input")];
  return /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"](uploadClasses),
    style: props.style,
    onPaste: props.uploadPastedFiles ? onPasteFileChange : void 0
  }, /* @__PURE__ */React__default["default"].createElement("input", {
    ref: inputRef,
    type: "file",
    disabled: disabled,
    onChange: onNormalFileChange,
    multiple: props.multiple,
    accept: props.accept,
    hidden: true
  }), ["file", "file-input"].includes(theme) && !props.draggable && getNormalFileNode(), ["file", "image"].includes(theme) && props.draggable && getSingleFileDraggerUploadNode(), theme === "image" && !props.draggable && getImageCardUploadNode(), ["image-flow", "file-flow"].includes(theme) && getFlowListNode(), theme === "custom" && getCustomFile(), props.tips && /* @__PURE__ */React__default["default"].createElement("small", {
    className: classNames__default["default"]([tipsClasses, defineProperty._defineProperty({}, "".concat(classPrefix, "-upload__tips-").concat(props.status), props.status)])
  }, props.tips), sizeOverLimitMessage && /* @__PURE__ */React__default["default"].createElement("small", {
    className: classNames__default["default"](errorClasses)
  }, sizeOverLimitMessage));
}
var Upload = /*#__PURE__*/React.forwardRef(TdUpload);
Upload.displayName = "Upload";

exports["default"] = Upload;
//# sourceMappingURL=upload.js.map
