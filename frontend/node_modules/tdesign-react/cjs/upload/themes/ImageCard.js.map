{"version":3,"file":"ImageCard.js","sources":["../../../../components/upload/themes/ImageCard.tsx"],"sourcesContent":["import React, { MouseEvent } from 'react';\nimport {\n  BrowseIcon as TdBrowseIcon,\n  DeleteIcon as TdDeleteIcon,\n  AddIcon as TdAddIcon,\n  ErrorCircleFilledIcon as TdErrorCircleFilledIcon,\n} from 'tdesign-icons-react';\nimport classNames from 'classnames';\nimport { abridgeName } from '@tdesign/common-js/upload/utils';\nimport Loading from '../../loading';\nimport useGlobalIcon from '../../hooks/useGlobalIcon';\nimport ImageViewer from '../../image-viewer';\nimport { CommonDisplayFileProps } from '../interface';\nimport { TdUploadProps, UploadFile } from '../type';\nimport parseTNode from '../../_util/parseTNode';\nimport Link from '../../link';\nimport Image from '../../image';\n\nexport interface ImageCardUploadProps extends CommonDisplayFileProps {\n  multiple: TdUploadProps['multiple'];\n  max: TdUploadProps['max'];\n  disabled?: TdUploadProps['disabled'];\n  showUploadProgress: TdUploadProps['showUploadProgress'];\n  triggerUpload?: () => void;\n  uploadFiles?: (toFiles?: UploadFile[]) => void;\n  cancelUpload?: (context: { e: MouseEvent<HTMLElement>; file: UploadFile }) => void;\n  onPreview?: TdUploadProps['onPreview'];\n  showImageFileName?: boolean;\n  imageProps?: TdUploadProps['imageProps'];\n}\n\nconst ImageCard = (props: ImageCardUploadProps) => {\n  const {\n    displayFiles,\n    locale,\n    classPrefix,\n    multiple,\n    max = 0,\n    onRemove,\n    disabled,\n    fileListDisplay,\n    imageProps = {},\n  } = props;\n  const { BrowseIcon, DeleteIcon, AddIcon, ErrorCircleFilledIcon } = useGlobalIcon({\n    AddIcon: TdAddIcon,\n    BrowseIcon: TdBrowseIcon,\n    DeleteIcon: TdDeleteIcon,\n    ErrorCircleFilledIcon: TdErrorCircleFilledIcon,\n  });\n  const { className: imageClassName, ...restImageProps } = imageProps;\n\n  const showTrigger = React.useMemo(() => {\n    if (multiple) {\n      return !max || displayFiles.length < max;\n    }\n    return !displayFiles?.[0];\n  }, [displayFiles, max, multiple]);\n\n  const renderMainContent = (file: UploadFile, index: number) => (\n    <div className={`${classPrefix}-upload__card-content ${classPrefix}-upload__card-box`}>\n      <Image\n        fit=\"contain\"\n        className={classNames(`${classPrefix}-upload__card-image`, imageClassName)}\n        {...restImageProps}\n        src={file.url || file.raw}\n      />\n      <div className={`${classPrefix}-upload__card-mask`}>\n        <span className={`${classPrefix}-upload__card-mask-item`} onClick={(e) => e.stopPropagation()}>\n          <ImageViewer\n            trigger={({ open }) => (\n              <BrowseIcon\n                onClick={(e) => {\n                  props.onPreview?.({ file, index, e });\n                  open();\n                }}\n              />\n            )}\n            images={displayFiles.map((t) => t.url || t.raw)}\n            defaultIndex={index}\n            {...props.imageViewerProps}\n          />\n        </span>\n        {!disabled && (\n          <>\n            <span className={`${classPrefix}-upload__card-mask-item-divider`} />\n            <span className={`${classPrefix}-upload__card-mask-item`} onClick={(e) => e.stopPropagation()}>\n              <DeleteIcon onClick={(e) => onRemove?.({ e, file, index })} />\n            </span>\n          </>\n        )}\n      </div>\n    </div>\n  );\n\n  const renderProgressFile = (file: UploadFile, loadCard: string) => (\n    <div className={classNames([loadCard, `${classPrefix}-upload__${props.theme}-${file.status}`])}>\n      <Loading loading={true} size=\"medium\" />\n      <p>\n        {locale?.progress?.uploadingText}\n        {props.showUploadProgress ? ` ${file.percent}%` : ''}\n      </p>\n    </div>\n  );\n\n  const renderFailFile = (file: UploadFile, index: number, loadCard: string) => (\n    <div className={loadCard}>\n      <ErrorCircleFilledIcon />\n      <p>{file.response?.error || locale?.progress?.failText}</p>\n      <div className={`${classPrefix}-upload__card-mask`}>\n        <span className={`${classPrefix}-upload__card-mask-item`} onClick={(e) => e.stopPropagation()}>\n          <DeleteIcon onClick={(e) => props.onRemove?.({ e, file, index })} />\n        </span>\n      </div>\n    </div>\n  );\n\n  const cardItemClasses = `${classPrefix}-upload__card-item ${classPrefix}-is-background`;\n\n  if (fileListDisplay) {\n    return (\n      <div>\n        {parseTNode(fileListDisplay, {\n          triggerUpload: props.triggerUpload,\n          uploadFiles: props.uploadFiles,\n          cancelUpload: props.cancelUpload,\n          onPreview: props.onPreview,\n          onRemove: props.onRemove,\n          toUploadFiles: props.toUploadFiles,\n          sizeOverLimitMessage: props.sizeOverLimitMessage,\n          locale: props.locale,\n          files: displayFiles,\n        })}\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <ul className={`${classPrefix}-upload__card`}>\n        {displayFiles?.map((file: UploadFile, index: number) => {\n          const loadCard = `${classPrefix}-upload__card-container ${classPrefix}-upload__card-box`;\n          const fileName = props.abridgeName ? abridgeName(file.name, ...props.abridgeName) : file.name;\n          const fileNameClassName = `${classPrefix}-upload__card-name`;\n          return (\n            <li className={cardItemClasses} key={index}>\n              {file.status === 'progress' && renderProgressFile(file, loadCard)}\n              {file.status === 'fail' && renderFailFile(file, index, loadCard)}\n              {!['progress', 'fail'].includes(file.status) && renderMainContent(file, index)}\n              {fileName &&\n                props.showImageFileName &&\n                (file.url ? (\n                  <Link href={file.url} className={fileNameClassName} target=\"_blank\" hover=\"color\" size=\"small\">\n                    {fileName}\n                  </Link>\n                ) : (\n                  <span className={fileNameClassName}>{fileName}</span>\n                ))}\n            </li>\n          );\n        })}\n        {showTrigger && (\n          <li className={cardItemClasses} onClick={props.triggerUpload}>\n            <div\n              className={classNames([\n                `${classPrefix}-upload__image-add`,\n                `${classPrefix}-upload__card-container`,\n                `${classPrefix}-upload__card-box`,\n                {\n                  [`${classPrefix}-is-disabled`]: props.disabled,\n                },\n              ])}\n            >\n              <AddIcon />\n              <p className={classNames([`${classPrefix}-size-s`, `${classPrefix}-upload__add-text`])}>\n                {locale?.triggerUploadText?.image}\n              </p>\n            </div>\n          </li>\n        )}\n      </ul>\n    </div>\n  );\n};\n\nImageCard.displayName = 'ImageCard';\n\nexport default ImageCard;\n"],"names":["ImageCard","props","_locale$triggerUpload","displayFiles","locale","classPrefix","multiple","_props$max","max","onRemove","disabled","fileListDisplay","_props$imageProps","imageProps","_useGlobalIcon","useGlobalIcon","AddIcon","TdAddIcon","BrowseIcon","TdBrowseIcon","DeleteIcon","TdDeleteIcon","ErrorCircleFilledIcon","TdErrorCircleFilledIcon","imageClassName","className","restImageProps","_objectWithoutProperties","_excluded","showTrigger","React","useMemo","length","renderMainContent","file","index","createElement","concat","Image","_objectSpread","fit","classNames","src","url","raw","onClick","e","stopPropagation","ImageViewer","trigger","_ref","open","_props$onPreview","onPreview","call","images","map","t","defaultIndex","imageViewerProps","renderProgressFile","loadCard","_locale$progress","theme","status","Loading","loading","size","progress","uploadingText","showUploadProgress","percent","renderFailFile","_file$response","response","error","_locale$progress2","failText","_props$onRemove","cardItemClasses","parseTNode","triggerUpload","uploadFiles","cancelUpload","toUploadFiles","sizeOverLimitMessage","files","fileName","abridgeName","apply","name","fileNameClassName","key","includes","showImageFileName","Link","href","target","hover","_defineProperty","triggerUploadText","image","displayName"],"mappings":"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"}