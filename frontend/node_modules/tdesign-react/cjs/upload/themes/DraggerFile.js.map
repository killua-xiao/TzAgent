{"version":3,"file":"DraggerFile.js","sources":["../../../../components/upload/themes/DraggerFile.tsx"],"sourcesContent":["import React, { FC, MouseEvent, useMemo, useRef } from 'react';\nimport classNames from 'classnames';\nimport {\n  CheckCircleFilledIcon as TdCheckCircleFilledIcon,\n  ErrorCircleFilledIcon as TdErrorCircleFilledIcon,\n} from 'tdesign-icons-react';\nimport { abridgeName, getFileSizeText } from '@tdesign/common-js/upload/utils';\nimport { TdUploadProps, UploadFile } from '../type';\nimport Link from '../../link';\nimport { CommonDisplayFileProps } from '../interface';\nimport useCommonClassName from '../../hooks/useCommonClassName';\nimport TLoading from '../../loading';\nimport useDrag, { UploadDragEvents } from '../hooks/useDrag';\nimport useGlobalIcon from '../../hooks/useGlobalIcon';\nimport ImageViewer from '../../image-viewer';\nimport { parseContentTNode } from '../../_util/parseTNode';\nimport Image from '../../image';\n\nexport interface DraggerProps extends CommonDisplayFileProps {\n  trigger?: TdUploadProps['trigger'];\n  triggerUpload?: () => void;\n  uploadFiles?: (toFiles?: UploadFile[]) => void;\n  cancelUpload?: (context: { e: MouseEvent<HTMLElement>; file: UploadFile }) => void;\n  dragEvents: UploadDragEvents;\n}\n\nconst DraggerFile: FC<DraggerProps> = (props) => {\n  const { displayFiles, locale, disabled, trigger, accept } = props;\n\n  const { SIZE } = useCommonClassName();\n  const uploadPrefix = `${props.classPrefix}-upload`;\n\n  const drag = useDrag({ ...props.dragEvents, accept });\n  const { dragActive } = drag;\n\n  const draggerFileRef = useRef(null);\n\n  const { CheckCircleFilledIcon, ErrorCircleFilledIcon } = useGlobalIcon({\n    CheckCircleFilledIcon: TdCheckCircleFilledIcon,\n    ErrorCircleFilledIcon: TdErrorCircleFilledIcon,\n  });\n\n  const firstFile = displayFiles[0];\n  const firstFileStatus = firstFile?.status;\n\n  const classes = useMemo(\n    () => [\n      `${uploadPrefix}__dragger`,\n      { [`${uploadPrefix}__dragger-center`]: !firstFile },\n      { [`${uploadPrefix}__dragger-error`]: firstFileStatus === 'fail' },\n    ],\n    [firstFile, firstFileStatus, uploadPrefix],\n  );\n\n  const renderImage = () => {\n    const file = displayFiles[0];\n    const url = file?.url || file?.response?.url;\n    return (\n      <div className={`${uploadPrefix}__dragger-img-wrap`}>\n        <ImageViewer\n          images={[url]}\n          trigger={({ open }) => <Image src={url || file.raw} onClick={open} />}\n          {...props.imageViewerProps}\n        ></ImageViewer>\n      </div>\n    );\n  };\n\n  const renderUploading = () => {\n    const file = displayFiles[0];\n    if (file?.status === 'progress') {\n      return (\n        <div className={`${uploadPrefix}__single-progress`}>\n          <TLoading />\n          <span className={`${uploadPrefix}__single-percent`}>{file.percent}%</span>\n        </div>\n      );\n    }\n  };\n\n  const renderMainPreview = () => {\n    const file = displayFiles[0];\n    const fileName = props.abridgeName ? abridgeName(file.name, ...props.abridgeName) : file.name;\n    const fileInfo = (\n      <>\n        <div className={`${uploadPrefix}__dragger-text`}>\n          <span className={`${uploadPrefix}__single-name`}>{fileName}</span>\n          {file.status === 'progress' && renderUploading()}\n          {file.status === 'success' && <CheckCircleFilledIcon />}\n          {file.status === 'fail' && <ErrorCircleFilledIcon />}\n        </div>\n        <small className={`${SIZE.small}`}>\n          {locale.file.fileSizeText}：{getFileSizeText(file.size)}\n        </small>\n        <small className={`${SIZE.small}`}>\n          {locale.file.fileOperationDateText}：{file.uploadTime || '-'}\n        </small>\n      </>\n    );\n    return (\n      <div className={`${uploadPrefix}__dragger-progress`}>\n        {props.theme === 'image' && renderImage()}\n        <div className={`${uploadPrefix}__dragger-progress-info`}>\n          {props.fileListDisplay ? parseContentTNode(props.fileListDisplay, { files: displayFiles }) : fileInfo}\n          <div className={`${uploadPrefix}__dragger-btns`}>\n            {['progress', 'waiting'].includes(file.status) && !disabled && (\n              <Link\n                theme=\"primary\"\n                hover=\"color\"\n                disabled={disabled}\n                className={`${uploadPrefix}__dragger-progress-cancel`}\n                onClick={(e) =>\n                  props.cancelUpload?.({\n                    e,\n                    file: props.toUploadFiles[0] || props.files[0],\n                  })\n                }\n              >\n                {locale?.cancelUploadText}\n              </Link>\n            )}\n            {!props.autoUpload && file.status === 'waiting' && (\n              <Link\n                theme=\"primary\"\n                hover=\"color\"\n                disabled={disabled}\n                onClick={() => props.uploadFiles?.()}\n                className={`${uploadPrefix}__dragger-upload-btn`}\n              >\n                {locale.triggerUploadText.normal}\n              </Link>\n            )}\n          </div>\n          {['fail', 'success'].includes(file?.status) && !disabled && (\n            <div className={`${uploadPrefix}__dragger-btns`}>\n              <Link\n                theme=\"primary\"\n                hover=\"color\"\n                disabled={disabled}\n                className={`${uploadPrefix}__dragger-progress-cancel`}\n                onClick={props.triggerUpload}\n              >\n                {locale.triggerUploadText.reupload}\n              </Link>\n              <Link\n                theme=\"danger\"\n                hover=\"color\"\n                disabled={disabled}\n                className={`${uploadPrefix}__dragger-delete-btn`}\n                onClick={(e) => props.onRemove({ e, index: 0, file })}\n              >\n                {locale.triggerUploadText.delete}\n              </Link>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  const renderDefaultDragElement = () => {\n    const unActiveElement = (\n      <div>\n        <span className={`${uploadPrefix}--highlight`}>{locale.triggerUploadText?.normal}</span>\n        <span>&nbsp;&nbsp;/&nbsp;&nbsp;{locale.dragger.draggingText}</span>\n      </div>\n    );\n    const activeElement = <div>{locale.dragger.dragDropText}</div>;\n    return dragActive ? activeElement : unActiveElement;\n  };\n\n  const getContent = () => {\n    const file = displayFiles[0];\n    if (file && (['progress', 'success', 'fail', 'waiting'].includes(file.status) || !file.status)) {\n      return renderMainPreview();\n    }\n    return (\n      <div className={`${uploadPrefix}__trigger`} onClick={props.triggerUpload}>\n        {props.children || renderDefaultDragElement()}\n      </div>\n    );\n  };\n\n  return (\n    <div\n      ref={draggerFileRef}\n      className={classNames(classes)}\n      onDrop={drag.handleDrop}\n      onDragEnter={drag.handleDragenter}\n      onDragOver={drag.handleDragover}\n      onDragLeave={drag.handleDragleave}\n    >\n      {parseContentTNode?.(trigger, { files: displayFiles, dragActive }) || getContent()}\n    </div>\n  );\n};\n\nDraggerFile.displayName = 'DraggerFile';\n\nexport default DraggerFile;\n"],"names":["DraggerFile","props","displayFiles","locale","disabled","trigger","accept","_useCommonClassName","useCommonClassName","SIZE","uploadPrefix","concat","classPrefix","drag","useDrag","_objectSpread","dragEvents","dragActive","draggerFileRef","useRef","_useGlobalIcon","useGlobalIcon","CheckCircleFilledIcon","TdCheckCircleFilledIcon","ErrorCircleFilledIcon","TdErrorCircleFilledIcon","firstFile","firstFileStatus","status","classes","useMemo","_defineProperty","renderImage","_file$response","file","url","response","React","createElement","className","ImageViewer","images","_ref3","open","Image","src","raw","onClick","imageViewerProps","renderUploading","TLoading","percent","renderMainPreview","fileName","abridgeName","apply","name","fileInfo","small","fileSizeText","getFileSizeText","size","fileOperationDateText","uploadTime","theme","fileListDisplay","parseContentTNode","files","includes","Link","hover","e","_props$cancelUpload","cancelUpload","call","toUploadFiles","cancelUploadText","autoUpload","_props$uploadFiles","uploadFiles","triggerUploadText","normal","triggerUpload","reupload","onRemove","index","renderDefaultDragElement","_locale$triggerUpload","unActiveElement","dragger","draggingText","activeElement","dragDropText","getContent","children","ref","classNames","onDrop","handleDrop","onDragEnter","handleDragenter","onDragOver","handleDragover","onDragLeave","handleDragleave","displayName"],"mappings":"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"}