{"version":3,"file":"NormalFile.js","sources":["../../../../components/upload/themes/NormalFile.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  CloseIcon as TdCloseIcon,\n  TimeFilledIcon as TdTimeFilledIcon,\n  CheckCircleFilledIcon as TdCheckCircleFilledIcon,\n  ErrorCircleFilledIcon as TdErrorCircleFilledIcon,\n  CloseCircleFilledIcon as TdCloseCircleFilledIcon,\n} from 'tdesign-icons-react';\nimport classNames from 'classnames';\nimport { abridgeName } from '@tdesign/common-js/upload/utils';\nimport parseTNode from '../../_util/parseTNode';\nimport TLoading from '../../loading';\nimport Link from '../../link';\nimport { UploadFile } from '../type';\nimport useGlobalIcon from '../../hooks/useGlobalIcon';\nimport { CommonDisplayFileProps } from '../interface';\n\nexport interface NormalFileProps extends CommonDisplayFileProps {\n  multiple: boolean;\n}\n\nexport default function NormalFile(props: NormalFileProps) {\n  const { theme, disabled, classPrefix, locale } = props;\n\n  const { CloseIcon, TimeFilledIcon, CheckCircleFilledIcon, ErrorCircleFilledIcon, CloseCircleFilledIcon } =\n    useGlobalIcon({\n      CloseIcon: TdCloseIcon,\n      TimeFilledIcon: TdTimeFilledIcon,\n      CheckCircleFilledIcon: TdCheckCircleFilledIcon,\n      ErrorCircleFilledIcon: TdErrorCircleFilledIcon,\n      CloseCircleFilledIcon: TdCloseCircleFilledIcon,\n    });\n\n  const uploadPrefix = `${classPrefix}-upload`;\n\n  const renderProgress = (percent: number) => (\n    <div className={`${uploadPrefix}__single-progress`}>\n      <TLoading />\n      <span className={`${uploadPrefix}__single-percent`}>{percent || 0}%</span>\n    </div>\n  );\n\n  // 文本型预览\n  const renderFilePreviewAsText = (files: UploadFile[]) => {\n    if (theme !== 'file') return null;\n    if (!props.multiple && files[0]?.status === 'fail' && props.autoUpload) {\n      return null;\n    }\n    return files.map((file, index) => {\n      const fileName = props.abridgeName && file.name ? abridgeName(file.name, ...props.abridgeName) : file.name;\n      return (\n        <div\n          className={`${uploadPrefix}__single-display-text ${uploadPrefix}__display-text--margin`}\n          key={file.name + index + file.percent + file.status}\n        >\n          {file.url ? (\n            <Link href={file.url} target=\"_blank\" hover=\"color\" size=\"small\" className={`${uploadPrefix}__single-name`}>\n              {fileName}\n            </Link>\n          ) : (\n            <span className={`${uploadPrefix}__single-name`}>{fileName}</span>\n          )}\n          {file.status === 'fail' && (\n            <div className={`${uploadPrefix}__flow-status ${uploadPrefix}__file-fail`}>\n              <ErrorCircleFilledIcon />\n            </div>\n          )}\n          {file.status === 'waiting' && (\n            <div className={`${uploadPrefix}__flow-status ${uploadPrefix}__file-waiting`}>\n              <TimeFilledIcon />\n            </div>\n          )}\n          {file.status === 'progress' && renderProgress(file.percent)}\n          {!disabled && file.status !== 'progress' && (\n            <CloseIcon className={`${uploadPrefix}__icon-delete`} onClick={(e) => props.onRemove({ e, file, index })} />\n          )}\n        </div>\n      );\n    });\n  };\n\n  // 输入框型预览\n  const renderFilePreviewAsInput = () => {\n    const file = props.displayFiles[0];\n    const inputTextClass = [\n      `${classPrefix}-input__inner`,\n      { [`${uploadPrefix}__placeholder`]: !props.displayFiles[0] },\n    ];\n    const disabledClass = disabled ? `${classPrefix}-is-disabled` : '';\n    const fileName =\n      props.abridgeName?.length && file?.name ? abridgeName(file.name, ...props.abridgeName) : file?.name;\n    return (\n      <div className={`${uploadPrefix}__single-input-preview ${classPrefix}-input ${disabledClass}`}>\n        <div className={classNames(inputTextClass)}>\n          <span\n            className={classNames(`${uploadPrefix}__single-input-text`, {\n              [props.placeholderClass]: props.placeholder && !file?.name,\n            })}\n          >\n            {file?.name ? fileName : props.placeholder}\n          </span>\n          {file?.status === 'progress' && renderProgress(file.percent)}\n          {file?.status === 'waiting' && (\n            <TimeFilledIcon className={`${uploadPrefix}__status-icon ${uploadPrefix}__file-waiting`} />\n          )}\n          {file?.name && file.status === 'success' && (\n            <CheckCircleFilledIcon className={`${uploadPrefix}__status-icon`} />\n          )}\n          {file?.name && file.status === 'fail' && (\n            <ErrorCircleFilledIcon className={`${uploadPrefix}__status-icon ${uploadPrefix}__file-fail`} />\n          )}\n          {Boolean(!disabled && file?.name) && (\n            <CloseCircleFilledIcon\n              className={`${uploadPrefix}__single-input-clear`}\n              onClick={(e) => props.onRemove({ e, file, index: 0 })}\n            />\n          )}\n        </div>\n      </div>\n    );\n  };\n\n  const { displayFiles, fileListDisplay } = props;\n\n  const fileListDisplayNode = parseTNode(fileListDisplay, {\n    onRemove: props.onRemove,\n    toUploadFiles: props.toUploadFiles,\n    sizeOverLimitMessage: props.sizeOverLimitMessage,\n    locale: props.locale,\n    files: displayFiles,\n  });\n\n  const classes = [`${uploadPrefix}__single`, `${uploadPrefix}__single-${theme}`];\n  return (\n    <div className={classNames(classes)}>\n      {theme === 'file-input' && renderFilePreviewAsInput()}\n\n      {props.children}\n\n      {theme === 'file' && props.placeholder && !displayFiles[0] && (\n        <small className={classNames([props.tipsClasses, props.placeholderClass])}>{props.placeholder}</small>\n      )}\n\n      {fileListDisplayNode === null ? null : fileListDisplayNode || renderFilePreviewAsText(displayFiles)}\n\n      {/* 单文件上传失败要显示失败的原因 */}\n      {!props.multiple && displayFiles[0]?.status === 'fail' && theme === 'file' ? (\n        <small className={classNames(props.errorClasses)}>\n          {displayFiles[0].response?.error || locale.progress.failText}\n        </small>\n      ) : null}\n    </div>\n  );\n}\n\nNormalFile.displayName = 'NormalFile';\n"],"names":["NormalFile","props","_displayFiles$","_displayFiles$0$respo","theme","disabled","classPrefix","locale","_useGlobalIcon","useGlobalIcon","CloseIcon","TdCloseIcon","TimeFilledIcon","TdTimeFilledIcon","CheckCircleFilledIcon","TdCheckCircleFilledIcon","ErrorCircleFilledIcon","TdErrorCircleFilledIcon","CloseCircleFilledIcon","TdCloseCircleFilledIcon","uploadPrefix","renderProgress","percent","React","createElement","className","TLoading","renderFilePreviewAsText","files","_files$","multiple","status","autoUpload","map","file","index","fileName","abridgeName","name","apply","concat","_toConsumableArray","key","url","Link","href","target","hover","size","onClick","e","onRemove","renderFilePreviewAsInput","_props$abridgeName","displayFiles","inputTextClass","_defineProperty","disabledClass","length","classNames","placeholderClass","placeholder","Boolean","fileListDisplay","fileListDisplayNode","parseTNode","toUploadFiles","sizeOverLimitMessage","classes","children","tipsClasses","errorClasses","response","error","progress","failText","displayName"],"mappings":"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"}