/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-0006fcfa.js');
var objectWithoutProperties = require('../_chunks/dep-8fa3a4c2.js');
var slicedToArray = require('../_chunks/dep-8e4d656d.js');
var React = require('react');
var classNames = require('classnames');
var tdesignIconsReact = require('tdesign-icons-react');
var typography_ellipsis_Ellipsis = require('./ellipsis/Ellipsis.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var typography_ellipsis_useEllipsis = require('./ellipsis/useEllipsis.js');
var button_Button = require('../button/Button.js');
var tooltip_index = require('../tooltip/index.js');
var locale_LocalReceiver = require('../locale/LocalReceiver.js');
var hooks_useDefaultProps = require('../hooks/useDefaultProps.js');
var typography_defaultProps = require('./defaultProps.js');
var _util_copyText = require('../_util/copyText.js');
require('../_chunks/dep-667ac7af.js');
require('../_chunks/dep-00b49251.js');
require('./ellipsis/Truncate.js');
require('../_chunks/dep-69792df2.js');
require('react-is');
require('../_chunks/dep-d5e8c967.js');
require('../_chunks/dep-255ceed8.js');
require('../_chunks/dep-25585736.js');
require('../_chunks/dep-64577888.js');
require('../_chunks/dep-79629634.js');
require('../_chunks/dep-62e73936.js');
require('../_chunks/dep-a48c7e8b.js');
require('../_chunks/dep-31c4bc3d.js');
require('../_chunks/dep-eea2872a.js');
require('../_chunks/dep-71455db7.js');
require('../_chunks/dep-9e5a468d.js');
require('../_chunks/dep-ec8d2dca.js');
require('../_chunks/dep-fc596d16.js');
require('../_chunks/dep-f26edb7b.js');
require('../_chunks/dep-f33c1939.js');
require('../_chunks/dep-21ece627.js');
require('../_chunks/dep-25e4aa84.js');
require('../_chunks/dep-e1fbe1c3.js');
require('../_chunks/dep-df2b541f.js');
require('../_chunks/dep-edd366db.js');
require('../_chunks/dep-a56c4939.js');
require('../_chunks/dep-3d4656ee.js');
require('../_chunks/dep-0ffc9d96.js');
require('../_chunks/dep-efe6d243.js');
require('../_chunks/dep-4b18243f.js');
require('../_chunks/dep-bff2c990.js');
require('../_chunks/dep-9a375a19.js');
require('../_chunks/dep-3398c1f2.js');
require('../_chunks/dep-d915c90f.js');
require('../_chunks/dep-7a148045.js');
require('../_chunks/dep-a2cb9299.js');
require('../_chunks/dep-373af7a2.js');
require('../_chunks/dep-fc29b8b5.js');
require('../_chunks/dep-b7ad4d54.js');
require('../config-provider/ConfigContext.js');
require('../_chunks/dep-1df1dad8.js');
require('../_chunks/dep-5b5ab11b.js');
require('dayjs');
require('../_chunks/dep-f32c03f1.js');
require('../_chunks/dep-6c297e20.js');
require('../_chunks/dep-f981815b.js');
require('../hooks/useDomRefCallback.js');
require('../hooks/useRipple.js');
require('../_chunks/dep-dc4ce063.js');
require('../hooks/useAnimation.js');
require('../_chunks/dep-381fa848.js');
require('../_chunks/dep-4ed9eda4.js');
require('../loading/index.js');
require('../loading/Loading.js');
require('../common/Portal.js');
require('react-dom');
require('../hooks/useLayoutEffect.js');
require('../loading/gradient.js');
require('../_chunks/dep-002fcc1e.js');
require('../_chunks/dep-e4e1901e.js');
require('../_chunks/dep-2ffa3ff1.js');
require('../loading/defaultProps.js');
require('../loading/plugin.js');
require('../_util/react-render.js');
require('../_chunks/dep-65ef8e09.js');
require('../common/PluginContainer.js');
require('../config-provider/ConfigProvider.js');
require('../_chunks/dep-ab2f63ec.js');
require('../button/defaultProps.js');
require('../_util/parseTNode.js');
require('../_chunks/dep-59671c87.js');
require('../tooltip/Tooltip.js');
require('../popup/index.js');
require('../popup/Popup.js');
require('react-transition-group');
require('../_util/ref.js');
require('../_util/isFragment.js');
require('../hooks/useAttach.js');
require('../hooks/useControlled.js');
require('../_util/noop.js');
require('../_chunks/dep-66114ce9.js');
require('../_chunks/dep-62d1dd66.js');
require('../hooks/useMutationObserver.js');
require('../hooks/useLatest.js');
require('../_chunks/dep-eb6d55c1.js');
require('../_chunks/dep-014b9b78.js');
require('../_chunks/dep-abdd786a.js');
require('../_chunks/dep-a231fdc5.js');
require('../_chunks/dep-cf14666e.js');
require('../hooks/usePopper.js');
require('@popperjs/core');
require('react-fast-compare');
require('../hooks/useWindowSize.js');
require('../popup/defaultProps.js');
require('../popup/hooks/useTrigger.js');
require('../_util/composeRefs.js');
require('../_util/listener.js');
require('../popup/utils/transition.js');
require('../popup/PopupPlugin.js');
require('../tooltip/defaultProps.js');
require('../tooltip/TooltipLite.js');
require('../hooks/useSwitch.js');
require('../hooks/usePersistFn.js');
require('../_chunks/dep-1438af5a.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

var _excluded = ["theme", "disabled", "className", "copyable", "strong", "mark", "code", "keyboard", "underline", "delete", "italic", "children", "ellipsis"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { defineProperty._defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var Text = /*#__PURE__*/React.forwardRef(function (originalProps, ref) {
  var _copyable$onCopy, _copyable$tooltipProp;
  var _useConfig = hooks_useConfig["default"](),
    classPrefix = _useConfig.classPrefix;
  var props = hooks_useDefaultProps["default"](originalProps, typography_defaultProps.textDefaultProps);
  var prefixCls = "".concat(classPrefix, "-typography");
  var _useLocaleReceiver = locale_LocalReceiver.useLocaleReceiver("typography"),
    _useLocaleReceiver2 = slicedToArray._slicedToArray(_useLocaleReceiver, 2),
    local = _useLocaleReceiver2[0],
    t = _useLocaleReceiver2[1];
  var copiedText = t(local.copiedText);
  var theme = props.theme,
    disabled = props.disabled,
    className = props.className,
    copyable = props.copyable,
    strong = props.strong,
    mark = props.mark,
    code = props.code,
    keyboard = props.keyboard,
    underline = props.underline,
    deleteProp = props["delete"],
    italic = props.italic,
    children = props.children,
    ellipsis = props.ellipsis,
    rest = objectWithoutProperties._objectWithoutProperties(props, _excluded);
  var getComponent = function getComponent() {
    var _Object$entries$find;
    var componentMap = {
      strong: !!strong,
      mark: !!mark,
      code: !!code,
      kbd: !!keyboard,
      u: !!underline,
      del: !!deleteProp,
      i: !!italic
    };
    return (_Object$entries$find = Object.entries(componentMap).find(function (_ref) {
      var _ref2 = slicedToArray._slicedToArray(_ref, 2),
        condition = _ref2[1];
      return !!condition;
    })) === null || _Object$entries$find === void 0 ? void 0 : _Object$entries$find[0];
  };
  var currentRef = React.useRef(null);
  var _useEllipsis = typography_ellipsis_useEllipsis["default"](ellipsis),
    ellipsisProps = _useEllipsis.ellipsisProps;
  var Component = getComponent();
  var textEllipsisProps = _objectSpread({}, ellipsisProps);
  var _useState = React.useState(false),
    _useState2 = slicedToArray._slicedToArray(_useState, 2),
    isCopied = _useState2[0],
    setIsCopied = _useState2[1];
  var copyProps = typeof copyable === "boolean" ? {
    text: children.toString(),
    onCopy: Function.prototype,
    tooltipProps: isCopied ? {
      content: copiedText
    } : null
  } : {
    text: (copyable === null || copyable === void 0 ? void 0 : copyable.text) || children.toString(),
    onCopy: copyable === null || copyable === void 0 || (_copyable$onCopy = copyable.onCopy) === null || _copyable$onCopy === void 0 ? void 0 : _copyable$onCopy.call(copyable),
    tooltipProps: _objectSpread(_objectSpread({}, copyable === null || copyable === void 0 ? void 0 : copyable.tooltipProps), {}, {
      content: isCopied ? copiedText : copyable === null || copyable === void 0 || (_copyable$tooltipProp = copyable.tooltipProps) === null || _copyable$tooltipProp === void 0 ? void 0 : _copyable$tooltipProp.content
    }),
    suffix: copyable === null || copyable === void 0 ? void 0 : copyable.suffix
  };
  var handleCopy = function handleCopy() {
    _util_copyText["default"](copyProps === null || copyProps === void 0 ? void 0 : copyProps.text);
    setIsCopied(true);
    setTimeout(function () {
      setIsCopied(false);
    }, 1500);
    if (typeof copyProps.onCopy === "function") copyProps.onCopy();
  };
  var renderContent = function renderContent(withChildren) {
    var tooltipProps = copyProps.tooltipProps;
    var wrapWithTooltip = function wrapWithTooltip(wrapContent) {
      return tooltipProps ? /* @__PURE__ */React__default["default"].createElement(tooltip_index.Tooltip, _objectSpread({}, tooltipProps), wrapContent) : wrapContent;
    };
    var getSuffix = function getSuffix() {
      if (typeof (copyProps === null || copyProps === void 0 ? void 0 : copyProps.suffix) === "function") {
        return copyProps.suffix({
          copied: isCopied
        });
      }
      return isCopied ? /* @__PURE__ */React__default["default"].createElement(tdesignIconsReact.CheckIcon, null) : /* @__PURE__ */React__default["default"].createElement(tdesignIconsReact.CopyIcon, null);
    };
    return /* @__PURE__ */React__default["default"].createElement(React__default["default"].Fragment, null, withChildren ? children : null, copyable ? wrapWithTooltip(/* @__PURE__ */React__default["default"].createElement(button_Button["default"], {
      shape: "square",
      theme: "primary",
      variant: "text",
      icon: getSuffix(),
      onClick: handleCopy
    })) : null);
  };
  if (!ellipsis) {
    return Component ? /* @__PURE__ */React__default["default"].createElement("span", _objectSpread({
      className: classNames__default["default"](className, prefixCls),
      ref: ref || currentRef
    }, rest), /* @__PURE__ */React__default["default"].createElement(Component, null, renderContent(true))) : /* @__PURE__ */React__default["default"].createElement("span", _objectSpread({
      className: classNames__default["default"](className, defineProperty._defineProperty(defineProperty._defineProperty({}, "".concat(prefixCls, "--").concat(theme), theme), "".concat(prefixCls, "--disabled"), disabled))
    }, rest), renderContent(true));
  }
  return /* @__PURE__ */React__default["default"].createElement(React__default["default"].Fragment, null, Component ? /* @__PURE__ */React__default["default"].createElement("span", _objectSpread({
    className: classNames__default["default"](className, prefixCls),
    ref: ref || currentRef
  }, rest), /* @__PURE__ */React__default["default"].createElement(typography_ellipsis_Ellipsis["default"], _objectSpread(_objectSpread({}, textEllipsisProps), {}, {
    component: Component
  }), children)) : /* @__PURE__ */React__default["default"].createElement(typography_ellipsis_Ellipsis["default"], _objectSpread(_objectSpread({}, textEllipsisProps), {}, {
    className: classNames__default["default"](className, defineProperty._defineProperty(defineProperty._defineProperty({}, "".concat(prefixCls, "--").concat(theme), theme), "".concat(prefixCls, "--disabled"), disabled))
  }, rest), children), renderContent(false));
});

exports["default"] = Text;
//# sourceMappingURL=Text.js.map
