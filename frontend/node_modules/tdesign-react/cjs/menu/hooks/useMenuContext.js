/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../../_chunks/dep-0006fcfa.js');
var slicedToArray = require('../../_chunks/dep-8e4d656d.js');
var React = require('react');
var menu__util_getMenuTree = require('../_util/getMenuTree.js');
var noop = require('../../_chunks/dep-139db759.js');
require('../../_chunks/dep-667ac7af.js');
require('../../_chunks/dep-00b49251.js');
require('../../_chunks/dep-e4e1901e.js');
require('../../_chunks/dep-69792df2.js');

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { defineProperty._defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function useMenuContext(_ref) {
  var defaultValue = _ref.defaultValue,
    defaultExpanded = _ref.defaultExpanded,
    expandMutex = _ref.expandMutex,
    children = _ref.children,
    _ref$onExpand = _ref.onExpand,
    onExpand = _ref$onExpand === void 0 ? noop.noop : _ref$onExpand,
    _ref$onChange = _ref.onChange,
    onChange = _ref$onChange === void 0 ? noop.noop : _ref$onChange,
    value = _ref.value,
    expanded = _ref.expanded,
    collapsed = _ref.collapsed,
    expandType = _ref.expandType,
    theme = _ref.theme,
    mode = _ref.mode;
  var _useState = React.useState({
      active: defaultValue,
      expanded: defaultExpanded
    }),
    _useState2 = slicedToArray._slicedToArray(_useState, 2),
    state = _useState2[0],
    setState = _useState2[1];
  var setStateValue = function setStateValue(menuState) {
    return setState(_objectSpread(_objectSpread({}, state), menuState));
  };
  var menuTree = React.useMemo(function () {
    return new menu__util_getMenuTree.MenuTree(children, expandMutex);
  }, [children, expandMutex]);
  React.useEffect(function () {
    var currExpanded = expanded || state.expanded || [];
    menuTree.setExpanded(currExpanded);
  }, [expanded, state.expanded, menuTree]);
  var handleExpandChange = function handleExpandChange(value2) {
    menuTree.expandNode(value2);
    var nextExpanded = menuTree.getExpanded();
    onExpand(nextExpanded);
    setState(function (prevState) {
      return _objectSpread(_objectSpread({}, prevState), {}, {
        expanded: nextExpanded
      });
    });
  };
  return {
    value: {
      onExpand: handleExpandChange,
      onChange: onChange,
      active: value || state.active,
      expanded: expanded || state.expanded,
      collapsed: collapsed || state.collapsed,
      setState: setStateValue,
      expandMutex: expandMutex,
      expandType: collapsed ? "popup" : expandType,
      mode: mode,
      theme: theme
    }
  };
}

exports["default"] = useMenuContext;
//# sourceMappingURL=useMenuContext.js.map
