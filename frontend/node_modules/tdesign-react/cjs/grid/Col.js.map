{"version":3,"file":"Col.js","sources":["../../../components/grid/Col.tsx"],"sourcesContent":["import React, { useContext, forwardRef } from 'react';\nimport classNames from 'classnames';\nimport { isObject } from 'lodash-es';\nimport useConfig from '../hooks/useConfig';\nimport { StyledProps } from '../common';\nimport { TdColProps, TdRowProps } from './type';\nimport { colDefaultProps } from './defaultProps';\nimport { RowContext } from './Row';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\ntype FlexType = number | 'none' | 'auto' | string;\n\nexport interface ColProps extends TdColProps, StyledProps {\n  /**\n   * 文本内容\n   */\n  children?: React.ReactNode;\n}\n\nconst calcColPadding = (gutter: TdRowProps['gutter'], currentSize: string) => {\n  const paddingObj = {};\n  if (typeof gutter === 'number') {\n    Object.assign(paddingObj, {\n      paddingLeft: `${gutter / 2}px`,\n      paddingRight: `${gutter / 2}px`,\n    });\n  } else if (Array.isArray(gutter) && gutter.length) {\n    if (typeof gutter[0] === 'number') {\n      Object.assign(paddingObj, {\n        paddingLeft: `${gutter[0] / 2}px`,\n        paddingRight: `${gutter[0] / 2}px`,\n      });\n    }\n\n    if (isObject(gutter[0]) && gutter[0][currentSize]) {\n      Object.assign(paddingObj, {\n        paddingLeft: `${gutter[0][currentSize] / 2}px`,\n        paddingRight: `${gutter[0][currentSize] / 2}px`,\n      });\n    }\n  } else if (isObject(gutter) && gutter[currentSize]) {\n    Object.assign(paddingObj, {\n      paddingLeft: `${gutter[currentSize] / 2}px`,\n      paddingRight: `${gutter[currentSize] / 2}px`,\n    });\n  }\n  return paddingObj;\n};\n\nconst parseFlex = (flex: FlexType) => {\n  if (typeof flex === 'number') {\n    return `${flex} ${flex} auto`;\n  }\n\n  if (/^\\d+(\\.\\d+)?(px|r?em|%)$/.test(flex)) {\n    return `0 0 ${flex}`;\n  }\n\n  return flex;\n};\n\nconst Col = forwardRef<HTMLElement, ColProps>((props, ref) => {\n  const {\n    flex,\n    offset,\n    order,\n    pull,\n    push,\n    span,\n    tag,\n    className,\n    children,\n    style: propStyle,\n    ...otherColProps\n  } = useDefaultProps<ColProps>(props, colDefaultProps);\n\n  const { gutter: rowGutter, size: rowSize } = useContext(RowContext);\n\n  const { classPrefix } = useConfig();\n  const allSizes = ['xs', 'sm', 'md', 'lg', 'xl', 'xxl'];\n  const sizeClasses = allSizes.reduce((acc, currSize) => {\n    const sizeProp = props[currSize];\n    let sizeObj: any = {};\n    if (typeof sizeProp === 'number') {\n      sizeObj.span = sizeProp;\n    } else if (isObject(sizeProp)) {\n      sizeObj = sizeProp || {};\n    }\n\n    return {\n      ...acc,\n      [`${classPrefix}-col-${currSize}-${sizeObj.span}`]: sizeObj.span !== undefined,\n      [`${classPrefix}-col-${currSize}-order-${sizeObj.order}`]: parseInt(sizeObj.order, 10) >= 0,\n      [`${classPrefix}-col-${currSize}-offset-${sizeObj.offset}`]: parseInt(sizeObj.offset, 10) >= 0,\n      [`${classPrefix}-col-${currSize}-push-${sizeObj.push}`]: parseInt(sizeObj.push, 10) >= 0,\n      [`${classPrefix}-col-${currSize}-pull-${sizeObj.pull}`]: parseInt(sizeObj.pull, 10) >= 0,\n    };\n  }, {});\n\n  const colClassNames = classNames(\n    `${classPrefix}-col`,\n    className,\n    {\n      [`${classPrefix}-col-${span}`]: span !== undefined,\n      [`${classPrefix}-col-offset-${offset}`]: parseInt(offset as unknown as string, 10) >= 0,\n      [`${classPrefix}-col-pull-${pull}`]: parseInt(pull as unknown as string, 10) >= 0,\n      [`${classPrefix}-col-push-${push}`]: parseInt(push as unknown as string, 10) >= 0,\n      [`${classPrefix}-col-order-${order}`]: parseInt(order as unknown as string, 10) >= 0,\n    },\n    sizeClasses,\n  );\n\n  const colStyle = {\n    ...calcColPadding(rowGutter, rowSize),\n    ...propStyle,\n  };\n  flex && (colStyle.flex = parseFlex(flex));\n\n  return React.createElement(\n    tag,\n    {\n      ref,\n      className: colClassNames,\n      style: colStyle,\n      ...otherColProps,\n    },\n    children,\n  );\n});\n\nCol.displayName = 'Col';\n\nexport default Col;\n"],"names":["calcColPadding","gutter","currentSize","paddingObj","Object","assign","paddingLeft","concat","paddingRight","Array","isArray","length","isObject","parseFlex","flex","test","Col","forwardRef","props","ref","_useDefaultProps","useDefaultProps","colDefaultProps","offset","order","pull","push","span","tag","className","children","propStyle","style","otherColProps","_objectWithoutProperties","_excluded","_useContext","useContext","RowContext","rowGutter","rowSize","size","_useConfig","useConfig","classPrefix","allSizes","sizeClasses","reduce","acc","currSize","sizeProp","sizeObj","_objectSpread","_defineProperty","parseInt","colClassNames","classNames","colStyle","React","createElement","displayName"],"mappings":"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"}