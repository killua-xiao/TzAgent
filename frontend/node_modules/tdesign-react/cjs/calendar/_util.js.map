{"version":3,"file":"_util.js","sources":["../../../components/calendar/_util.ts"],"sourcesContent":["import dayjs from 'dayjs';\nimport { CalendarCell } from './type';\n\n// 抽取配置常量\nexport const blockName = 'calendar'; // 类名前缀\nexport const controlSectionSize = 'medium'; // 操作栏控件尺寸\nexport const minYear = 1970; // 最早选择年份\n\n/**\n * 获取一个日期是周几（1~7）\n */\nexport const getDay = (dt: Date): number => {\n  let day = dayjs(dt).day();\n  if (day === 0) {\n    day = 7;\n  }\n  return day;\n};\n\n/**\n * 创建日历单元格数据\n * @param year 日历年份\n * @param month 日历月份\n * @param firstDayOfWeek 周起始日（1~7）\n * @param currentValue 当前日期\n * @param format 日期格式\n */\nexport const createDateList = (\n  year: number,\n  month: number,\n  firstDayOfWeek: number,\n  currentValue: dayjs.Dayjs,\n  format: string,\n): CalendarCell[][] => {\n  const createCellData = (belongTo: number, isCurrent: boolean, date: Date, weekOrder: number): CalendarCell => {\n    const day = getDay(date);\n    return {\n      mode: 'month',\n      belongTo,\n      isCurrent,\n      day,\n      weekOrder,\n      date,\n      formattedDate: dayjs(date).format(format),\n      filterDate: null,\n      formattedFilterDate: null,\n      isShowWeekend: true,\n    };\n  };\n\n  const monthFirstDay = dayjs(`${year}-${month}`);\n  const rowList: CalendarCell[][] = [];\n  let list: CalendarCell[] = [];\n  let weekCount = 1;\n\n  // 添加上个月中会在本月显示的最后几天日期\n  const lastMonthDaysCount = (getDay(monthFirstDay.toDate()) - firstDayOfWeek + 7) % 7;\n  for (let i = 0; i < lastMonthDaysCount; i++) {\n    const dayObj = monthFirstDay.subtract(i + 1, 'day');\n    list.unshift(createCellData(-1, false, dayObj.toDate(), weekCount));\n  }\n\n  // 添加本月日期\n  const monthDaysCount = monthFirstDay.endOf('month').daysInMonth();\n  for (let i = 0; i < monthDaysCount; i++) {\n    const dayObj = monthFirstDay.add(i, 'day');\n    list.push(createCellData(0, currentValue.isSame(dayObj), dayObj.toDate(), weekCount));\n    if (list.length === 7) {\n      rowList.push(list);\n      list = [];\n      weekCount += 1;\n    }\n  }\n\n  // 添加下月日期\n  if (list.length) {\n    const monthLastDay = dayjs(`${year}-${month}`).endOf('month');\n    const nextMonthDaysCount = 7 - list.length;\n    for (let i = 0; i < nextMonthDaysCount; i++) {\n      const dayObj = monthLastDay.add(i + 1, 'day');\n      list.push(createCellData(1, false, dayObj.toDate(), weekCount));\n    }\n    rowList.push(list);\n  }\n\n  return rowList;\n};\n\n/**\n * 创建月历单元格数据\n * @param year 月历年份\n * @param currentValue 当前日期\n * @param format 输出格式\n * @param rowNum 一行日历的个数\n */\nexport const createMonthList = (\n  year: number,\n  currentValue: dayjs.Dayjs,\n  format: string,\n  rowNum = 4,\n): CalendarCell[][] => {\n  const monthsArr: CalendarCell[][] = [];\n  const isCurYear = currentValue.year() === year;\n  let tmpArr: CalendarCell[] = [];\n  for (let i = 1; i <= 12; i++) {\n    const date = new Date(year, i - 1);\n    const curDateMon = parseInt(currentValue.format('M'), 10);\n    const isCurrent = isCurYear && curDateMon === i;\n\n    tmpArr.push({\n      mode: 'year',\n      isCurrent,\n      date,\n      formattedDate: dayjs(date).format(format),\n      filterDate: null,\n      formattedFilterDate: null,\n      isShowWeekend: true,\n    });\n    if (tmpArr.length === rowNum) {\n      monthsArr.push(tmpArr);\n      tmpArr = [];\n    }\n  }\n\n  return monthsArr;\n};\n"],"names":["blockName","controlSectionSize","minYear","getDay","dt","day","dayjs","createDateList","year","month","firstDayOfWeek","currentValue","format","createCellData","belongTo","isCurrent","date","weekOrder","mode","formattedDate","filterDate","formattedFilterDate","isShowWeekend","monthFirstDay","concat","rowList","list","weekCount","lastMonthDaysCount","toDate","i","dayObj","subtract","unshift","monthDaysCount","endOf","daysInMonth","add","push","isSame","length","monthLastDay","nextMonthDaysCount","createMonthList","rowNum","monthsArr","isCurYear","tmpArr","Date","curDateMon","parseInt"],"mappings":"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"}