/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var slicedToArray = require('../_chunks/dep-8e4d656d.js');
var React = require('react');
var hooks_useConfig = require('../hooks/useConfig.js');
var calendar_hooks_usePrefixClass = require('./hooks/usePrefixClass.js');
var locale_LocalReceiver = require('../locale/LocalReceiver.js');
var calendar__util = require('./_util.js');
require('../_chunks/dep-00b49251.js');
require('../config-provider/ConfigContext.js');
require('../_chunks/dep-0006fcfa.js');
require('../_chunks/dep-667ac7af.js');
require('../_chunks/dep-1df1dad8.js');
require('../_chunks/dep-5b5ab11b.js');
require('dayjs');
require('../_chunks/dep-f32c03f1.js');
require('../_chunks/dep-31c4bc3d.js');
require('../_chunks/dep-eea2872a.js');
require('../_chunks/dep-25585736.js');
require('../_chunks/dep-62e73936.js');
require('../_chunks/dep-64577888.js');
require('../_chunks/dep-71455db7.js');
require('../_chunks/dep-9e5a468d.js');
require('../_chunks/dep-ec8d2dca.js');
require('../_chunks/dep-fc596d16.js');
require('../_chunks/dep-f26edb7b.js');
require('../_chunks/dep-f33c1939.js');
require('../_chunks/dep-21ece627.js');
require('../_chunks/dep-25e4aa84.js');
require('../_chunks/dep-e1fbe1c3.js');
require('../_chunks/dep-df2b541f.js');
require('../_chunks/dep-edd366db.js');
require('../_chunks/dep-a56c4939.js');
require('../_chunks/dep-6c297e20.js');
require('../_chunks/dep-b7ad4d54.js');
require('../_chunks/dep-a2cb9299.js');
require('../_chunks/dep-f981815b.js');
require('../_chunks/dep-4ed9eda4.js');
require('../config-provider/ConfigProvider.js');
require('../_chunks/dep-ab2f63ec.js');
require('../_chunks/dep-a48c7e8b.js');
require('../_chunks/dep-3d4656ee.js');
require('../_chunks/dep-0ffc9d96.js');
require('../_chunks/dep-efe6d243.js');
require('../_chunks/dep-4b18243f.js');
require('../_chunks/dep-bff2c990.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);

var CalendarCellComp = function CalendarCellComp(props) {
  var mode = props.mode,
    cell = props.cell,
    cellAppend = props.cellAppend,
    theme = props.theme,
    _props$isDisabled = props.isDisabled,
    isDisabled = _props$isDisabled === void 0 ? false : _props$isDisabled,
    cellData = props.cellData,
    isCurrent = props.isCurrent,
    isNow = props.isNow,
    fillWithZero = props.fillWithZero,
    createCalendarCell = props.createCalendarCell,
    onCellClick = props.onCellClick,
    onCellDoubleClick = props.onCellDoubleClick,
    onCellRightClick = props.onCellRightClick;
  var _useLocaleReceiver = locale_LocalReceiver.useLocaleReceiver("calendar"),
    _useLocaleReceiver2 = slicedToArray._slicedToArray(_useLocaleReceiver, 2),
    local = _useLocaleReceiver2[0],
    t = _useLocaleReceiver2[1];
  var monthLabelList = t(local.cellMonth).split(",");
  var getMonthCN = function getMonthCN(month) {
    return monthLabelList[month];
  };
  var _useConfig = hooks_useConfig["default"](),
    calendarConfig = _useConfig.calendar;
  var fix0 = function fix0(num) {
    var _ref;
    var fillZero = num < 10 && ((_ref = fillWithZero !== null && fillWithZero !== void 0 ? fillWithZero : calendarConfig.fillWithZero) !== null && _ref !== void 0 ? _ref : true);
    return fillZero ? "0".concat(num) : num;
  };
  var prefixCls = calendar_hooks_usePrefixClass["default"]();
  return /* @__PURE__ */React__default["default"].createElement("td", {
    className: prefixCls([calendar__util.blockName, "table-body-cell"], isDisabled ? "is-disabled" : null, isCurrent ? "is-checked" : null, isNow ? [calendar__util.blockName, "table-body-cell--now"] : null),
    onClick: onCellClick,
    onDoubleClick: onCellDoubleClick,
    onContextMenu: onCellRightClick
  }, function () {
    if (cell && typeof cell === "function") return cell(mode === "month" ? createCalendarCell(cellData) : cellData);
    if (cell && typeof cell !== "function") return cell;
    var cellCtx;
    if (mode === "year") {
      var mIndex = cellData.date.getMonth();
      cellCtx = theme === "full" ? getMonthCN(mIndex) : t(local.monthSelection, {
        month: "".concat(mIndex + 1)
      });
    } else {
      cellCtx = fix0(cellData.date.getDate());
    }
    return /* @__PURE__ */React__default["default"].createElement("div", {
      className: prefixCls([calendar__util.blockName, "table-body-cell-display"])
    }, cellCtx);
  }(), function () {
    var cellCtx;
    if (cellAppend && typeof cellAppend === "function") {
      cellCtx = cellAppend(mode === "month" ? createCalendarCell(cellData) : cellData);
    }
    if (cellAppend && typeof cellAppend !== "function") {
      cellCtx = cellAppend;
    }
    return cellAppend && /* @__PURE__ */React__default["default"].createElement("div", {
      className: prefixCls([calendar__util.blockName, "table-body-cell-content"])
    }, cellCtx);
  }());
};

exports["default"] = CalendarCellComp;
//# sourceMappingURL=CalendarCellComp.js.map
