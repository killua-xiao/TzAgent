{"version":3,"file":"TabNav.js","sources":["../../../common/js/tabs/base.ts","../../../components/tabs/TabNav.tsx"],"sourcesContent":["const getDomWidth = (dom: HTMLElement): number => dom?.offsetWidth || 0;\nconst getDomOffsetLeft = (dom: HTMLElement): number => dom?.offsetLeft || 0;\n\ntype scrollPosition = 'auto' | 'start' | 'center' | 'end';\n\nexport interface allElementDeps {\n  activeTab?: HTMLElement;\n  navsContainer?: HTMLElement;\n  navsWrap?: HTMLElement;\n  leftOperations?: HTMLElement;\n  toLeftBtn?: HTMLElement;\n  rightOperations?: HTMLElement;\n  toRightBtn?: HTMLElement;\n}\n\nexport function calculateOffset(depElement: allElementDeps, offset: number, scrollPosition: scrollPosition): number {\n  // 计算当前 activeTab 应该滚动到的位置\n  const { navsContainer, activeTab, rightOperations, leftOperations } = depElement;\n  const tabWidth = getDomWidth(activeTab);\n  const wrapWidth = getDomWidth(navsContainer);\n  const tabOffset = getDomOffsetLeft(activeTab);\n  const rightOperationsWidth = getDomWidth(rightOperations);\n  const leftOperationsWidth = getDomWidth(leftOperations);\n\n  if (scrollPosition === 'auto') {\n    if (tabOffset - leftOperationsWidth < offset) {\n      return tabOffset - leftOperationsWidth;\n    } if (tabOffset + tabWidth > offset + wrapWidth - rightOperationsWidth) {\n      return tabOffset + tabWidth - wrapWidth + rightOperationsWidth;\n    }\n  } else if (scrollPosition === 'start') {\n    return tabOffset - leftOperationsWidth;\n  } else if (scrollPosition === 'center') {\n    return tabOffset + (tabWidth - wrapWidth) / 2;\n  } else if (scrollPosition === 'end') {\n    return tabOffset + tabWidth - wrapWidth + rightOperationsWidth;\n  }\n  return offset;\n}\n\n/**\n * 计算上一页或下一页偏移量\n * @param elements 计算时依赖的元素\n * @returns number\n */\nexport function calcPrevOrNextOffset(elements: allElementDeps, offset: number, action: 'next' | 'prev'): number {\n  const { navsContainer, activeTab } = elements;\n  const navsContainerWidth = getDomWidth(navsContainer);\n  const activeTabWidth = getDomWidth(activeTab);\n  /**\n   * 计算当前 activeTab 与 navsContainer 的宽度差，\n   * 注意 activeTab 的宽度可能大于 navsContainer 的宽度，\n   * 所以需要取绝对值\n   */\n  const diffWidth = Math.abs(navsContainerWidth - activeTabWidth);\n  if (action === 'next') {\n    return offset + diffWidth;\n  }\n  return offset - diffWidth;\n}\n\n/**\n * 计算最大偏移量\n * @param elements 计算时依赖的元素\n * @returns number\n */\nexport function calcMaxOffset(elements: allElementDeps): number {\n  const { navsWrap, navsContainer, rightOperations, toRightBtn } = elements;\n  const wrapWidth = getDomWidth(navsWrap);\n  const containerWidth = getDomWidth(navsContainer);\n  const rightOperationsWidth = getDomWidth(rightOperations);\n  const toRightBtnWidth = getDomWidth(toRightBtn);\n  return wrapWidth - containerWidth + rightOperationsWidth - toRightBtnWidth;\n}\n\n/**\n * 计算合法偏移量\n * @param offset 偏移值\n * @param maxOffset 最大偏移值\n * @returns number\n */\nexport function calcValidOffset(offset: number, maxOffset: number): number {\n  return Math.max(0, Math.min(offset, maxOffset));\n}\n","import React, { useCallback, useEffect, useRef, useState, WheelEvent } from 'react';\nimport classNames from 'classnames';\nimport {\n  AddIcon as TdAddIcon,\n  ChevronLeftIcon as TdChevronLeftIcon,\n  ChevronRightIcon as TdChevronRightIcon,\n} from 'tdesign-icons-react';\nimport { omit, debounce } from 'lodash-es';\nimport { calcMaxOffset, calcValidOffset, calculateOffset, calcPrevOrNextOffset } from '@tdesign/common-js/tabs/base';\nimport { TdTabsProps, TdTabPanelProps, TabValue } from './type';\nimport noop from '../_util/noop';\nimport { useTabClass } from './useTabClass';\nimport TabNavItem from './TabNavItem';\nimport TabBar from './TabBar';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport type { DragSortInnerProps } from '../hooks/useDragSorter';\nimport parseTNode from '../_util/parseTNode';\n\nexport interface TabNavProps extends TdTabsProps, DragSortInnerProps {\n  itemList: TdTabPanelProps[];\n  activeValue: TabValue;\n  size?: 'medium' | 'large';\n  children?: React.ReactNode;\n}\n\nconst TabNav: React.FC<TabNavProps> = (props) => {\n  const {\n    placement = 'top',\n    itemList = [],\n    theme,\n    addable,\n    onAdd,\n    scrollPosition = 'auto',\n    size = 'medium',\n    disabled = false,\n    onRemove = noop,\n    onChange = noop,\n    activeValue,\n    children,\n    action,\n    getDragProps,\n  } = props;\n\n  const { AddIcon, ChevronLeftIcon, ChevronRightIcon } = useGlobalIcon({\n    AddIcon: TdAddIcon,\n    ChevronLeftIcon: TdChevronLeftIcon,\n    ChevronRightIcon: TdChevronRightIcon,\n  });\n\n  // 逻辑层较多处需要判断是否为 card 类型，进行逻辑抽象\n  const isCard = theme === 'card';\n\n  const { tdTabsClassGenerator, tdClassGenerator, tdSizeClassGenerator } = useTabClass();\n\n  const navsContainerRef = useRef<HTMLDivElement>(null);\n  // :todo 兼容老版本 TabBar 的实现\n  const navsWrapRef = useRef<HTMLDivElement>(null);\n  const getIndex = useCallback(\n    (value) => {\n      const index = itemList.findIndex((item) => item.value === value);\n      return index > -1 ? index : -1;\n    },\n    [itemList],\n  );\n\n  const activeIndex = getIndex(activeValue);\n\n  // 判断滚动条是否需要展示\n  const [canToLeft, setToLeftBtnVisible] = useState(false);\n  const [canToRight, setToRightBtnVisible] = useState(false);\n\n  // 滚动条 ref 定义\n  const scrollBarRef = useRef(null);\n  const leftOperationsRef = useRef(null);\n  const rightOperationsRef = useRef(null);\n  const toLeftBtnRef = useRef(null);\n  const toRightBtnRef = useRef(null);\n\n  const [scrollLeft, setScrollLeft] = useState(0);\n  const [maxScrollLeft, setMaxScrollLeft] = useState(0);\n  const [activeTab, setActiveTab] = useState<HTMLElement>(null);\n\n  const setOffset = (offset: number) => {\n    setScrollLeft(calcValidOffset(offset, maxScrollLeft));\n  };\n\n  const getMaxScrollLeft = useCallback(() => {\n    if (['top', 'bottom'].includes(placement.toLowerCase())) {\n      const maxOffset = calcMaxOffset({\n        navsWrap: navsWrapRef.current,\n        navsContainer: navsContainerRef.current,\n        rightOperations: rightOperationsRef.current,\n        toRightBtn: toRightBtnRef.current,\n      });\n      setMaxScrollLeft(maxOffset);\n    }\n  }, [placement]);\n\n  const moveActiveTabIntoView = () => {\n    const offset = calculateOffset(\n      {\n        activeTab,\n        navsContainer: navsContainerRef.current,\n        leftOperations: leftOperationsRef.current,\n        rightOperations: rightOperationsRef.current,\n      },\n      scrollLeft,\n      scrollPosition,\n    );\n    setOffset(offset);\n  };\n\n  // 当 activeTab 变化时，移动 activeTab 到可视区域\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      moveActiveTabIntoView();\n    }, 100);\n\n    return () => clearTimeout(timeout);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [activeTab, maxScrollLeft, scrollPosition]);\n\n  // 左右滑动按钮的展示状态\n  useEffect(() => {\n    if (['top', 'bottom'].includes(placement.toLowerCase())) {\n      // 这里的 1 是小数像素不精确误差修正\n      const canToLeft = scrollLeft > 1;\n      const canToRight = scrollLeft < maxScrollLeft - 1;\n\n      setToLeftBtnVisible(canToLeft);\n      setToRightBtnVisible(canToRight);\n    }\n  }, [placement, scrollLeft, maxScrollLeft]);\n\n  // 滚动条处理逻辑\n  const handleScroll = (action: 'prev' | 'next') => {\n    const offset = calcPrevOrNextOffset(\n      {\n        activeTab,\n        navsContainer: navsContainerRef.current,\n      },\n      scrollLeft,\n      action,\n    );\n    setOffset(offset);\n  };\n\n  // 滚轮和触摸板\n  useEffect(() => {\n    const scrollBar = scrollBarRef.current;\n    if (!scrollBar) return;\n\n    const handleWheel = (e: WheelEvent<HTMLDivElement>) => {\n      if (!canToLeft && !canToRight) return;\n      e.preventDefault();\n\n      const { deltaX, deltaY } = e;\n      if (Math.abs(deltaX) > Math.abs(deltaY)) {\n        setOffset(scrollLeft + deltaX);\n      } else {\n        setOffset(scrollLeft + deltaY);\n      }\n    };\n\n    scrollBar.addEventListener('wheel', handleWheel, { passive: false });\n\n    return () => {\n      scrollBar?.removeEventListener('wheel', handleWheel);\n    };\n  });\n\n  // handle window resize\n  useEffect(() => {\n    const onResize = debounce(getMaxScrollLeft, 300);\n\n    window.addEventListener('resize', onResize);\n\n    return () => {\n      window.removeEventListener('resize', onResize);\n      onResize.cancel();\n    };\n  });\n\n  useEffect(() => {\n    getMaxScrollLeft();\n  }, [itemList.length, children, getMaxScrollLeft]);\n\n  // TabBar 组件逻辑层抽象，卡片类型时无需展示，故将逻辑整合到此处\n  const TabBarCom = isCard ? null : (\n    <TabBar tabPosition={placement} activeId={activeIndex} containerRef={navsWrapRef} navsWrapRef={navsWrapRef} />\n  );\n\n  const handleTabItemRemove = (removeItem) => {\n    const { value: removeValue, index: removeIndex } = removeItem;\n    if (removeValue === activeValue) {\n      onChange(removeIndex === 0 ? itemList[removeIndex + 1]?.value : itemList[removeIndex - 1].value);\n    }\n    onRemove(removeItem);\n  };\n\n  const handleTabItemClick = (clickItem) => {\n    if (activeValue !== clickItem.value) {\n      onChange(clickItem.value);\n    }\n    clickItem?.onClick?.(clickItem.value);\n  };\n\n  const handleTabAdd = (e) => {\n    onAdd({ e });\n  };\n\n  return (\n    <div ref={navsContainerRef} className={classNames(tdTabsClassGenerator('nav'))} style={{ minHeight: 48 }}>\n      <div\n        ref={leftOperationsRef}\n        className={classNames(tdTabsClassGenerator('operations'), tdTabsClassGenerator('operations--left'))}\n      >\n        {canToLeft ? (\n          <div\n            onClick={() => {\n              handleScroll('prev');\n            }}\n            className={classNames(\n              tdTabsClassGenerator('btn'),\n              tdTabsClassGenerator('btn--left'),\n              tdSizeClassGenerator(size),\n            )}\n            ref={toLeftBtnRef}\n          >\n            <ChevronLeftIcon />\n          </div>\n        ) : null}\n      </div>\n      <div\n        ref={rightOperationsRef}\n        className={classNames(tdTabsClassGenerator('operations'), tdTabsClassGenerator('operations--right'))}\n      >\n        {canToRight ? (\n          <div\n            onClick={() => {\n              handleScroll('next');\n            }}\n            className={classNames(\n              tdTabsClassGenerator('btn'),\n              tdTabsClassGenerator('btn--right'),\n              tdSizeClassGenerator(size),\n            )}\n            ref={toRightBtnRef}\n          >\n            <ChevronRightIcon />\n          </div>\n        ) : null}\n        {addable ? (\n          <div\n            className={classNames(\n              tdTabsClassGenerator('add-btn'),\n              tdTabsClassGenerator('btn'),\n              tdSizeClassGenerator(size),\n            )}\n            onClick={handleTabAdd}\n          >\n            <AddIcon />\n          </div>\n        ) : null}\n        {action ? (\n          <div\n            className={classNames(\n              tdTabsClassGenerator('btn'),\n              tdTabsClassGenerator('nav-action'),\n              tdSizeClassGenerator(size),\n            )}\n          >\n            {parseTNode(action)}\n          </div>\n        ) : null}\n      </div>\n      <div\n        className={classNames(\n          tdTabsClassGenerator('nav-container'),\n          isCard ? tdTabsClassGenerator('nav--card') : '',\n          tdClassGenerator(`is-${placement}`),\n          addable ? tdClassGenerator('is-addable') : '',\n        )}\n      >\n        <div\n          className={classNames(\n            tdTabsClassGenerator('nav-scroll'),\n            canToLeft || canToRight ? tdClassGenerator('is-scrollable') : '',\n          )}\n          ref={scrollBarRef}\n        >\n          <div\n            className={classNames(\n              tdTabsClassGenerator('nav-wrap'),\n              ['left', 'right'].includes(placement) ? tdClassGenerator('is-vertical') : '',\n              tdClassGenerator('is-smooth'),\n            )}\n            style={{ transform: `translate(${-scrollLeft}px, 0)` }}\n            ref={navsWrapRef}\n          >\n            {placement !== 'bottom' ? TabBarCom : null}\n            {!isCard && (\n              <div className={classNames(tdTabsClassGenerator('bar'), tdClassGenerator(`is-${placement}`))} />\n            )}\n            {itemList.map((v, index) => (\n              <TabNavItem\n                {...omit(props, ['className', 'style'])}\n                {...v}\n                dragProps={{ ...getDragProps?.(index, v) }}\n                // 显式给 onRemove 赋值，防止 props 的 onRemove 事件透传\n                onRemove={v.onRemove}\n                key={v.value}\n                label={v.label}\n                isActive={activeValue === v.value}\n                theme={theme}\n                placement={placement}\n                index={index}\n                disabled={disabled || v.disabled}\n                onClick={() => handleTabItemClick(v)}\n                onTabRemove={handleTabItemRemove}\n                innerRef={(ref) => {\n                  if (activeValue === v.value) {\n                    setActiveTab(ref);\n                  }\n                }}\n              />\n            ))}\n            {placement === 'bottom' ? TabBarCom : null}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nTabNav.displayName = 'TabNav';\n\nexport default TabNav;\n"],"names":["getDomWidth","dom","offsetWidth","getDomOffsetLeft","offsetLeft","calculateOffset","depElement","offset","scrollPosition","navsContainer","activeTab","rightOperations","leftOperations","tabWidth","wrapWidth","tabOffset","rightOperationsWidth","leftOperationsWidth","calcPrevOrNextOffset","elements","action","navsContainerWidth","activeTabWidth","diffWidth","Math","abs","calcMaxOffset","navsWrap","toRightBtn","containerWidth","toRightBtnWidth","calcValidOffset","maxOffset","max","min","TabNav","props","_props$placement","placement","_props$itemList","itemList","theme","addable","onAdd","_props$scrollPosition","_props$size","size","_props$disabled","disabled","_props$onRemove","onRemove","noop","_props$onChange","onChange","activeValue","children","getDragProps","_useGlobalIcon","useGlobalIcon","AddIcon","TdAddIcon","ChevronLeftIcon","TdChevronLeftIcon","ChevronRightIcon","TdChevronRightIcon","isCard","_useTabClass","useTabClass","tdTabsClassGenerator","tdClassGenerator","tdSizeClassGenerator","navsContainerRef","useRef","navsWrapRef","getIndex","useCallback","value","index","findIndex","item","activeIndex","_useState","useState","_useState2","_slicedToArray","canToLeft","setToLeftBtnVisible","_useState3","_useState4","canToRight","setToRightBtnVisible","scrollBarRef","leftOperationsRef","rightOperationsRef","toLeftBtnRef","toRightBtnRef","_useState5","_useState6","scrollLeft","setScrollLeft","_useState7","_useState8","maxScrollLeft","setMaxScrollLeft","_useState9","_useState0","setActiveTab","setOffset","getMaxScrollLeft","includes","toLowerCase","current","moveActiveTabIntoView","useEffect","timeout","setTimeout","clearTimeout","handleScroll","scrollBar","handleWheel","e","preventDefault","deltaX","deltaY","addEventListener","passive","removeEventListener","onResize","debounce","window","cancel","length","TabBarCom","React","createElement","TabBar","tabPosition","activeId","containerRef","handleTabItemRemove","removeItem","removeValue","removeIndex","_itemList","handleTabItemClick","clickItem","_clickItem$onClick","onClick","call","handleTabAdd","ref","className","classNames","style","minHeight","parseTNode","concat","transform","map","v","TabNavItem","_objectSpread","omit","dragProps","key","label","isActive","onTabRemove","innerRef","displayName"],"mappings":"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"}