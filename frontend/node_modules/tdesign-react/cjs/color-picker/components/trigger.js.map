{"version":3,"file":"trigger.js","sources":["../../../../components/color-picker/components/trigger.tsx"],"sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { Color, getColorObject } from '@tdesign/common-js/color-picker/color';\nimport { Input } from '../../input';\nimport { TdColorPickerProps } from '..';\nimport useClassName from '../hooks/useClassNames';\nimport { TdColorContext } from '../interface';\nimport noop from '../../_util/noop';\n\nexport interface ColorTriggerProps\n  extends Pick<TdColorPickerProps, 'disabled' | 'inputProps' | 'borderless' | 'clearable' | 'onClear'> {\n  value?: string;\n  onChange?: (v?: string, context?: TdColorContext) => {};\n}\n\nconst ColorPickerTrigger = (props: ColorTriggerProps) => {\n  const baseClassName = useClassName();\n  const { disabled = false, borderless = false, inputProps = { autoWidth: true }, clearable, onClear } = props;\n\n  const handleChange = (input: string) => {\n    if (input !== props.value) {\n      props.onChange?.(input, {\n        color: getColorObject(new Color(input)),\n        trigger: 'input',\n      });\n    }\n  };\n\n  return (\n    <div className={`${baseClassName}__trigger--default`}>\n      <Input\n        borderless={borderless}\n        clearable={clearable}\n        {...inputProps}\n        value={props.value}\n        disabled={disabled}\n        label={\n          <div className={classNames(`${baseClassName}__trigger--default__color`, `${baseClassName}--bg-alpha`)}>\n            <span className={'color-inner'} style={{ background: props.value }}></span>\n          </div>\n        }\n        onChange={handleChange}\n        onClear={onClear || noop}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(ColorPickerTrigger);\n"],"names":["ColorPickerTrigger","props","baseClassName","useClassName","_props$disabled","disabled","_props$borderless","borderless","_props$inputProps","inputProps","autoWidth","clearable","onClear","handleChange","input","value","_props$onChange","onChange","call","color","getColorObject","Color","trigger","React","createElement","className","Input","_objectSpread","label","classNames","concat","style","background","noop","memo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeA,IAAMA,kBAAA,GAAqB,SAArBA,kBAAAA,CAAsBC,KAA6B,EAAA;AACvD,EAAA,IAAMC,gBAAgBC,0CAAa,EAAA,CAAA;AACnC,EAAA,IAAAC,eAAA,GAAuGH,KAAA,CAA/FI,QAAA;AAAAA,IAAAA,QAAA,GAAAD,eAAA,KAAW,KAAA,CAAA,GAAA,KAAO,GAAAA,eAAA;IAAAE,iBAAA,GAA6EL,KAAA,CAA7EM,UAAA;AAAAA,IAAAA,UAAA,GAAAD,iBAAA,KAAa,KAAA,CAAA,GAAA,KAAO,GAAAA,iBAAA;IAAAE,iBAAA,GAAyDP,KAAA,CAAzDQ,UAAA;IAAAA,UAAA,GAAAD,iBAAA,KAAa,KAAA,CAAA,GAAA;AAAEE,MAAAA,SAAA,EAAW,IAAA;AAAK,KAAA,GAAAF,iBAAA;IAAGG,SAAW,GAAYV,KAAA,CAAvBU,SAAW;IAAAC,OAAA,GAAYX,KAAA,CAAZW,OAAA,CAAA;AAErF,EAAA,IAAAC,YAAA,GAAe,SAAfA,YAAAA,CAAgBC,KAAkB,EAAA;AAClC,IAAA,IAAAA,KAAA,KAAUb,MAAMc,KAAO,EAAA;AAAA,MAAA,IAAAC,eAAA,CAAA;AACzB,MAAA,CAAAA,eAAA,GAAAf,KAAA,CAAMgB,0CAAND,KAAAA,CAAAA,IAAAA,eAAA,CAAAE,IAAA,CAAAjB,KAAA,EAAiBa,KAAO,EAAA;QACtBK,KAAO,EAAAC,oBAAA,CAAe,IAAIC,WAAA,CAAMP,KAAK,CAAC,CAAA;AACtCQ,QAAAA,OAAS,EAAA,OAAA;AACX,OAAC,CAAA,CAAA;AACH,KAAA;GACF,CAAA;AAEA,EAAA,sBACGC,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;IAAIC,qBAAcvB,aAAA,EAAA,oBAAA,CAAA;GAAA,iBAChBqB,yBAAA,CAAAC,aAAA,CAAAE,iBAAA,EAAAC,aAAA,CAAAA,aAAA,CAAA;AACCpB,IAAAA,UAAA,EAAAA,UAAA;AACAI,IAAAA,SAAA,EAAAA,SAAAA;AAAA,GAAA,EACIF,UAAA,CAAA,EAAA,EAAA,EAAA;IACJM,OAAOd,KAAM,CAAAc,KAAA;AACbV,IAAAA,QAAA,EAAAA,QAAA;AACAuB,IAAAA,sBACGL,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;MAAIC,SAAW,EAAAI,8BAAA,CAAA,EAAA,CAAAC,MAAA,CAAc5B,aAAA,EAAA4B,2BAAAA,CAAAA,EAAAA,EAAAA,CAAAA,MAAA,CAA6C5B,aAAyB,EAAA,YAAA,CAAA,CAAA;AAAA,KAAA,iBACjGqB,yBAAA,CAAAC,aAAA,CAAA,MAAA,EAAA;AAAKC,MAAAA,SAAW,EAAA,aAAA;AAAeM,MAAAA,KAAO,EAAA;QAAEC,UAAY,EAAA/B,KAAA,CAAMc,KAAAA;AAAM,OAAA;AAAA,KAAG,CACtE,CAAA;AAEFE,IAAAA,QAAU,EAAAJ,YAAA;IACVD,SAASA,OAAW,IAAAqB,qBAAAA;AAAA,GAAA,CACtB,CACF,CAAA,CAAA;AAEJ,CAAA,CAAA;AAEA,mBAAA,aAAeV,yBAAA,CAAMW,KAAKlC,kBAAkB,CAAA;;;;"}