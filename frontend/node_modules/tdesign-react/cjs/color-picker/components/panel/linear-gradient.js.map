{"version":3,"file":"linear-gradient.js","sources":["../../../../../components/color-picker/components/panel/linear-gradient.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport { cloneDeep } from 'lodash-es';\nimport {\n  genGradientPoint,\n  GRADIENT_SLIDER_DEFAULT_WIDTH,\n  gradientColors2string,\n  type GradientColorPoint,\n} from '@tdesign/common-js/color-picker/index';\nimport useCommonClassName from '../../../hooks/useCommonClassName';\nimport useMouseEvent from '../../../hooks/useMouseEvent';\nimport InputNumber from '../../../input-number';\nimport useClassName from '../../hooks/useClassNames';\n\nconst DELETE_KEYS: string[] = ['delete', 'backspace'];\n\ntype TSliderRect = {\n  left: number;\n  width: number;\n};\n\nconst LinearGradient = (props) => {\n  const { onChange, color, disabled } = props;\n  const baseClassName = useClassName();\n  const { STATUS: statusClassNames } = useCommonClassName();\n  const sliderRef = useRef<HTMLDivElement>(null);\n  const sliderRectRef = useRef<TSliderRect>({\n    left: 0,\n    width: GRADIENT_SLIDER_DEFAULT_WIDTH,\n  });\n  const degree = useRef(props.color.gradientDegree);\n  const selectedRef = useRef(props.color.gradientSelectedId);\n  const colors = useRef<GradientColorPoint[]>(cloneDeep(color.gradientColors));\n  const [selectedId, setSelectedId] = useState(props.color.gradientSelectedId);\n  const [colorsState, setColorsState] = useState<GradientColorPoint[]>(colors.current);\n\n  useEffect(() => {\n    degree.current = color?.gradientDegree;\n    setSelectedId(color.gradientSelectedId);\n    selectedRef.current = color.gradientSelectedId;\n    colors.current = cloneDeep(color.gradientColors);\n    setColorsState(colors.current);\n  }, [color.gradientColors, color?.gradientDegree, color.gradientSelectedId, color.value, color.saturation]);\n\n  const updateSliderRect = () => {\n    const rect = sliderRef.current.getBoundingClientRect();\n    sliderRectRef.current = {\n      left: rect.left,\n      width: rect.width || GRADIENT_SLIDER_DEFAULT_WIDTH,\n    };\n  };\n\n  const handleChange = useCallback(\n    (key: 'degree' | 'selectedId' | 'colors', payload: any) => {\n      if (disabled) return;\n      onChange({\n        key,\n        payload,\n      });\n    },\n    [onChange, disabled],\n  );\n\n  const handleDegreeChange = (value: number) => {\n    if (disabled || value === props.color.gradientDegree) {\n      return;\n    }\n    degree.current = value;\n    handleChange('degree', value);\n  };\n\n  const handleSelectedIdChange = (value: string) => {\n    if (disabled) return;\n    setSelectedId(value);\n    selectedRef.current = value;\n    handleChange('selectedId', value);\n  };\n\n  const handleColorsChange = useCallback(\n    (value: GradientColorPoint[]) => {\n      if (disabled) return;\n      colors.current = value;\n      setColorsState(value);\n      handleChange('colors', value);\n    },\n    [disabled, handleChange],\n  );\n\n  const updateActiveThumbLeft = useCallback(\n    (left: number) => {\n      const index = colors.current.findIndex((c) => c.id === selectedRef.current);\n      if (index === -1) {\n        return;\n      }\n      const point = colors.current[index];\n      const formatLeft = Math.max(0, Math.min(sliderRectRef.current.width, left));\n      const percentLeft = (formatLeft / sliderRectRef.current.width) * 100;\n      const newColors = colors.current.map((item, i) =>\n        index !== i\n          ? item\n          : {\n              color: point.color,\n              left: percentLeft,\n              id: point.id,\n            },\n      );\n      handleColorsChange(newColors);\n    },\n    [handleColorsChange],\n  );\n\n  const handleStart = (id: string, e: React.MouseEvent) => {\n    if (disabled) return;\n    e.preventDefault();\n    e.stopPropagation();\n    handleSelectedIdChange(id);\n    // 让 slider 获取焦点，以便键盘事件生效。\n    sliderRef.current.focus();\n  };\n\n  useMouseEvent(sliderRef, {\n    onMove: (_, ctx) => {\n      if (disabled) return;\n      updateActiveThumbLeft(ctx.coordinate.x);\n    },\n  });\n\n  const handleKeyup = (e: React.KeyboardEvent) => {\n    if (disabled) return;\n    const points = [...colors.current];\n    let pos = points.findIndex((c) => c.id === selectedRef.current);\n    const { length } = points;\n    // 必须保证有两个点\n    if (DELETE_KEYS.includes(e.key.toLocaleLowerCase()) && length > 2 && pos >= 0 && pos <= length - 1) {\n      points.splice(pos, 1);\n      if (!points[pos]) {\n        // eslint-disable-next-line no-nested-ternary\n        pos = points[pos + 1] ? pos + 1 : points[pos - 1] ? pos - 1 : 0;\n      }\n      const current = points[pos];\n      handleColorsChange(points);\n      handleSelectedIdChange(current?.id);\n    }\n  };\n\n  const handleThumbBarClick = (e: React.MouseEvent) => {\n    if (disabled || !props.enableMultipleGradient) return;\n    updateSliderRect();\n\n    let left = e.clientX - sliderRectRef.current.left;\n    left = Math.max(0, Math.min(sliderRectRef.current.width, left));\n    const percentLeft = (left / sliderRectRef.current.width) * 100;\n\n    const newPoint = genGradientPoint(percentLeft, props.color.rgba);\n    const newColors = [...colors.current];\n    newColors.push(newPoint);\n    handleColorsChange(newColors);\n    handleSelectedIdChange(newPoint.id);\n  };\n\n  useEffect(() => {\n    updateSliderRect();\n  }, []);\n\n  const { gradientColors } = props.color;\n\n  const thumbBackground = gradientColors2string({\n    points: gradientColors,\n    degree: 90,\n  });\n\n  const handleClickThumb = (e: React.MouseEvent, t: GradientColorPoint) => {\n    handleSelectedIdChange(t.id);\n    e.stopPropagation();\n  };\n\n  const allGradientColors = [...colorsState];\n  const { color: leftColor } = genGradientPoint(0, allGradientColors[0]?.color);\n  const { color: rightColor } = genGradientPoint(100, allGradientColors[allGradientColors.length - 1]?.color);\n\n  return (\n    <div className={`${baseClassName}__gradient`}>\n      <div\n        className={`${baseClassName}__gradient-slider`}\n        style={{\n          background: `linear-gradient(90deg, ${leftColor} 0%, ${leftColor} 50%, ${rightColor} 50%, ${rightColor} 100%)`,\n        }}\n      >\n        <div\n          ref={sliderRef}\n          className={classNames(`${baseClassName}__slider`, `${baseClassName}--bg-alpha`)}\n          onKeyUp={handleKeyup}\n          tabIndex={0}\n        >\n          <ul\n            className=\"gradient-thumbs\"\n            onClick={handleThumbBarClick}\n            style={{\n              background: thumbBackground,\n            }}\n          >\n            {colorsState.map((t) => {\n              const left = `${Math.round(t.left * 100) / 100}%`;\n              return (\n                <li\n                  className={classNames([\n                    `${baseClassName}__thumb`,\n                    'gradient-thumbs__item',\n                    selectedId === t.id ? statusClassNames.active : '',\n                  ])}\n                  key={t.id}\n                  title={`${t.color} ${left}`}\n                  style={{\n                    color: t.color,\n                    left,\n                  }}\n                  onClick={(e) => handleClickThumb(e, t)}\n                  onMouseDown={(e) => handleStart(t.id, e)}\n                >\n                  <span className={classNames(['gradient-thumbs__item-inner', `${baseClassName}--bg-alpha`])}></span>\n                </li>\n              );\n            })}\n          </ul>\n        </div>\n      </div>\n      <div className={`${baseClassName}__gradient-degree`} title={`${degree}deg`}>\n        <InputNumber\n          theme=\"normal\"\n          min={0}\n          max={360}\n          step={1}\n          size=\"small\"\n          format={(value: number) => `${value}°`}\n          value={degree.current}\n          onBlur={handleDegreeChange}\n          onEnter={handleDegreeChange}\n          onChange={handleDegreeChange}\n          disabled={props.disabled}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(LinearGradient);\n"],"names":["DELETE_KEYS","LinearGradient","props","_allGradientColors$","_allGradientColors","onChange","color","disabled","baseClassName","useClassName","_useCommonClassName","useCommonClassName","statusClassNames","STATUS","sliderRef","useRef","sliderRectRef","left","width","GRADIENT_SLIDER_DEFAULT_WIDTH","degree","gradientDegree","selectedRef","gradientSelectedId","colors","cloneDeep","gradientColors","_useState","useState","_useState2","_slicedToArray","selectedId","setSelectedId","_useState3","current","_useState4","colorsState","setColorsState","useEffect","value","saturation","updateSliderRect","rect","getBoundingClientRect","handleChange","useCallback","key","payload","handleDegreeChange","handleSelectedIdChange","handleColorsChange","updateActiveThumbLeft","index","findIndex","c","id","point","formatLeft","Math","max","min","percentLeft","newColors","map","item","i","handleStart","e","preventDefault","stopPropagation","focus","useMouseEvent","onMove","_","ctx","coordinate","x","handleKeyup","points","_toConsumableArray","pos","length","includes","toLocaleLowerCase","splice","handleThumbBarClick","enableMultipleGradient","clientX","newPoint","genGradientPoint","rgba","push","thumbBackground","gradientColors2string","handleClickThumb","t","allGradientColors","_genGradientPoint","leftColor","_genGradientPoint2","rightColor","React","createElement","className","style","background","concat","ref","classNames","onKeyUp","tabIndex","onClick","round","active","title","onMouseDown","InputNumber","theme","step","size","format","onBlur","onEnter","memo"],"mappings":"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"}