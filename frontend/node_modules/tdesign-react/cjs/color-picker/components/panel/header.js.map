{"version":3,"file":"header.js","sources":["../../../../../components/color-picker/components/panel/header.tsx"],"sourcesContent":["import React from 'react';\nimport { COLOR_MODES } from '@tdesign/common-js/color-picker/constants';\nimport Radio, { RadioValue } from '../../../radio';\nimport { TdColorModes } from '../../interface';\nimport { TdColorPickerProps } from '../../type';\nimport { useLocaleReceiver } from '../../../locale/LocalReceiver';\n\nexport interface ColorPanelHeaderProps extends TdColorPickerProps {\n  mode?: TdColorModes;\n  onModeChange?: (value: RadioValue, context: { e: React.ChangeEvent<HTMLInputElement> }) => void;\n  baseClassName?: string;\n}\n\nconst Header = (props: ColorPanelHeaderProps) => {\n  const [local, t] = useLocaleReceiver('colorPicker');\n\n  const { baseClassName, mode = 'monochrome', colorModes, onModeChange } = props;\n\n  const isSingleMode = colorModes?.length === 1;\n\n  if (isSingleMode) {\n    return null;\n  }\n\n  return (\n    <div className={`${baseClassName}__head`}>\n      <div className={`${baseClassName}__mode`}>\n        <Radio.Group variant=\"default-filled\" size=\"small\" value={mode} onChange={onModeChange}>\n          {Object.keys(COLOR_MODES).map((key) => (\n            <Radio.Button key={key} value={key}>\n              {t(local[COLOR_MODES[key]])}\n            </Radio.Button>\n          ))}\n        </Radio.Group>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(Header);\n"],"names":["Header","props","_useLocaleReceiver","useLocaleReceiver","_useLocaleReceiver2","_slicedToArray","local","t","baseClassName","_props$mode","mode","colorModes","onModeChange","isSingleMode","length","React","createElement","className","Radio","Group","variant","size","value","onChange","Object","keys","COLOR_MODES","map","key","Button","memo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAaA,IAAMA,MAAA,GAAS,SAATA,MAAAA,CAAUC,KAAiC,EAAA;AAC/C,EAAA,IAAAC,kBAAA,GAAmBC,uCAAkB,aAAa,CAAA;IAAAC,mBAAA,GAAAC,4BAAA,CAAAH,kBAAA,EAAA,CAAA,CAAA;AAA3CI,IAAAA,KAAA,GAAAF,mBAAA,CAAA,CAAA,CAAA;AAAOG,IAAAA,CAAC,GAAAH,mBAAA,CAAA,CAAA,CAAA,CAAA;AAEf,EAAA,IAAQI,aAAe,GAAkDP,KAAA,CAAjEO,aAAe;IAAAC,WAAA,GAAkDR,KAAA,CAAlDS,IAAA;AAAAA,IAAAA,IAAA,GAAAD,WAAA,KAAO,KAAA,CAAA,GAAA,YAAc,GAAAA,WAAA;IAAAE,UAAA,GAA6BV,KAAA,CAA7BU,UAAA;IAAYC,eAAiBX,KAAA,CAAjBW;EAElD,IAAAC,YAAA,GAAe,CAAAF,uBAAAA,iCAAAA,WAAYG,MAAW,MAAA,CAAA,CAAA;AAE5C,EAAA,IAAID,YAAc,EAAA;AACT,IAAA,OAAA,IAAA,CAAA;AACT,GAAA;AAEA,EAAA,sBACGE,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;IAAIC,qBAAcT,aAAA,EAAA,QAAA,CAAA;AAAA,GAAA,iBAChBO,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;IAAIC,qBAAcT,aAAA,EAAA,QAAA,CAAA;GACjB,iBAAAO,yBAAA,CAAAC,aAAA,CAACE,kBAAMC,KAAN,EAAA;AAAYC,IAAAA,OAAQ,EAAA,gBAAA;AAAiBC,IAAAA,IAAK,EAAA,OAAA;AAAQC,IAAAA,KAAO,EAAAZ,IAAA;AAAMa,IAAAA,QAAU,EAAAX,YAAAA;GACvE,EAAAY,MAAA,CAAOC,KAAKC,qBAAW,CAAA,CAAEC,IAAI,UAACC,GAAA,EAAA;IAAA,sBAC5Bb,yBAAA,CAAAC,aAAA,CAAAE,iBAAA,CAAMW,MAAN,EAAA;AAAaD,MAAAA,GAAA,EAAAA,GAAA;AAAUN,MAAAA,KAAO,EAAAM,GAAAA;KAC5B,EAAArB,CAAA,CAAED,MAAMoB,qBAAY,CAAAE,GAAA,CAAA,CAAK,CAC5B,CACD,CAAA;GACH,CAAA,CACF,CACF,CAAA,CAAA;AAEJ,CAAA,CAAA;AAEA,kBAAA,aAAeb,yBAAA,CAAMe,KAAK9B,MAAM,CAAA;;;;"}