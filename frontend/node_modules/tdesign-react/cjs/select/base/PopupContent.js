/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var objectWithoutProperties = require('../../_chunks/dep-8fa3a4c2.js');
var defineProperty = require('../../_chunks/dep-0006fcfa.js');
var slicedToArray = require('../../_chunks/dep-8e4d656d.js');
var React = require('react');
var classNames = require('classnames');
var locale_LocalReceiver = require('../../locale/LocalReceiver.js');
var select_util_helper = require('../../_chunks/dep-e83bd2ab.js');
var hooks_useConfig = require('../../hooks/useConfig.js');
var select_hooks_usePanelVirtualScroll = require('../hooks/usePanelVirtualScroll.js');
var select_base_Option = require('./Option.js');
var select_base_OptionGroup = require('./OptionGroup.js');
var isEqual = require('../../_chunks/dep-eb6d55c1.js');
require('../../_chunks/dep-667ac7af.js');
require('../../_chunks/dep-00b49251.js');
require('../../_chunks/dep-4ed9eda4.js');
require('../../_chunks/dep-25585736.js');
require('../../_chunks/dep-64577888.js');
require('../../_chunks/dep-62e73936.js');
require('../../config-provider/ConfigProvider.js');
require('../../config-provider/ConfigContext.js');
require('../../_chunks/dep-1df1dad8.js');
require('../../_chunks/dep-5b5ab11b.js');
require('dayjs');
require('../../_chunks/dep-f32c03f1.js');
require('../../_chunks/dep-31c4bc3d.js');
require('../../_chunks/dep-eea2872a.js');
require('../../_chunks/dep-71455db7.js');
require('../../_chunks/dep-9e5a468d.js');
require('../../_chunks/dep-ec8d2dca.js');
require('../../_chunks/dep-fc596d16.js');
require('../../_chunks/dep-f26edb7b.js');
require('../../_chunks/dep-f33c1939.js');
require('../../_chunks/dep-21ece627.js');
require('../../_chunks/dep-25e4aa84.js');
require('../../_chunks/dep-e1fbe1c3.js');
require('../../_chunks/dep-df2b541f.js');
require('../../_chunks/dep-edd366db.js');
require('../../_chunks/dep-a56c4939.js');
require('../../_chunks/dep-6c297e20.js');
require('../../_chunks/dep-b7ad4d54.js');
require('../../_chunks/dep-a2cb9299.js');
require('../../_chunks/dep-f981815b.js');
require('../../_chunks/dep-ab2f63ec.js');
require('../../_chunks/dep-a48c7e8b.js');
require('../../_chunks/dep-3d4656ee.js');
require('../../_chunks/dep-0ffc9d96.js');
require('../../_chunks/dep-efe6d243.js');
require('../../_chunks/dep-4b18243f.js');
require('../../_chunks/dep-bff2c990.js');
require('../../_chunks/dep-e4e1901e.js');
require('../../_chunks/dep-0c8c9057.js');
require('../../_chunks/dep-3398c1f2.js');
require('../../_chunks/dep-79629634.js');
require('../../_chunks/dep-255ceed8.js');
require('../../hooks/useVirtualScroll.js');
require('../../_chunks/dep-014b9b78.js');
require('../../_chunks/dep-abdd786a.js');
require('../../hooks/useDomRefCallback.js');
require('../../hooks/useRipple.js');
require('../../_chunks/dep-dc4ce063.js');
require('../../hooks/useAnimation.js');
require('../../_chunks/dep-381fa848.js');
require('../../_chunks/dep-2ffa3ff1.js');
require('../defaultProps.js');
require('../../hooks/useDefaultProps.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

var _excluded = ["group", "divider"],
  _excluded2 = ["value", "label", "disabled", "content", "children"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { defineProperty._defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var PopupContent = /*#__PURE__*/React__default["default"].forwardRef(function (props, ref) {
  var value = props.value,
    size = props.size,
    max = props.max,
    multiple = props.multiple,
    showPopup = props.showPopup,
    setShowPopup = props.setShowPopup,
    empty = props.empty,
    loadingText = props.loadingText,
    loading = props.loading,
    valueType = props.valueType,
    children = props.children,
    keys = props.keys,
    panelTopContent = props.panelTopContent,
    panelBottomContent = props.panelBottomContent,
    onChange = props.onChange,
    onCheckAllChange = props.onCheckAllChange,
    getPopupInstance = props.getPopupInstance,
    propsOptions = props.options,
    propsScroll = props.scroll;
  var _useLocaleReceiver = locale_LocalReceiver.useLocaleReceiver("select"),
    _useLocaleReceiver2 = slicedToArray._slicedToArray(_useLocaleReceiver, 2),
    local = _useLocaleReceiver2[0],
    t = _useLocaleReceiver2[1];
  var emptyText = t(local.empty);
  var popupContentRef = React.useRef(null);
  popupContentRef.current = getPopupInstance();
  var _usePanelVirtualScrol = select_hooks_usePanelVirtualScroll["default"]({
      popupContentRef: popupContentRef,
      scroll: propsScroll,
      options: propsOptions,
      size: size
    }),
    visibleData = _usePanelVirtualScrol.visibleData,
    handleRowMounted = _usePanelVirtualScrol.handleRowMounted,
    isVirtual = _usePanelVirtualScrol.isVirtual,
    panelStyle = _usePanelVirtualScrol.panelStyle,
    cursorStyle = _usePanelVirtualScrol.cursorStyle;
  var selectableOptions = React.useMemo(function () {
    var uniqueOptions = {};
    propsOptions === null || propsOptions === void 0 || propsOptions.forEach(function (option) {
      if (option.group) {
        option.children.forEach(function (item) {
          if (!item.disabled && !item.checkAll) {
            uniqueOptions[item.value] = item;
          }
        });
      } else if (!option.disabled && !option.checkAll) {
        uniqueOptions[option.value] = option;
      }
    });
    return Object.values(uniqueOptions);
  }, [propsOptions]);
  var _useConfig = hooks_useConfig["default"](),
    classPrefix = _useConfig.classPrefix;
  if (!children && !propsOptions) {
    return null;
  }
  var onSelect = function onSelect(selectedValue, _ref) {
    var label = _ref.label,
      selected = _ref.selected,
      event = _ref.event,
      restData = _ref.restData;
    var isValObj = valueType === "object";
    var objVal = {};
    if (isValObj) {
      objVal = _objectSpread({}, restData);
      if (!(keys !== null && keys !== void 0 && keys.label)) {
        Object.assign(objVal, {
          label: label
        });
      }
      if (!(keys !== null && keys !== void 0 && keys.value)) {
        Object.assign(objVal, {
          value: selectedValue
        });
      }
    }
    if (!Object.keys(objVal).length) {
      Object.assign(objVal, defineProperty._defineProperty(defineProperty._defineProperty({}, (keys === null || keys === void 0 ? void 0 : keys.label) || "label", label), (keys === null || keys === void 0 ? void 0 : keys.value) || "value", selectedValue));
    }
    if (multiple) {
      var values = select_util_helper.getSelectValueArr(value, selectedValue, selected, valueType, keys, objVal);
      onChange(values, {
        label: label,
        value: selectedValue,
        e: event,
        trigger: selected ? "uncheck" : "check"
      });
    } else {
      var selectVal = valueType === "object" ? objVal : selectedValue;
      if (!isEqual.isEqual(value, selectVal)) {
        onChange(selectVal, {
          label: label,
          value: selectVal,
          e: event,
          trigger: "check"
        });
      }
      setShowPopup(!showPopup);
    }
  };
  var childrenWithProps = React.Children.map(children, function (child) {
    if (/*#__PURE__*/React.isValidElement(child)) {
      var addedProps = {
        size: size,
        max: max,
        multiple: multiple,
        selectedValue: value,
        onSelect: onSelect
      };
      return /*#__PURE__*/React.cloneElement(child, _objectSpread({}, addedProps));
    }
    return child;
  });
  var _renderOptions = function renderOptions(options) {
    if (options) {
      return /* @__PURE__ */React__default["default"].createElement("ul", {
        className: "".concat(classPrefix, "-select__list")
      }, options.map(function (item, index) {
        var group = item.group,
          divider = item.divider,
          rest = objectWithoutProperties._objectWithoutProperties(item, _excluded);
        if (group) {
          return /* @__PURE__ */React__default["default"].createElement(select_base_OptionGroup["default"], {
            label: group,
            divider: divider,
            key: index
          }, _renderOptions(rest.children));
        }
        var optionValue = item.value,
          label = item.label,
          disabled = item.disabled,
          content = item.content,
          children2 = item.children,
          restData = objectWithoutProperties._objectWithoutProperties(item, _excluded2);
        return /* @__PURE__ */React__default["default"].createElement(select_base_Option["default"], _objectSpread(_objectSpread({
          key: index,
          max: max,
          label: label,
          value: optionValue,
          onSelect: onSelect,
          selectedValue: value,
          optionLength: selectableOptions.length,
          multiple: multiple,
          size: size,
          disabled: disabled,
          restData: restData,
          keys: keys,
          content: content,
          onCheckAllChange: onCheckAllChange,
          onRowMounted: handleRowMounted
        }, isVirtual ? {
          isVirtual: isVirtual,
          bufferSize: propsScroll === null || propsScroll === void 0 ? void 0 : propsScroll.bufferSize,
          scrollType: propsScroll === null || propsScroll === void 0 ? void 0 : propsScroll.type
        } : {}), restData), children2);
      }));
    }
    return /* @__PURE__ */React__default["default"].createElement("ul", {
      className: "".concat(classPrefix, "-select__list")
    }, childrenWithProps);
  };
  var isEmpty = Array.isArray(childrenWithProps) && !childrenWithProps.length || propsOptions && propsOptions.length === 0;
  var renderPanel = function renderPanel(renderedOptions, extraStyle) {
    return /* @__PURE__ */React__default["default"].createElement("div", {
      ref: ref,
      className: classNames__default["default"]("".concat(classPrefix, "-select__dropdown-inner"), defineProperty._defineProperty(defineProperty._defineProperty(defineProperty._defineProperty({}, "".concat(classPrefix, "-select__dropdown-inner--size-s"), size === "small"), "".concat(classPrefix, "-select__dropdown-inner--size-l"), size === "large"), "".concat(classPrefix, "-select__dropdown-inner--size-m"), size === "medium")),
      style: extraStyle
    }, loading && /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(classPrefix, "-select__loading-tips")
    }, loadingText), !loading && isEmpty && /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(classPrefix, "-select__empty")
    }, empty ? empty : /* @__PURE__ */React__default["default"].createElement("p", null, emptyText)), !loading && !isEmpty && _renderOptions(renderedOptions));
  };
  if (isVirtual) {
    return /* @__PURE__ */React__default["default"].createElement(React__default["default"].Fragment, null, panelTopContent, /* @__PURE__ */React__default["default"].createElement("div", null, /* @__PURE__ */React__default["default"].createElement("div", {
      style: cursorStyle
    }), renderPanel(visibleData, panelStyle)), panelBottomContent);
  }
  return /* @__PURE__ */React__default["default"].createElement(React__default["default"].Fragment, null, panelTopContent, renderPanel(propsOptions), panelBottomContent);
});

exports["default"] = PopupContent;
//# sourceMappingURL=PopupContent.js.map
