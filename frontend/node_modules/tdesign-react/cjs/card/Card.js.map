{"version":3,"file":"Card.js","sources":["../../../components/card/Card.tsx"],"sourcesContent":["import React, { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport { TdCardProps } from './type';\nimport Loading from '../loading';\nimport { StyledProps } from '../common';\nimport useConfig from '../hooks/useConfig';\nimport useCommonClassName from '../hooks/useCommonClassName';\nimport { cardDefaultProps } from './defaultProps';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\nexport interface CardProps extends TdCardProps, StyledProps {}\n\nconst Card = forwardRef<HTMLDivElement, CardProps>((props, ref) => {\n  const {\n    actions,\n    avatar,\n    bordered,\n    className,\n    cover,\n    description,\n    footer,\n    header,\n    headerBordered,\n    hoverShadow,\n    loading,\n    shadow,\n    size,\n    style,\n    subtitle,\n    title,\n    theme,\n    status,\n    loadingProps,\n    bodyClassName,\n    bodyStyle,\n    footerClassName,\n    footerStyle,\n    headerClassName,\n    headerStyle,\n  } = useDefaultProps<CardProps>(props, cardDefaultProps);\n\n  const children = props.children ?? props.content;\n\n  const { classPrefix } = useConfig();\n  const commonClassNames = useCommonClassName();\n  // 是否为海报风格2\n  const isPoster2 = theme === 'poster2';\n\n  const cardClass = classNames(`${classPrefix}-card`, className, {\n    [commonClassNames.SIZE.small]: size === 'small',\n    [`${classPrefix}-card--bordered`]: bordered,\n    [`${classPrefix}-card--shadow`]: shadow,\n    [`${classPrefix}-card--shadow-hover`]: hoverShadow,\n  });\n\n  const showHeader =\n    header || title || subtitle || description || avatar || (actions && !isPoster2) || (status && isPoster2);\n\n  const headerClass = classNames(headerClassName, {\n    [`${classPrefix}-card__header`]: showHeader,\n    [`${classPrefix}-card__title--bordered`]: headerBordered,\n  });\n\n  const titleClass = classNames({\n    [`${classPrefix}-card__title`]: title,\n  });\n\n  const subtitleClass = classNames({\n    [`${classPrefix}-card__subtitle`]: subtitle,\n  });\n\n  const actionClass = classNames({\n    [`${classPrefix}-card__actions`]: actions,\n  });\n\n  const footerClass = classNames(footerClassName, {\n    [`${classPrefix}-card__footer`]: footer,\n  });\n\n  const coverClass = classNames({\n    [`${classPrefix}-card__cover`]: cover,\n  });\n\n  const avatarClass = classNames({\n    [`${classPrefix}-card__avatar`]: avatar,\n  });\n\n  const bodyClass = classNames(bodyClassName, {\n    [`${classPrefix}-card__body`]: children,\n  });\n\n  const descriptionClass = classNames({\n    [`${classPrefix}-card__description`]: description,\n  });\n\n  const renderTitle = title ? <div className={titleClass}>{title}</div> : null;\n\n  const renderSubtitle = subtitle ? <div className={subtitleClass}>{subtitle}</div> : null;\n\n  const renderDescription = description ? <p className={descriptionClass}>{description}</p> : null;\n\n  const renderAvatar = avatar && <div className={avatarClass}>{avatar}</div>;\n\n  const renderHeaderActions = actions && !isPoster2 && <div className={actionClass}>{actions}</div>;\n  const renderFooterActions = actions && isPoster2 && <div className={actionClass}>{actions}</div>;\n\n  const renderStatus = status && isPoster2 && <div className={actionClass}>{status}</div>;\n\n  const renderHeader = () => {\n    if (header) {\n      return (\n        <div className={headerClass} style={headerStyle}>\n          {header}\n        </div>\n      );\n    }\n    return (\n      <div className={headerClass} style={headerStyle}>\n        <div className={`${classPrefix}-card__header-wrapper`}>\n          {renderAvatar}\n          <div>\n            {renderTitle}\n            {renderSubtitle}\n            {renderDescription}\n          </div>\n        </div>\n        {renderHeaderActions}\n        {renderStatus}\n      </div>\n    );\n  };\n\n  const renderCover = cover ? (\n    <div className={coverClass}>{typeof cover === 'string' ? <img src={cover} alt=\"\"></img> : cover}</div>\n  ) : null;\n\n  const renderChildren = children && (\n    <div className={bodyClass} style={bodyStyle}>\n      {children}\n    </div>\n  );\n\n  const renderFooter = footer && (\n    <div className={footerClass} style={footerStyle}>\n      <div className={`${classPrefix}-card__footer-wrapper`}>{footer}</div>\n      {renderFooterActions}\n    </div>\n  );\n\n  const card = (\n    <>\n      {showHeader ? renderHeader() : null}\n      {renderCover}\n      {renderChildren}\n      {renderFooter}\n    </>\n  );\n\n  let childrenNode: React.ReactNode = null;\n  if (!Reflect.has(props, 'loading')) {\n    childrenNode = card;\n  } else if (React.isValidElement(loading)) {\n    childrenNode = React.cloneElement(loading, null, card);\n  } else {\n    childrenNode = (\n      <Loading {...loadingProps} loading={!!loading}>\n        {card}\n      </Loading>\n    );\n  }\n\n  return (\n    <div ref={ref} className={cardClass} style={style}>\n      {childrenNode}\n    </div>\n  );\n});\n\nCard.displayName = 'Card';\n\nexport default Card;\n"],"names":["Card","forwardRef","props","ref","_props$children","_useDefaultProps","useDefaultProps","cardDefaultProps","actions","avatar","bordered","className","cover","description","footer","header","headerBordered","hoverShadow","loading","shadow","size","style","subtitle","title","theme","status","loadingProps","bodyClassName","bodyStyle","footerClassName","footerStyle","headerClassName","headerStyle","children","content","_useConfig","useConfig","classPrefix","commonClassNames","useCommonClassName","isPoster2","cardClass","classNames","concat","_defineProperty","SIZE","small","showHeader","headerClass","titleClass","subtitleClass","actionClass","footerClass","coverClass","avatarClass","bodyClass","descriptionClass","renderTitle","React","createElement","renderSubtitle","renderDescription","renderAvatar","renderHeaderActions","renderFooterActions","renderStatus","renderHeader","renderCover","src","alt","renderChildren","renderFooter","card","childrenNode","Reflect","has","isValidElement","cloneElement","Loading","_objectSpread","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYMA,IAAAA,IAAO,gBAAAC,gBAAA,CAAsC,UAACC,KAAA,EAAOC,GAAQ,EAAA;AAAA,EAAA,IAAAC,eAAA,CAAA;AAC3D,EAAA,IAAAC,gBAAA,GA0BFC,gCAA2B,CAAAJ,KAAA,EAAOK,kCAAgB,CAAA;IAzBpDC,OAAA,GAAAH,gBAAA,CAAAG,OAAA;IACAC,MAAA,GAAAJ,gBAAA,CAAAI,MAAA;IACAC,QAAA,GAAAL,gBAAA,CAAAK,QAAA;IACAC,SAAA,GAAAN,gBAAA,CAAAM,SAAA;IACAC,KAAA,GAAAP,gBAAA,CAAAO,KAAA;IACAC,WAAA,GAAAR,gBAAA,CAAAQ,WAAA;IACAC,MAAA,GAAAT,gBAAA,CAAAS,MAAA;IACAC,MAAA,GAAAV,gBAAA,CAAAU,MAAA;IACAC,cAAA,GAAAX,gBAAA,CAAAW,cAAA;IACAC,WAAA,GAAAZ,gBAAA,CAAAY,WAAA;IACAC,OAAA,GAAAb,gBAAA,CAAAa,OAAA;IACAC,MAAA,GAAAd,gBAAA,CAAAc,MAAA;IACAC,IAAA,GAAAf,gBAAA,CAAAe,IAAA;IACAC,KAAA,GAAAhB,gBAAA,CAAAgB,KAAA;IACAC,QAAA,GAAAjB,gBAAA,CAAAiB,QAAA;IACAC,KAAA,GAAAlB,gBAAA,CAAAkB,KAAA;IACAC,KAAA,GAAAnB,gBAAA,CAAAmB,KAAA;IACAC,MAAA,GAAApB,gBAAA,CAAAoB,MAAA;IACAC,YAAA,GAAArB,gBAAA,CAAAqB,YAAA;IACAC,aAAA,GAAAtB,gBAAA,CAAAsB,aAAA;IACAC,SAAA,GAAAvB,gBAAA,CAAAuB,SAAA;IACAC,eAAA,GAAAxB,gBAAA,CAAAwB,eAAA;IACAC,WAAA,GAAAzB,gBAAA,CAAAyB,WAAA;IACAC,eAAA,GAAA1B,gBAAA,CAAA0B,eAAA;IACAC,WAAA,GAAA3B,gBAAA,CAAA2B,WAAA,CAAA;AAGI,EAAA,IAAAC,QAAA,GAAA,CAAA7B,eAAA,GAAWF,KAAM,CAAA+B,QAAA,MAAA7B,IAAAA,IAAAA,eAAA,KAAAA,KAAAA,CAAAA,GAAAA,eAAA,GAAYF,KAAM,CAAAgC,OAAA,CAAA;AAEnC,EAAA,IAAAC,UAAA,GAAkBC,0BAAU,EAAA;IAA1BC,WAAY,GAAAF,UAAA,CAAZE,WAAY,CAAA;AACpB,EAAA,IAAMC,mBAAmBC,mCAAmB,EAAA,CAAA;AAE5C,EAAA,IAAMC,YAAYhB,KAAU,KAAA,SAAA,CAAA;EAE5B,IAAMiB,SAAY,GAAAC,8BAAA,CAAA,EAAA,CAAAC,MAAA,CAAcN,WAAA,YAAoB1B,SAAW,EAAAiC,8BAAA,CAAAA,8BAAA,CAAAA,8BAAA,CAAAA,8BAAA,CAC5DN,EAAAA,EAAAA,gBAAA,CAAiBO,IAAK,CAAAC,KAAA,EAAQ1B,IAAS,KAAA,OAAA,CAAAuB,EAAAA,EAAAA,CAAAA,MAAA,CACpCN,WAA+B,EAAA,iBAAA,CAAA,EAAA3B,QAAA,CAAAiC,EAAAA,EAAAA,CAAAA,MAAA,CAC/BN,WAA6B,EAAA,eAAA,CAAA,EAAAlB,MAAA,CAAAwB,EAAAA,EAAAA,CAAAA,MAAA,CAC7BN,WAAmC,EAAA,qBAAA,CAAA,EAAApB,WAAA,CACxC,CAAA,CAAA;AAEK,EAAA,IAAA8B,UAAA,GACJhC,UAAUQ,KAAS,IAAAD,QAAA,IAAYT,eAAeJ,MAAW,IAAAD,OAAA,IAAW,CAACgC,SAAA,IAAef,MAAU,IAAAe,SAAA,CAAA;EAE1F,IAAAQ,WAAA,GAAcN,+BAAWX,eAAiB,EAAAa,8BAAA,CAAAA,8BAAA,CAAAD,EAAAA,EAAAA,EAAAA,CAAAA,MAAA,CAC1CN,WAA6B,EAAA,eAAA,CAAA,EAAAU,UAAA,CAAAJ,EAAAA,EAAAA,CAAAA,MAAA,CAC7BN,WAAsC,EAAA,wBAAA,CAAA,EAAArB,cAAA,CAC3C,CAAA,CAAA;AAED,EAAA,IAAMiC,aAAaP,8BAAW,CAAAE,8BAAA,CAAA,EAAA,EAAA,EAAA,CAAAD,MAAA,CACxBN,WAA4B,EAAA,cAAA,CAAA,EAAAd,KAAA,CACjC,CAAA,CAAA;AAED,EAAA,IAAM2B,gBAAgBR,8BAAW,CAAAE,8BAAA,CAAA,EAAA,EAAA,EAAA,CAAAD,MAAA,CAC3BN,WAA+B,EAAA,iBAAA,CAAA,EAAAf,QAAA,CACpC,CAAA,CAAA;AAED,EAAA,IAAM6B,cAAcT,8BAAW,CAAAE,8BAAA,CAAA,EAAA,EAAA,EAAA,CAAAD,MAAA,CACzBN,WAA8B,EAAA,gBAAA,CAAA,EAAA7B,OAAA,CACnC,CAAA,CAAA;AAEK,EAAA,IAAA4C,WAAA,GAAcV,+BAAWb,eAAiB,EAAAe,8BAAA,CAAAD,EAAAA,EAAAA,EAAAA,CAAAA,MAAA,CAC1CN,WAA6B,EAAAvB,eAAAA,CAAAA,EAAAA,MAAA,CAClC,CAAA,CAAA;AAED,EAAA,IAAMuC,aAAaX,8BAAW,CAAAE,8BAAA,CAAA,EAAA,EAAA,EAAA,CAAAD,MAAA,CACxBN,WAA4B,EAAA,cAAA,CAAA,EAAAzB,KAAA,CACjC,CAAA,CAAA;AAED,EAAA,IAAM0C,cAAcZ,8BAAW,CAAAE,8BAAA,CAAA,EAAA,EAAA,EAAA,CAAAD,MAAA,CACzBN,WAA6B,EAAA,eAAA,CAAA,EAAA5B,MAAA,CAClC,CAAA,CAAA;AAEK,EAAA,IAAA8C,SAAA,GAAYb,+BAAWf,aAAe,EAAAiB,8BAAA,CAAAD,EAAAA,EAAAA,EAAAA,CAAAA,MAAA,CACtCN,WAA2B,EAAAJ,aAAAA,CAAAA,EAAAA,QAAA,CAChC,CAAA,CAAA;AAED,EAAA,IAAMuB,mBAAmBd,8BAAW,CAAAE,8BAAA,CAAA,EAAA,EAAA,EAAA,CAAAD,MAAA,CAC9BN,WAAkC,EAAA,oBAAA,CAAA,EAAAxB,WAAA,CACvC,CAAA,CAAA;EAEK,IAAA4C,WAAA,GAAclC,uBAASmC,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAIhD,IAAAA,SAAW,EAAAsC,UAAAA;AAAA,GAAA,EAAa1B,KAAM,CAAS,GAAA,IAAA,CAAA;EAElE,IAAAqC,cAAA,GAAiBtC,0BAAYoC,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAIhD,IAAAA,SAAW,EAAAuC,aAAAA;AAAA,GAAA,EAAgB5B,QAAS,CAAS,GAAA,IAAA,CAAA;EAE9E,IAAAuC,iBAAA,GAAoBhD,6BAAe6C,yBAAA,CAAAC,aAAA,CAAA,GAAA,EAAA;AAAEhD,IAAAA,SAAW,EAAA6C,gBAAAA;AAAA,GAAA,EAAmB3C,WAAY,CAAO,GAAA,IAAA,CAAA;EAEtF,IAAAiD,YAAA,GAAerD,yBAAWiD,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAIhD,IAAAA,SAAW,EAAA2C,WAAAA;GAAA,EAAc7C,MAAO,CAAA,CAAA;AAEpE,EAAA,IAAMsD,mBAAsB,GAAAvD,OAAA,IAAW,CAACgC,SAAA,mBAAckB,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAIhD,IAAAA,SAAW,EAAAwC,WAAAA;GAAA,EAAc3C,OAAQ,CAAA,CAAA;AACrF,EAAA,IAAAwD,mBAAA,GAAsBxD,OAAW,IAAAgC,SAAA,mBAAckB,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAIhD,IAAAA,SAAW,EAAAwC,WAAAA;GAAA,EAAc3C,OAAQ,CAAA,CAAA;AAEpF,EAAA,IAAAyD,YAAA,GAAexC,MAAU,IAAAe,SAAA,mBAAckB,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAIhD,IAAAA,SAAW,EAAAwC,WAAAA;GAAA,EAAc1B,MAAO,CAAA,CAAA;AAEjF,EAAA,IAAMyC,eAAe,SAAfA,eAAqB;AACzB,IAAA,IAAInD,MAAQ,EAAA;AACV,MAAA,sBACG2C,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAIhD,QAAAA,SAAW,EAAAqC,WAAA;AAAa3B,QAAAA,KAAO,EAAAW,WAAAA;OAAA,EACjCjB,MACH,CAAA,CAAA;AAEJ,KAAA;AACA,IAAA,sBACG2C,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAIhD,MAAAA,SAAW,EAAAqC,WAAA;AAAa3B,MAAAA,KAAO,EAAAW,WAAAA;AAAA,KAAA,iBACjC0B,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;MAAIhD,qBAAc0B,WAAA,EAAA,uBAAA,CAAA;KAChB,EAAAyB,YAAA,yDACA,KACE,EAAA,IAAA,EAAAL,WAAA,EACAG,gBACAC,iBACH,CACF,CACC,EAAAE,mBAAA,EACAE,YACH,CAAA,CAAA;GAEJ,CAAA;EAEM,IAAAE,WAAA,GAAcvD,uBACjB8C,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAIhD,IAAAA,SAAW,EAAA0C,UAAAA;AAAa,GAAA,EAAA,OAAOzC,KAAU,KAAA,QAAA,kBAAY8C,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAIS,IAAAA,GAAK,EAAAxD,KAAA;AAAOyD,IAAAA,GAAI,EAAA,EAAA;AAAG,GAAA,CAAA,GAASzD,KAAM,CAC9F,GAAA,IAAA,CAAA;EAEE,IAAA0D,cAAA,GAAiBrC,2BACpByB,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAIhD,IAAAA,SAAW,EAAA4C,SAAA;AAAWlC,IAAAA,KAAO,EAAAO,SAAAA;GAAA,EAC/BK,QACH,CAAA,CAAA;EAGI,IAAAsC,YAAA,GAAezD,yBAClB4C,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAIhD,IAAAA,SAAW,EAAAyC,WAAA;AAAa/B,IAAAA,KAAO,EAAAS,WAAAA;AAAA,GAAA,iBACjC4B,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;IAAIhD,qBAAc0B,WAAA,EAAA,uBAAA,CAAA;AAAqC,GAAA,EAAAvB,MAAO,GAC9DkD,mBACH,CAAA,CAAA;EAGI,IAAAQ,IAAA,oGAEDzB,UAAa,GAAAmB,YAAA,KAAiB,IAC9B,EAAAC,WAAA,EACAG,gBACAC,YACH,CAAA,CAAA;EAGF,IAAIE,YAAgC,GAAA,IAAA,CAAA;EACpC,IAAI,CAACC,OAAA,CAAQC,GAAI,CAAAzE,KAAA,EAAO,SAAS,CAAG,EAAA;AACnBuE,IAAAA,YAAA,GAAAD,IAAA,CAAA;GACN,MAAA,iBAAAd,yBAAA,CAAMkB,cAAe,CAAA1D,OAAO,CAAG,EAAA;IACxCuD,YAAA,gBAAef,yBAAM,CAAAmB,YAAA,CAAa3D,OAAS,EAAA,IAAA,EAAMsD,IAAI,CAAA,CAAA;AACvD,GAAO,MAAA;AACLC,IAAAA,YAAA,kBACGf,yBAAA,CAAAC,aAAA,CAAAmB,qBAAA,EAAAC,aAAA,CAAAA,aAAA,CAAA,EAAA,EAAYrD,YAAA,CAAA,EAAA,EAAA,EAAA;MAAcR,OAAA,EAAS,CAAC,CAACA,OAAAA;AAAA,KAAA,CAAA,EACnCsD,IACH,CAAA,CAAA;AAEJ,GAAA;AAEA,EAAA,sBACGd,yBAAA,CAAAC,aAAA,CAAA,KAAA,EAAA;AAAIxD,IAAAA,GAAA,EAAAA,GAAA;AAAUQ,IAAAA,SAAW,EAAA8B,SAAA;AAAWpB,IAAAA,KAAA,EAAAA,KAAAA;GAAA,EAClCoD,YACH,CAAA,CAAA;AAEJ,CAAC,EAAA;AAEDzE,IAAA,CAAKgF,WAAc,GAAA,MAAA;;;;"}