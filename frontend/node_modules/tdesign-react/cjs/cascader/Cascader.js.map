{"version":3,"file":"Cascader.js","sources":["../../../components/cascader/Cascader.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport classNames from 'classnames';\nimport { omit, pick } from 'lodash-es';\nimport parseTNode, { parseContentTNode } from '../_util/parseTNode';\nimport FakeArrow from '../common/FakeArrow';\nimport useCommonClassName from '../hooks/useCommonClassName';\nimport useConfig from '../hooks/useConfig';\nimport useDefaultProps from '../hooks/useDefaultProps';\nimport { useLocaleReceiver } from '../locale/LocalReceiver';\nimport SelectInput from '../select-input';\nimport Panel from './components/Panel';\nimport { getFakeArrowIconClass } from './core/className';\nimport { closeIconClickEffect, handleRemoveTagEffect } from './core/effect';\nimport { getMultipleContent, getPanels, getSingleContent } from './core/helper';\nimport { cascaderDefaultProps } from './defaultProps';\nimport { useCascaderContext } from './hooks';\n\nimport type { StyledProps } from '../common';\nimport type { TagInputValue } from '../tag-input';\nimport type { TdCascaderProps } from './interface';\n\nexport interface CascaderProps extends TdCascaderProps, StyledProps {}\n\nconst Cascader: React.FC<CascaderProps> = (originalProps) => {\n  const props = useDefaultProps<CascaderProps>(originalProps, cascaderDefaultProps);\n\n  /**\n   * global user props, config, data\n   */\n  const { classPrefix } = useConfig();\n  const { STATUS } = useCommonClassName();\n  const [global] = useLocaleReceiver('cascader');\n  const COMPONENT_NAME = `${classPrefix}-cascader`;\n\n  // 拿到全局状态的上下文\n  const { cascaderContext, isFilterable, innerValue, getCascaderItems } = useCascaderContext(props);\n\n  const displayValue = useMemo(\n    () => (props.multiple ? getMultipleContent(cascaderContext) : getSingleContent(cascaderContext)),\n    [props.multiple, cascaderContext],\n  );\n\n  const panels = useMemo(() => getPanels(cascaderContext.treeNodes), [cascaderContext]);\n\n  const inputPlaceholder = useMemo(\n    () =>\n      (cascaderContext.visible && !props.multiple && getSingleContent(cascaderContext)) ||\n      (props.placeholder ?? global.placeholder),\n    [props.placeholder, cascaderContext, props.multiple, global.placeholder],\n  );\n\n  const renderSuffixIcon = () => {\n    if (props.suffixIcon) {\n      return props.suffixIcon;\n    }\n\n    const { visible, disabled } = cascaderContext;\n    return (\n      <FakeArrow\n        className={getFakeArrowIconClass(classPrefix, STATUS, cascaderContext)}\n        isActive={visible}\n        disabled={disabled}\n      />\n    );\n  };\n\n  // render label\n  const renderLabel = () => {\n    const label = parseTNode(props.label);\n    if (props.multiple) return label;\n    if (!label) return null;\n    return <div className={`${classPrefix}-tag-input__prefix`}>{label}</div>;\n  };\n\n  // render valueDisplay\n  const valueDisplayParams = useMemo(() => {\n    const arrayValue = innerValue instanceof Array ? innerValue : [innerValue];\n    const displayValue =\n      props.multiple && props.minCollapsedNum ? arrayValue.slice(0, props.minCollapsedNum) : innerValue;\n    const options = getCascaderItems(arrayValue, props.valueType, props.multiple);\n\n    return {\n      value: innerValue,\n      selectedOptions: options,\n      onClose: (index: number) => {\n        handleRemoveTagEffect(cascaderContext, index, props.onRemove);\n      },\n      displayValue,\n    };\n  }, [\n    cascaderContext,\n    innerValue,\n    props.multiple,\n    props.minCollapsedNum,\n    props.onRemove,\n    getCascaderItems,\n    props.valueType,\n  ]);\n\n  const renderValueDisplay = () => parseContentTNode(props.valueDisplay, valueDisplayParams);\n\n  const { setVisible, visible, inputVal, setInputVal } = cascaderContext;\n\n  const updateScrollTop = (content: HTMLDivElement) => {\n    const cascaderMenuList = content.querySelectorAll(`.${COMPONENT_NAME}__menu`);\n    requestAnimationFrame(() => {\n      cascaderMenuList.forEach((menu: HTMLDivElement) => {\n        const firstSelectedNode: HTMLDivElement =\n          menu?.querySelector(`.${classPrefix}-is-selected`) || menu?.querySelector(`.${classPrefix}-is-expanded`);\n\n        // 只取第一个选中的节点进行滚动对齐\n        if (!firstSelectedNode || !menu) return;\n\n        // 计算节点在菜单中的相对位置\n        const nodeTop = firstSelectedNode.offsetTop;\n        const nodeHeight = firstSelectedNode.offsetHeight;\n        const menuHeight = menu.clientHeight;\n        const currentScrollTop = menu.scrollTop;\n\n        // 计算节点在可视区域中的位置\n        const nodeVisibleTop = nodeTop - currentScrollTop;\n        const nodeVisibleBottom = nodeVisibleTop + nodeHeight;\n\n        const isNodeFullyVisible = nodeVisibleTop >= 0 && nodeVisibleBottom <= menuHeight;\n        // 如果节点已经完全可见，则不需要滚动\n        if (isNodeFullyVisible) return;\n\n        let targetScrollTop = currentScrollTop;\n\n        if (nodeVisibleTop < 0) {\n          // 如果节点在可视区域上方，滚动到节点顶部\n          targetScrollTop = nodeTop;\n        } else if (nodeVisibleBottom > menuHeight) {\n          // 如果节点在可视区域下方，滚动到节点底部对齐菜单底部\n          targetScrollTop = nodeTop - menuHeight + nodeHeight;\n        }\n\n        // 确保滚动位置不会超出边界\n        const maxScrollTop = menu.scrollHeight - menuHeight;\n        targetScrollTop = Math.max(0, Math.min(targetScrollTop, maxScrollTop));\n\n        // eslint-disable-next-line no-param-reassign\n        menu.scrollTop = targetScrollTop;\n      });\n    });\n  };\n\n  return (\n    <SelectInput\n      className={classNames(COMPONENT_NAME, props.className)}\n      style={props.style}\n      value={displayValue}\n      borderless={props.borderless}\n      inputValue={visible ? inputVal : ''}\n      popupVisible={visible}\n      allowInput={isFilterable}\n      minCollapsedNum={props.minCollapsedNum}\n      collapsedItems={props.collapsedItems as any}\n      readonly={props.readonly}\n      clearable={props.clearable}\n      placeholder={inputPlaceholder}\n      multiple={props.multiple}\n      loading={props.loading}\n      disabled={props.disabled}\n      status={props.status}\n      tips={props.tips}\n      label={renderLabel()}\n      valueDisplay={renderValueDisplay()}\n      suffix={props.suffix}\n      suffixIcon={renderSuffixIcon()}\n      updateScrollTop={updateScrollTop}\n      popupProps={{\n        ...props.popupProps,\n        overlayInnerStyle: panels.length && !props.loading ? { width: 'auto' } : {},\n        overlayClassName: [`${classPrefix}-cascader__popup`, props.popupProps?.overlayClassName],\n      }}\n      inputProps={{ size: props.size, ...(props.inputProps as TdCascaderProps['inputProps']) }}\n      tagInputProps={{\n        size: props.size,\n        ...(props.tagInputProps as TdCascaderProps['tagInputProps']),\n      }}\n      tagProps={{ ...(props.tagProps as TdCascaderProps['tagProps']) }}\n      onInputChange={(value, ctx) => {\n        if (!visible || ctx?.trigger === 'clear') {\n          return;\n        }\n        setInputVal(`${value}`);\n        props?.selectInputProps?.onInputChange?.(value, ctx);\n      }}\n      onTagChange={(val: TagInputValue, ctx) => {\n        if (ctx.trigger === 'enter' || ctx.trigger === 'clear') {\n          return;\n        }\n        handleRemoveTagEffect(cascaderContext, ctx.index, props.onRemove);\n        props?.selectInputProps?.onTagChange?.(val, ctx);\n      }}\n      onPopupVisibleChange={(val: boolean, context) => {\n        if (props.disabled) {\n          return;\n        }\n        setVisible(val, context);\n        props?.selectInputProps?.onPopupVisibleChange?.(val, context);\n      }}\n      onBlur={(val, context) => {\n        props.onBlur?.({\n          value: cascaderContext.value,\n          e: context.e,\n          inputValue: inputVal,\n        });\n        props?.selectInputProps?.onBlur?.(val, context);\n      }}\n      onFocus={(val, context) => {\n        props.onFocus?.({\n          value: cascaderContext.value,\n          e: context.e,\n        });\n        props?.selectInputProps?.onFocus?.(val, context);\n      }}\n      onClear={(context) => {\n        closeIconClickEffect(cascaderContext);\n        props?.selectInputProps?.onClear?.(context);\n        props.onClear?.(context);\n      }}\n      {...omit(props.selectInputProps, [\n        'onTagChange',\n        'onInputChange',\n        'onPopupVisibleChange',\n        'onBlur',\n        'onFocus',\n        'onClear',\n      ])}\n      panel={\n        <>\n          {props.panelTopContent && parseTNode(props.panelTopContent)}\n          <Panel\n            cascaderContext={cascaderContext}\n            {...pick(props, ['trigger', 'onChange', 'empty', 'loading', 'loadingText', 'option'])}\n          ></Panel>\n          {props.panelBottomContent && parseTNode(props.panelBottomContent)}\n        </>\n      }\n    />\n  );\n};\n\nCascader.displayName = 'Cascader';\n\nexport default Cascader;\n"],"names":["Cascader","originalProps","_props$popupProps","props","useDefaultProps","cascaderDefaultProps","_useConfig","useConfig","classPrefix","_useCommonClassName","useCommonClassName","STATUS","_useLocaleReceiver","useLocaleReceiver","_useLocaleReceiver2","_slicedToArray","global","COMPONENT_NAME","_useCascaderContext","useCascaderContext","cascaderContext","isFilterable","innerValue","getCascaderItems","displayValue","useMemo","multiple","getMultipleContent","getSingleContent","panels","getPanels","treeNodes","inputPlaceholder","_props$placeholder","visible","placeholder","renderSuffixIcon","suffixIcon","disabled","React","createElement","FakeArrow","className","getFakeArrowIconClass","isActive","renderLabel","label","parseTNode","valueDisplayParams","arrayValue","Array","minCollapsedNum","slice","options","valueType","value","selectedOptions","onClose","index","handleRemoveTagEffect","onRemove","renderValueDisplay","parseContentTNode","valueDisplay","setVisible","inputVal","setInputVal","updateScrollTop","content","cascaderMenuList","querySelectorAll","concat","requestAnimationFrame","forEach","menu","firstSelectedNode","querySelector","nodeTop","offsetTop","nodeHeight","offsetHeight","menuHeight","clientHeight","currentScrollTop","scrollTop","nodeVisibleTop","nodeVisibleBottom","isNodeFullyVisible","targetScrollTop","maxScrollTop","scrollHeight","Math","max","min","SelectInput","_objectSpread","classNames","style","borderless","inputValue","popupVisible","allowInput","collapsedItems","readonly","clearable","loading","status","tips","suffix","popupProps","overlayInnerStyle","length","width","overlayClassName","inputProps","size","tagInputProps","tagProps","onInputChange","ctx","_props$selectInputPro","_props$selectInputPro2","trigger","selectInputProps","call","onTagChange","val","_props$selectInputPro3","_props$selectInputPro4","onPopupVisibleChange","context","_props$selectInputPro5","_props$selectInputPro6","onBlur","_props$onBlur","_props$selectInputPro7","_props$selectInputPro8","e","onFocus","_props$onFocus","_props$selectInputPro9","_props$selectInputPro0","onClear","_props$selectInputPro1","_props$selectInputPro10","_props$onClear","closeIconClickEffect","omit","panel","panelTopContent","Panel","pick","panelBottomContent","displayName"],"mappings":"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"}