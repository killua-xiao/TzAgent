{"version":3,"file":"Item.js","sources":["../../../../components/cascader/components/Item.tsx"],"sourcesContent":["import React, { forwardRef, useMemo } from 'react';\nimport classNames from 'classnames';\nimport { ChevronRightIcon as TdChevronRightIcon } from 'tdesign-icons-react';\n\nimport { isFunction } from 'lodash-es';\nimport TLoading from '../../loading';\nimport Checkbox from '../../checkbox';\n\nimport useConfig from '../../hooks/useConfig';\nimport useGlobalIcon from '../../hooks/useGlobalIcon';\nimport useDomRefCallback from '../../hooks/useDomRefCallback';\nimport useCommonClassName from '../../hooks/useCommonClassName';\n\nimport { getFullPathLabel } from '../core/helper';\nimport { getCascaderItemClass, getCascaderItemIconClass } from '../core/className';\nimport { CascaderContextType, TreeNodeValue, TreeNode } from '../interface';\n\nconst Item = forwardRef(\n  (\n    props: {\n      node: TreeNode;\n      optionChild: React.ReactNode;\n      cascaderContext: CascaderContextType;\n      onClick: (ctx: TreeNode) => void;\n      onChange: (ctx: TreeNode | { e: boolean; node: TreeNode }) => void;\n      onMouseEnter: (ctx: TreeNode) => void;\n    },\n    ref: React.RefObject<HTMLLIElement>,\n  ) => {\n    const {\n      node,\n      optionChild,\n      cascaderContext: { multiple },\n      onClick,\n      onChange,\n      onMouseEnter,\n      cascaderContext,\n    } = props;\n    const { classPrefix: prefix } = useConfig();\n    const { ChevronRightIcon } = useGlobalIcon({ ChevronRightIcon: TdChevronRightIcon });\n    const COMPONENT_NAME = `${prefix}-cascader__item`;\n    // 暂时去掉动画效果 长列表在safari中有异常\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [itemDom, setRefCurrent] = useDomRefCallback();\n\n    // useRipple(ref?.current || itemDom);\n\n    /**\n     * class\n     */\n    const { STATUS, SIZE } = useCommonClassName();\n\n    const itemClass = useMemo(\n      () => classNames(getCascaderItemClass(prefix, node, SIZE, STATUS, cascaderContext)),\n      [prefix, node, SIZE, STATUS, cascaderContext],\n    );\n\n    const iconClass = useMemo(\n      () => classNames(getCascaderItemIconClass(prefix, node, STATUS, cascaderContext)),\n      [prefix, node, STATUS, cascaderContext],\n    );\n\n    const RenderLabelInner = (node: TreeNode, cascaderContext: CascaderContextType) => {\n      const { inputVal } = cascaderContext;\n\n      if (!inputVal && optionChild) {\n        return optionChild;\n      }\n\n      const labelText = inputVal ? getFullPathLabel(node) : node.label;\n\n      if (inputVal) {\n        const texts = labelText.split(inputVal as string);\n        const doms = [];\n        for (let index = 0; index < texts.length; index++) {\n          doms.push(<span key={index}>{texts[index]}</span>);\n          if (index === texts.length - 1) break;\n          doms.push(\n            <span key={`${index}filter`} className={`${COMPONENT_NAME}-label--filter`}>\n              {inputVal}\n            </span>,\n          );\n        }\n        return doms;\n      }\n\n      return labelText;\n    };\n\n    const RenderLabelContent = (node: TreeNode, cascaderContext: CascaderContextType) => {\n      const label = RenderLabelInner(node, cascaderContext);\n\n      const labelCont = (\n        <span\n          title={cascaderContext.inputVal ? getFullPathLabel(node) : node.label}\n          className={classNames(`${COMPONENT_NAME}-label`, `${COMPONENT_NAME}-label--ellipsis`)}\n          role=\"label\"\n        >\n          {label}\n        </span>\n      );\n\n      return labelCont;\n    };\n\n    const RenderCheckBox = (node: TreeNode, cascaderContext: CascaderContextType) => {\n      const { checkProps, value, max, inputVal } = cascaderContext;\n      const label = RenderLabelInner(node, cascaderContext);\n      return (\n        <Checkbox\n          checked={node.checked}\n          indeterminate={node.indeterminate}\n          disabled={node.isDisabled() || (value && (value as TreeNodeValue[]).length >= max && max !== 0)}\n          name={String(node.value)}\n          stopLabelTrigger={!!node.children}\n          title={inputVal ? getFullPathLabel(node) : node.label}\n          onChange={() => {\n            onChange(node);\n          }}\n          {...checkProps}\n        >\n          {label}\n        </Checkbox>\n      );\n    };\n\n    const isFiltering = useMemo(\n      () => Boolean(cascaderContext.filterable) || isFunction(cascaderContext.filter),\n      [cascaderContext.filterable, cascaderContext.filter],\n    );\n\n    return (\n      <li\n        ref={ref}\n        className={itemClass}\n        onClick={(e: React.MouseEvent) => {\n          e.stopPropagation();\n          e?.nativeEvent?.stopImmediatePropagation?.();\n          if (multiple && cascaderContext.inputVal && isFiltering) return;\n          onClick(node);\n        }}\n        onMouseEnter={(e: React.MouseEvent) => {\n          e.stopPropagation();\n          if (cascaderContext.inputVal && isFiltering) return;\n          onMouseEnter(node);\n        }}\n      >\n        {multiple ? RenderCheckBox(node, cascaderContext) : RenderLabelContent(node, cascaderContext)}\n        {!cascaderContext.inputVal &&\n          node.children &&\n          (node.loading ? (\n            <TLoading className={iconClass} loading={true} size=\"small\" />\n          ) : (\n            <ChevronRightIcon className={iconClass} />\n          ))}\n      </li>\n    );\n  },\n);\n\nexport default Item;\n"],"names":["Item","forwardRef","props","ref","node","optionChild","multiple","cascaderContext","onClick","onChange","onMouseEnter","_useConfig","useConfig","prefix","classPrefix","_useGlobalIcon","useGlobalIcon","ChevronRightIcon","TdChevronRightIcon","COMPONENT_NAME","_useDomRefCallback","useDomRefCallback","_useDomRefCallback2","_slicedToArray","itemDom","setRefCurrent","_useCommonClassName","useCommonClassName","STATUS","SIZE","itemClass","useMemo","classNames","getCascaderItemClass","iconClass","getCascaderItemIconClass","RenderLabelInner","inputVal","labelText","getFullPathLabel","label","texts","split","doms","index","length","push","React","createElement","key","className","RenderLabelContent","labelCont","title","concat","role","RenderCheckBox","checkProps","value","max","Checkbox","_objectSpread","checked","indeterminate","disabled","isDisabled","name","String","stopLabelTrigger","children","isFiltering","Boolean","filterable","isFunction","filter","e","_e$nativeEvent","_e$nativeEvent$stopIm","stopPropagation","nativeEvent","stopImmediatePropagation","call","loading","TLoading","size"],"mappings":"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"}