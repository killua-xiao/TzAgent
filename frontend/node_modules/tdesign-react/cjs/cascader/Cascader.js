/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-0006fcfa.js');
var slicedToArray = require('../_chunks/dep-8e4d656d.js');
var React = require('react');
var classNames = require('classnames');
var _util_parseTNode = require('../_util/parseTNode.js');
var common_FakeArrow = require('../common/FakeArrow.js');
var hooks_useCommonClassName = require('../hooks/useCommonClassName.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var hooks_useDefaultProps = require('../hooks/useDefaultProps.js');
var locale_LocalReceiver = require('../locale/LocalReceiver.js');
var selectInput_index = require('../select-input/index.js');
var cascader_components_Panel = require('./components/Panel.js');
var cascader_core_className = require('./core/className.js');
var cascader_core_effect = require('./core/effect.js');
var cascader_core_helper = require('./core/helper.js');
var cascader_defaultProps = require('./defaultProps.js');
var cascader_hooks = require('./hooks.js');
var pick = require('../_chunks/dep-1e4197a4.js');
var omit = require('../_chunks/dep-d5e8c967.js');
require('../_chunks/dep-667ac7af.js');
require('../_chunks/dep-00b49251.js');
require('../_chunks/dep-59671c87.js');
require('../_chunks/dep-ec8d2dca.js');
require('../_chunks/dep-25585736.js');
require('../_chunks/dep-fc596d16.js');
require('../config-provider/ConfigContext.js');
require('../_chunks/dep-1df1dad8.js');
require('../_chunks/dep-5b5ab11b.js');
require('dayjs');
require('../_chunks/dep-f32c03f1.js');
require('../_chunks/dep-31c4bc3d.js');
require('../_chunks/dep-eea2872a.js');
require('../_chunks/dep-62e73936.js');
require('../_chunks/dep-64577888.js');
require('../_chunks/dep-71455db7.js');
require('../_chunks/dep-9e5a468d.js');
require('../_chunks/dep-f26edb7b.js');
require('../_chunks/dep-f33c1939.js');
require('../_chunks/dep-21ece627.js');
require('../_chunks/dep-25e4aa84.js');
require('../_chunks/dep-e1fbe1c3.js');
require('../_chunks/dep-df2b541f.js');
require('../_chunks/dep-edd366db.js');
require('../_chunks/dep-a56c4939.js');
require('../_chunks/dep-6c297e20.js');
require('../_chunks/dep-b7ad4d54.js');
require('../_chunks/dep-a2cb9299.js');
require('../_chunks/dep-f981815b.js');
require('../_chunks/dep-4ed9eda4.js');
require('../config-provider/ConfigProvider.js');
require('../_chunks/dep-ab2f63ec.js');
require('../_chunks/dep-a48c7e8b.js');
require('../_chunks/dep-3d4656ee.js');
require('../_chunks/dep-0ffc9d96.js');
require('../_chunks/dep-efe6d243.js');
require('../_chunks/dep-4b18243f.js');
require('../_chunks/dep-bff2c990.js');
require('../select-input/SelectInput.js');
require('../popup/index.js');
require('../popup/Popup.js');
require('react-transition-group');
require('../_util/ref.js');
require('react-is');
require('../_util/isFragment.js');
require('../_chunks/dep-381fa848.js');
require('../common/Portal.js');
require('react-dom');
require('../hooks/useLayoutEffect.js');
require('../hooks/useAnimation.js');
require('../hooks/useAttach.js');
require('../hooks/useControlled.js');
require('../_util/noop.js');
require('../_chunks/dep-66114ce9.js');
require('../_chunks/dep-62d1dd66.js');
require('../_chunks/dep-7a148045.js');
require('../_chunks/dep-255ceed8.js');
require('../_chunks/dep-79629634.js');
require('../hooks/useMutationObserver.js');
require('../hooks/useLatest.js');
require('../_chunks/dep-eb6d55c1.js');
require('../_chunks/dep-014b9b78.js');
require('../_chunks/dep-abdd786a.js');
require('../_chunks/dep-a231fdc5.js');
require('../_chunks/dep-cf14666e.js');
require('../hooks/usePopper.js');
require('../_chunks/dep-e4e1901e.js');
require('@popperjs/core');
require('react-fast-compare');
require('../hooks/useWindowSize.js');
require('../popup/defaultProps.js');
require('../popup/hooks/useTrigger.js');
require('../_util/composeRefs.js');
require('../_util/listener.js');
require('../popup/utils/transition.js');
require('../popup/PopupPlugin.js');
require('../_chunks/dep-65ef8e09.js');
require('../_util/react-render.js');
require('../common/PluginContainer.js');
require('../select-input/useSingle.js');
require('../input/index.js');
require('../input/Input.js');
require('../_chunks/dep-8fa3a4c2.js');
require('tdesign-icons-react');
require('../_util/forwardRefWithStatics.js');
require('hoist-non-react-statics');
require('../hooks/useGlobalIcon.js');
require('../input/InputGroup.js');
require('../input/defaultProps.js');
require('../input/useLengthLimit.js');
require('../_chunks/dep-002fcc1e.js');
require('../_chunks/dep-2ffa3ff1.js');
require('../loading/index.js');
require('../loading/Loading.js');
require('../loading/gradient.js');
require('../_chunks/dep-dc4ce063.js');
require('../hooks/useDomRefCallback.js');
require('../loading/defaultProps.js');
require('../loading/plugin.js');
require('../select-input/useMultiple.js');
require('../tag-input/index.js');
require('../tag-input/TagInput.js');
require('../hooks/useDragSorter.js');
require('../hooks/useEventCallback.js');
require('../tag-input/defaultProps.js');
require('../tag-input/useHover.js');
require('../tag-input/useTagList.js');
require('../tag/index.js');
require('../tag/Tag.js');
require('../_chunks/dep-4d5c26af.js');
require('../tag/defaultProps.js');
require('../tag/CheckTag.js');
require('../_chunks/dep-4406837c.js');
require('../tag/CheckTagGroup.js');
require('../tag-input/useTagScroll.js');
require('../select-input/useOverlayInnerStyle.js');
require('../select-input/defaultProps.js');
require('../_chunks/dep-3398c1f2.js');
require('../_chunks/dep-e57bdc8f.js');
require('../_chunks/dep-22b1740a.js');
require('../_chunks/dep-373af7a2.js');
require('../_chunks/dep-fc29b8b5.js');
require('./components/Item.js');
require('../checkbox/index.js');
require('../_chunks/dep-e136a981.js');
require('../common/Check.js');
require('../_util/helper.js');
require('../_chunks/dep-840b1644.js');
require('../_chunks/dep-c16f1dc4.js');
require('../checkbox/defaultProps.js');
require('../_chunks/dep-6283cbd9.js');
require('../_chunks/dep-509940b2.js');
require('../_chunks/dep-69792df2.js');
require('mitt');
require('../_chunks/dep-5180cc1e.js');
require('../_chunks/dep-221787fe.js');
require('../_chunks/dep-0c8c9057.js');
require('../_chunks/dep-95a6dd1c.js');
require('../_chunks/dep-bfc07219.js');
require('../_chunks/dep-0192b053.js');
require('../_chunks/dep-40e87384.js');
require('../_chunks/dep-297a4933.js');
require('../_chunks/dep-9a375a19.js');
require('../_chunks/dep-d915c90f.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { defineProperty._defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var Cascader = function Cascader(originalProps) {
  var _props$popupProps;
  var props = hooks_useDefaultProps["default"](originalProps, cascader_defaultProps.cascaderDefaultProps);
  var _useConfig = hooks_useConfig["default"](),
    classPrefix = _useConfig.classPrefix;
  var _useCommonClassName = hooks_useCommonClassName["default"](),
    STATUS = _useCommonClassName.STATUS;
  var _useLocaleReceiver = locale_LocalReceiver.useLocaleReceiver("cascader"),
    _useLocaleReceiver2 = slicedToArray._slicedToArray(_useLocaleReceiver, 1),
    global = _useLocaleReceiver2[0];
  var COMPONENT_NAME = "".concat(classPrefix, "-cascader");
  var _useCascaderContext = cascader_hooks.useCascaderContext(props),
    cascaderContext = _useCascaderContext.cascaderContext,
    isFilterable = _useCascaderContext.isFilterable,
    innerValue = _useCascaderContext.innerValue,
    getCascaderItems = _useCascaderContext.getCascaderItems;
  var displayValue = React.useMemo(function () {
    return props.multiple ? cascader_core_helper.getMultipleContent(cascaderContext) : cascader_core_helper.getSingleContent(cascaderContext);
  }, [props.multiple, cascaderContext]);
  var panels = React.useMemo(function () {
    return cascader_core_helper.getPanels(cascaderContext.treeNodes);
  }, [cascaderContext]);
  var inputPlaceholder = React.useMemo(function () {
    var _props$placeholder;
    return cascaderContext.visible && !props.multiple && cascader_core_helper.getSingleContent(cascaderContext) || ((_props$placeholder = props.placeholder) !== null && _props$placeholder !== void 0 ? _props$placeholder : global.placeholder);
  }, [props.placeholder, cascaderContext, props.multiple, global.placeholder]);
  var renderSuffixIcon = function renderSuffixIcon() {
    if (props.suffixIcon) {
      return props.suffixIcon;
    }
    var visible2 = cascaderContext.visible,
      disabled = cascaderContext.disabled;
    return /* @__PURE__ */React__default["default"].createElement(common_FakeArrow["default"], {
      className: cascader_core_className.getFakeArrowIconClass(classPrefix, STATUS, cascaderContext),
      isActive: visible2,
      disabled: disabled
    });
  };
  var renderLabel = function renderLabel() {
    var label = _util_parseTNode["default"](props.label);
    if (props.multiple) return label;
    if (!label) return null;
    return /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(classPrefix, "-tag-input__prefix")
    }, label);
  };
  var valueDisplayParams = React.useMemo(function () {
    var arrayValue = innerValue instanceof Array ? innerValue : [innerValue];
    var displayValue2 = props.multiple && props.minCollapsedNum ? arrayValue.slice(0, props.minCollapsedNum) : innerValue;
    var options = getCascaderItems(arrayValue, props.valueType, props.multiple);
    return {
      value: innerValue,
      selectedOptions: options,
      onClose: function onClose(index) {
        cascader_core_effect.handleRemoveTagEffect(cascaderContext, index, props.onRemove);
      },
      displayValue: displayValue2
    };
  }, [cascaderContext, innerValue, props.multiple, props.minCollapsedNum, props.onRemove, getCascaderItems, props.valueType]);
  var renderValueDisplay = function renderValueDisplay() {
    return _util_parseTNode.parseContentTNode(props.valueDisplay, valueDisplayParams);
  };
  var setVisible = cascaderContext.setVisible,
    visible = cascaderContext.visible,
    inputVal = cascaderContext.inputVal,
    setInputVal = cascaderContext.setInputVal;
  var updateScrollTop = function updateScrollTop(content) {
    var cascaderMenuList = content.querySelectorAll(".".concat(COMPONENT_NAME, "__menu"));
    requestAnimationFrame(function () {
      cascaderMenuList.forEach(function (menu) {
        var firstSelectedNode = (menu === null || menu === void 0 ? void 0 : menu.querySelector(".".concat(classPrefix, "-is-selected"))) || (menu === null || menu === void 0 ? void 0 : menu.querySelector(".".concat(classPrefix, "-is-expanded")));
        if (!firstSelectedNode || !menu) return;
        var nodeTop = firstSelectedNode.offsetTop;
        var nodeHeight = firstSelectedNode.offsetHeight;
        var menuHeight = menu.clientHeight;
        var currentScrollTop = menu.scrollTop;
        var nodeVisibleTop = nodeTop - currentScrollTop;
        var nodeVisibleBottom = nodeVisibleTop + nodeHeight;
        var isNodeFullyVisible = nodeVisibleTop >= 0 && nodeVisibleBottom <= menuHeight;
        if (isNodeFullyVisible) return;
        var targetScrollTop = currentScrollTop;
        if (nodeVisibleTop < 0) {
          targetScrollTop = nodeTop;
        } else if (nodeVisibleBottom > menuHeight) {
          targetScrollTop = nodeTop - menuHeight + nodeHeight;
        }
        var maxScrollTop = menu.scrollHeight - menuHeight;
        targetScrollTop = Math.max(0, Math.min(targetScrollTop, maxScrollTop));
        menu.scrollTop = targetScrollTop;
      });
    });
  };
  return /* @__PURE__ */React__default["default"].createElement(selectInput_index.SelectInput, _objectSpread(_objectSpread({
    className: classNames__default["default"](COMPONENT_NAME, props.className),
    style: props.style,
    value: displayValue,
    borderless: props.borderless,
    inputValue: visible ? inputVal : "",
    popupVisible: visible,
    allowInput: isFilterable,
    minCollapsedNum: props.minCollapsedNum,
    collapsedItems: props.collapsedItems,
    readonly: props.readonly,
    clearable: props.clearable,
    placeholder: inputPlaceholder,
    multiple: props.multiple,
    loading: props.loading,
    disabled: props.disabled,
    status: props.status,
    tips: props.tips,
    label: renderLabel(),
    valueDisplay: renderValueDisplay(),
    suffix: props.suffix,
    suffixIcon: renderSuffixIcon(),
    updateScrollTop: updateScrollTop,
    popupProps: _objectSpread(_objectSpread({}, props.popupProps), {}, {
      overlayInnerStyle: panels.length && !props.loading ? {
        width: "auto"
      } : {},
      overlayClassName: ["".concat(classPrefix, "-cascader__popup"), (_props$popupProps = props.popupProps) === null || _props$popupProps === void 0 ? void 0 : _props$popupProps.overlayClassName]
    }),
    inputProps: _objectSpread({
      size: props.size
    }, props.inputProps),
    tagInputProps: _objectSpread({
      size: props.size
    }, props.tagInputProps),
    tagProps: _objectSpread({}, props.tagProps),
    onInputChange: function onInputChange(value, ctx) {
      var _props$selectInputPro, _props$selectInputPro2;
      if (!visible || (ctx === null || ctx === void 0 ? void 0 : ctx.trigger) === "clear") {
        return;
      }
      setInputVal("".concat(value));
      props === null || props === void 0 || (_props$selectInputPro = props.selectInputProps) === null || _props$selectInputPro === void 0 || (_props$selectInputPro2 = _props$selectInputPro.onInputChange) === null || _props$selectInputPro2 === void 0 || _props$selectInputPro2.call(_props$selectInputPro, value, ctx);
    },
    onTagChange: function onTagChange(val, ctx) {
      var _props$selectInputPro3, _props$selectInputPro4;
      if (ctx.trigger === "enter" || ctx.trigger === "clear") {
        return;
      }
      cascader_core_effect.handleRemoveTagEffect(cascaderContext, ctx.index, props.onRemove);
      props === null || props === void 0 || (_props$selectInputPro3 = props.selectInputProps) === null || _props$selectInputPro3 === void 0 || (_props$selectInputPro4 = _props$selectInputPro3.onTagChange) === null || _props$selectInputPro4 === void 0 || _props$selectInputPro4.call(_props$selectInputPro3, val, ctx);
    },
    onPopupVisibleChange: function onPopupVisibleChange(val, context) {
      var _props$selectInputPro5, _props$selectInputPro6;
      if (props.disabled) {
        return;
      }
      setVisible(val, context);
      props === null || props === void 0 || (_props$selectInputPro5 = props.selectInputProps) === null || _props$selectInputPro5 === void 0 || (_props$selectInputPro6 = _props$selectInputPro5.onPopupVisibleChange) === null || _props$selectInputPro6 === void 0 || _props$selectInputPro6.call(_props$selectInputPro5, val, context);
    },
    onBlur: function onBlur(val, context) {
      var _props$onBlur, _props$selectInputPro7, _props$selectInputPro8;
      (_props$onBlur = props.onBlur) === null || _props$onBlur === void 0 || _props$onBlur.call(props, {
        value: cascaderContext.value,
        e: context.e,
        inputValue: inputVal
      });
      props === null || props === void 0 || (_props$selectInputPro7 = props.selectInputProps) === null || _props$selectInputPro7 === void 0 || (_props$selectInputPro8 = _props$selectInputPro7.onBlur) === null || _props$selectInputPro8 === void 0 || _props$selectInputPro8.call(_props$selectInputPro7, val, context);
    },
    onFocus: function onFocus(val, context) {
      var _props$onFocus, _props$selectInputPro9, _props$selectInputPro0;
      (_props$onFocus = props.onFocus) === null || _props$onFocus === void 0 || _props$onFocus.call(props, {
        value: cascaderContext.value,
        e: context.e
      });
      props === null || props === void 0 || (_props$selectInputPro9 = props.selectInputProps) === null || _props$selectInputPro9 === void 0 || (_props$selectInputPro0 = _props$selectInputPro9.onFocus) === null || _props$selectInputPro0 === void 0 || _props$selectInputPro0.call(_props$selectInputPro9, val, context);
    },
    onClear: function onClear(context) {
      var _props$selectInputPro1, _props$selectInputPro10, _props$onClear;
      cascader_core_effect.closeIconClickEffect(cascaderContext);
      props === null || props === void 0 || (_props$selectInputPro1 = props.selectInputProps) === null || _props$selectInputPro1 === void 0 || (_props$selectInputPro10 = _props$selectInputPro1.onClear) === null || _props$selectInputPro10 === void 0 || _props$selectInputPro10.call(_props$selectInputPro1, context);
      (_props$onClear = props.onClear) === null || _props$onClear === void 0 || _props$onClear.call(props, context);
    }
  }, omit.omit(props.selectInputProps, ["onTagChange", "onInputChange", "onPopupVisibleChange", "onBlur", "onFocus", "onClear"])), {}, {
    panel: /* @__PURE__ */React__default["default"].createElement(React__default["default"].Fragment, null, props.panelTopContent && _util_parseTNode["default"](props.panelTopContent), /* @__PURE__ */React__default["default"].createElement(cascader_components_Panel["default"], _objectSpread({
      cascaderContext: cascaderContext
    }, pick.pick(props, ["trigger", "onChange", "empty", "loading", "loadingText", "option"]))), props.panelBottomContent && _util_parseTNode["default"](props.panelBottomContent))
  }));
};
Cascader.displayName = "Cascader";

exports["default"] = Cascader;
//# sourceMappingURL=Cascader.js.map
