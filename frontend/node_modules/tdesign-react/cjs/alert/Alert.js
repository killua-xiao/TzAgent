/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-0006fcfa.js');
var objectWithoutProperties = require('../_chunks/dep-8fa3a4c2.js');
var slicedToArray = require('../_chunks/dep-8e4d656d.js');
var React = require('react');
var classNames = require('classnames');
var tdesignIconsReact = require('tdesign-icons-react');
var reactTransitionGroup = require('react-transition-group');
var log = require('../_chunks/dep-59671c87.js');
var _util_noop = require('../_util/noop.js');
var _util_parseTNode = require('../_util/parseTNode.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var hooks_useGlobalIcon = require('../hooks/useGlobalIcon.js');
var locale_LocalReceiver = require('../locale/LocalReceiver.js');
var alert_defaultProps = require('./defaultProps.js');
var _util_composeRefs = require('../_util/composeRefs.js');
var hooks_useDefaultProps = require('../hooks/useDefaultProps.js');
require('../_chunks/dep-667ac7af.js');
require('../_chunks/dep-00b49251.js');
require('../_chunks/dep-ec8d2dca.js');
require('../_chunks/dep-25585736.js');
require('../_chunks/dep-fc596d16.js');
require('../config-provider/ConfigContext.js');
require('../_chunks/dep-1df1dad8.js');
require('../_chunks/dep-5b5ab11b.js');
require('dayjs');
require('../_chunks/dep-f32c03f1.js');
require('../_chunks/dep-31c4bc3d.js');
require('../_chunks/dep-eea2872a.js');
require('../_chunks/dep-62e73936.js');
require('../_chunks/dep-64577888.js');
require('../_chunks/dep-71455db7.js');
require('../_chunks/dep-9e5a468d.js');
require('../_chunks/dep-f26edb7b.js');
require('../_chunks/dep-f33c1939.js');
require('../_chunks/dep-21ece627.js');
require('../_chunks/dep-25e4aa84.js');
require('../_chunks/dep-e1fbe1c3.js');
require('../_chunks/dep-df2b541f.js');
require('../_chunks/dep-edd366db.js');
require('../_chunks/dep-a56c4939.js');
require('../_chunks/dep-6c297e20.js');
require('../_chunks/dep-b7ad4d54.js');
require('../_chunks/dep-a2cb9299.js');
require('../_chunks/dep-f981815b.js');
require('../_chunks/dep-4ed9eda4.js');
require('../config-provider/ConfigProvider.js');
require('../_chunks/dep-ab2f63ec.js');
require('../_chunks/dep-a48c7e8b.js');
require('../_chunks/dep-3d4656ee.js');
require('../_chunks/dep-0ffc9d96.js');
require('../_chunks/dep-efe6d243.js');
require('../_chunks/dep-4b18243f.js');
require('../_chunks/dep-bff2c990.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

var _excluded = ["message", "title", "operation", "theme", "icon", "close", "closeBtn", "maxLine", "onClose", "className", "onClosed"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { defineProperty._defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var transitionTime = 200;
var Alert = /*#__PURE__*/React.forwardRef(function (props, ref) {
  var _useConfig = hooks_useConfig["default"](),
    classPrefix = _useConfig.classPrefix;
  var _useLocaleReceiver = locale_LocalReceiver.useLocaleReceiver("alert"),
    _useLocaleReceiver2 = slicedToArray._slicedToArray(_useLocaleReceiver, 2),
    local = _useLocaleReceiver2[0],
    t = _useLocaleReceiver2[1];
  var _useGlobalIcon = hooks_useGlobalIcon["default"]({
      CloseIcon: tdesignIconsReact.CloseIcon,
      InfoCircleFilledIcon: tdesignIconsReact.InfoCircleFilledIcon,
      CheckCircleFilledIcon: tdesignIconsReact.CheckCircleFilledIcon,
      ErrorCircleFilledIcon: tdesignIconsReact.ErrorCircleFilledIcon
    }),
    CloseIcon = _useGlobalIcon.CloseIcon,
    InfoCircleFilledIcon = _useGlobalIcon.InfoCircleFilledIcon,
    CheckCircleFilledIcon = _useGlobalIcon.CheckCircleFilledIcon,
    ErrorCircleFilledIcon = _useGlobalIcon.ErrorCircleFilledIcon;
  var _useDefaultProps = hooks_useDefaultProps["default"](props, alert_defaultProps.alertDefaultProps),
    message = _useDefaultProps.message,
    title = _useDefaultProps.title,
    operation = _useDefaultProps.operation,
    theme = _useDefaultProps.theme,
    icon = _useDefaultProps.icon,
    close = _useDefaultProps.close,
    closeBtn = _useDefaultProps.closeBtn,
    maxLine = _useDefaultProps.maxLine,
    onClose = _useDefaultProps.onClose,
    className = _useDefaultProps.className,
    _useDefaultProps$onCl = _useDefaultProps.onClosed,
    onClosed = _useDefaultProps$onCl === void 0 ? _util_noop["default"] : _useDefaultProps$onCl,
    alertProps = objectWithoutProperties._objectWithoutProperties(_useDefaultProps, _excluded);
  var _React$useState = React__default["default"].useState(false),
    _React$useState2 = slicedToArray._slicedToArray(_React$useState, 2),
    closed = _React$useState2[0],
    setClosed = _React$useState2[1];
  var _React$useState3 = React__default["default"].useState(true),
    _React$useState4 = slicedToArray._slicedToArray(_React$useState3, 2),
    collapsed = _React$useState4[0],
    setCollapsed = _React$useState4[1];
  var nodeRef = React.useRef(null);
  var iconMap = {
    success: CheckCircleFilledIcon,
    info: InfoCircleFilledIcon,
    error: ErrorCircleFilledIcon,
    warning: ErrorCircleFilledIcon
  };
  var handleClose = function handleClose(e) {
    setClosed(true);
    onClose === null || onClose === void 0 || onClose({
      e: e
    });
  };
  var handleCollapse = function handleCollapse() {
    setCollapsed(function (collapsed2) {
      return !collapsed2;
    });
  };
  var renderIconNode = function renderIconNode() {
    if (/*#__PURE__*/React__default["default"].isValidElement(icon)) return icon;
    return /*#__PURE__*/React__default["default"].createElement(iconMap[theme]);
  };
  var renderMessage = function renderMessage() {
    if (+maxLine > 0 && Array.isArray(message)) {
      return /* @__PURE__ */React__default["default"].createElement("div", {
        className: "".concat(classPrefix, "-alert__description")
      }, message.map(function (item, index) {
        if (collapsed) {
          if (index < +maxLine) {
            return /* @__PURE__ */React__default["default"].createElement("div", {
              key: index
            }, item);
          }
        } else {
          return /* @__PURE__ */React__default["default"].createElement("div", {
            key: index
          }, item);
        }
        return true;
      }), +maxLine < message.length && /* @__PURE__ */React__default["default"].createElement("div", {
        className: "".concat(classPrefix, "-alert__collapse"),
        onClick: handleCollapse
      }, collapsed ? t(local.expandText) : t(local.collapseText)));
    }
    return /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(classPrefix, "-alert__description")
    }, message);
  };
  var isUsingClose = Reflect.has(props, "close");
  var closeNode = isUsingClose ? close : closeBtn;
  if (isUsingClose) {
    log.log.warnOnce("TAlert", "prop `close` is going to be deprecated, please use `closeBtn` instead.");
  }
  var renderClose = function renderClose() {
    if (closeNode === false) return null;
    return /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(classPrefix, "-alert__close"),
      onClick: handleClose
    }, _util_parseTNode["default"](closeNode, void 0, /* @__PURE__ */React__default["default"].createElement(CloseIcon, null)));
  };
  return /* @__PURE__ */React__default["default"].createElement(reactTransitionGroup.CSSTransition, {
    "in": !closed,
    unmountOnExit: true,
    classNames: {
      exitActive: "".concat(classPrefix, "-alert--closing")
    },
    nodeRef: nodeRef,
    timeout: transitionTime,
    onExited: onClosed
  }, /* @__PURE__ */React__default["default"].createElement("div", _objectSpread({
    ref: _util_composeRefs["default"](ref, nodeRef),
    className: classNames__default["default"]("".concat(classPrefix, "-alert"), "".concat(classPrefix, "-alert--").concat(theme), className)
  }, alertProps), /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(classPrefix, "-alert__icon")
  }, renderIconNode()), /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(classPrefix, "-alert__content")
  }, title ? /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(classPrefix, "-alert__title")
  }, title) : null, /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(classPrefix, "-alert__message")
  }, renderMessage(), operation ? /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(classPrefix, "-alert__operation")
  }, _util_parseTNode["default"](operation)) : null)), renderClose()));
});
Alert.displayName = "Alert";

exports["default"] = Alert;
//# sourceMappingURL=Alert.js.map
