{"version":3,"file":"DropdownMenu.js","sources":["../../../components/dropdown/DropdownMenu.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport { throttle } from 'lodash-es';\nimport { ChevronRightIcon as TdIconChevronRight } from 'tdesign-icons-react';\nimport useConfig from '../hooks/useConfig';\nimport { DropdownProps } from './Dropdown';\nimport TDivider from '../divider';\nimport DropdownItem from './DropdownItem';\nimport { DropdownOption } from './type';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\n\nconst DropdownMenu: React.FC<DropdownProps> = (props) => {\n  const {\n    options = [],\n    maxHeight = 300,\n    minColumnWidth = 10,\n    maxColumnWidth = 160,\n    direction,\n    panelTopContent,\n    panelBottomContent,\n  } = props;\n\n  const { classPrefix } = useConfig();\n  const dropdownClass = `${classPrefix}-dropdown`;\n  const dropdownMenuClass = `${dropdownClass}__menu`;\n  const [panelTopContentHeight, setPanelTopContentHeight] = useState(null);\n  const { ChevronRightIcon } = useGlobalIcon({\n    ChevronRightIcon: TdIconChevronRight,\n  });\n\n  const menuRef = useRef<HTMLDivElement>(null);\n  const [isOverMaxHeight, setIsOverMaxHeight] = useState(false);\n  const [calcScrollTopMap, setScrollTopMap] = useState({});\n\n  useEffect(() => {\n    const menuElement = menuRef.current;\n    if (menuElement) {\n      const menuHeight = menuElement.childNodes?.length * 30;\n      requestAnimationFrame(() => {\n        if (panelTopContent) {\n          const panelTopHeight =\n            parseInt(getComputedStyle(menuElement.childNodes?.[0] as HTMLElement)?.height, 10) || 0;\n          setPanelTopContentHeight(panelTopHeight);\n        }\n      });\n      if (menuHeight >= maxHeight) setIsOverMaxHeight(true);\n    }\n  }, [maxHeight, panelTopContent]);\n\n  const handleItemClick = (options: {\n    data: DropdownOption;\n    context: { e: React.MouseEvent<HTMLDivElement, MouseEvent> };\n  }) => {\n    const { data, context } = options;\n    data?.onClick?.(data, context);\n    props.onClick?.(data, context);\n  };\n\n  const handleScroll = (e: React.MouseEvent<HTMLDivElement>, deep = 0) => {\n    const { scrollTop } = e.target as HTMLElement;\n    setScrollTopMap({ ...calcScrollTopMap, [deep]: scrollTop });\n  };\n\n  const throttleUpdate = throttle(handleScroll, 100);\n\n  // 处理options渲染的场景\n  const renderOptions = (data: Array<DropdownOption | React.ReactElement>, deep: number) => {\n    const arr = [];\n    let renderContent: React.ReactElement;\n    data.forEach?.((menu, idx) => {\n      const optionItem = { ...(menu as DropdownOption) };\n      const onViewIdx = Math.ceil(calcScrollTopMap[deep] / 30);\n      const isOverflow = idx >= onViewIdx;\n      // 只有第一层子节点需要加上 panelTopContent 的高度\n      const shouldCalcPanelTopContent = panelTopContent && deep > 0;\n\n      const itemIdx = isOverflow ? idx - onViewIdx : idx;\n      if (optionItem.children) {\n        optionItem.children = renderOptions(optionItem.children, deep + 1);\n        renderContent = (\n          <div key={idx}>\n            <DropdownItem\n              className={classNames(optionItem.className, `${dropdownClass}__item`, `${dropdownClass}__item--suffix`)}\n              style={optionItem.style}\n              value={optionItem.value}\n              theme={optionItem.theme}\n              active={optionItem.active}\n              prefixIcon={optionItem.prefixIcon}\n              disabled={optionItem.disabled}\n              minColumnWidth={minColumnWidth}\n              maxColumnWidth={maxColumnWidth}\n              isSubmenu={true}\n            >\n              <div className={`${dropdownClass}__item-content`}>\n                <span className={`${dropdownClass}__item-text`}>{optionItem.content}</span>\n                <ChevronRightIcon className={`${dropdownClass}__item-direction`} size=\"16\" />\n              </div>\n              <div\n                className={classNames(`${dropdownClass}__submenu-wrapper`, {\n                  [`${dropdownClass}__submenu-wrapper--${props.direction}`]: props.direction,\n                })}\n                style={{\n                  position: 'absolute',\n                  top: `${itemIdx * 30 + (shouldCalcPanelTopContent ? 0 : panelTopContentHeight)}px`,\n                }}\n              >\n                <div\n                  className={classNames(`${dropdownClass}__submenu`, {\n                    [`${dropdownClass}__submenu--disabled`]: optionItem.disabled,\n                  })}\n                  style={{\n                    position: 'static',\n                    maxHeight: `${props.maxHeight}px`,\n                  }}\n                  onScroll={(e: React.MouseEvent<HTMLDivElement>) => handleScroll(e, deep + 1)}\n                >\n                  <ul>{optionItem.children as React.ReactNode}</ul>\n                </div>\n              </div>\n            </DropdownItem>\n            {optionItem.divider ? <TDivider /> : null}\n          </div>\n        );\n      } else {\n        renderContent = (\n          <div key={idx}>\n            <DropdownItem\n              className={classNames(optionItem.className, `${dropdownClass}__item`)}\n              style={optionItem.style}\n              value={optionItem.value}\n              theme={optionItem.theme}\n              active={optionItem.active}\n              prefixIcon={optionItem.prefixIcon}\n              disabled={optionItem.disabled}\n              minColumnWidth={minColumnWidth}\n              maxColumnWidth={maxColumnWidth}\n              onClick={\n                optionItem.disabled || optionItem.children\n                  ? () => null\n                  : (\n                      value: string | number | { [key: string]: any },\n                      context: { e: React.MouseEvent<HTMLDivElement, MouseEvent> },\n                    ) => handleItemClick({ data: optionItem, context })\n              }\n            >\n              <span className={`${dropdownClass}__item-text`}>{optionItem.content}</span>\n            </DropdownItem>\n            {optionItem.divider ? <TDivider /> : null}\n          </div>\n        );\n      }\n      arr.push(renderContent);\n    });\n    return arr;\n  };\n\n  return (\n    <div\n      className={classNames(dropdownMenuClass, `${dropdownMenuClass}--${direction}`, {\n        [`${dropdownMenuClass}--overflow`]: isOverMaxHeight,\n      })}\n      style={{\n        maxHeight: `${maxHeight}px`,\n      }}\n      ref={menuRef}\n      onScroll={throttleUpdate}\n    >\n      {panelTopContent ? <div className={`${dropdownClass}__top-content`}>{panelTopContent}</div> : null}\n      {renderOptions(options, 0)}\n      {panelBottomContent ? <div className={`${dropdownClass}__bottom-content`}>{panelBottomContent}</div> : null}\n    </div>\n  );\n};\n\nDropdownMenu.displayName = 'DropdownMenu';\n\nexport default DropdownMenu;\n"],"names":["DropdownMenu","props","_props$options","options","_props$maxHeight","maxHeight","_props$minColumnWidth","minColumnWidth","_props$maxColumnWidth","maxColumnWidth","direction","panelTopContent","panelBottomContent","_useConfig","useConfig","classPrefix","dropdownClass","dropdownMenuClass","_useState","useState","_useState2","_slicedToArray","panelTopContentHeight","setPanelTopContentHeight","_useGlobalIcon","useGlobalIcon","ChevronRightIcon","TdIconChevronRight","menuRef","useRef","_useState3","_useState4","isOverMaxHeight","setIsOverMaxHeight","_useState5","_useState6","calcScrollTopMap","setScrollTopMap","useEffect","menuElement","current","_menuElement$childNod","menuHeight","childNodes","length","requestAnimationFrame","_getComputedStyle","_menuElement$childNod2","panelTopHeight","parseInt","getComputedStyle","height","handleItemClick","_data$onClick","_props$onClick","data","context","onClick","call","handleScroll","e","deep","arguments","undefined","scrollTop","target","_objectSpread","_defineProperty","throttleUpdate","throttle","renderOptions","_data$forEach","arr","renderContent","forEach","menu","idx","optionItem","onViewIdx","Math","ceil","isOverflow","shouldCalcPanelTopContent","itemIdx","children","React","createElement","key","DropdownItem","className","classNames","concat","style","value","theme","active","prefixIcon","disabled","isSubmenu","content","size","position","top","onScroll","divider","TDivider","push","ref","displayName"],"mappings":"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"}