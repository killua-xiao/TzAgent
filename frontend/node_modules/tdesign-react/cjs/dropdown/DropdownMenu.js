/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-0006fcfa.js');
var slicedToArray = require('../_chunks/dep-8e4d656d.js');
var React = require('react');
var classNames = require('classnames');
var tdesignIconsReact = require('tdesign-icons-react');
var hooks_useConfig = require('../hooks/useConfig.js');
var divider_index = require('../divider/index.js');
var dropdown_DropdownItem = require('./DropdownItem.js');
var hooks_useGlobalIcon = require('../hooks/useGlobalIcon.js');
var throttle = require('../_chunks/dep-1438af5a.js');
require('../_chunks/dep-667ac7af.js');
require('../_chunks/dep-00b49251.js');
require('../config-provider/ConfigContext.js');
require('../_chunks/dep-1df1dad8.js');
require('../_chunks/dep-5b5ab11b.js');
require('dayjs');
require('../_chunks/dep-f32c03f1.js');
require('../_chunks/dep-31c4bc3d.js');
require('../_chunks/dep-eea2872a.js');
require('../_chunks/dep-25585736.js');
require('../_chunks/dep-62e73936.js');
require('../_chunks/dep-64577888.js');
require('../_chunks/dep-71455db7.js');
require('../_chunks/dep-9e5a468d.js');
require('../_chunks/dep-ec8d2dca.js');
require('../_chunks/dep-fc596d16.js');
require('../_chunks/dep-f26edb7b.js');
require('../_chunks/dep-f33c1939.js');
require('../_chunks/dep-21ece627.js');
require('../_chunks/dep-25e4aa84.js');
require('../_chunks/dep-e1fbe1c3.js');
require('../_chunks/dep-df2b541f.js');
require('../_chunks/dep-edd366db.js');
require('../_chunks/dep-a56c4939.js');
require('../_chunks/dep-6c297e20.js');
require('../_chunks/dep-b7ad4d54.js');
require('../_chunks/dep-a2cb9299.js');
require('../_chunks/dep-f981815b.js');
require('../divider/Divider.js');
require('../_chunks/dep-8fa3a4c2.js');
require('../divider/defaultProps.js');
require('../hooks/useDefaultProps.js');
require('../hooks/useDomRefCallback.js');
require('../hooks/useRipple.js');
require('../_chunks/dep-dc4ce063.js');
require('../hooks/useAnimation.js');
require('../_chunks/dep-381fa848.js');
require('../_chunks/dep-4ed9eda4.js');
require('./defaultProps.js');
require('../_util/helper.js');
require('../_chunks/dep-840b1644.js');
require('../_chunks/dep-255ceed8.js');
require('../_chunks/dep-79629634.js');
require('../_chunks/dep-66114ce9.js');
require('../_chunks/dep-62d1dd66.js');
require('../_chunks/dep-7a148045.js');
require('../_chunks/dep-a231fdc5.js');
require('../_chunks/dep-cf14666e.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { defineProperty._defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var DropdownMenu = function DropdownMenu(props) {
  var _props$options = props.options,
    options = _props$options === void 0 ? [] : _props$options,
    _props$maxHeight = props.maxHeight,
    maxHeight = _props$maxHeight === void 0 ? 300 : _props$maxHeight,
    _props$minColumnWidth = props.minColumnWidth,
    minColumnWidth = _props$minColumnWidth === void 0 ? 10 : _props$minColumnWidth,
    _props$maxColumnWidth = props.maxColumnWidth,
    maxColumnWidth = _props$maxColumnWidth === void 0 ? 160 : _props$maxColumnWidth,
    direction = props.direction,
    panelTopContent = props.panelTopContent,
    panelBottomContent = props.panelBottomContent;
  var _useConfig = hooks_useConfig["default"](),
    classPrefix = _useConfig.classPrefix;
  var dropdownClass = "".concat(classPrefix, "-dropdown");
  var dropdownMenuClass = "".concat(dropdownClass, "__menu");
  var _useState = React.useState(null),
    _useState2 = slicedToArray._slicedToArray(_useState, 2),
    panelTopContentHeight = _useState2[0],
    setPanelTopContentHeight = _useState2[1];
  var _useGlobalIcon = hooks_useGlobalIcon["default"]({
      ChevronRightIcon: tdesignIconsReact.ChevronRightIcon
    }),
    ChevronRightIcon = _useGlobalIcon.ChevronRightIcon;
  var menuRef = React.useRef(null);
  var _useState3 = React.useState(false),
    _useState4 = slicedToArray._slicedToArray(_useState3, 2),
    isOverMaxHeight = _useState4[0],
    setIsOverMaxHeight = _useState4[1];
  var _useState5 = React.useState({}),
    _useState6 = slicedToArray._slicedToArray(_useState5, 2),
    calcScrollTopMap = _useState6[0],
    setScrollTopMap = _useState6[1];
  React.useEffect(function () {
    var menuElement = menuRef.current;
    if (menuElement) {
      var _menuElement$childNod;
      var menuHeight = ((_menuElement$childNod = menuElement.childNodes) === null || _menuElement$childNod === void 0 ? void 0 : _menuElement$childNod.length) * 30;
      requestAnimationFrame(function () {
        if (panelTopContent) {
          var _getComputedStyle, _menuElement$childNod2;
          var panelTopHeight = parseInt((_getComputedStyle = getComputedStyle((_menuElement$childNod2 = menuElement.childNodes) === null || _menuElement$childNod2 === void 0 ? void 0 : _menuElement$childNod2[0])) === null || _getComputedStyle === void 0 ? void 0 : _getComputedStyle.height, 10) || 0;
          setPanelTopContentHeight(panelTopHeight);
        }
      });
      if (menuHeight >= maxHeight) setIsOverMaxHeight(true);
    }
  }, [maxHeight, panelTopContent]);
  var handleItemClick = function handleItemClick(options2) {
    var _data$onClick, _props$onClick;
    var data = options2.data,
      context = options2.context;
    data === null || data === void 0 || (_data$onClick = data.onClick) === null || _data$onClick === void 0 || _data$onClick.call(data, data, context);
    (_props$onClick = props.onClick) === null || _props$onClick === void 0 || _props$onClick.call(props, data, context);
  };
  var handleScroll = function handleScroll(e) {
    var deep = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var scrollTop = e.target.scrollTop;
    setScrollTopMap(_objectSpread(_objectSpread({}, calcScrollTopMap), {}, defineProperty._defineProperty({}, deep, scrollTop)));
  };
  var throttleUpdate = throttle.throttle(handleScroll, 100);
  var _renderOptions = function renderOptions(data, deep) {
    var _data$forEach;
    var arr = [];
    var renderContent;
    (_data$forEach = data.forEach) === null || _data$forEach === void 0 || _data$forEach.call(data, function (menu, idx) {
      var optionItem = _objectSpread({}, menu);
      var onViewIdx = Math.ceil(calcScrollTopMap[deep] / 30);
      var isOverflow = idx >= onViewIdx;
      var shouldCalcPanelTopContent = panelTopContent && deep > 0;
      var itemIdx = isOverflow ? idx - onViewIdx : idx;
      if (optionItem.children) {
        optionItem.children = _renderOptions(optionItem.children, deep + 1);
        renderContent = /* @__PURE__ */React__default["default"].createElement("div", {
          key: idx
        }, /* @__PURE__ */React__default["default"].createElement(dropdown_DropdownItem["default"], {
          className: classNames__default["default"](optionItem.className, "".concat(dropdownClass, "__item"), "".concat(dropdownClass, "__item--suffix")),
          style: optionItem.style,
          value: optionItem.value,
          theme: optionItem.theme,
          active: optionItem.active,
          prefixIcon: optionItem.prefixIcon,
          disabled: optionItem.disabled,
          minColumnWidth: minColumnWidth,
          maxColumnWidth: maxColumnWidth,
          isSubmenu: true
        }, /* @__PURE__ */React__default["default"].createElement("div", {
          className: "".concat(dropdownClass, "__item-content")
        }, /* @__PURE__ */React__default["default"].createElement("span", {
          className: "".concat(dropdownClass, "__item-text")
        }, optionItem.content), /* @__PURE__ */React__default["default"].createElement(ChevronRightIcon, {
          className: "".concat(dropdownClass, "__item-direction"),
          size: "16"
        })), /* @__PURE__ */React__default["default"].createElement("div", {
          className: classNames__default["default"]("".concat(dropdownClass, "__submenu-wrapper"), defineProperty._defineProperty({}, "".concat(dropdownClass, "__submenu-wrapper--").concat(props.direction), props.direction)),
          style: {
            position: "absolute",
            top: "".concat(itemIdx * 30 + (shouldCalcPanelTopContent ? 0 : panelTopContentHeight), "px")
          }
        }, /* @__PURE__ */React__default["default"].createElement("div", {
          className: classNames__default["default"]("".concat(dropdownClass, "__submenu"), defineProperty._defineProperty({}, "".concat(dropdownClass, "__submenu--disabled"), optionItem.disabled)),
          style: {
            position: "static",
            maxHeight: "".concat(props.maxHeight, "px")
          },
          onScroll: function onScroll(e) {
            return handleScroll(e, deep + 1);
          }
        }, /* @__PURE__ */React__default["default"].createElement("ul", null, optionItem.children)))), optionItem.divider ? /* @__PURE__ */React__default["default"].createElement(divider_index.Divider, null) : null);
      } else {
        renderContent = /* @__PURE__ */React__default["default"].createElement("div", {
          key: idx
        }, /* @__PURE__ */React__default["default"].createElement(dropdown_DropdownItem["default"], {
          className: classNames__default["default"](optionItem.className, "".concat(dropdownClass, "__item")),
          style: optionItem.style,
          value: optionItem.value,
          theme: optionItem.theme,
          active: optionItem.active,
          prefixIcon: optionItem.prefixIcon,
          disabled: optionItem.disabled,
          minColumnWidth: minColumnWidth,
          maxColumnWidth: maxColumnWidth,
          onClick: optionItem.disabled || optionItem.children ? function () {
            return null;
          } : function (value, context) {
            return handleItemClick({
              data: optionItem,
              context: context
            });
          }
        }, /* @__PURE__ */React__default["default"].createElement("span", {
          className: "".concat(dropdownClass, "__item-text")
        }, optionItem.content)), optionItem.divider ? /* @__PURE__ */React__default["default"].createElement(divider_index.Divider, null) : null);
      }
      arr.push(renderContent);
    });
    return arr;
  };
  return /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"](dropdownMenuClass, "".concat(dropdownMenuClass, "--").concat(direction), defineProperty._defineProperty({}, "".concat(dropdownMenuClass, "--overflow"), isOverMaxHeight)),
    style: {
      maxHeight: "".concat(maxHeight, "px")
    },
    ref: menuRef,
    onScroll: throttleUpdate
  }, panelTopContent ? /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(dropdownClass, "__top-content")
  }, panelTopContent) : null, _renderOptions(options, 0), panelBottomContent ? /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(dropdownClass, "__bottom-content")
  }, panelBottomContent) : null);
};
DropdownMenu.displayName = "DropdownMenu";

exports["default"] = DropdownMenu;
//# sourceMappingURL=DropdownMenu.js.map
