{"version":3,"file":"FormContext.js","sources":["../../../components/form/FormContext.tsx"],"sourcesContent":["import React from 'react';\nimport { TdFormProps, TdFormListProps, NamePath } from './type';\nimport { FormItemInstance } from './FormItem';\nimport { InternalFormInstance } from './hooks/interface';\n\nconst FormContext = React.createContext<{\n  form?: InternalFormInstance;\n  labelWidth?: TdFormProps['labelWidth'];\n  statusIcon?: TdFormProps['statusIcon'];\n  labelAlign: TdFormProps['labelAlign'];\n  layout: TdFormProps['layout'];\n  colon: TdFormProps['colon'];\n  initialData: TdFormProps['initialData'];\n  requiredMark: TdFormProps['requiredMark'];\n  requiredMarkPosition: TdFormProps['requiredMarkPosition'];\n  scrollToFirstError: TdFormProps['scrollToFirstError'];\n  showErrorMessage: TdFormProps['showErrorMessage'];\n  resetType: TdFormProps['resetType'];\n  disabled: TdFormProps['disabled'];\n  rules: TdFormProps['rules'];\n  errorMessage: TdFormProps['errorMessage'];\n  formMapRef: React.RefObject<Map<any, React.RefObject<FormItemInstance>>>;\n  floatingFormDataRef: React.RefObject<Record<any, any>>;\n  onFormItemValueChange: (changedValue: Record<string, unknown>) => void;\n}>({\n  form: undefined,\n  labelWidth: '100px',\n  labelAlign: 'right',\n  layout: 'vertical',\n  colon: false,\n  initialData: {},\n  requiredMark: undefined,\n  requiredMarkPosition: undefined,\n  scrollToFirstError: undefined,\n  showErrorMessage: undefined,\n  resetType: 'empty',\n  disabled: undefined,\n  rules: undefined,\n  errorMessage: undefined,\n  statusIcon: undefined,\n  onFormItemValueChange: undefined,\n  formMapRef: undefined,\n  floatingFormDataRef: undefined,\n});\n\nexport const useFormContext = () => React.useContext(FormContext);\n\nexport default FormContext;\n\nexport const FormListContext = React.createContext<{\n  name: NamePath;\n  rules: TdFormListProps['rules'];\n  formListMapRef: React.RefObject<Map<any, React.RefObject<FormItemInstance>>>;\n  initialData: TdFormListProps['initialData'];\n  form?: InternalFormInstance;\n}>({\n  name: undefined,\n  rules: undefined,\n  formListMapRef: undefined,\n  initialData: [],\n  form: undefined,\n});\n\nexport const useFormListContext = () => React.useContext(FormListContext);\n"],"names":["FormContext","React","createContext","form","labelWidth","labelAlign","layout","colon","initialData","requiredMark","requiredMarkPosition","scrollToFirstError","showErrorMessage","resetType","disabled","rules","errorMessage","statusIcon","onFormItemValueChange","formMapRef","floatingFormDataRef","useFormContext","useContext","FormListContext","name","formListMapRef","useFormListContext"],"mappings":";;;;;;;;;;;;;;;;AAKA,IAAMA,WAAA,gBAAcC,0BAAMC,aAmBvB,CAAA;EACDC,IAAM,EAAA,KAAA,CAAA;AACNC,EAAAA,UAAY,EAAA,OAAA;AACZC,EAAAA,UAAY,EAAA,OAAA;AACZC,EAAAA,MAAQ,EAAA,UAAA;AACRC,EAAAA,KAAO,EAAA,KAAA;EACPC,aAAa,EAAC;EACdC,YAAc,EAAA,KAAA,CAAA;EACdC,oBAAsB,EAAA,KAAA,CAAA;EACtBC,kBAAoB,EAAA,KAAA,CAAA;EACpBC,gBAAkB,EAAA,KAAA,CAAA;AAClBC,EAAAA,SAAW,EAAA,OAAA;EACXC,QAAU,EAAA,KAAA,CAAA;EACVC,KAAO,EAAA,KAAA,CAAA;EACPC,YAAc,EAAA,KAAA,CAAA;EACdC,UAAY,EAAA,KAAA,CAAA;EACZC,qBAAuB,EAAA,KAAA,CAAA;EACvBC,UAAY,EAAA,KAAA,CAAA;AACZC,EAAAA,mBAAqB,EAAA,KAAA,CAAA;AACvB,CAAC,EAAA;AAEYC,IAAAA,cAAiB,GAAA,SAAjBA,cAAiBA,GAAA;AAAA,EAAA,OAAMpB,yBAAM,CAAAqB,UAAA,CAAWtB,WAAW,CAAA,CAAA;AAAA,EAAA;IAInDuB,eAAA,gBAAkBtB,0BAAMC,aAMlC,CAAA;EACDsB,IAAM,EAAA,KAAA,CAAA;EACNT,KAAO,EAAA,KAAA,CAAA;EACPU,cAAgB,EAAA,KAAA,CAAA;AAChBjB,EAAAA,aAAa,EAAC;AACdL,EAAAA,IAAM,EAAA,KAAA,CAAA;AACR,CAAC,EAAA;AAEYuB,IAAAA,kBAAqB,GAAA,SAArBA,kBAAqBA,GAAA;AAAA,EAAA,OAAMzB,yBAAM,CAAAqB,UAAA,CAAWC,eAAe,CAAA,CAAA;AAAA;;;;;;;"}