{"version":3,"file":"useWatch.js","sources":["../../../../components/form/hooks/useWatch.ts"],"sourcesContent":["import { useState, useEffect, useMemo, useRef } from 'react';\nimport { get, isUndefined } from 'lodash-es';\nimport type { NamePath } from '../type';\nimport type { InternalFormInstance } from './interface';\nimport { HOOK_MARK } from './useForm';\nimport noop from '../../_util/noop';\n\nexport default function useWatch(name: NamePath, form: InternalFormInstance) {\n  const [value, setValue] = useState<any>();\n  const valueStr = useMemo(() => JSON.stringify(value), [value]);\n  const valueStrRef = useRef(valueStr);\n\n  // eslint-disable-next-line\n  const isValidForm = form && form._init;\n\n  useEffect(() => {\n    if (!isValidForm) return;\n\n    const { registerWatch = noop } = form.getInternalHooks?.(HOOK_MARK);\n\n    const cancelRegister = registerWatch(() => {\n      const allFieldsValue = form.getFieldsValue?.(true);\n      const newValue = get(allFieldsValue, name);\n      const nextValueStr = JSON.stringify(newValue);\n\n      // Compare stringify in case it's nest object\n      if (valueStrRef.current !== nextValueStr) {\n        valueStrRef.current = nextValueStr;\n        setValue(nextValueStr);\n      }\n    });\n\n    const allFieldsValue = form.getFieldsValue?.(true);\n    const initialValue = get(allFieldsValue, name);\n    setValue(JSON.stringify(initialValue));\n\n    return cancelRegister;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return isUndefined(value) ? value : JSON.parse(value);\n}\n"],"names":["useWatch","name","form","_useState","useState","_useState2","_slicedToArray","value","setValue","valueStr","useMemo","JSON","stringify","valueStrRef","useRef","isValidForm","_init","useEffect","_form$getInternalHook3","_form$getFieldsValue2","_form$getInternalHook","getInternalHooks","call","HOOK_MARK","_form$getInternalHook2","registerWatch","noop","cancelRegister","_form$getFieldsValue","allFieldsValue","getFieldsValue","newValue","get","nextValueStr","current","initialValue","isUndefined","parse"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOwB,SAAAA,QAAAA,CAASC,MAAgBC,IAA4B,EAAA;AAC3E,EAAA,IAAAC,SAAA,GAA0BC,cAAc,EAAA;IAAAC,UAAA,GAAAC,4BAAA,CAAAH,SAAA,EAAA,CAAA,CAAA;AAAjCI,IAAAA,KAAA,GAAAF,UAAA,CAAA,CAAA,CAAA;AAAOG,IAAAA,QAAQ,GAAAH,UAAA,CAAA,CAAA,CAAA,CAAA;EAChB,IAAAI,QAAA,GAAWC,cAAQ,YAAA;AAAA,IAAA,OAAMC,IAAA,CAAKC,UAAUL,KAAK,CAAA,CAAA;GAAG,EAAA,CAACA,KAAK,CAAC,CAAA,CAAA;AACvD,EAAA,IAAAM,WAAA,GAAcC,aAAOL,QAAQ,CAAA,CAAA;AAG7B,EAAA,IAAAM,WAAA,GAAcb,QAAQA,IAAK,CAAAc,KAAA,CAAA;AAEjCC,EAAAA,eAAA,CAAU,YAAM;IAAA,IAAAC,sBAAA,EAAAC,qBAAA,CAAA;IACd,IAAI,CAACJ,WAAA,EAAa,OAAA;AAElB,IAAA,IAAAK,qBAAA,GAAAF,CAAAA,sBAAA,GAAiChB,IAAA,CAAKmB,2EAALH,sBAAA,CAAAI,IAAA,CAAApB,IAAA,EAAwBqB,4BAAS,CAAA;MAAAC,sBAAA,GAAAJ,qBAAA,CAA1DK,aAAgB;AAAhBA,MAAAA,aAAgB,GAAAD,sBAAA,KAAAE,KAAAA,CAAAA,GAAAA,qBAAA,GAAAF,sBAAA,CAAA;AAElB,IAAA,IAAAG,cAAA,GAAiBF,cAAc,YAAM;AAAA,MAAA,IAAAG,oBAAA,CAAA;AACnCC,MAAAA,IAAAA,eAAAA,GAAAA,CAAAA,oBAAAA,GAAiB3B,IAAK,CAAA4B,cAAA,MAAA,IAAA,IAAAF,oBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAALA,oBAAA,CAAAN,IAAA,CAAApB,IAAK,EAAiB,IAAI,CAAA,CAAA;AAC3C,MAAA,IAAA6B,QAAA,GAAWC,OAAIH,CAAAA,eAAAA,EAAgB5B,IAAI,CAAA,CAAA;AACnC,MAAA,IAAAgC,YAAA,GAAetB,IAAK,CAAAC,SAAA,CAAUmB,QAAQ,CAAA,CAAA;AAGxC,MAAA,IAAAlB,WAAA,CAAYqB,YAAYD,YAAc,EAAA;QACxCpB,WAAA,CAAYqB,OAAU,GAAAD,YAAA,CAAA;QACtBzB,QAAA,CAASyB,YAAY,CAAA,CAAA;AACvB,OAAA;AACF,KAAC,CAAA,CAAA;AAEK,IAAA,IAAAJ,cAAA,GAAAV,CAAAA,qBAAA,GAAiBjB,IAAK,CAAA4B,cAAA,MAAA,IAAA,IAAAX,qBAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAALA,qBAAA,CAAAG,IAAA,CAAApB,IAAK,EAAiB,IAAI,CAAA,CAAA;AAC3C,IAAA,IAAAiC,YAAA,GAAeH,OAAI,CAAAH,cAAA,EAAgB5B,IAAI,CAAA,CAAA;AACpCO,IAAAA,QAAA,CAAAG,IAAA,CAAKC,SAAU,CAAAuB,YAAY,CAAC,CAAA,CAAA;AAE9B,IAAA,OAAAR,cAAA,CAAA;GAET,EAAG,EAAE,CAAA,CAAA;AAEL,EAAA,OAAOS,wBAAY7B,KAAK,CAAA,GAAIA,KAAQ,GAAAI,IAAA,CAAK0B,MAAM9B,KAAK,CAAA,CAAA;AACtD;;;;"}