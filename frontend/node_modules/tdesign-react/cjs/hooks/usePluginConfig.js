/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-0006fcfa.js');
require('../_chunks/dep-667ac7af.js');

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { defineProperty._defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function usePluginConfig(options, validate) {
  var pluginDefaultConfig = _objectSpread({}, options);
  var getConfig = function getConfig(options2) {
    var currentOptions = _objectSpread({}, options2);
    for (var i in currentOptions) {
      if (typeof currentOptions[i] === "undefined") {
        delete currentOptions[i];
      }
    }
    return _objectSpread(_objectSpread({}, pluginDefaultConfig), validate(currentOptions));
  };
  return {
    getConfig: getConfig,
    setGlobalConfig: function setGlobalConfig(options2) {
      pluginDefaultConfig = _objectSpread({}, getConfig(options2));
    }
  };
}

exports["default"] = usePluginConfig;
//# sourceMappingURL=usePluginConfig.js.map
