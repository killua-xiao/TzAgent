{"version":3,"file":"usePersistFn.js","sources":["../../../components/hooks/usePersistFn.ts"],"sourcesContent":["import { useRef } from 'react';\n\nexport type Noop = (...args: any[]) => any;\n\n/**\n *  在某些场景中，你可能会需要用 useCallback 记住一个回调，\n *  但由于内部函数必须经常重新创建，记忆效果不是很好，导致子组件重复 render。\n *  对于超级复杂的子组件，重新渲染会对性能造成影响。\n *  通过 usePersistFn，可以保证函数地址永远不会变化。\n * @param fn\n */\nexport function usePersistFn<T extends Noop>(fn: T) {\n  const fnRef = useRef<T>(fn);\n  fnRef.current = fn;\n\n  const persistFn = useRef<T>(null);\n  if (!persistFn.current) {\n    persistFn.current = function (...args) {\n      return fnRef.current.apply(this, args);\n    } as T;\n  }\n\n  return persistFn.current;\n}\n"],"names":["usePersistFn","fn","fnRef","useRef","current","persistFn","_len","arguments","length","args","Array","_key","apply"],"mappings":";;;;;;;;;;;;AAWO,SAASA,aAA6BC,EAAO,EAAA;AAC5C,EAAA,IAAAC,KAAA,GAAQC,aAAUF,EAAE,CAAA,CAAA;EAC1BC,KAAA,CAAME,OAAU,GAAAH,EAAA,CAAA;AAEV,EAAA,IAAAI,SAAA,GAAYF,aAAU,IAAI,CAAA,CAAA;AAC5B,EAAA,IAAA,CAACE,UAAUD,OAAS,EAAA;IACZC,SAAA,CAAAD,OAAA,GAAU,YAAmB;AAAA,MAAA,KAAA,IAAAE,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAANC,IAAM,GAAAC,IAAAA,KAAA,CAAAJ,IAAA,GAAAK,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA,EAAA,EAAA;AAANF,QAAAA,IAAM,CAAAE,IAAA,CAAAJ,GAAAA,SAAA,CAAAI,IAAA,CAAA,CAAA;AAAA,OAAA;MACrC,OAAOT,KAAM,CAAAE,OAAA,CAAQQ,KAAM,CAAA,IAAA,EAAMH,IAAI,CAAA,CAAA;KACvC,CAAA;AACF,GAAA;EAEA,OAAOJ,SAAU,CAAAD,OAAA,CAAA;AACnB;;;;"}