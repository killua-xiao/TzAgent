/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-0006fcfa.js');
var objectWithoutProperties = require('../_chunks/dep-8fa3a4c2.js');
var slicedToArray = require('../_chunks/dep-8e4d656d.js');
var React = require('react');
var reactTransitionGroup = require('react-transition-group');
var tdesignIconsReact = require('tdesign-icons-react');
var classNames = require('classnames');
var _util_parseTNode = require('../_util/parseTNode.js');
var button_index = require('../button/index.js');
var common_Portal = require('../common/Portal.js');
var hooks_useAttach = require('../hooks/useAttach.js');
var hooks_useConfig = require('../hooks/useConfig.js');
var hooks_useDeepEffect = require('../hooks/useDeepEffect.js');
var hooks_useDefaultProps = require('../hooks/useDefaultProps.js');
var hooks_useGlobalIcon = require('../hooks/useGlobalIcon.js');
var hooks_useSetState = require('../hooks/useSetState.js');
var locale_LocalReceiver = require('../locale/LocalReceiver.js');
var drawer_defaultProps = require('./defaultProps.js');
var drawer_hooks_useDrag = require('./hooks/useDrag.js');
var drawer_hooks_useLockStyle = require('./hooks/useLockStyle.js');
var isUndefined = require('../_chunks/dep-221787fe.js');
var isString = require('../_chunks/dep-4ed9eda4.js');
var isObject = require('../_chunks/dep-fc596d16.js');
var isFunction = require('../_chunks/dep-ec8d2dca.js');
require('../_chunks/dep-667ac7af.js');
require('../_chunks/dep-00b49251.js');
require('../_chunks/dep-59671c87.js');
require('../button/Button.js');
require('../hooks/useDomRefCallback.js');
require('../hooks/useRipple.js');
require('../_chunks/dep-dc4ce063.js');
require('../hooks/useAnimation.js');
require('../config-provider/ConfigContext.js');
require('../_chunks/dep-1df1dad8.js');
require('../_chunks/dep-5b5ab11b.js');
require('dayjs');
require('../_chunks/dep-f32c03f1.js');
require('../_chunks/dep-31c4bc3d.js');
require('../_chunks/dep-eea2872a.js');
require('../_chunks/dep-25585736.js');
require('../_chunks/dep-62e73936.js');
require('../_chunks/dep-64577888.js');
require('../_chunks/dep-71455db7.js');
require('../_chunks/dep-9e5a468d.js');
require('../_chunks/dep-f26edb7b.js');
require('../_chunks/dep-f33c1939.js');
require('../_chunks/dep-21ece627.js');
require('../_chunks/dep-25e4aa84.js');
require('../_chunks/dep-e1fbe1c3.js');
require('../_chunks/dep-df2b541f.js');
require('../_chunks/dep-edd366db.js');
require('../_chunks/dep-a56c4939.js');
require('../_chunks/dep-6c297e20.js');
require('../_chunks/dep-b7ad4d54.js');
require('../_chunks/dep-a2cb9299.js');
require('../_chunks/dep-f981815b.js');
require('../_chunks/dep-381fa848.js');
require('../loading/index.js');
require('../loading/Loading.js');
require('../loading/gradient.js');
require('../_chunks/dep-002fcc1e.js');
require('../_chunks/dep-e4e1901e.js');
require('../_chunks/dep-2ffa3ff1.js');
require('../loading/defaultProps.js');
require('react-dom');
require('../hooks/useLayoutEffect.js');
require('../loading/plugin.js');
require('../_util/react-render.js');
require('../_chunks/dep-65ef8e09.js');
require('../common/PluginContainer.js');
require('../config-provider/ConfigProvider.js');
require('../_chunks/dep-ab2f63ec.js');
require('../_chunks/dep-a48c7e8b.js');
require('../_chunks/dep-3d4656ee.js');
require('../_chunks/dep-0ffc9d96.js');
require('../_chunks/dep-efe6d243.js');
require('../_chunks/dep-4b18243f.js');
require('../_chunks/dep-bff2c990.js');
require('../button/defaultProps.js');
require('../_chunks/dep-eb6d55c1.js');
require('../_chunks/dep-014b9b78.js');
require('../_chunks/dep-abdd786a.js');
require('../_chunks/dep-b73b8db7.js');
require('../_util/scroll.js');
require('raf');
require('../_util/easing.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

var _excluded = ["body", "children", "header", "footer"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { defineProperty._defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var CloseTriggerType = {
  CLICK_OVERLAY: "overlay",
  CLICK_CLOSE_BTN: "close-btn",
  CLICK_CANCEL_BTN: "cancel",
  KEYDOWN_ESC: "esc"
};
var Drawer = /*#__PURE__*/React.forwardRef(function (originalProps, ref) {
  var _useLocaleReceiver = locale_LocalReceiver.useLocaleReceiver("drawer"),
    _useLocaleReceiver2 = slicedToArray._slicedToArray(_useLocaleReceiver, 2),
    local = _useLocaleReceiver2[0],
    t = _useLocaleReceiver2[1];
  var _useGlobalIcon = hooks_useGlobalIcon["default"]({
      CloseIcon: tdesignIconsReact.CloseIcon
    }),
    CloseIcon = _useGlobalIcon.CloseIcon;
  var confirmText = t(local.confirm);
  var cancelText = t(local.cancel);
  var props = hooks_useDefaultProps["default"](originalProps, drawer_defaultProps.drawerDefaultProps);
  var body = props.body,
    children = props.children,
    header = props.header,
    footer = props.footer,
    restProps = objectWithoutProperties._objectWithoutProperties(props, _excluded);
  var _useSetState = hooks_useSetState["default"](_objectSpread({
      isPlugin: false
    }, restProps)),
    _useSetState2 = slicedToArray._slicedToArray(_useSetState, 2),
    state = _useSetState2[0],
    setState = _useSetState2[1];
  var className = state.className,
    style = state.style,
    visible = state.visible,
    attach = state.attach,
    showOverlay = state.showOverlay,
    propsSize = state.size,
    placement = state.placement,
    onBeforeOpen = state.onBeforeOpen,
    onBeforeClose = state.onBeforeClose,
    onCancel = state.onCancel,
    onConfirm = state.onConfirm,
    onClose = state.onClose,
    onCloseBtnClick = state.onCloseBtnClick,
    onOverlayClick = state.onOverlayClick,
    onEscKeydown = state.onEscKeydown,
    onSizeDragEnd = state.onSizeDragEnd,
    showInAttachedElement = state.showInAttachedElement,
    closeOnOverlayClick = state.closeOnOverlayClick,
    closeOnEscKeydown = state.closeOnEscKeydown,
    closeBtn = state.closeBtn,
    _state$cancelBtn = state.cancelBtn,
    cancelBtn = _state$cancelBtn === void 0 ? cancelText : _state$cancelBtn,
    _state$confirmBtn = state.confirmBtn,
    confirmBtn = _state$confirmBtn === void 0 ? confirmText : _state$confirmBtn,
    zIndex = state.zIndex,
    destroyOnClose = state.destroyOnClose,
    sizeDraggable = state.sizeDraggable,
    forceRender = state.forceRender,
    isPlugin = state.isPlugin,
    lazy = state.lazy;
  var size = propsSize !== null && propsSize !== void 0 ? propsSize : local.size;
  var _useConfig = hooks_useConfig["default"](),
    classPrefix = _useConfig.classPrefix;
  var drawerAttach = hooks_useAttach["default"]("drawer", attach);
  var maskRef = React.useRef(null);
  var containerRef = React.useRef(null);
  var drawerWrapperRef = React.useRef(null);
  var prefixCls = "".concat(classPrefix, "-drawer");
  var closeIcon = /*#__PURE__*/React.isValidElement(closeBtn) ? closeBtn : /* @__PURE__ */React__default["default"].createElement(CloseIcon, null);
  var _useDrag = drawer_hooks_useDrag["default"](placement, sizeDraggable, onSizeDragEnd),
    dragSizeValue = _useDrag.dragSizeValue,
    enableDrag = _useDrag.enableDrag,
    draggableLineStyles = _useDrag.draggableLineStyles;
  var _useState = React.useState(visible),
    _useState2 = slicedToArray._slicedToArray(_useState, 2),
    animationStart = _useState2[0],
    setAnimationStart = _useState2[1];
  var sizeValue = React.useMemo(function () {
    var sizeMap = {
      small: "300px",
      medium: "500px",
      large: "760px"
    };
    return dragSizeValue || sizeMap[size] || size;
  }, [dragSizeValue, size]);
  drawer_hooks_useLockStyle["default"](_objectSpread(_objectSpread({}, state), {}, {
    sizeValue: sizeValue,
    drawerWrapper: drawerWrapperRef.current
  }));
  React.useImperativeHandle(ref, function () {
    return {
      show: function show() {
        setState({
          visible: true
        });
      },
      hide: function hide() {
        setState({
          visible: false
        });
      },
      destroy: function destroy() {
        setState({
          visible: false,
          destroyOnClose: true
        });
      },
      update: function update(options) {
        setState(function (prevState) {
          return _objectSpread(_objectSpread({}, prevState), options);
        });
      }
    };
  });
  React.useEffect(function () {
    if (visible) {
      var _containerRef$current, _containerRef$current2;
      (_containerRef$current = containerRef.current) === null || _containerRef$current === void 0 || (_containerRef$current2 = _containerRef$current.focus) === null || _containerRef$current2 === void 0 || _containerRef$current2.call(_containerRef$current);
    }
  }, [visible]);
  hooks_useDeepEffect["default"](function () {
    if (isPlugin) return;
    setState(function (prevState) {
      return _objectSpread(_objectSpread({}, prevState), props);
    });
  }, [props, setState]);
  function onMaskClick(e) {
    onOverlayClick === null || onOverlayClick === void 0 || onOverlayClick({
      e: e
    });
    (closeOnOverlayClick !== null && closeOnOverlayClick !== void 0 ? closeOnOverlayClick : local.closeOnOverlayClick) && (onClose === null || onClose === void 0 ? void 0 : onClose({
      e: e,
      trigger: CloseTriggerType.CLICK_OVERLAY
    }));
  }
  function onClickCloseBtn(e) {
    onCloseBtnClick === null || onCloseBtnClick === void 0 || onCloseBtnClick({
      e: e
    });
    onClose === null || onClose === void 0 || onClose({
      e: e,
      trigger: CloseTriggerType.CLICK_CLOSE_BTN
    });
  }
  function onKeyDownEsc(e) {
    if (e.key !== "Escape") return;
    onEscKeydown === null || onEscKeydown === void 0 || onEscKeydown({
      e: e
    });
    (closeOnEscKeydown !== null && closeOnEscKeydown !== void 0 ? closeOnEscKeydown : local.closeOnEscKeydown) && (onClose === null || onClose === void 0 ? void 0 : onClose({
      e: e,
      trigger: CloseTriggerType.KEYDOWN_ESC
    }));
  }
  function onCancelClick(e) {
    onCancel === null || onCancel === void 0 || onCancel({
      e: e
    });
    onClose === null || onClose === void 0 || onClose({
      e: e,
      trigger: CloseTriggerType.CLICK_CANCEL_BTN
    });
  }
  function onConfirmClick(e) {
    onConfirm === null || onConfirm === void 0 || onConfirm({
      e: e
    });
  }
  var contentWrapperStyle = React.useMemo(function () {
    return {
      transform: visible && animationStart ? "translateX(0)" : void 0,
      width: ["left", "right"].includes(placement) ? sizeValue : "",
      height: ["top", "bottom"].includes(placement) ? sizeValue : ""
    };
  }, [visible, placement, sizeValue, animationStart]);
  var renderDrawerButton = function renderDrawerButton(btn, defaultProps) {
    var result = null;
    if (isString.isString(btn)) {
      result = /* @__PURE__ */React__default["default"].createElement(button_index.Button, _objectSpread({}, defaultProps), btn);
    } else if (/*#__PURE__*/React.isValidElement(btn)) {
      result = btn;
    } else if (isObject.isObject(btn)) {
      result = /* @__PURE__ */React__default["default"].createElement(button_index.Button, _objectSpread(_objectSpread({}, defaultProps), btn));
    } else if (isFunction.isFunction(btn)) {
      result = btn();
    }
    return result;
  };
  var renderFooter = function renderFooter() {
    var defaultFooter = function defaultFooter() {
      var renderCancelBtn = renderDrawerButton(cancelBtn, {
        theme: "default",
        onClick: function onClick(e) {
          return onCancelClick === null || onCancelClick === void 0 ? void 0 : onCancelClick(e);
        },
        className: "".concat(prefixCls, "__cancel")
      });
      var renderConfirmBtn = renderDrawerButton(confirmBtn, {
        theme: "primary",
        onClick: function onClick(e) {
          return onConfirmClick === null || onConfirmClick === void 0 ? void 0 : onConfirmClick(e);
        },
        className: "".concat(prefixCls, "__confirm")
      });
      var footerStyle = {
        display: "flex",
        justifyContent: placement === "right" ? "flex-start" : "flex-end"
      };
      return /* @__PURE__ */React__default["default"].createElement("div", {
        style: footerStyle
      }, placement === "right" ? /* @__PURE__ */React__default["default"].createElement(React__default["default"].Fragment, null, renderConfirmBtn, " ", renderCancelBtn) : /* @__PURE__ */React__default["default"].createElement(React__default["default"].Fragment, null, renderCancelBtn, " ", renderConfirmBtn));
    };
    return /* @__PURE__ */React__default["default"].createElement("div", {
      className: "".concat(prefixCls, "__footer")
    }, _util_parseTNode["default"](footer, null, defaultFooter()));
  };
  var renderOverlay = showOverlay && /* @__PURE__ */React__default["default"].createElement(reactTransitionGroup.CSSTransition, {
    "in": visible,
    timeout: 200,
    classNames: "".concat(prefixCls, "-fade"),
    nodeRef: maskRef
  }, /* @__PURE__ */React__default["default"].createElement("div", {
    ref: maskRef,
    className: "".concat(prefixCls, "__mask"),
    onClick: onMaskClick
  }));
  var renderCloseBtn = closeBtn && /* @__PURE__ */React__default["default"].createElement("div", {
    onClick: onClickCloseBtn,
    className: "".concat(prefixCls, "__close-btn")
  }, closeIcon);
  var renderHeader = header && /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(prefixCls, "__header")
  }, header);
  var renderBody = /* @__PURE__ */React__default["default"].createElement("div", {
    className: "".concat(prefixCls, "__body")
  }, body || children);
  return /* @__PURE__ */React__default["default"].createElement(reactTransitionGroup.CSSTransition, {
    "in": visible,
    nodeRef: drawerWrapperRef,
    mountOnEnter: isUndefined.isUndefined(forceRender) ? lazy : !forceRender,
    unmountOnExit: destroyOnClose,
    timeout: {
      appear: 10,
      enter: 10,
      exit: 300
    },
    onEnter: function onEnter() {
      return onBeforeOpen === null || onBeforeOpen === void 0 ? void 0 : onBeforeOpen();
    },
    onEntered: function onEntered() {
      return setAnimationStart(true);
    },
    onExit: function onExit() {
      return onBeforeClose === null || onBeforeClose === void 0 ? void 0 : onBeforeClose();
    },
    onExited: function onExited() {
      return setAnimationStart(false);
    }
  }, /* @__PURE__ */React__default["default"].createElement(common_Portal["default"], {
    attach: drawerAttach,
    ref: drawerWrapperRef
  }, /* @__PURE__ */React__default["default"].createElement("div", {
    ref: containerRef,
    className: classNames__default["default"](prefixCls, className, "".concat(prefixCls, "--").concat(placement), defineProperty._defineProperty(defineProperty._defineProperty(defineProperty._defineProperty({}, "".concat(prefixCls, "--open"), visible), "".concat(prefixCls, "--attach"), showInAttachedElement), "".concat(prefixCls, "--without-mask"), !showOverlay)),
    style: _objectSpread({
      zIndex: zIndex
    }, style),
    tabIndex: -1,
    onKeyDown: onKeyDownEsc
  }, renderOverlay, /* @__PURE__ */React__default["default"].createElement("div", {
    className: classNames__default["default"]("".concat(prefixCls, "__content-wrapper"), "".concat(prefixCls, "__content-wrapper--").concat(placement)),
    style: contentWrapperStyle
  }, renderCloseBtn, renderHeader, renderBody, !!footer && renderFooter(), sizeDraggable && /* @__PURE__ */React__default["default"].createElement("div", {
    style: draggableLineStyles,
    onMouseDown: enableDrag
  })))));
});
Drawer.displayName = "Drawer";

exports.CloseTriggerType = CloseTriggerType;
exports["default"] = Drawer;
//# sourceMappingURL=Drawer.js.map
