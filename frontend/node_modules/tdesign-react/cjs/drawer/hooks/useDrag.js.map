{"version":3,"file":"useDrag.js","sources":["../../../../common/js/drawer/utils.ts","../../../../components/drawer/hooks/useDrag.ts"],"sourcesContent":["type Placement = 'left' | 'right' | 'top' | 'bottom';\n\ninterface SizeDragLimit {\n  max: number;\n  min: number;\n}\n\nexport function getSizeDraggable(\n  sizeDraggable: boolean | SizeDragLimit,\n  limit: { max: number; min: number }\n) {\n  if (typeof sizeDraggable === 'boolean') {\n    return {\n      allowSizeDraggable: sizeDraggable,\n      max: limit.max,\n      min: limit.min,\n    };\n  }\n\n  return {\n    allowSizeDraggable: true,\n    max: sizeDraggable.max,\n    min: sizeDraggable.min,\n  };\n}\n\ntype IOptions = {\n  x: number;\n  y: number;\n  maxWidth: number;\n  maxHeight: number;\n  min: number;\n  max: number;\n};\n\n// > min && < max\nfunction calcSizeRange(size: number, min: number, max: number) {\n  return Math.min(Math.max(size, min), max);\n}\n\nexport function calcMoveSize(placement: Placement, opts: IOptions) {\n  const { x, y, max, min, maxWidth, maxHeight } = opts;\n  let moveSize: number | undefined;\n  switch (placement) {\n    case 'right':\n      // |<---  x  --->|      |\n      // |     maxWidth       |\n      //               | size |  > min && < max\n      moveSize = calcSizeRange(maxWidth - x, min, max);\n      break;\n    case 'left':\n      // |<--  x -->|  |\n      // x > min && < max\n      moveSize = calcSizeRange(x, min, max);\n      break;\n    case 'top':\n      // - - - - - - - -\n      // |     y        |\n      // |              |\n      // - - - - - - - -\n      //  > min && < max\n      // moveSize = Math.min(Math.max(y, min), max);\n      moveSize = calcSizeRange(y, min, max);\n      break;\n    case 'bottom':\n      // - - - - - - - -\n      // |     y        |\n      // |              |  maxHeight\n      // - - - - - - - -\n      // |    size      |\n      //  > min && < max\n      moveSize = calcSizeRange(maxHeight - y, min, max);\n      break;\n    default:\n      // 参数缺失直接返回\n      return moveSize;\n  }\n  return moveSize;\n}\n","import { useCallback, useMemo, useRef, useState } from 'react';\nimport { getSizeDraggable, calcMoveSize } from '@tdesign/common-js/drawer/utils';\nimport { TdDrawerProps } from '../type';\nimport { Styles } from '../../common';\n\nconst useDrag = (\n  placement: TdDrawerProps['placement'],\n  sizeDraggable: TdDrawerProps['sizeDraggable'],\n  onSizeDragEnd: TdDrawerProps['onSizeDragEnd'],\n) => {\n  const [dragSizeValue, changeDragSizeValue] = useState<string>(null);\n  // 使用 ref 来存储当前拖拽的宽度值\n  const dragSizeRef = useRef<number>(0);\n\n  const handleMousemove = useCallback(\n    (e: MouseEvent) => {\n      // 如果 sizeDraggable 是 boolean 值的 false，则不进行后续的计算\n      if (sizeDraggable === false) return;\n\n      // 鼠标移动时计算draggedSizeValue的值\n      const { x, y } = e;\n\n      const maxHeight = document.documentElement.clientHeight;\n      const maxWidth = document.documentElement.clientWidth;\n      const offsetHeight = 8;\n      const offsetWidth = 8;\n      // x 轴方向使用最大宽度，y轴方向使用最大高度\n      const max = placement === 'left' || placement === 'right' ? maxWidth : maxHeight;\n      // x 轴方向使用默认最小宽度，y轴方向使用默认最小高度\n      const min = placement === 'left' || placement === 'right' ? offsetWidth : offsetHeight;\n\n      const { max: limitMax, min: limitMin } = getSizeDraggable(sizeDraggable, { max, min });\n\n      const moveSize = calcMoveSize(placement, {\n        x,\n        y,\n        maxWidth,\n        maxHeight,\n        max: limitMax,\n        min: limitMin,\n      });\n\n      if (typeof moveSize === 'undefined') return;\n      changeDragSizeValue(`${moveSize}px`);\n      dragSizeRef.current = moveSize;\n    },\n    [placement, sizeDraggable],\n  );\n\n  const draggableLineStyles: Styles = useMemo(() => {\n    // 设置拖拽control的样式\n    const isHorizontal = ['right', 'left'].includes(placement);\n    const oppositeMap = {\n      left: 'right',\n      right: 'left',\n      top: 'bottom',\n      bottom: 'top',\n    };\n    return {\n      zIndex: 1,\n      position: 'absolute',\n      background: 'transparent',\n      [oppositeMap[placement]]: 0,\n      width: isHorizontal ? '16px' : '100%',\n      height: isHorizontal ? '100%' : '16px',\n      cursor: isHorizontal ? 'col-resize' : 'row-resize',\n    };\n  }, [placement]);\n\n  const handleMouseup = useCallback(\n    (e: MouseEvent) => {\n      document.removeEventListener('mouseup', handleMouseup, true);\n      document.removeEventListener('mousemove', handleMousemove, true);\n      onSizeDragEnd?.({\n        e,\n        // 此处不要使用 dragSizeValue，useState 的更新是异步的，在鼠标拖拽的同步操作中取不到最新的值\n        size: dragSizeRef.current,\n      });\n    },\n    [handleMousemove, onSizeDragEnd],\n  );\n\n  const enableDrag = useCallback(() => {\n    // mousedown 绑定 mousemove 和 mouseup 事件\n    document.addEventListener('mouseup', handleMouseup, true);\n    document.addEventListener('mousemove', handleMousemove, true);\n  }, [handleMousemove, handleMouseup]);\n\n  return { dragSizeValue, enableDrag, draggableLineStyles };\n};\n\nexport default useDrag;\n"],"names":["getSizeDraggable","sizeDraggable","limit","allowSizeDraggable","max","min","calcSizeRange","size","Math","calcMoveSize","placement","opts","x","y","maxWidth","maxHeight","moveSize","useDrag","onSizeDragEnd","_useState","useState","_useState2","_slicedToArray","dragSizeValue","changeDragSizeValue","dragSizeRef","useRef","handleMousemove","useCallback","e","document","documentElement","clientHeight","clientWidth","offsetHeight","offsetWidth","_getSizeDraggable","limitMax","limitMin","concat","current","draggableLineStyles","useMemo","isHorizontal","includes","oppositeMap","left","right","top","bottom","_defineProperty","zIndex","position","background","handleMouseup","removeEventListener","enableDrag","addEventListener"],"mappings":"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"}