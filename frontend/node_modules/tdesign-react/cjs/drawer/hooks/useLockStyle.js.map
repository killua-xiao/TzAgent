{"version":3,"file":"useLockStyle.js","sources":["../../../../components/drawer/hooks/useLockStyle.ts"],"sourcesContent":["import { useRef, useCallback, useMemo, useEffect } from 'react';\nimport { getScrollbarWidth } from '@tdesign/common-js/utils/getScrollbarWidth';\nimport useLayoutEffect from '../../hooks/useLayoutEffect';\nimport { hasBodyScrollbar } from '../../_util/scroll';\n\nlet key = 1;\n\nexport default function useLockStyle(props) {\n  const { preventScrollThrough, mode, visible, showInAttachedElement, placement, sizeValue, drawerWrapper } = props;\n  const lockStyleRef = useRef<HTMLStyleElement>(null);\n  const timerRef = useRef(null);\n\n  const clearStyleFunc = useCallback(() => {\n    clearTimeout(timerRef.current);\n    timerRef.current = setTimeout(() => {\n      lockStyleRef.current.parentNode?.removeChild?.(lockStyleRef.current);\n    }, 150);\n  }, []);\n\n  const marginString = useMemo(\n    () =>\n      ({\n        top: `margin: ${sizeValue} 0 0 0`,\n        left: `margin: 0 0 0 ${sizeValue}`,\n        right: `margin: 0 0 0 -${sizeValue}`,\n        bottom: `margin: -${sizeValue} 0 0 0`,\n      }[placement]),\n    [placement, sizeValue],\n  );\n\n  useLayoutEffect(() => {\n    if (typeof document === 'undefined') return;\n    if (!lockStyleRef.current) {\n      lockStyleRef.current = document.createElement('style');\n    }\n\n    const scrollbarWidth = hasBodyScrollbar() ? getScrollbarWidth() : 0;\n    lockStyleRef.current.dataset.id = `td_drawer_${+new Date()}_${(key += 1)}`;\n    lockStyleRef.current.innerHTML = `\n      html body {\n        overflow-y: hidden;\n        transition: margin 300ms cubic-bezier(0.7, 0.3, 0.1, 1) 0s;\n        ${mode === 'push' ? '' : `width: calc(100% - ${scrollbarWidth}px);`}\n      }\n    `;\n  }, [mode]);\n\n  useLayoutEffect(() => {\n    if (drawerWrapper && mode === 'push') {\n      if (visible) {\n        drawerWrapper.parentNode.style.cssText += ` \n            transition: margin 300ms cubic-bezier(0.7, 0.3, 0.1, 1) 0s;\n            ${marginString};}\n          `;\n      } else {\n        drawerWrapper.parentNode.style.cssText = drawerWrapper.parentNode.style.cssText.replace(/margin:.+;/, '');\n      }\n    }\n  }, [mode, marginString, drawerWrapper, visible]);\n\n  useLayoutEffect(() => {\n    if (typeof document === 'undefined') return;\n    if (!preventScrollThrough || showInAttachedElement) return;\n\n    if (visible) {\n      document.head.appendChild(lockStyleRef.current);\n    } else {\n      clearStyleFunc();\n    }\n  }, [preventScrollThrough, visible, showInAttachedElement, clearStyleFunc]);\n\n  useEffect(() => clearStyleFunc, [clearStyleFunc]);\n}\n"],"names":["key","useLockStyle","props","preventScrollThrough","mode","visible","showInAttachedElement","placement","sizeValue","drawerWrapper","lockStyleRef","useRef","timerRef","clearStyleFunc","useCallback","clearTimeout","current","setTimeout","_lockStyleRef$current","_lockStyleRef$current2","parentNode","removeChild","call","marginString","useMemo","top","left","right","bottom","useLayoutEffect","document","createElement","scrollbarWidth","hasBodyScrollbar","getScrollbarWidth","dataset","id","concat","Date","innerHTML","style","cssText","replace","head","appendChild","useEffect"],"mappings":"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"}