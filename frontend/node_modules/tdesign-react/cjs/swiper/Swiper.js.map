{"version":3,"file":"Swiper.js","sources":["../../../components/swiper/Swiper.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useMemo, useRef, isValidElement } from 'react';\nimport classnames from 'classnames';\nimport { ChevronLeftIcon as TdChevronLeftIcon, ChevronRightIcon as TdChevronRightIcon } from 'tdesign-icons-react';\nimport useConfig from '../hooks/useConfig';\nimport useGlobalIcon from '../hooks/useGlobalIcon';\nimport noop from '../_util/noop';\nimport { TdSwiperProps, SwiperChangeSource, SwiperNavigation } from './type';\nimport { StyledProps } from '../common';\nimport { swiperDefaultProps } from './defaultProps';\n\nimport SwiperItem from './SwiperItem';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\nimport type { SwiperItemProps } from './SwiperItem';\n\nexport interface SwiperProps extends TdSwiperProps, StyledProps {\n  children?: React.ReactNode;\n}\n\nenum CreateArrow {\n  Default = 'default',\n  Fraction = 'fraction',\n}\n\nenum ArrowClickDirection {\n  Left = 'left',\n  Right = 'right',\n}\n\nenum MouseAction {\n  Enter = 'enter',\n  Leave = 'leave',\n  Click = 'click',\n}\n\nconst defaultNavigation: SwiperNavigation = {\n  placement: 'inside',\n  showSlideBtn: 'always',\n  size: 'medium',\n  type: 'bars',\n};\n\nconst Swiper: React.FC<SwiperProps> & Record<'SwiperItem', typeof SwiperItem> = (swiperProps) => {\n  const props = useDefaultProps<SwiperProps>(swiperProps, swiperDefaultProps);\n  const {\n    animation, // 轮播切换动画效果类型\n    autoplay, // 是否自动播放\n    current, // 当前轮播在哪一项（下标）\n    defaultCurrent, // 当前轮播在哪一项（下标），非受控属性\n    direction, // 轮播滑动方向，包括横向滑动和纵向滑动两个方向\n    duration, // 滑动动画时长\n    interval, // 轮播间隔时间\n    trigger,\n    height,\n    loop,\n    stopOnHover,\n    onChange = noop, // 轮播切换时触发\n    className,\n    children,\n    navigation,\n    type,\n  } = props;\n  const { classPrefix } = useConfig();\n  const { ChevronLeftIcon, ChevronRightIcon } = useGlobalIcon({\n    ChevronLeftIcon: TdChevronLeftIcon,\n    ChevronRightIcon: TdChevronRightIcon,\n  });\n\n  let navigationConfig = defaultNavigation;\n  let navigationNode = null;\n  if (isValidElement(navigation)) {\n    navigationNode = navigation;\n  } else {\n    navigationConfig = { ...defaultNavigation, ...(navigation as SwiperNavigation) };\n  }\n\n  const [currentIndex, setCurrentIndex] = useState(defaultCurrent);\n  const [needAnimation, setNeedAnimation] = useState(false);\n  const [arrowShow, setArrowShow] = useState(() => navigationConfig.showSlideBtn === 'always');\n  const swiperTimer = useRef<ReturnType<typeof setTimeout>>(null); // 计时器指针\n  const swiperAnimationTimer = useRef<ReturnType<typeof setTimeout>>(null); // 计时器指针\n  const isHovering = useRef<boolean>(false);\n  const swiperWrap = useRef<HTMLDivElement>(null);\n\n  const getWrapAttribute = React.useCallback((attr: string) => swiperWrap.current?.parentNode?.[attr], []);\n\n  // 进行子组件筛选，创建子节点列表\n  const childrenList = useMemo<React.ReactNode[]>(\n    () =>\n      React.Children.toArray(children).filter(\n        (child: React.ReactElement<SwiperItemProps>) => (child.type as any)?.displayName === SwiperItem.displayName,\n      ),\n    [children],\n  );\n\n  const childrenLength = childrenList.length;\n\n  // 创建渲染用的节点列表\n  const swiperItemList = childrenList.map((child: React.ReactElement<any>, index) =>\n    React.cloneElement(child, {\n      key: index,\n      index,\n      currentIndex,\n      needAnimation,\n      childrenLength,\n      getWrapAttribute,\n      ...props,\n      ...child.props,\n    }),\n  );\n  // 子节点不为空时，复制第一个子节点到列表最后\n  if (loop && childrenLength > 0 && type === 'default') {\n    const firstEle = swiperItemList[0];\n    const lastEle = swiperItemList[childrenLength - 1];\n    swiperItemList.unshift(React.cloneElement(lastEle, { ...lastEle, props, key: -1, index: -1 }));\n    swiperItemList.push(\n      React.cloneElement(firstEle, { ...firstEle.props, key: childrenLength, index: childrenLength }),\n    );\n  }\n  const swiperItemLength = swiperItemList.length;\n  const startIndex = loop ? -1 : 0;\n  const endIndex = loop ? React.Children.count(children) : React.Children.count(children) - 1;\n\n  // 统一跳转处理函数\n  const swiperTo = useCallback(\n    (index: number, context: { source: SwiperChangeSource }) => {\n      // 事件通知\n      onChange((index === -1 ? childrenLength - 1 : index) % childrenLength, context);\n      if (index !== currentIndex) {\n        // 设置内部 index\n        setNeedAnimation(true);\n        setCurrentIndex(index);\n      }\n    },\n    [childrenLength, currentIndex, onChange],\n  );\n\n  // 定时器\n  const setTimer = useCallback(() => {\n    if (autoplay && interval > 0) {\n      swiperTimer.current = setTimeout(\n        () => {\n          if (!loop && currentIndex === endIndex) {\n            return;\n          }\n          swiperTo(currentIndex + 1, { source: 'autoplay' });\n        },\n        currentIndex === 0 ? interval - (duration + 50) : interval, // 当 index 为 0 的时候，表明刚从克隆的最后一项跳转过来，已经经历了duration + 50 的间隔时间，减去即可\n      );\n    }\n  }, [autoplay, interval, currentIndex, loop, duration, endIndex, swiperTo]);\n\n  const clearTimer = useCallback(() => {\n    if (swiperTimer.current) {\n      clearTimeout(swiperTimer.current);\n      swiperTimer.current = null;\n    }\n  }, []);\n\n  // 监听 current 参数变化\n  useEffect(() => {\n    if (current !== undefined) {\n      const nextCurrent = current % childrenLength;\n      if (nextCurrent === 0) {\n        swiperTo(childrenLength, { source: 'autoplay' });\n      } else {\n        swiperTo(nextCurrent, { source: 'autoplay' });\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [current, childrenLength]);\n\n  // 监听每次轮播结束\n  useEffect(() => {\n    if (currentIndex + 1 > swiperItemLength && type === 'card') {\n      return setCurrentIndex(0);\n    }\n    if (swiperAnimationTimer.current) {\n      clearTimeout(swiperAnimationTimer.current);\n      swiperAnimationTimer.current = null;\n    }\n\n    // 计算swiper animation duration\n    let swiperAnimationDuration = 0;\n    if (currentIndex === -1 && type === 'card') {\n      swiperAnimationDuration = 50;\n    } else {\n      swiperAnimationDuration = duration + 50;\n    }\n\n    swiperAnimationTimer.current = setTimeout(() => {\n      setNeedAnimation(false);\n      if (loop && currentIndex === endIndex) {\n        clearTimer();\n        setCurrentIndex(0);\n      }\n      if (loop && currentIndex === startIndex) {\n        setCurrentIndex(endIndex - 1);\n      }\n    }, swiperAnimationDuration); // 多 50ms 的间隔时间参考了 react-slick 的动画间隔取值\n  }, [currentIndex, swiperItemLength, duration, type, clearTimer, endIndex, startIndex, loop]);\n\n  useEffect(() => {\n    if (!isHovering.current || !stopOnHover) {\n      clearTimer();\n      setTimer();\n    }\n  }, [setTimer, clearTimer, stopOnHover, loop, currentIndex, endIndex]);\n\n  // 鼠标移入移出事件\n  const onMouseEnter: React.MouseEventHandler<HTMLElement> = () => {\n    isHovering.current = true;\n    if (stopOnHover) {\n      clearTimer();\n    }\n    if (navigationConfig.showSlideBtn === 'hover') {\n      setArrowShow(true);\n    }\n  };\n  const onMouseLeave: React.MouseEventHandler<HTMLElement> = () => {\n    isHovering.current = false;\n    if (!swiperTimer.current && autoplay) {\n      setTimer();\n    }\n    if (navigationConfig.showSlideBtn === 'hover') {\n      setArrowShow(false);\n    }\n  };\n\n  const navMouseAction = (action: MouseAction, index: number) => {\n    if (action === MouseAction.Enter && trigger === 'hover') {\n      swiperTo(index, { source: 'hover' });\n    }\n    if (action === MouseAction.Click && trigger === 'click') {\n      swiperTo(index, { source: 'click' });\n    }\n  };\n\n  const arrowClick = (direction: ArrowClickDirection) => {\n    if (needAnimation) {\n      return false;\n    }\n    if (direction === ArrowClickDirection.Right) {\n      if (!loop && currentIndex === endIndex) {\n        return;\n      }\n      if (type === 'card') {\n        return swiperTo(currentIndex + 1 >= swiperItemLength ? 0 : currentIndex + 1, { source: 'click' });\n      }\n      return swiperTo(currentIndex + 1, { source: 'click' });\n    }\n    if (direction === ArrowClickDirection.Left) {\n      if (!loop && currentIndex === startIndex) {\n        return;\n      }\n      return swiperTo(currentIndex - 1, { source: 'click' });\n    }\n  };\n\n  const renderArrow = (type: CreateArrow): React.ReactNode => {\n    if (!arrowShow) {\n      return '';\n    }\n    if (navigationConfig.type === 'fraction' && type === CreateArrow.Default) {\n      return '';\n    }\n    const fractionIndex = currentIndex + 1 > childrenLength ? 1 : currentIndex + 1;\n    return (\n      <div\n        className={classnames(`${classPrefix}-swiper__arrow`, {\n          [`${classPrefix}-swiper__arrow--default`]: type === 'default',\n        })}\n      >\n        <div className={`${classPrefix}-swiper__arrow-left`} onClick={() => arrowClick(ArrowClickDirection.Left)}>\n          <ChevronLeftIcon />\n        </div>\n        {type === CreateArrow.Fraction ? (\n          <div className={`${classPrefix}-swiper__navigation-text-fraction`}>\n            {fractionIndex}/{childrenLength}\n          </div>\n        ) : (\n          ''\n        )}\n        <div className={`${classPrefix}-swiper__arrow-right`} onClick={() => arrowClick(ArrowClickDirection.Right)}>\n          <ChevronRightIcon />\n        </div>\n      </div>\n    );\n  };\n\n  const renderNavigation = (): React.ReactNode => {\n    if (navigationConfig.type === 'fraction') {\n      return (\n        <div className={classnames(`${classPrefix}-swiper__navigation`, `${classPrefix}-swiper__navigation--fraction`)}>\n          {renderArrow(CreateArrow.Fraction)}\n        </div>\n      );\n    }\n    return navigationNode ? (\n      <>{navigationNode}</>\n    ) : (\n      <ul\n        className={classnames(\n          `${classPrefix}-swiper__navigation`,\n          `${classPrefix}-swiper__navigation-${navigationConfig.type}`,\n        )}\n      >\n        {childrenList.map((_: React.ReactElement, i: number) => (\n          <li\n            key={i}\n            className={classnames(`${classPrefix}-swiper__navigation-item`, {\n              [`${classPrefix}-is-active`]:\n                i === (currentIndex === -1 ? childrenLength - 1 : currentIndex) % childrenLength,\n            })}\n            onClick={() => navMouseAction(MouseAction.Click, i)}\n            onMouseEnter={() => navMouseAction(MouseAction.Enter, i)}\n            onMouseLeave={() => navMouseAction(MouseAction.Leave, i)}\n          >\n            <span></span>\n          </li>\n        ))}\n      </ul>\n    );\n  };\n\n  // 构造 css 对象\n  const getWrapperStyle = (): React.CSSProperties => {\n    const loopIndex = loop ? 1 : 0;\n    const offsetHeight = height ? `${height}px` : `${getWrapAttribute('offsetHeight')}px`;\n    if (type === 'card' || animation === 'fade') {\n      return {\n        height: offsetHeight,\n      };\n    }\n    if (animation === 'slide') {\n      if (direction === 'vertical') {\n        return {\n          height: offsetHeight,\n          msTransform: `translate3d(0, -${(currentIndex + loopIndex) * 100}%, 0px)`,\n          WebkitTransform: `translate3d(0, -${(currentIndex + loopIndex) * 100}%, 0px)`,\n          transform: `translate3d(0, -${(currentIndex + loopIndex) * 100}%, 0px)`,\n          transition: needAnimation ? `transform ${duration / 1000}s ease` : '',\n        };\n      }\n      return {\n        msTransform: `translate3d(-${(currentIndex + loopIndex) * 100}%, 0px, 0px)`,\n        WebkitTransform: `translate3d(-${(currentIndex + loopIndex) * 100}%, 0px, 0px)`,\n        transform: `translate3d(-${(currentIndex + loopIndex) * 100}%, 0px, 0px)`,\n        transition: needAnimation ? `transform ${duration / 1000}s ease` : '',\n      };\n    }\n  };\n\n  return (\n    <div\n      className={classnames(`${classPrefix}-swiper`, className)}\n      onMouseEnter={onMouseEnter}\n      onMouseLeave={onMouseLeave}\n      ref={swiperWrap}\n    >\n      <div\n        className={classnames(`${classPrefix}-swiper__wrap`, {\n          [`${classPrefix}-swiper--inside`]: navigationConfig.placement === 'inside',\n          [`${classPrefix}-swiper--outside`]: navigationConfig.placement === 'outside',\n          [`${classPrefix}-swiper--vertical`]: direction === 'vertical',\n          [`${classPrefix}-swiper--large`]: navigationConfig.size === 'large',\n          [`${classPrefix}-swiper--small`]: navigationConfig.size === 'small',\n        })}\n      >\n        <div\n          className={classnames(`${classPrefix}-swiper__content`, {\n            [`${classPrefix}-swiper-fade`]: animation === 'fade',\n            [`${classPrefix}-swiper-card`]: type === 'card',\n          })}\n          style={{ height: '' }}\n        >\n          <div className={`${classPrefix}-swiper__container`} style={getWrapperStyle()}>\n            {swiperItemList}\n          </div>\n        </div>\n        {renderNavigation()}\n        {renderArrow(CreateArrow.Default)}\n      </div>\n    </div>\n  );\n};\n\nSwiper.SwiperItem = SwiperItem;\n\nSwiper.displayName = 'Swiper';\n\nexport default Swiper;\n"],"names":["defaultNavigation","placement","showSlideBtn","size","type","Swiper","swiperProps","props","useDefaultProps","swiperDefaultProps","animation","autoplay","current","defaultCurrent","direction","duration","interval","trigger","height","loop","stopOnHover","_props$onChange","onChange","noop","className","children","navigation","_useConfig","useConfig","classPrefix","_useGlobalIcon","useGlobalIcon","ChevronLeftIcon","TdChevronLeftIcon","ChevronRightIcon","TdChevronRightIcon","navigationConfig","navigationNode","isValidElement","_objectSpread","_useState","useState","_useState2","_slicedToArray","currentIndex","setCurrentIndex","_useState3","_useState4","needAnimation","setNeedAnimation","_useState5","_useState6","arrowShow","setArrowShow","swiperTimer","useRef","swiperAnimationTimer","isHovering","swiperWrap","getWrapAttribute","React","useCallback","attr","_swiperWrap$current","parentNode","childrenList","useMemo","Children","toArray","filter","child","_child$type","displayName","SwiperItem","childrenLength","length","swiperItemList","map","index","cloneElement","key","firstEle","lastEle","unshift","push","swiperItemLength","startIndex","endIndex","count","swiperTo","context","setTimer","setTimeout","source","clearTimer","clearTimeout","useEffect","nextCurrent","swiperAnimationDuration","onMouseEnter","onMouseLeave","navMouseAction","action","arrowClick","renderArrow","fractionIndex","createElement","classnames","concat","_defineProperty","onClick","renderNavigation","Fragment","_","i","getWrapperStyle","loopIndex","offsetHeight","msTransform","WebkitTransform","transform","transition","ref","style"],"mappings":"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"}