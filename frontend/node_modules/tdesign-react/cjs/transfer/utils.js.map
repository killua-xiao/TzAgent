{"version":3,"file":"utils.js","sources":["../../../components/transfer/utils.ts"],"sourcesContent":["import { isEmpty, isFunction, isString } from 'lodash-es';\nimport React from 'react';\nimport { DataOption, TransferValue } from './type';\nimport { TNode } from '../common';\n\nexport const getDefaultValue = <T>(value: T | T[], defaultValue?: T): T[] => {\n  if (isEmpty(value)) {\n    return Array.isArray(defaultValue) ? defaultValue : [defaultValue, defaultValue];\n  }\n\n  if (Array.isArray(value)) return value;\n\n  return [defaultValue, defaultValue];\n};\n\nexport const getJSX = (value: string | TNode) => {\n  if (isString(value)) return value;\n\n  if (isFunction(value)) return value();\n\n  if (React.isValidElement(value)) return value;\n\n  return value;\n};\n\n// 获取所有叶子节点\nexport const getLeafNodes = (nodes: DataOption[]): DataOption[] => {\n  const resData = [];\n  const map = (nodes: DataOption[]) => {\n    nodes.forEach((child) => {\n      if (child.children && child.children.length > 0) {\n        return map(child.children);\n      }\n      resData.push(child);\n    });\n  };\n  map(nodes);\n  return resData;\n};\n\n// tree 过滤 checkeds 数组中的 key\nexport const filterCheckedTreeNodes = (nodes: DataOption[], checkeds: TransferValue[]): DataOption[] =>\n  nodes\n    .filter((item) => !checkeds.includes(item.value))\n    .map((item) => {\n      const newItem = { ...item };\n      if (item.children && item.children.length > 0) {\n        newItem.children = filterCheckedTreeNodes(item.children, checkeds);\n      }\n      return newItem;\n    })\n    .filter((item) => (item.children && item.children.length !== 0) || !item.children);\n\n// 获取目的树结构\nexport const getTargetNodes = (sourceNodes: DataOption[], data: DataOption[]): DataOption[] => {\n  const source = getLeafNodes(sourceNodes).map((item) => item.value);\n  return filterCheckedTreeNodes(data, source);\n};\n"],"names":["getDefaultValue","value","defaultValue","isEmpty","Array","isArray","getJSX","isString","isFunction","React","isValidElement","getLeafNodes","nodes","resData","map","forEach","child","children","length","push","filterCheckedTreeNodes","checkeds","filter","item","includes","newItem","_objectSpread","getTargetNodes","sourceNodes","data","source"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKa,IAAAA,eAAA,GAAkB,SAAlBA,eAAAA,CAAsBC,KAAA,EAAgBC,YAA0B,EAAA;AACvE,EAAA,IAAAC,eAAA,CAAQF,KAAK,CAAG,EAAA;AAClB,IAAA,OAAOG,MAAMC,OAAQ,CAAAH,YAAY,IAAIA,YAAe,GAAA,CAACA,cAAcA,YAAY,CAAA,CAAA;AACjF,GAAA;EAEI,IAAAE,KAAA,CAAMC,QAAQJ,KAAK,CAAA,EAAU,OAAAA,KAAA,CAAA;AAE1B,EAAA,OAAA,CAACC,cAAcA,YAAY,CAAA,CAAA;AACpC,EAAA;IAEaI,MAAA,GAAS,SAATA,MAAAA,CAAUL,KAA0B,EAAA;AAC/C,EAAA,IAAIM,kBAASN,KAAK,CAAA,EAAU,OAAAA,KAAA,CAAA;EAE5B,IAAIO,sBAAWP,KAAK,CAAA,EAAG,OAAOA,KAAM,EAAA,CAAA;EAEhC,iBAAAQ,yBAAA,CAAMC,eAAeT,KAAK,CAAA,EAAU,OAAAA,KAAA,CAAA;AAEjC,EAAA,OAAAA,KAAA,CAAA;AACT,EAAA;IAGaU,YAAA,GAAe,SAAfA,YAAAA,CAAgBC,KAAsC,EAAA;EACjE,IAAMC,UAAU,EAAC,CAAA;AACX,EAAA,IAAAC,IAAA,GAAM,SAANA,GAAAA,CAAOF,MAAwB,EAAA;AACnCA,IAAAA,MAAAA,CAAMG,OAAQ,CAAA,UAACC,KAAU,EAAA;MACvB,IAAIA,KAAM,CAAAC,QAAA,IAAYD,KAAM,CAAAC,QAAA,CAASC,SAAS,CAAG,EAAA;AACxC,QAAA,OAAAJ,IAAA,CAAIE,MAAMC,QAAQ,CAAA,CAAA;AAC3B,OAAA;AACAJ,MAAAA,OAAA,CAAQM,KAAKH,KAAK,CAAA,CAAA;AACpB,KAAC,CAAA,CAAA;GACH,CAAA;EACAF,IAAA,CAAIF,KAAK,CAAA,CAAA;AACF,EAAA,OAAAC,OAAA,CAAA;AACT,EAAA;AAGO,IAAMO,0BAAyB,SAAzBA,uBAA0BR,KAAA,EAAqBS,QAC1D,EAAA;AAAA,EAAA,OAAAT,KAAA,CACGU,OAAO,UAACC,IAAA,EAAA;IAAA,OAAS,CAACF,QAAA,CAASG,SAASD,IAAK,CAAAtB,KAAK,CAAC,CAAA;AAAA,GAAA,CAC/C,CAAAa,GAAA,CAAI,UAACS,IAAS,EAAA;AACP,IAAA,IAAAE,OAAA,GAAAC,aAAA,CAAA,EAAA,EAAeH,IAAK,CAAA,CAAA;IAC1B,IAAIA,IAAK,CAAAN,QAAA,IAAYM,IAAK,CAAAN,QAAA,CAASC,SAAS,CAAG,EAAA;MAC7CO,OAAA,CAAQR,QAAW,GAAAG,uBAAA,CAAuBG,IAAK,CAAAN,QAAA,EAAUI,QAAQ,CAAA,CAAA;AACnE,KAAA;AACO,IAAA,OAAAI,OAAA,CAAA;AACT,GAAC,CACA,CAAAH,MAAA,CAAO,UAACC,IAAA,EAAA;AAAA,IAAA,OAAUA,IAAK,CAAAN,QAAA,IAAYM,IAAK,CAAAN,QAAA,CAASC,MAAW,KAAA,CAAA,IAAM,CAACK,IAAA,CAAKN,QAAQ,CAAA;GAAA,CAAA,CAAA;AAAA,EAAA;AAGxE,IAAAU,cAAA,GAAiB,SAAjBA,cAAAA,CAAkBC,WAAA,EAA2BC,IAAqC,EAAA;EACvF,IAAAC,MAAA,GAASnB,aAAaiB,WAAW,CAAA,CAAEd,IAAI,UAACS,IAAA,EAAA;IAAA,OAASA,KAAKtB,KAAK,CAAA;GAAA,CAAA,CAAA;AAC1D,EAAA,OAAAmB,uBAAA,CAAuBS,MAAMC,MAAM,CAAA,CAAA;AAC5C;;;;;;;;"}