{"version":3,"file":"Skeleton.js","sources":["../../../components/skeleton/Skeleton.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { isNumber } from 'lodash-es';\nimport classNames from 'classnames';\nimport { SkeletonRowCol, SkeletonRowColObj, TdSkeletonProps } from './type';\n\nimport { StyledProps, Styles } from '../common';\nimport useConfig from '../hooks/useConfig';\nimport { pxCompat } from '../_util/helper';\nimport parseTNode from '../_util/parseTNode';\nimport { skeletonDefaultProps } from './defaultProps';\nimport useDefaultProps from '../hooks/useDefaultProps';\n\nexport type SkeletonProps = TdSkeletonProps & StyledProps & { children?: React.ReactNode };\n\nconst ThemeMap: Record<TdSkeletonProps['theme'], SkeletonRowCol> = {\n  text: [1],\n  avatar: [{ type: 'circle', size: '56px' }],\n  paragraph: [1, 1, { width: '70%' }],\n  'avatar-text': [[{ type: 'circle' }, { type: 'text', height: '32px' }]],\n  tab: [{ height: '30px' }, { height: '200px' }],\n  article: [\n    { type: 'rect', height: '30px', width: '100%' },\n    { type: 'rect', height: '200px', width: '100%' },\n    ...[3, 2, 2, 2].map((value) => Array(value).fill({ type: 'text', height: '30px' })),\n  ],\n};\n\nconst Skeleton: React.FC<SkeletonProps> = (originalProps) => {\n  const props = useDefaultProps<SkeletonProps>(originalProps, skeletonDefaultProps);\n  const { animation, loading, rowCol, theme, className, style, delay = 0, children } = props;\n  const { classPrefix } = useConfig();\n  const name = `${classPrefix}-skeleton`; // t-skeleton\n\n  const renderCols = (_cols: Number | SkeletonRowColObj | Array<SkeletonRowColObj>) => {\n    const getColItemClass = (obj: SkeletonRowColObj) =>\n      classNames(`${name}__col`, `${name}--type-${obj.type || 'text'}`, {\n        [`${name}--animation-${animation}`]: animation,\n      });\n\n    const getColItemStyle = (obj: SkeletonRowColObj): Styles => {\n      const styleName = [\n        'width',\n        'height',\n        'marginRight',\n        'marginLeft',\n        'margin',\n        'size',\n        'background',\n        'backgroundColor',\n      ];\n      const style: Styles = {};\n      styleName.forEach((name) => {\n        if (name in obj) {\n          const px = pxCompat(obj[name]);\n          if (name === 'size') {\n            [style.width, style.height] = [px, px];\n          } else {\n            style[name] = px;\n          }\n        }\n      });\n      return style;\n    };\n\n    let cols: Array<SkeletonRowColObj> = [];\n    if (Array.isArray(_cols)) {\n      cols = _cols;\n    } else if (isNumber(_cols)) {\n      cols = new Array(_cols).fill({ type: 'text' });\n    } else {\n      cols = [_cols as SkeletonRowColObj];\n    }\n\n    return cols.map<React.ReactNode>((item, index) => (\n      <div key={index} className={getColItemClass(item)} style={getColItemStyle(item)}>\n        {parseTNode(item.content)}\n      </div>\n    ));\n  };\n\n  const renderRowCol = (_rowCol?: SkeletonRowCol) => {\n    const renderedRowCol: SkeletonRowCol = _rowCol || rowCol;\n\n    return renderedRowCol.map<React.ReactNode>((item, index) => (\n      <div key={index} className={`${name}__row`}>\n        {renderCols(item)}\n      </div>\n    ));\n  };\n\n  const [ctrlLoading, setCtrlLoading] = useState(loading);\n\n  useEffect(() => {\n    if (delay > 0 && !loading) {\n      const timeout = setTimeout(() => {\n        setCtrlLoading(loading);\n      }, delay);\n      return () => clearTimeout(timeout);\n    }\n\n    setCtrlLoading(loading);\n  }, [delay, loading]);\n\n  if (!ctrlLoading) {\n    return <>{children}</>;\n  }\n\n  const childrenContent: React.ReactNode[] = [];\n  if (theme && !rowCol) {\n    childrenContent.push(renderRowCol(ThemeMap[theme]));\n  }\n  if (rowCol) {\n    childrenContent.push(renderRowCol(rowCol));\n  }\n  if (!theme && !rowCol) {\n    // 什么都不传时，传入默认 rowCol\n    childrenContent.push(renderRowCol([1, 1, 1, { width: '70%' }]));\n  }\n\n  return (\n    <div className={className} style={style}>\n      {childrenContent}\n    </div>\n  );\n};\n\nSkeleton.displayName = 'Skeleton';\n\nexport default Skeleton;\n"],"names":["ThemeMap","text","avatar","type","size","paragraph","width","height","tab","article","concat","_toConsumableArray","map","value","Array","fill","Skeleton","originalProps","props","useDefaultProps","skeletonDefaultProps","animation","loading","rowCol","theme","className","style","_props$delay","delay","children","_useConfig","useConfig","classPrefix","name","renderCols","_cols","getColItemClass","obj","classNames","_defineProperty","getColItemStyle","styleName","forEach","px","pxCompat","_ref","cols","isArray","isNumber","item","index","React","createElement","key","parseTNode","content","renderRowCol","_rowCol","renderedRowCol","_useState","useState","_useState2","_slicedToArray","ctrlLoading","setCtrlLoading","useEffect","timeout","setTimeout","clearTimeout","childrenContent","push","displayName"],"mappings":"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"}