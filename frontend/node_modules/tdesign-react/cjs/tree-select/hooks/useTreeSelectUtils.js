/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../../_chunks/dep-0006fcfa.js');
var React = require('react');
var treeStore = require('../../_chunks/dep-509940b2.js');
var hooks_usePersistFn = require('../../hooks/usePersistFn.js');
var treeSelect_defaultProps = require('../defaultProps.js');
require('../../_chunks/dep-667ac7af.js');
require('../../_chunks/dep-69792df2.js');
require('mitt');
require('../../_chunks/dep-5180cc1e.js');
require('../../_chunks/dep-65ef8e09.js');
require('../../_chunks/dep-e4e1901e.js');
require('../../_chunks/dep-00b49251.js');
require('../../_chunks/dep-59671c87.js');
require('../../_chunks/dep-1e4197a4.js');
require('../../_chunks/dep-3398c1f2.js');
require('../../_chunks/dep-64577888.js');
require('../../_chunks/dep-79629634.js');
require('../../_chunks/dep-25585736.js');
require('../../_chunks/dep-62e73936.js');
require('../../_chunks/dep-21ece627.js');
require('../../_chunks/dep-25e4aa84.js');
require('../../_chunks/dep-ec8d2dca.js');
require('../../_chunks/dep-fc596d16.js');
require('../../_chunks/dep-e1fbe1c3.js');
require('../../_chunks/dep-255ceed8.js');
require('../../_chunks/dep-e57bdc8f.js');
require('../../_chunks/dep-df2b541f.js');
require('../../_chunks/dep-edd366db.js');
require('../../_chunks/dep-f33c1939.js');
require('../../_chunks/dep-22b1740a.js');
require('../../_chunks/dep-eea2872a.js');
require('../../_chunks/dep-9e5a468d.js');
require('../../_chunks/dep-373af7a2.js');
require('../../_chunks/dep-fc29b8b5.js');
require('../../_chunks/dep-0ffc9d96.js');
require('../../_chunks/dep-b7ad4d54.js');
require('../../_chunks/dep-c16f1dc4.js');
require('../../_chunks/dep-d5e8c967.js');
require('../../_chunks/dep-a48c7e8b.js');
require('../../_chunks/dep-31c4bc3d.js');
require('../../_chunks/dep-71455db7.js');
require('../../_chunks/dep-f26edb7b.js');
require('../../_chunks/dep-a56c4939.js');
require('../../_chunks/dep-3d4656ee.js');
require('../../_chunks/dep-efe6d243.js');
require('../../_chunks/dep-4b18243f.js');
require('../../_chunks/dep-bff2c990.js');
require('../../_chunks/dep-9a375a19.js');
require('../../_chunks/dep-d915c90f.js');
require('../../_chunks/dep-7a148045.js');
require('../../_chunks/dep-a2cb9299.js');
require('../../_chunks/dep-221787fe.js');
require('../../_chunks/dep-2ffa3ff1.js');
require('../../_chunks/dep-0c8c9057.js');
require('../../_chunks/dep-95a6dd1c.js');
require('../../_chunks/dep-bfc07219.js');
require('../../_chunks/dep-4ed9eda4.js');
require('../../_chunks/dep-0192b053.js');
require('../../_chunks/dep-40e87384.js');
require('../../_chunks/dep-014b9b78.js');
require('../../_chunks/dep-297a4933.js');
require('../../_chunks/dep-6c297e20.js');
require('../../_chunks/dep-840b1644.js');
require('../../_chunks/dep-66114ce9.js');
require('../../_chunks/dep-62d1dd66.js');

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { defineProperty._defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var useTreeSelectUtils = function useTreeSelectUtils(_ref, treeRef) {
  var data = _ref.data,
    treeProps = _ref.treeProps,
    valueType = _ref.valueType;
  var defaultStore = React.useMemo(function () {
    var store = new treeStore.TreeStore(_objectSpread(_objectSpread({}, treeSelect_defaultProps.treeSelectDefaultProps.treeProps), treeProps));
    store.append(data);
    return store;
  }, [data, treeProps]);
  var getNodeItem = hooks_usePersistFn.usePersistFn(function (value) {
    var _defaultStore$getNode;
    if (treeRef.current) {
      return treeRef.current.getItem(value);
    }
    return (_defaultStore$getNode = defaultStore.getNode(value)) === null || _defaultStore$getNode === void 0 ? void 0 : _defaultStore$getNode.getModel();
  });
  var formatValue = hooks_usePersistFn.usePersistFn(function (value) {
    var _treeProps$keys$value, _treeProps$keys, _treeProps$keys$label, _treeProps$keys2;
    var label = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : String(value);
    var valueKey = (_treeProps$keys$value = treeProps === null || treeProps === void 0 || (_treeProps$keys = treeProps.keys) === null || _treeProps$keys === void 0 ? void 0 : _treeProps$keys.value) !== null && _treeProps$keys$value !== void 0 ? _treeProps$keys$value : "value";
    var labelKey = (_treeProps$keys$label = treeProps === null || treeProps === void 0 || (_treeProps$keys2 = treeProps.keys) === null || _treeProps$keys2 === void 0 ? void 0 : _treeProps$keys2.label) !== null && _treeProps$keys$label !== void 0 ? _treeProps$keys$label : "label";
    return value && valueType === "object" ? defineProperty._defineProperty(defineProperty._defineProperty({}, valueKey, value), labelKey, label) : value;
  });
  var normalizeValue = hooks_usePersistFn.usePersistFn(function (value) {
    var _treeProps$keys$value2, _treeProps$keys3, _treeProps$keys$label2, _treeProps$keys4, _ref3, _node$label;
    var valueKey = (_treeProps$keys$value2 = treeProps === null || treeProps === void 0 || (_treeProps$keys3 = treeProps.keys) === null || _treeProps$keys3 === void 0 ? void 0 : _treeProps$keys3.value) !== null && _treeProps$keys$value2 !== void 0 ? _treeProps$keys$value2 : "value";
    var labelKey = (_treeProps$keys$label2 = treeProps === null || treeProps === void 0 || (_treeProps$keys4 = treeProps.keys) === null || _treeProps$keys4 === void 0 ? void 0 : _treeProps$keys4.label) !== null && _treeProps$keys$label2 !== void 0 ? _treeProps$keys$label2 : "label";
    var realValue = valueType === "value" ? value : value === null || value === void 0 ? void 0 : value[valueKey];
    var node = getNodeItem(realValue);
    var realLabel = valueType === "object" ? value === null || value === void 0 ? void 0 : value[labelKey] : void 0;
    return {
      value: realValue,
      label: (_ref3 = (_node$label = node === null || node === void 0 ? void 0 : node.label) !== null && _node$label !== void 0 ? _node$label : realLabel) !== null && _ref3 !== void 0 ? _ref3 : String(realValue)
    };
  });
  return {
    getNodeItem: getNodeItem,
    formatValue: formatValue,
    normalizeValue: normalizeValue
  };
};

exports.useTreeSelectUtils = useTreeSelectUtils;
//# sourceMappingURL=useTreeSelectUtils.js.map
