{"version":3,"file":"ConfigProvider.js","sources":["../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/mergeWith.js","../../../components/config-provider/ConfigProvider.tsx"],"sourcesContent":["import baseMerge from './_baseMerge.js';\nimport createAssigner from './_createAssigner.js';\n\n/**\n * This method is like `_.merge` except that it accepts `customizer` which\n * is invoked to produce the merged values of the destination and source\n * properties. If `customizer` returns `undefined`, merging is handled by the\n * method instead. The `customizer` is invoked with six arguments:\n * (objValue, srcValue, key, object, source, stack).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} customizer The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   if (_.isArray(objValue)) {\n *     return objValue.concat(srcValue);\n *   }\n * }\n *\n * var object = { 'a': [1], 'b': [2] };\n * var other = { 'a': [3], 'b': [4] };\n *\n * _.mergeWith(object, other, customizer);\n * // => { 'a': [1, 3], 'b': [2, 4] }\n */\nvar mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n  baseMerge(object, source, srcIndex, customizer);\n});\n\nexport default mergeWith;\n","import React, { useEffect } from 'react';\nimport { mergeWith as _mergeWith, cloneDeep } from 'lodash-es';\nimport ConfigContext, { defaultGlobalConfig, Config } from './ConfigContext';\nimport { GlobalConfigProvider } from './type';\n\nexport interface ConfigProviderProps extends Config {\n  children: React.ReactNode;\n  /**\n   * 不需要设置全局上下文信息 \n   * 不传或者false：表示全局上下文变动，需要更新全局上下文的信息放入到变量中\n   * true：表示全局上下文信息不需要重新设置，\n   * 解决问题：当plugin调用的时候，单独包裹的Provider 也会传全局变量，仅自身可用，多次调用时相互之间不会冲突。\n   * 插件单独的config方法依然可用。自身属性通过props传递\n   * 例如：多处调用message.config 如果每次都更新全局上下文，插件调用时配置会相互影响，导致行为结果跟预期不一致。\n   */\n  notSet?: boolean;\n}\n\n// deal with https://github.com/lodash/lodash/issues/1313\nexport const merge = (src: GlobalConfigProvider, config: GlobalConfigProvider) =>\n  _mergeWith(src, config, (objValue, srcValue) => {\n    if (Array.isArray(objValue)) {\n      return srcValue;\n    }\n  });\n\n// 存放全局的上下文配置\nlet globalConfig = defaultGlobalConfig;\n\nexport const getGlobalConfig = (configInfo?: GlobalConfigProvider): GlobalConfigProvider=> merge({ ...globalConfig }, configInfo)\n\nexport const setGlobalConfig = (configInfo?: GlobalConfigProvider)=>{\n  globalConfig = configInfo\n}\n\n\nexport default function ConfigProvider({ children, globalConfig, notSet }: ConfigProviderProps) {\n  const defaultData = cloneDeep(defaultGlobalConfig);\n  const mergedGlobalConfig = merge(defaultData, globalConfig);\n\n  useEffect(()=>{\n    if(!notSet){\n      // 需要设置的情况下，当配置信息变化时更新变量中的配置信息，方便plugin调用时获取\n      setGlobalConfig(mergedGlobalConfig)\n    }\n  },[mergedGlobalConfig, notSet]);\n\n  return <ConfigContext.Provider value={{ globalConfig: mergedGlobalConfig }}>{children}</ConfigContext.Provider>;\n}\n\nConfigProvider.getGlobalConfig = getGlobalConfig;\nConfigProvider.setGlobalConfig = setGlobalConfig;\n\nConfigProvider.displayName = 'ConfigProvider';\n"],"names":["mergeWith","createAssigner","object","source","srcIndex","customizer","baseMerge","merge","src","config","_mergeWith","objValue","srcValue","Array","isArray","globalConfig","defaultGlobalConfig","getGlobalConfig","configInfo","_objectSpread","setGlobalConfig","ConfigProvider","children","_ref","notSet","defaultData","cloneDeep","mergedGlobalConfig","useEffect","React","createElement","ConfigContext","Provider","value","displayName"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,SAAS,GAAGC,sBAAc,CAAC,UAASC,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,EAAE;EAC5EC,iBAAS,CAACJ,MAAM,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,CAAC,CAAA;AACjD,CAAC,CAAC,CAAA;AAEF,iBAAeL,SAAS;;;;ACnBX,IAAAO,KAAA,GAAQ,SAARA,KAAAA,CAASC,GAA2B,EAAAC,MAAA,EAAA;EAAA,OAC/CC,WAAWF,GAAK,EAAAC,MAAA,EAAQ,UAACE,QAAA,EAAUC,QAAa,EAAA;AAC1C,IAAA,IAAAC,KAAA,CAAMC,OAAQ,CAAAH,QAAQ,CAAG,EAAA;AACpB,MAAA,OAAAC,QAAA,CAAA;AACT,KAAA;AACF,GAAC,CAAA,CAAA;AAAA,EAAA;AAGH,IAAIG,YAAe,GAAAC,gDAAA,CAAA;IAENC,eAAA,GAAkB,SAAlBA,eAAAA,CAAmBC,UAA2D,EAAA;AAAA,EAAA,OAAAX,KAAA,CAAAY,aAAA,KAAWJ,YAAA,CAAA,EAAgBG,UAAU,CAAA,CAAA;AAAA,EAAA;IAEnHE,eAAA,GAAkB,SAAlBA,eAAAA,CAAmBF,UAAoC,EAAA;AACnDH,EAAAA,YAAA,GAAAG,UAAA,CAAA;AACjB,EAAA;AAGA,SAAwBG,qBAAwE;AAAA,EAAA,IAAvDC,QAAA,GAAAC,IAAA,CAAAD,QAAA;IAAUP,aAAAA,GAAAA,IAAAA,CAAAA,YAAAA;IAAcS,cAAAA;AACzD,EAAA,IAAAC,WAAA,GAAcC,oBAAUV,gDAAmB,CAAA,CAAA;AAC3C,EAAA,IAAAW,kBAAA,GAAqBpB,KAAM,CAAAkB,WAAA,EAAaV,aAAY,CAAA,CAAA;AAE1Da,EAAAA,eAAA,CAAU,YAAI;IACZ,IAAG,CAACJ,MAAO,EAAA;MAETJ,eAAA,CAAgBO,kBAAkB,CAAA,CAAA;AACpC,KAAA;AACF,GAAE,EAAA,CAACA,kBAAoB,EAAAH,MAAM,CAAC,CAAA,CAAA;EAEvB,sBAAAK,yBAAA,CAAAC,aAAA,CAACC,wCAAcC,QAAd,EAAA;AAAuBC,IAAAA,KAAA,EAAO;AAAElB,MAAAA,YAAA,EAAcY,kBAAAA;AAAmB,KAAA;GAAA,EAAIL,QAAS,CAAA,CAAA;AACxF,CAAA;AAEAD,cAAA,CAAeJ,eAAkB,GAAAA,eAAA,CAAA;AACjCI,cAAA,CAAeD,eAAkB,GAAAA,eAAA,CAAA;AAEjCC,cAAA,CAAea,WAAc,GAAA,gBAAA;;;;;;;"}