/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _typeof = require('../_chunks/dep-667ac7af.js');
var defineProperty = require('../_chunks/dep-0006fcfa.js');
var React = require('react');
var classNames = require('classnames');
var table_Ellipsis = require('./Ellipsis.js');
var table_hooks_useFixed = require('./hooks/useFixed.js');
var table_utils = require('./utils.js');
var isFunction = require('../_chunks/dep-ec8d2dca.js');
var get = require('../_chunks/dep-0c8c9057.js');
require('../_chunks/dep-8e4d656d.js');
require('../_chunks/dep-00b49251.js');
require('../_util/scroll.js');
require('raf');
require('../_chunks/dep-381fa848.js');
require('../_chunks/dep-4ed9eda4.js');
require('../_chunks/dep-25585736.js');
require('../_chunks/dep-64577888.js');
require('../_chunks/dep-62e73936.js');
require('../_util/easing.js');
require('../tooltip/index.js');
require('../tooltip/Tooltip.js');
require('../_chunks/dep-8fa3a4c2.js');
require('../popup/index.js');
require('../popup/Popup.js');
require('react-transition-group');
require('../_util/ref.js');
require('react-is');
require('../_util/isFragment.js');
require('../common/Portal.js');
require('react-dom');
require('../hooks/useConfig.js');
require('../config-provider/ConfigContext.js');
require('../_chunks/dep-1df1dad8.js');
require('../_chunks/dep-5b5ab11b.js');
require('dayjs');
require('../_chunks/dep-f32c03f1.js');
require('../_chunks/dep-31c4bc3d.js');
require('../_chunks/dep-eea2872a.js');
require('../_chunks/dep-71455db7.js');
require('../_chunks/dep-9e5a468d.js');
require('../_chunks/dep-f26edb7b.js');
require('../_chunks/dep-f33c1939.js');
require('../_chunks/dep-21ece627.js');
require('../_chunks/dep-25e4aa84.js');
require('../_chunks/dep-fc596d16.js');
require('../_chunks/dep-e1fbe1c3.js');
require('../_chunks/dep-df2b541f.js');
require('../_chunks/dep-edd366db.js');
require('../_chunks/dep-a56c4939.js');
require('../_chunks/dep-6c297e20.js');
require('../_chunks/dep-b7ad4d54.js');
require('../_chunks/dep-a2cb9299.js');
require('../_chunks/dep-f981815b.js');
require('../hooks/useLayoutEffect.js');
require('../hooks/useAnimation.js');
require('../hooks/useAttach.js');
require('../hooks/useControlled.js');
require('../_util/noop.js');
require('../_chunks/dep-66114ce9.js');
require('../_chunks/dep-62d1dd66.js');
require('../_chunks/dep-7a148045.js');
require('../_chunks/dep-255ceed8.js');
require('../_chunks/dep-79629634.js');
require('../hooks/useDefaultProps.js');
require('../hooks/useMutationObserver.js');
require('../hooks/useLatest.js');
require('../_chunks/dep-eb6d55c1.js');
require('../_chunks/dep-014b9b78.js');
require('../_chunks/dep-abdd786a.js');
require('../_chunks/dep-3d4656ee.js');
require('../_chunks/dep-0ffc9d96.js');
require('../_chunks/dep-efe6d243.js');
require('../_chunks/dep-4b18243f.js');
require('../_chunks/dep-bff2c990.js');
require('../_chunks/dep-a231fdc5.js');
require('../_chunks/dep-cf14666e.js');
require('../hooks/usePopper.js');
require('../_chunks/dep-e4e1901e.js');
require('@popperjs/core');
require('react-fast-compare');
require('../hooks/useWindowSize.js');
require('../popup/defaultProps.js');
require('../popup/hooks/useTrigger.js');
require('../_util/composeRefs.js');
require('../_util/listener.js');
require('../popup/utils/transition.js');
require('../popup/PopupPlugin.js');
require('../_chunks/dep-65ef8e09.js');
require('../_util/react-render.js');
require('../common/PluginContainer.js');
require('../config-provider/ConfigProvider.js');
require('../_chunks/dep-ab2f63ec.js');
require('../_chunks/dep-a48c7e8b.js');
require('../tooltip/defaultProps.js');
require('../tooltip/TooltipLite.js');
require('../hooks/useSwitch.js');
require('../hooks/usePersistFn.js');
require('../_chunks/dep-1438af5a.js');
require('../hooks/useDebounce.js');
require('../_chunks/dep-002fcc1e.js');
require('../_chunks/dep-2ffa3ff1.js');
require('../_chunks/dep-59671c87.js');
require('../_chunks/dep-b73b8db7.js');
require('../hooks/usePrevious.js');
require('../_chunks/dep-62f5b69f.js');
require('../_chunks/dep-40e87384.js');
require('../_chunks/dep-297a4933.js');
require('../_chunks/dep-fc29b8b5.js');
require('../_chunks/dep-139db759.js');
require('../_chunks/dep-d915c90f.js');
require('../_chunks/dep-1e4197a4.js');
require('../_chunks/dep-3398c1f2.js');
require('../_chunks/dep-e57bdc8f.js');
require('../_chunks/dep-22b1740a.js');
require('../_chunks/dep-373af7a2.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { defineProperty._defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function renderCell(params, extra) {
  var col = params.col,
    row = params.row,
    rowIndex = params.rowIndex;
  if (col.colKey === "serial-number") {
    var _ref = (extra === null || extra === void 0 ? void 0 : extra.pagination) || {},
      current = _ref.current,
      pageSize = _ref.pageSize,
      defaultCurrent = _ref.defaultCurrent,
      defaultPageSize = _ref.defaultPageSize;
    var tCurrent = current || defaultCurrent;
    var tPageSize = pageSize || defaultPageSize;
    if (tPageSize && tCurrent) {
      return tPageSize * (tCurrent - 1) + rowIndex + 1;
    }
    return rowIndex + 1;
  }
  if (isFunction.isFunction(col.cell)) {
    return col.cell(params);
  }
  if (isFunction.isFunction(col.render)) {
    return col.render(_objectSpread(_objectSpread({}, params), {}, {
      type: "cell"
    }));
  }
  var r = col.cell || col.render || get.get(row, col.colKey);
  if (![void 0, "", null].includes(r)) return r;
  if (extra !== null && extra !== void 0 && extra.cellEmptyContent) return extra.cellEmptyContent;
  return r;
}
function renderEllipsisCell(cellParams, params) {
  var cellNode = params.cellNode,
    tableElm = params.tableElm,
    columnLength = params.columnLength,
    classPrefix = params.classPrefix,
    overlayClassName = params.overlayClassName;
  var col = cellParams.col,
    colIndex = cellParams.colIndex;
  var content = isFunction.isFunction(col.ellipsis) ? col.ellipsis(cellParams) : void 0;
  if (_typeof._typeof(col.ellipsis) === "object" && "content" in col.ellipsis && isFunction.isFunction(col.ellipsis.content)) {
    content = col.ellipsis.content(cellParams);
  }
  var tooltipProps = {};
  if (_typeof._typeof(col.ellipsis) === "object") {
    tooltipProps = "props" in col.ellipsis ? col.ellipsis.props : col.ellipsis || void 0;
  }
  var tableElement = tableElm;
  var placement = colIndex === 0 ? "top-left" : "top";
  placement = colIndex === columnLength - 1 ? "top-right" : placement;
  return /* @__PURE__ */React__default["default"].createElement(table_Ellipsis["default"], {
    placement: placement,
    attach: tableElement ? function () {
      return tableElement;
    } : void 0,
    popupContent: content,
    tooltipProps: tooltipProps,
    overlayClassName: overlayClassName,
    classPrefix: classPrefix
  }, cellNode);
}
var Cell = function Cell(props) {
  var cellParams = props.cellParams,
    tableClassNames = props.tableClassNames,
    tableRef = props.tableRef,
    columnLength = props.columnLength,
    classPrefix = props.classPrefix,
    overlayClassName = props.overlayClassName,
    pagination = props.pagination;
  var col = cellParams.col,
    colIndex = cellParams.colIndex,
    rowIndex = cellParams.rowIndex;
  var cellSpans = props.cellSpans,
    dataLength = props.dataLength,
    rowAndColFixedPosition = props.rowAndColFixedPosition,
    cellEmptyContent = props.cellEmptyContent,
    rowspanAndColspan = props.rowspanAndColspan,
    onClick = props.onClick;
  var tableColFixedClasses = tableClassNames.tableColFixedClasses,
    tdEllipsisClass = tableClassNames.tdEllipsisClass,
    tableBaseClass = tableClassNames.tableBaseClass,
    tdAlignClasses = tableClassNames.tdAlignClasses,
    tableDraggableClasses = tableClassNames.tableDraggableClasses;
  var cellNode = renderCell(cellParams, {
    cellEmptyContent: cellEmptyContent,
    pagination: pagination
  });
  var tdStyles = table_hooks_useFixed.getColumnFixedStyles(col, colIndex, rowAndColFixedPosition, tableColFixedClasses);
  var customClasses = table_utils.formatClassNames(col.className, _objectSpread(_objectSpread({}, cellParams), {}, {
    type: "td"
  }));
  var classes = [tdStyles.classes, customClasses, defineProperty._defineProperty(defineProperty._defineProperty(defineProperty._defineProperty(defineProperty._defineProperty(defineProperty._defineProperty({}, tdEllipsisClass, col.ellipsis), tableBaseClass.tdLastRow, rowIndex + cellSpans.rowspan === dataLength), tableBaseClass.tdFirstCol, colIndex === 0 && rowspanAndColspan), tdAlignClasses[col.align], col.align && col.align !== "left"), tableDraggableClasses.handle, col.colKey === "drag")];
  var normalAttrs = isFunction.isFunction(col.attrs) ? col.attrs(_objectSpread(_objectSpread({}, cellParams), {}, {
    type: "td"
  })) : col.attrs;
  var attrs = _objectSpread(_objectSpread({}, normalAttrs), {}, {
    rowSpan: cellSpans.rowspan,
    colSpan: cellSpans.colspan
  });
  return /* @__PURE__ */React__default["default"].createElement("td", _objectSpread(_objectSpread({
    key: col.colKey || colIndex,
    className: classNames__default["default"](classes) || void 0,
    style: tdStyles.style
  }, attrs), {}, {
    onClick: onClick
  }), col.ellipsis ? renderEllipsisCell(cellParams, {
    cellNode: cellNode,
    tableElm: tableRef.current,
    columnLength: columnLength,
    classPrefix: classPrefix,
    overlayClassName: overlayClassName
  }) : cellNode);
};
Cell.displayName = "Cell";

exports["default"] = Cell;
exports.renderCell = renderCell;
//# sourceMappingURL=Cell.js.map
