/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var _typeof = require('../_chunks/dep-667ac7af.js');
var helper = require('../_chunks/dep-002fcc1e.js');
var isFunction = require('../_chunks/dep-ec8d2dca.js');
var isObject = require('../_chunks/dep-fc596d16.js');
var get = require('../_chunks/dep-0c8c9057.js');
require('../_chunks/dep-e4e1901e.js');
require('../_chunks/dep-00b49251.js');
require('../_chunks/dep-2ffa3ff1.js');
require('../_chunks/dep-25585736.js');
require('../_chunks/dep-62e73936.js');
require('../_chunks/dep-3398c1f2.js');
require('../_chunks/dep-64577888.js');
require('../_chunks/dep-79629634.js');
require('../_chunks/dep-21ece627.js');
require('../_chunks/dep-25e4aa84.js');
require('../_chunks/dep-e1fbe1c3.js');
require('../_chunks/dep-255ceed8.js');

function toString(obj) {
  return Object.prototype.toString.call(obj).slice(8, -1).toLowerCase();
}
function debounce(fn) {
  var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 200;
  var timer;
  return function newFn() {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    var context = this;
    clearTimeout(timer);
    timer = setTimeout(function () {
      fn.apply(context, args);
    }, delay);
  };
}
function formatRowAttributes(attributes, params) {
  if (!attributes) return void 0;
  var attrList = attributes instanceof Array ? attributes : [attributes];
  var result = {};
  for (var i = 0; i < attrList.length; i++) {
    var attrItem = attrList[i];
    if (!attrItem) continue;
    var attrProperty = isFunction.isFunction(attrItem) ? attrItem(params) : attrItem;
    result = attrProperty instanceof Array ? formatRowAttributes(attrProperty, params) : Object.assign(result, attrProperty);
  }
  return result;
}
function formatRowClassNames(rowClassNames, params, rowKey) {
  var rowClassList = rowClassNames instanceof Array ? rowClassNames : [rowClassNames];
  var row = params.row,
    rowIndex = params.rowIndex;
  var customClasses = [];
  for (var i = 0, len = rowClassList.length; i < len; i++) {
    var rName = rowClassList[i];
    var tClass = isFunction.isFunction(rName) ? rName(params) : rName;
    if (isObject.isObject(tClass) && !(tClass instanceof Array)) {
      tClass[rowIndex] && (tClass = tClass[rowIndex]);
      var rowId = get.get(row, rowKey || "id");
      tClass[rowId] && (tClass = tClass[rowId]);
    } else if (tClass instanceof Array) {
      tClass = formatRowClassNames(tClass, params, rowKey);
    }
    customClasses = customClasses.concat(tClass);
  }
  return customClasses;
}
function formatClassNames(classNames, params) {
  var classes = classNames instanceof Array ? classNames : [classNames];
  var arr = [];
  for (var i = 0, len = classes.length; i < len; i++) {
    var cls = classes[i];
    if (isFunction.isFunction(cls)) {
      arr.push(cls(params));
    } else {
      arr.push(cls);
    }
  }
  return arr;
}
var INNER_PRE_NAME = "@@inner-";
function getCurrentRowByKey(columns, key) {
  if (!columns || !key) return;
  var col = columns === null || columns === void 0 ? void 0 : columns.find(function (t) {
    return t.colKey === key;
  });
  if (col) return col;
  for (var i = 0, len = columns.length; i < len; i++) {
    var _columns$i;
    if ((_columns$i = columns[i]) !== null && _columns$i !== void 0 && (_columns$i = _columns$i.children) !== null && _columns$i !== void 0 && _columns$i.length) {
      var _columns$i2;
      return getCurrentRowByKey((_columns$i2 = columns[i]) === null || _columns$i2 === void 0 ? void 0 : _columns$i2.children, key);
    }
  }
}
function getAffixProps(mainAffixProps, subAffixProps) {
  if (_typeof._typeof(mainAffixProps) === "object") return mainAffixProps;
  if (_typeof._typeof(subAffixProps) === "object") return subAffixProps;
  return {};
}
var isLessThanIE11OrNotHaveResizeObserver = function isLessThanIE11OrNotHaveResizeObserver() {
  return typeof window === "undefined" || helper.getIEVersion() < 11 || typeof window.ResizeObserver === "undefined";
};
var resizeObserverElement = function resizeObserverElement(tableElement, callback) {
  if (isLessThanIE11OrNotHaveResizeObserver()) return;
  var resizeObserver = new window.ResizeObserver(function () {
    callback === null || callback === void 0 || callback();
  });
  resizeObserver.observe(tableElement);
  return function () {
    var _resizeObserver$unobs, _resizeObserver$disco;
    resizeObserver === null || resizeObserver === void 0 || (_resizeObserver$unobs = resizeObserver.unobserve) === null || _resizeObserver$unobs === void 0 || _resizeObserver$unobs.call(resizeObserver, tableElement);
    resizeObserver === null || resizeObserver === void 0 || (_resizeObserver$disco = resizeObserver.disconnect) === null || _resizeObserver$disco === void 0 || _resizeObserver$disco.call(resizeObserver);
  };
};

exports.INNER_PRE_NAME = INNER_PRE_NAME;
exports.debounce = debounce;
exports.formatClassNames = formatClassNames;
exports.formatRowAttributes = formatRowAttributes;
exports.formatRowClassNames = formatRowClassNames;
exports.getAffixProps = getAffixProps;
exports.getCurrentRowByKey = getCurrentRowByKey;
exports.isLessThanIE11OrNotHaveResizeObserver = isLessThanIE11OrNotHaveResizeObserver;
exports.resizeObserverElement = resizeObserverElement;
exports.toString = toString;
//# sourceMappingURL=utils.js.map
