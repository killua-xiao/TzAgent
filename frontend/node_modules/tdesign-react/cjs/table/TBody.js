/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var defineProperty = require('../_chunks/dep-0006fcfa.js');
var slicedToArray = require('../_chunks/dep-8e4d656d.js');
var React = require('react');
var classNames = require('classnames');
var table_TR = require('./TR.js');
var locale_LocalReceiver = require('../locale/LocalReceiver.js');
var table_hooks_useRowspanAndColspan = require('./hooks/useRowspanAndColspan.js');
var camelCase = require('../_chunks/dep-840b1644.js');
var pick = require('../_chunks/dep-1e4197a4.js');
var get = require('../_chunks/dep-0c8c9057.js');
require('../_chunks/dep-667ac7af.js');
require('../_chunks/dep-00b49251.js');
require('./utils.js');
require('../_chunks/dep-002fcc1e.js');
require('../_chunks/dep-e4e1901e.js');
require('../_chunks/dep-2ffa3ff1.js');
require('../_chunks/dep-25585736.js');
require('../_chunks/dep-62e73936.js');
require('../_chunks/dep-ec8d2dca.js');
require('../_chunks/dep-fc596d16.js');
require('./hooks/useFixed.js');
require('../_chunks/dep-59671c87.js');
require('../_chunks/dep-b73b8db7.js');
require('../hooks/useDebounce.js');
require('../hooks/usePersistFn.js');
require('../_chunks/dep-a231fdc5.js');
require('../_chunks/dep-cf14666e.js');
require('../_chunks/dep-79629634.js');
require('../hooks/usePrevious.js');
require('../_util/listener.js');
require('../_chunks/dep-381fa848.js');
require('../_chunks/dep-4ed9eda4.js');
require('../_chunks/dep-64577888.js');
require('../_chunks/dep-62f5b69f.js');
require('../_chunks/dep-efe6d243.js');
require('../_chunks/dep-6c297e20.js');
require('../_chunks/dep-b7ad4d54.js');
require('../_chunks/dep-edd366db.js');
require('../_chunks/dep-25e4aa84.js');
require('../_chunks/dep-9e5a468d.js');
require('../_chunks/dep-40e87384.js');
require('../_chunks/dep-014b9b78.js');
require('../_chunks/dep-21ece627.js');
require('../_chunks/dep-e1fbe1c3.js');
require('../_chunks/dep-297a4933.js');
require('../_chunks/dep-255ceed8.js');
require('../_chunks/dep-f26edb7b.js');
require('../_chunks/dep-fc29b8b5.js');
require('../_chunks/dep-0ffc9d96.js');
require('../_chunks/dep-eea2872a.js');
require('../_chunks/dep-bff2c990.js');
require('../_chunks/dep-139db759.js');
require('../_chunks/dep-abdd786a.js');
require('../_chunks/dep-d915c90f.js');
require('./hooks/useClassName.js');
require('../hooks/useConfig.js');
require('../config-provider/ConfigContext.js');
require('../_chunks/dep-1df1dad8.js');
require('../_chunks/dep-5b5ab11b.js');
require('dayjs');
require('../_chunks/dep-f32c03f1.js');
require('../_chunks/dep-31c4bc3d.js');
require('../_chunks/dep-71455db7.js');
require('../_chunks/dep-f33c1939.js');
require('../_chunks/dep-df2b541f.js');
require('../_chunks/dep-a56c4939.js');
require('../_chunks/dep-a2cb9299.js');
require('../_chunks/dep-f981815b.js');
require('./hooks/useLazyLoad.js');
require('../_chunks/dep-adacb8cb.js');
require('./Cell.js');
require('./Ellipsis.js');
require('../_util/scroll.js');
require('raf');
require('../_util/easing.js');
require('../tooltip/index.js');
require('../tooltip/Tooltip.js');
require('../_chunks/dep-8fa3a4c2.js');
require('../popup/index.js');
require('../popup/Popup.js');
require('react-transition-group');
require('../_util/ref.js');
require('react-is');
require('../_util/isFragment.js');
require('../common/Portal.js');
require('react-dom');
require('../hooks/useLayoutEffect.js');
require('../hooks/useAnimation.js');
require('../hooks/useAttach.js');
require('../hooks/useControlled.js');
require('../_util/noop.js');
require('../_chunks/dep-66114ce9.js');
require('../_chunks/dep-62d1dd66.js');
require('../_chunks/dep-7a148045.js');
require('../hooks/useDefaultProps.js');
require('../hooks/useMutationObserver.js');
require('../hooks/useLatest.js');
require('../_chunks/dep-eb6d55c1.js');
require('../_chunks/dep-3d4656ee.js');
require('../_chunks/dep-4b18243f.js');
require('../hooks/usePopper.js');
require('@popperjs/core');
require('react-fast-compare');
require('../hooks/useWindowSize.js');
require('../popup/defaultProps.js');
require('../popup/hooks/useTrigger.js');
require('../_util/composeRefs.js');
require('../popup/utils/transition.js');
require('../popup/PopupPlugin.js');
require('../_chunks/dep-65ef8e09.js');
require('../_util/react-render.js');
require('../common/PluginContainer.js');
require('../config-provider/ConfigProvider.js');
require('../_chunks/dep-ab2f63ec.js');
require('../_chunks/dep-a48c7e8b.js');
require('../tooltip/defaultProps.js');
require('../tooltip/TooltipLite.js');
require('../hooks/useSwitch.js');
require('../_chunks/dep-1438af5a.js');
require('../_chunks/dep-3398c1f2.js');
require('../_chunks/dep-e57bdc8f.js');
require('../_chunks/dep-22b1740a.js');
require('../_chunks/dep-373af7a2.js');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);

function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { defineProperty._defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
var ROW_AND_TD_LISTENERS = table_TR.ROW_LISTENERS.concat("cell-click");
var extendTableProps = ["rowKey", "rowClassName", "rowAttributes", "loading", "empty", "fixedRows", "firstFullRow", "lastFullRow", "rowspanAndColspan", "scroll", "cellEmptyContent", "onCellClick", "onPageChange", "onRowClick", "onRowDblclick", "onRowMouseover", "onRowMousedown", "onRowMouseenter", "onRowMouseleave", "onRowMouseup", "onScroll", "onScrollX", "onScrollY"];
function TBody(props) {
  var data = props.data,
    columns = props.columns,
    rowKey = props.rowKey,
    firstFullRow = props.firstFullRow,
    lastFullRow = props.lastFullRow,
    virtualConfig = props.virtualConfig,
    allTableClasses = props.allTableClasses;
  var _useLocaleReceiver = locale_LocalReceiver.useLocaleReceiver("table"),
    _useLocaleReceiver2 = slicedToArray._slicedToArray(_useLocaleReceiver, 2),
    global = _useLocaleReceiver2[0],
    t = _useLocaleReceiver2[1];
  var tableFullRowClasses = allTableClasses.tableFullRowClasses,
    tableBaseClass = allTableClasses.tableBaseClass;
  var _useRowspanAndColspan = table_hooks_useRowspanAndColspan["default"](data, columns, rowKey, props.rowspanAndColspan),
    skipSpansMap = _useRowspanAndColspan.skipSpansMap;
  var columnLength = columns.length;
  var dataLength = data === null || data === void 0 ? void 0 : data.length;
  var tbodyClasses = React.useMemo(function () {
    return [tableBaseClass.body];
  }, [tableBaseClass.body]);
  var hasFullRowConfig = React.useMemo(function () {
    return firstFullRow || lastFullRow;
  }, [firstFullRow, lastFullRow]);
  var renderEmpty = function renderEmpty(columns2) {
    return /* @__PURE__ */React__default["default"].createElement("tr", {
      className: classNames__default["default"]([tableBaseClass.emptyRow, defineProperty._defineProperty({}, tableFullRowClasses.base, props.isWidthOverflow)])
    }, /* @__PURE__ */React__default["default"].createElement("td", {
      colSpan: columns2.length
    }, /* @__PURE__ */React__default["default"].createElement("div", {
      className: classNames__default["default"]([tableBaseClass.empty, defineProperty._defineProperty({}, tableFullRowClasses.innerFullRow, props.isWidthOverflow)]),
      style: props.isWidthOverflow ? {
        width: "".concat(props.tableWidth.current, "px")
      } : {}
    }, props.empty || t(global.empty))));
  };
  var getFullRow = function getFullRow(columnLength2, type) {
    var tType = camelCase.camelCase(type);
    var fullRowNode = {
      "first-full-row": firstFullRow,
      "last-full-row": lastFullRow
    }[type];
    if (!fullRowNode) return null;
    var isFixedToLeft = props.isWidthOverflow && columns.find(function (col) {
      return col.fixed === "left";
    });
    var classes = [tableFullRowClasses.base, tableFullRowClasses[tType]];
    return /* @__PURE__ */React__default["default"].createElement("tr", {
      className: classNames__default["default"](classes)
    }, /* @__PURE__ */React__default["default"].createElement("td", {
      colSpan: columnLength2
    }, /* @__PURE__ */React__default["default"].createElement("div", {
      className: classNames__default["default"](defineProperty._defineProperty({}, tableFullRowClasses.innerFullRow, isFixedToLeft)),
      style: isFixedToLeft ? {
        width: "".concat(props.tableWidth.current, "px")
      } : {}
    }, /* @__PURE__ */React__default["default"].createElement("div", {
      className: tableFullRowClasses.innerFullElement
    }, fullRowNode))));
  };
  var firstFullRowNode = React.useMemo(function () {
    return getFullRow(columnLength, "first-full-row");
  }, [firstFullRow, columnLength, getFullRow]);
  var lastFullRowNode = React.useMemo(function () {
    return getFullRow(columnLength, "last-full-row");
  }, [lastFullRow, columnLength, getFullRow]);
  var isSkipSnapsMapNotFinish = Boolean(props.rowspanAndColspan && !skipSpansMap.size);
  var getTRNodeList = function getTRNodeList() {
    if (isSkipSnapsMapNotFinish) return null;
    var trNodeList = [];
    var properties = ["classPrefix", "ellipsisOverlayClassName", "rowAndColFixedPosition", "scroll", "tableRef", "tableContentRef", "trs", "bufferSize", "isVirtual", "rowHeight", "scrollType"];
    var renderData = virtualConfig.isVirtualScroll ? virtualConfig.visibleData : data;
    renderData === null || renderData === void 0 || renderData.forEach(function (row, rowIndex) {
      var trProps = _objectSpread(_objectSpread(_objectSpread({}, pick.pick(props, table_TR.TABLE_PROPS)), {}, {
        rowKey: props.rowKey || "id",
        row: row,
        columns: columns,
        rowIndex: row.__VIRTUAL_SCROLL_INDEX || rowIndex,
        dataLength: dataLength,
        skipSpansMap: skipSpansMap,
        virtualConfig: virtualConfig,
        classPrefix: props.classPrefix,
        ellipsisOverlayClassName: props.ellipsisOverlayClassName
      }, pick.pick(props, properties)), {}, {
        pagination: props.pagination
      });
      if (props.onCellClick) {
        trProps.onCellClick = props.onCellClick;
      }
      var trNode = /* @__PURE__ */React__default["default"].createElement(table_TR["default"], _objectSpread(_objectSpread({
        key: get.get(row, props.rowKey || "id") || rowIndex
      }, trProps), {}, {
        onRowMounted: props.handleRowMounted
      }));
      trNodeList.push(trNode);
      if (props.renderExpandedRow) {
        var p = {
          row: row,
          index: rowIndex,
          columns: columns,
          tableWidth: props.tableWidth.current,
          isWidthOverflow: props.isWidthOverflow
        };
        var expandedContent = props.renderExpandedRow(p);
        expandedContent && trNodeList.push(expandedContent);
      }
    });
    return trNodeList;
  };
  var isEmpty = !(data !== null && data !== void 0 && data.length) && !props.loading && !hasFullRowConfig;
  var translate = "translateY(".concat(virtualConfig.translateY, "px)");
  var posStyle = virtualConfig.isVirtualScroll ? {
    transform: translate,
    msTransform: translate,
    MozTransform: translate,
    WebkitTransform: translate
  } : void 0;
  var list = /* @__PURE__ */React__default["default"].createElement(React__default["default"].Fragment, null, firstFullRowNode, getTRNodeList(), lastFullRowNode);
  return /* @__PURE__ */React__default["default"].createElement("tbody", {
    className: classNames__default["default"](tbodyClasses),
    style: _objectSpread({}, posStyle)
  }, isEmpty ? renderEmpty(columns) : list);
}
TBody.displayName = "TBody";

exports.ROW_AND_TD_LISTENERS = ROW_AND_TD_LISTENERS;
exports["default"] = TBody;
exports.extendTableProps = extendTableProps;
//# sourceMappingURL=TBody.js.map
