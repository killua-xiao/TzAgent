{"version":3,"file":"useFilter.js","sources":["../../../../components/table/hooks/useFilter.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getColumnsResetValue } from '@tdesign/common-js/table/utils';\nimport { isFunction } from 'lodash-es';\nimport TButton from '../../button';\nimport useControlled from '../../hooks/useControlled';\nimport { useLocaleReceiver } from '../../locale/LocalReceiver';\nimport TableFilterController from '../FilterController';\nimport type { PrimaryTableRef } from '../interface';\nimport type {\n  FilterValue,\n  PrimaryTableCol,\n  TableFilterChangeContext,\n  TableRowData,\n  TdPrimaryTableProps,\n} from '../type';\nimport useClassName from './useClassName';\n\nfunction isFilterValueExist(value: any) {\n  const isArrayTrue = value instanceof Array && value.length;\n  const isObject = typeof value === 'object' && !(value instanceof Array);\n  const isObjectTrue = isObject && Object.keys(value || {}).length;\n  return isArrayTrue || isObjectTrue || ![null, '', undefined].includes(value);\n}\n\n// 筛选条件不为空，才需要显示筛选结果行\nfunction filterEmptyData(data: FilterValue) {\n  const newFilterValue: FilterValue = {};\n  Object.keys(data).forEach((key) => {\n    const item = data[key];\n    if (isFilterValueExist(item)) {\n      newFilterValue[key] = item;\n    }\n  });\n  return newFilterValue;\n}\n\nexport default function useFilter(\n  props: TdPrimaryTableProps,\n  primaryTableRef: React.MutableRefObject<PrimaryTableRef>,\n) {\n  const { columns } = props;\n  const [locale, t] = useLocaleReceiver('table');\n  const { tableFilterClasses, isFocusClass } = useClassName();\n  const [isTableOverflowHidden, setIsTableOverflowHidden] = useState<boolean>();\n\n  // unControl and control\n  const [tFilterValue, setTFilterValue] = useControlled(props, 'filterValue', props.onFilterChange);\n\n  // 过滤内部值\n  const [innerFilterValue, setInnerFilterValue] = useState<FilterValue>(tFilterValue);\n\n  const hasEmptyCondition = (() => {\n    const filterEmpty = filterEmptyData(tFilterValue || {});\n    return !tFilterValue || !Object.keys(filterEmpty).length;\n  })();\n\n  useEffect(() => {\n    setInnerFilterValue(tFilterValue);\n  }, [tFilterValue]);\n\n  function renderFirstFilterRow() {\n    if (hasEmptyCondition) return null;\n    const defaultNode = (\n      <div className={tableFilterClasses.result}>\n        <span>\n          {/* 搜索 “{getFilterResultContent()}”， */}\n          {/* 找到 {props.pagination?.total || props.data?.length} 条结果 */}\n          {t(locale.searchResultText, {\n            result: getFilterResultContent(),\n            count: props.pagination?.total || props.data?.length,\n          })}\n        </span>\n        <TButton theme=\"primary\" variant=\"text\" onClick={onResetAll}>\n          {locale.clearFilterResultButtonText}\n        </TButton>\n      </div>\n    );\n    const filterContent = isFunction(props.filterRow) ? props.filterRow() : props.filterRow;\n    if (filterContent === null) return null;\n    const r = filterContent || defaultNode;\n    if (!r) return null;\n    return <div className={tableFilterClasses.inner}>{r}</div>;\n  }\n\n  // 获取搜索条件内容，存在 options 需要获取其 label 显示\n  function getFilterResultContent(): string {\n    const arr: string[] = [];\n    props.columns\n      .filter((col) => col.filter)\n      .forEach((col) => {\n        let value = tFilterValue[col.colKey];\n        if (col.filter.list && !['null', '', 'undefined'].includes(String(value))) {\n          const formattedValue = value instanceof Array ? value : [value];\n          const label: string[] = [];\n          col.filter.list.forEach((option) => {\n            if (formattedValue.includes(option.value)) {\n              label.push(option.label);\n            }\n          });\n          value = label.join();\n        }\n        if (isFilterValueExist(value)) {\n          arr.push(`${col.title}：${value}`);\n        }\n      });\n    return arr.join('；');\n  }\n\n  function onInnerFilterChange(val: any, column: PrimaryTableCol) {\n    const filterValue = {\n      ...innerFilterValue,\n      [column.colKey]: val,\n    };\n    setInnerFilterValue(filterValue);\n    if (!column.filter.showConfirmAndReset) {\n      emitFilterChange(filterValue, 'filter-change', column);\n    }\n  }\n\n  function emitFilterChange(\n    filterValue: FilterValue,\n    trigger: TableFilterChangeContext<TableRowData>['trigger'],\n    column?: PrimaryTableCol,\n  ) {\n    setTFilterValue(filterValue, { col: column, trigger });\n    props.onChange?.({ filter: filterValue }, { trigger: 'filter' });\n    // 重置表格滚动位置\n    requestAnimationFrame(() => {\n      primaryTableRef.current?.scrollToElement({\n        index: -1,\n      });\n    });\n  }\n\n  function onReset(column: PrimaryTableCol) {\n    const filterValue: FilterValue = {\n      ...tFilterValue,\n      [column.colKey]:\n        {\n          single: '',\n          multiple: [],\n          input: '',\n        }[column.filter.type] ||\n        column.filter.resetValue ||\n        '',\n    };\n    emitFilterChange(filterValue, 'reset', column);\n  }\n\n  function onResetAll() {\n    const resetValue: { [key: string]: any } = getColumnsResetValue(columns);\n    emitFilterChange(resetValue, 'clear', undefined);\n  }\n\n  function onConfirm(column: PrimaryTableCol) {\n    emitFilterChange(innerFilterValue, 'confirm', column);\n  }\n\n  // 图标：内置图标，组件自定义图标，全局配置图标\n  function renderFilterIcon({ col, colIndex }: { col: PrimaryTableCol<TableRowData>; colIndex: number }) {\n    return (\n      <TableFilterController\n        column={col}\n        colIndex={colIndex}\n        // @ts-ignore TODO 待类型完善后移除\n        filterIcon={props.filterIcon}\n        tFilterValue={tFilterValue}\n        innerFilterValue={innerFilterValue}\n        tableFilterClasses={tableFilterClasses}\n        isFocusClass={isFocusClass}\n        popupProps={col.filter.popupProps}\n        onReset={onReset}\n        onConfirm={onConfirm}\n        onInnerFilterChange={onInnerFilterChange}\n        primaryTableElement={primaryTableRef?.current?.tableElement}\n        onVisibleChange={onPopupVisibleChange}\n      ></TableFilterController>\n    );\n  }\n\n  function onPopupVisibleChange(visible: boolean) {\n    if (visible && !isTableOverflowHidden) {\n      setIsTableOverflowHidden(!visible);\n    }\n  }\n\n  return {\n    hasEmptyCondition,\n    isTableOverflowHidden,\n    renderFilterIcon,\n    renderFirstFilterRow,\n  };\n}\n"],"names":["isFilterValueExist","value","isArrayTrue","Array","length","isObject","_typeof","isObjectTrue","Object","keys","includes","filterEmptyData","data","newFilterValue","forEach","key","item","useFilter","props","primaryTableRef","columns","_useLocaleReceiver","useLocaleReceiver","_useLocaleReceiver2","_slicedToArray","locale","t","_useClassName","useClassName","tableFilterClasses","isFocusClass","_useState","useState","_useState2","isTableOverflowHidden","setIsTableOverflowHidden","_useControlled","useControlled","onFilterChange","_useControlled2","tFilterValue","setTFilterValue","_useState3","_useState4","innerFilterValue","setInnerFilterValue","hasEmptyCondition","filterEmpty","useEffect","renderFirstFilterRow","_props$pagination","_props$data","defaultNode","React","createElement","className","result","searchResultText","getFilterResultContent","count","pagination","total","TButton","theme","variant","onClick","onResetAll","clearFilterResultButtonText","filterContent","isFunction","filterRow","r","inner","arr","filter","col","colKey","list","String","formattedValue","label","option","push","join","concat","title","onInnerFilterChange","val","column","filterValue","_objectSpread","_defineProperty","showConfirmAndReset","emitFilterChange","trigger","_props$onChange","onChange","call","requestAnimationFrame","_primaryTableRef$curr","current","scrollToElement","index","onReset","single","multiple","input","type","resetValue","getColumnsResetValue","onConfirm","renderFilterIcon","_ref","_primaryTableRef$curr2","colIndex","TableFilterController","filterIcon","popupProps","primaryTableElement","tableElement","onVisibleChange","onPopupVisibleChange","visible"],"mappings":"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"}