{"version":3,"file":"useLazyLoad.js","sources":["../../../../components/table/hooks/useLazyLoad.ts"],"sourcesContent":["/**\n * 原作者 @louiszhai 思路\n */\nimport { useState, useMemo, useEffect } from 'react';\nimport type React from 'react';\nimport observe from '@tdesign/common-js/utils/observe';\n\nexport type UseLazyLoadParams = {\n  type: 'lazy' | 'virtual';\n  rowIndex: number;\n  rowHeight?: number;\n  bufferSize?: number;\n};\n\nexport default function useLazyLoad(\n  containerRef: HTMLElement,\n  childRef: React.MutableRefObject<HTMLTableRowElement>,\n  params: UseLazyLoadParams,\n) {\n  // useMemo 用意：1. 为了实时响应数据；2. 表格的计算量容易过大，提前存储\n  const tRowHeight = useMemo(() => Math.max(params.rowHeight || 48, 48), [params.rowHeight]);\n  const [isInit, setIsInit] = useState(() => params.rowIndex === -1);\n  const hasLazyLoadHolder = useMemo(() => params?.type === 'lazy' && !isInit, [isInit, params?.type]);\n\n  const requestAnimationFrame =\n    (typeof window === 'undefined' ? false : window.requestAnimationFrame) || ((cb) => setTimeout(cb, 16.6));\n\n  const init = () => {\n    if (!isInit) {\n      requestAnimationFrame(() => {\n        setIsInit(true);\n      });\n    }\n  };\n\n  useEffect(() => {\n    if (params?.type !== 'lazy') return;\n    const timer = setTimeout(() => {\n      const bufferSize = Math.max(10, params.bufferSize || 10);\n      const height = tRowHeight * bufferSize;\n      childRef && observe(childRef.current, containerRef, init, height);\n      clearTimeout(timer);\n    });\n    return () => {\n      clearTimeout(timer);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [childRef, containerRef, params.bufferSize, params?.type, tRowHeight]);\n\n  return {\n    hasLazyLoadHolder,\n    tRowHeight,\n  };\n}\n"],"names":["useLazyLoad","containerRef","childRef","params","tRowHeight","useMemo","Math","max","rowHeight","_useState","useState","rowIndex","_useState2","_slicedToArray","isInit","setIsInit","hasLazyLoadHolder","type","requestAnimationFrame","window","cb","setTimeout","init","useEffect","timer","bufferSize","height","observe","current","clearTimeout"],"mappings":";;;;;;;;;;;;;;;AAcwB,SAAAA,WAAAA,CACtBC,YACA,EAAAC,QAAA,EACAC,MACA,EAAA;EAEA,IAAMC,UAAa,GAAAC,aAAA,CAAQ,YAAA;IAAA,OAAMC,IAAA,CAAKC,GAAI,CAAAJ,MAAA,CAAOK,SAAa,IAAA,EAAA,EAAI,EAAE,CAAA,CAAA;AAAA,GAAA,EAAG,CAACL,MAAA,CAAOK,SAAS,CAAC,CAAA,CAAA;EACnF,IAAAC,SAAA,GAAsBC,eAAS,YAAA;AAAA,MAAA,OAAMP,MAAA,CAAOQ,aAAa,CAAE,CAAA,CAAA;KAAA,CAAA;IAAAC,UAAA,GAAAC,4BAAA,CAAAJ,SAAA,EAAA,CAAA,CAAA;AAA1DK,IAAAA;AAAQC,IAAAA,SAAS,GAAAH,UAAA,CAAA,CAAA,CAAA,CAAA;EACxB,IAAMI,iBAAoB,GAAAX,aAAA,CAAQ,YAAA;AAAA,IAAA,OAAM,CAAAF,MAAA,KAAAA,IAAAA,IAAAA,MAAA,KAAAA,KAAAA,CAAAA,GAAAA,KAAAA,CAAAA,GAAAA,MAAA,CAAQc,IAAS,MAAA,MAAA,IAAU,CAACH,MAAA,CAAA;GAAQ,EAAA,CAACA,MAAA,EAAQX,MAAQ,KAAA,IAAA,IAARA,MAAQ,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAARA,MAAQ,CAAAc,IAAI,CAAC,CAAA,CAAA;AAE5F,EAAA,IAAAC,qBAAA,GAAA,CACH,OAAOC,MAAA,KAAW,WAAc,GAAA,KAAA,GAAQA,MAAO,CAAAD,qBAAA,KAA2B,UAACE,EAAA,EAAA;AAAA,IAAA,OAAOC,UAAW,CAAAD,EAAA,EAAI,IAAI,CAAA,CAAA;GAAA,CAAA;AAExG,EAAA,IAAME,OAAO,SAAPA,OAAa;IACjB,IAAI,CAACR,MAAQ,EAAA;AACXI,MAAAA,qBAAA,CAAsB,YAAM;QAC1BH,SAAA,CAAU,IAAI,CAAA,CAAA;AAChB,OAAC,CAAA,CAAA;AACH,KAAA;GACF,CAAA;AAEAQ,EAAAA,eAAA,CAAU,YAAM;IACd,IAAI,CAAApB,mBAAAA,6BAAAA,OAAQc,IAAS,MAAA,MAAA,EAAQ,OAAA;AACvB,IAAA,IAAAO,KAAA,GAAQH,WAAW,YAAM;AAC7B,MAAA,IAAMI,aAAanB,IAAK,CAAAC,GAAA,CAAI,EAAI,EAAAJ,MAAA,CAAOsB,cAAc,EAAE,CAAA,CAAA;AACvD,MAAA,IAAMC,SAAStB,UAAa,GAAAqB,UAAA,CAAA;AAC5BvB,MAAAA,QAAA,IAAYyB,eAAQ,CAAAzB,QAAA,CAAS0B,OAAS,EAAA3B,YAAA,EAAcqB,MAAMI,MAAM,CAAA,CAAA;MAChEG,YAAA,CAAaL,KAAK,CAAA,CAAA;AACpB,KAAC,CAAA,CAAA;AACD,IAAA,OAAO,YAAM;MACXK,YAAA,CAAaL,KAAK,CAAA,CAAA;KACpB,CAAA;GAEF,EAAG,CAACtB,QAAU,EAAAD,YAAA,EAAcE,OAAOsB,UAAY,EAAAtB,MAAA,KAAAA,IAAAA,IAAAA,MAAA,uBAAAA,MAAA,CAAQc,IAAM,EAAAb,UAAU,CAAC,CAAA,CAAA;EAEjE,OAAA;AACLY,IAAAA,iBAAA,EAAAA,iBAAA;AACAZ,IAAAA,UAAA,EAAAA,UAAAA;GACF,CAAA;AACF;;;;"}