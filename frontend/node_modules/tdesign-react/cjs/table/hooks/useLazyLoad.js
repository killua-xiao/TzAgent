/**
 * tdesign v1.15.1
 * (c) 2025 tdesign
 * @license MIT
 */

'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var slicedToArray = require('../../_chunks/dep-8e4d656d.js');
var React = require('react');
var observe = require('../../_chunks/dep-adacb8cb.js');
require('../../_chunks/dep-00b49251.js');

function useLazyLoad(containerRef, childRef, params) {
  var tRowHeight = React.useMemo(function () {
    return Math.max(params.rowHeight || 48, 48);
  }, [params.rowHeight]);
  var _useState = React.useState(function () {
      return params.rowIndex === -1;
    }),
    _useState2 = slicedToArray._slicedToArray(_useState, 2),
    isInit = _useState2[0],
    setIsInit = _useState2[1];
  var hasLazyLoadHolder = React.useMemo(function () {
    return (params === null || params === void 0 ? void 0 : params.type) === "lazy" && !isInit;
  }, [isInit, params === null || params === void 0 ? void 0 : params.type]);
  var requestAnimationFrame = (typeof window === "undefined" ? false : window.requestAnimationFrame) || function (cb) {
    return setTimeout(cb, 16.6);
  };
  var init = function init() {
    if (!isInit) {
      requestAnimationFrame(function () {
        setIsInit(true);
      });
    }
  };
  React.useEffect(function () {
    if ((params === null || params === void 0 ? void 0 : params.type) !== "lazy") return;
    var timer = setTimeout(function () {
      var bufferSize = Math.max(10, params.bufferSize || 10);
      var height = tRowHeight * bufferSize;
      childRef && observe.observe(childRef.current, containerRef, init, height);
      clearTimeout(timer);
    });
    return function () {
      clearTimeout(timer);
    };
  }, [childRef, containerRef, params.bufferSize, params === null || params === void 0 ? void 0 : params.type, tRowHeight]);
  return {
    hasLazyLoadHolder: hasLazyLoadHolder,
    tRowHeight: tRowHeight
  };
}

exports["default"] = useLazyLoad;
//# sourceMappingURL=useLazyLoad.js.map
