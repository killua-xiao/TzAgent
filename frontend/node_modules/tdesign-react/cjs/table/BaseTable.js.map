{"version":3,"file":"BaseTable.js","sources":["../../../components/table/BaseTable.tsx"],"sourcesContent":["import React, {\n  forwardRef,\n  RefAttributes,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n  WheelEvent,\n} from 'react';\nimport classNames from 'classnames';\nimport { pick } from 'lodash-es';\nimport log from '@tdesign/common-js/log/index';\nimport { getIEVersion } from '@tdesign/common-js/utils/helper';\nimport Affix, { type AffixRef } from '../affix';\nimport { Styles } from '../common';\nimport useDefaultProps from '../hooks/useDefaultProps';\nimport useElementLazyRender from '../hooks/useElementLazyRender';\nimport useVirtualScroll from '../hooks/useVirtualScroll';\nimport Loading from '../loading';\nimport TBody, { extendTableProps, TableBodyProps } from './TBody';\nimport TFoot from './TFoot';\nimport THead, { type TheadProps } from './THead';\nimport { ROW_LISTENERS } from './TR';\nimport { baseTableDefaultProps } from './defaultProps';\nimport useAffix from './hooks/useAffix';\nimport useClassName from './hooks/useClassName';\nimport useColumnResize from './hooks/useColumnResize';\nimport useFixed from './hooks/useFixed';\nimport usePagination from './hooks/usePagination';\nimport useStyle, { formatCSSUnit } from './hooks/useStyle';\nimport useTableHeader from './hooks/useTableHeader';\nimport type { BaseTableProps, BaseTableRef } from './interface';\nimport type { TableRowData } from './type';\nimport { getAffixProps } from './utils';\n\nexport const BASE_TABLE_EVENTS = ['page-change', 'cell-click', 'scroll', 'scrollX', 'scrollY'];\nexport const BASE_TABLE_ALL_EVENTS = ROW_LISTENERS.map((t) => `row-${t}`).concat(BASE_TABLE_EVENTS);\n\nexport interface TableListeners {\n  [key: string]: Function;\n}\n\nconst BaseTable = forwardRef<BaseTableRef, BaseTableProps>((originalProps, ref) => {\n  const props = useDefaultProps<BaseTableProps<TableRowData>>(originalProps, baseTableDefaultProps);\n  const {\n    showHeader = true,\n    tableLayout,\n    height,\n    data,\n    columns,\n    style,\n    headerAffixedTop,\n    bordered,\n    resizable,\n    lazyLoad,\n    pagination,\n  } = props;\n  const tableRef = useRef<HTMLDivElement>(null);\n  const tableElmRef = useRef<HTMLTableElement>(null);\n  const bottomContentRef = useRef<HTMLDivElement>(null);\n  const [tableFootHeight, setTableFootHeight] = useState(0);\n  const [lastTrHeight, setLastTrHeight] = useState(0);\n  const allTableClasses = useClassName();\n\n  const { classPrefix, virtualScrollClasses, tableLayoutClasses, tableBaseClass, tableColFixedClasses } =\n    allTableClasses;\n  // 表格基础样式类\n  const { tableClasses, sizeClassNames, tableContentStyles, tableElementStyles } = useStyle(props);\n  const { isMultipleHeader, spansAndLeafNodes, thList } = useTableHeader({ columns: props.columns });\n  const finalColumns = useMemo(\n    () => spansAndLeafNodes?.leafColumns || columns,\n    [spansAndLeafNodes?.leafColumns, columns],\n  );\n\n  const { showElement } = useElementLazyRender(tableRef, lazyLoad);\n  const paginationAffixRef = useRef<AffixRef>(null);\n  const horizontalScrollAffixRef = useRef<AffixRef>(null);\n  const headerTopAffixRef = useRef<AffixRef>(null);\n  const footerBottomAffixRef = useRef<AffixRef>(null);\n\n  // 1. 表头吸顶；2. 表尾吸底；3. 底部滚动条吸底；4. 分页器吸底\n  const {\n    affixHeaderRef,\n    affixFooterRef,\n    horizontalScrollbarRef,\n    paginationRef,\n    showAffixHeader,\n    showAffixFooter,\n    showAffixPagination,\n    onHorizontalScroll,\n    setTableContentRef,\n    updateAffixHeaderOrFooter,\n  } = useAffix(props, { showElement });\n\n  // 固定表头和固定列逻辑\n  const {\n    scrollbarWidth,\n    tableWidth,\n    tableElmWidth,\n    tableContentRef,\n    isFixedHeader,\n    isWidthOverflow,\n    isFixedColumn,\n    thWidthList,\n    showColumnShadow,\n    rowAndColFixedPosition,\n    setData,\n    refreshTable,\n    setTableElmWidth,\n    emitScrollEvent,\n    setUseFixedTableElmRef,\n    updateColumnFixedShadow,\n    getThWidthList,\n    updateThWidthList,\n    addTableResizeObserver,\n    updateTableAfterColumnResize,\n  } = useFixed(props, finalColumns, {\n    paginationAffixRef,\n    horizontalScrollAffixRef,\n    headerTopAffixRef,\n    footerBottomAffixRef,\n  });\n\n  const { dataSource, innerPagination, isPaginateData, renderPagination } = usePagination(props, tableContentRef);\n\n  // 列宽拖拽逻辑\n  const columnResizeParams = useColumnResize({\n    isWidthOverflow,\n    tableContentRef,\n    showColumnShadow,\n    getThWidthList,\n    updateThWidthList,\n    setTableElmWidth,\n    updateTableAfterColumnResize,\n    onColumnResizeChange: props.onColumnResizeChange,\n  });\n  const { resizeLineRef, resizeLineStyle, setEffectColMap, updateTableWidthOnColumnChange } = columnResizeParams;\n\n  const dynamicBaseTableClasses = classNames(\n    tableClasses.concat({\n      [tableBaseClass.headerFixed]: isFixedHeader,\n      [tableBaseClass.columnFixed]: isFixedColumn,\n      [tableBaseClass.widthOverflow]: isWidthOverflow,\n      [tableBaseClass.multipleHeader]: isMultipleHeader,\n      [tableColFixedClasses.leftShadow]: showColumnShadow.left,\n      [tableColFixedClasses.rightShadow]: showColumnShadow.right,\n      [tableBaseClass.columnResizableTable]: props.resizable,\n    }),\n  );\n\n  const tableElmClasses = classNames([\n    [tableLayoutClasses[tableLayout || 'fixed']],\n    { [tableBaseClass.fullHeight]: height },\n  ]);\n\n  const showRightDivider = useMemo(\n    () => props.bordered && isFixedHeader && ((isMultipleHeader && isWidthOverflow) || !isMultipleHeader),\n    [isFixedHeader, isMultipleHeader, isWidthOverflow, props.bordered],\n  );\n\n  const [dividerBottom, setDividerBottom] = useState(0);\n  useEffect(() => {\n    if (!bordered) return;\n    const bottomRect = bottomContentRef.current?.getBoundingClientRect();\n    const paginationRect = paginationRef.current?.getBoundingClientRect();\n    const bottom = (bottomRect?.height || 0) + (paginationRect?.height || 0);\n    setDividerBottom(bottom);\n  }, [bottomContentRef, paginationRef, bordered]);\n\n  useEffect(() => {\n    setUseFixedTableElmRef(tableElmRef.current);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tableElmRef]);\n\n  useEffect(() => {\n    setData(isPaginateData ? dataSource : props.data);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.data, dataSource, isPaginateData]);\n\n  const [lastLeafColumns, setLastLeafColumns] = useState(props.columns || []);\n\n  useEffect(() => {\n    if (lastLeafColumns.map((t) => t.colKey).join() !== spansAndLeafNodes.leafColumns.map((t) => t.colKey).join()) {\n      props.onLeafColumnsChange?.(spansAndLeafNodes.leafColumns);\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      setLastLeafColumns(spansAndLeafNodes.leafColumns);\n    }\n    setEffectColMap(spansAndLeafNodes.leafColumns, null);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [spansAndLeafNodes.leafColumns]);\n\n  const onFixedChange = () => {\n    const timer = setTimeout(() => {\n      onHorizontalScroll();\n      updateAffixHeaderOrFooter();\n      clearTimeout(timer);\n    }, 0);\n  };\n\n  const virtualScrollParams = useMemo(\n    () => ({\n      data,\n      scroll: { ...props.scroll, fixedRows: props.fixedRows },\n    }),\n    [data, props.scroll, props.fixedRows],\n  );\n  const virtualConfig = useVirtualScroll(tableContentRef, virtualScrollParams);\n\n  let lastScrollY = -1;\n  const onInnerVirtualScroll = (e: WheelEvent<HTMLDivElement>) => {\n    const target = e.target as HTMLElement;\n    const top = target.scrollTop;\n    // 排除横向滚动触发的纵向虚拟滚动计算\n    if (lastScrollY !== top) {\n      virtualConfig.isVirtualScroll && virtualConfig.handleScroll();\n    } else {\n      lastScrollY = -1;\n      updateColumnFixedShadow(target);\n    }\n    lastScrollY = top;\n    onHorizontalScroll(target);\n    emitScrollEvent(e);\n  };\n\n  /**\n   * 横向滚动到指定列\n   * 对外暴露方法，修改时需谨慎（expose）\n   * @param colKey\n   * @returns\n   */\n  const scrollColumnIntoView = (colKey: string) => {\n    if (!tableContentRef.current) return;\n    const thDom = tableContentRef.current.querySelector(`th[data-colkey=\"${colKey}\"]`);\n    const fixedThDom = tableContentRef.current.querySelectorAll('th.t-table__cell--fixed-left');\n    let totalWidth = 0;\n    for (let i = 0, len = fixedThDom.length; i < len; i++) {\n      totalWidth += fixedThDom[i].getBoundingClientRect().width;\n    }\n    const domRect = thDom.getBoundingClientRect();\n    const contentRect = tableContentRef.current.getBoundingClientRect();\n    const distance = domRect.left - contentRect.left - totalWidth;\n    tableContentRef.current.scrollTo({ left: distance, behavior: 'smooth' });\n  };\n\n  useImperativeHandle(ref, () => ({\n    showColumnShadow,\n    tableElement: tableRef.current,\n    tableHtmlElement: tableElmRef.current,\n    tableContentElement: tableContentRef.current,\n    affixHeaderElement: affixHeaderRef.current,\n    refreshTable,\n    scrollToElement: virtualConfig.scrollToElement,\n    scrollColumnIntoView,\n    updateTableWidthOnColumnChange,\n  }));\n\n  // used for top margin\n  const getTFootHeight = () => {\n    requestAnimationFrame(() => {\n      if (!tableElmRef.current) return;\n      const height = tableElmRef.current.querySelector('tfoot')?.offsetHeight;\n      setTableFootHeight(height || 0);\n    });\n  };\n\n  const getLastTrHeight = () => {\n    requestAnimationFrame(() => {\n      if (!tableElmRef.current || !props.firstFullRow) return;\n      const tbody = tableElmRef.current.querySelector('tbody');\n      const allTr = tbody?.querySelectorAll('tr');\n      const lastTr = allTr?.[allTr.length - 1];\n      const height = lastTr?.offsetHeight;\n      setLastTrHeight(height || 0);\n    });\n  };\n\n  useEffect(getTFootHeight, [tableElmRef, props.footData, props.footerSummary]);\n  useEffect(getLastTrHeight, [tableElmRef, props.firstFullRow]);\n\n  useEffect(() => {\n    setTableContentRef(tableContentRef.current);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [tableContentRef]);\n\n  useEffect(\n    () => addTableResizeObserver(tableRef.current),\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [tableRef],\n  );\n\n  const newData = isPaginateData ? dataSource : data;\n\n  const renderColGroup = (isFixedHeader = true) => (\n    <colgroup>\n      {finalColumns.map((col, index) => {\n        const style: Styles = {\n          width: formatCSSUnit((isFixedHeader || resizable ? thWidthList.current[col.colKey] : undefined) || col.width),\n        };\n        if (col.minWidth) {\n          style.minWidth = formatCSSUnit(col.minWidth);\n        }\n        // 没有设置任何宽度的场景下，需要保留表格正常显示的最小宽度，否则会出现因宽度过小的抖动问题\n        if (!style.width && !col.minWidth && props.tableLayout === 'fixed') {\n          style.minWidth = '80px';\n        }\n        return <col key={col.colKey || index} style={style} />;\n      })}\n    </colgroup>\n  );\n  const headProps: TheadProps = {\n    isFixedHeader,\n    rowAndColFixedPosition,\n    isMultipleHeader,\n    bordered: props.bordered,\n    maxHeight: props.maxHeight,\n    height: props.height,\n    spansAndLeafNodes,\n    thList,\n    thWidthList: thWidthList.current,\n    resizable: props.resizable,\n    columnResizeParams,\n    classPrefix,\n    ellipsisOverlayClassName: props.size !== 'medium' ? sizeClassNames[props.size] : '',\n    attach: props.attach,\n    thDraggable: props.thDraggable,\n    showColumnShadow,\n  };\n\n  const headUseMemoDependencies = [\n    resizable,\n    thWidthList,\n    isFixedHeader,\n    rowAndColFixedPosition,\n    isMultipleHeader,\n    spansAndLeafNodes,\n    thList,\n    columnResizeParams,\n    classPrefix,\n    props.bordered,\n    props.resizable,\n    props.size,\n  ];\n\n  // 多级表头左边线缺失\n  const affixedLeftBorder = props.bordered ? 1 : 0;\n\n  // IE浏览器需要遮挡header吸顶滚动条，要减去getBoundingClientRect.height的滚动条高度4像素\n  const IEHeaderWrap = getIEVersion() <= 11 ? 4 : 0;\n  const affixHeaderHeight = (affixHeaderRef.current?.getBoundingClientRect().height || 0) - IEHeaderWrap;\n  /**\n   * Affixed Header\n   */\n  const renderFixedHeader = () => {\n    if (!showHeader) return null;\n    // 两类场景：1. 虚拟滚动，永久显示表头，直到表头消失在可视区域； 2. 表头吸顶，根据滚动情况判断是否显示吸顶表头\n    const headerOpacity = headerAffixedTop ? Number(showAffixHeader) : 1;\n    const barWidth = isWidthOverflow ? scrollbarWidth : 0;\n    const affixHeaderWrapHeight = affixHeaderHeight - barWidth;\n    const affixHeaderWrapHeightStyle = {\n      width: `${tableWidth.current}px`,\n      height: `${affixHeaderWrapHeight}px`,\n      opacity: headerOpacity,\n    };\n    const affixedHeader = Boolean((headerAffixedTop || virtualConfig.isVirtualScroll) && tableWidth.current) && (\n      <div\n        ref={affixHeaderRef}\n        style={{ width: `${tableWidth.current - affixedLeftBorder}px`, opacity: headerOpacity }}\n        className={classNames([\n          'scrollbar',\n          {\n            [tableBaseClass.affixedHeaderElm]: props.headerAffixedTop || virtualConfig.isVirtualScroll,\n          },\n        ])}\n      >\n        <table\n          className={classNames(tableElmClasses)}\n          style={{ ...tableElementStyles, width: tableElmWidth.current ? `${tableElmWidth.current}px` : undefined }}\n        >\n          {renderColGroup(true)}\n          {showHeader && <THead {...headProps} />}\n        </table>\n      </div>\n    );\n\n    // 添加这一层，是为了隐藏表头的横向滚动条。如果以后不需要照顾 IE 10 以下的项目，则可直接移除这一层\n    // 彼时，可更为使用 CSS 样式中的 .hideScrollbar()\n    const affixHeaderWithWrap = (\n      <div className={tableBaseClass.affixedHeaderWrap} style={affixHeaderWrapHeightStyle}>\n        {affixedHeader}\n      </div>\n    );\n    return affixHeaderWithWrap;\n  };\n\n  const renderAffixedHeader = () => {\n    if (!showHeader) return null;\n    return (\n      !!(virtualConfig.isVirtualScroll || props.headerAffixedTop) &&\n      (props.headerAffixedTop ? (\n        <Affix\n          offsetTop={0}\n          {...getAffixProps(props.headerAffixedTop, props.headerAffixProps)}\n          ref={headerTopAffixRef}\n          onFixedChange={onFixedChange}\n        >\n          {renderFixedHeader()}\n        </Affix>\n      ) : (\n        isFixedHeader && renderFixedHeader()\n      ))\n    );\n  };\n\n  /**\n   * Affixed Footer\n   */\n  const renderAffixedFooter = () => {\n    let marginScrollbarWidth = isWidthOverflow ? scrollbarWidth : 0;\n    if (bordered) {\n      marginScrollbarWidth += 1;\n    }\n    // Hack: Affix 组件，marginTop 临时使用 负 margin 定位位置\n    const totalMarginTop = tableFootHeight - lastTrHeight + marginScrollbarWidth;\n    const affixedFooter = Boolean(\n      (virtualConfig.isVirtualScroll || props.footerAffixedBottom) && props.footData?.length && tableWidth.current,\n    ) && (\n      <Affix\n        className={tableBaseClass.affixedFooterWrap}\n        onFixedChange={onFixedChange}\n        offsetBottom={marginScrollbarWidth || 0}\n        {...getAffixProps(props.footerAffixedBottom)}\n        ref={footerBottomAffixRef}\n        style={{ marginTop: `${-1 * totalMarginTop}px` }}\n      >\n        <div\n          ref={affixFooterRef}\n          style={{ width: `${tableWidth.current - affixedLeftBorder}px`, opacity: Number(showAffixFooter) }}\n          className={classNames([\n            'scrollbar',\n            { [tableBaseClass.affixedFooterElm]: props.footerAffixedBottom || virtualConfig.isVirtualScroll },\n          ])}\n        >\n          <table\n            className={tableElmClasses}\n            style={{ ...tableElementStyles, width: tableElmWidth.current ? `${tableElmWidth.current}px` : undefined }}\n          >\n            {renderColGroup(true)}\n            <TFoot\n              rowKey={props.rowKey}\n              isFixedHeader={isFixedHeader}\n              rowAndColFixedPosition={rowAndColFixedPosition}\n              footData={props.footData}\n              columns={spansAndLeafNodes?.leafColumns || columns}\n              rowAttributes={props.rowAttributes}\n              rowClassName={props.rowClassName}\n              thWidthList={thWidthList.current}\n              footerSummary={props.footerSummary}\n              rowspanAndColspanInFooter={props.rowspanAndColspanInFooter}\n            ></TFoot>\n          </table>\n        </div>\n      </Affix>\n    );\n    return affixedFooter;\n  };\n\n  const tableBodyProps: TableBodyProps = {\n    classPrefix,\n    ellipsisOverlayClassName: props.size !== 'medium' ? sizeClassNames[props.size] : '',\n    rowAndColFixedPosition,\n    showColumnShadow,\n    data: newData,\n    virtualConfig,\n    handleRowMounted: virtualConfig.handleRowMounted,\n    columns: spansAndLeafNodes?.leafColumns || columns,\n    tableRef,\n    tableContentRef,\n    tableWidth,\n    isWidthOverflow,\n    allTableClasses,\n    rowKey: props.rowKey || 'id',\n    scroll: props.scroll,\n    cellEmptyContent: props.cellEmptyContent,\n    renderExpandedRow: props.renderExpandedRow,\n    ...pick(props, extendTableProps),\n    pagination: innerPagination,\n  };\n  const translate = `translate(0, ${virtualConfig.scrollHeight + (affixHeaderHeight || 0) + (tableFootHeight || 0)}px)`;\n  const virtualStyle = {\n    transform: translate,\n    msTransform: translate,\n    MozTransform: translate,\n    WebkitTransform: translate,\n  };\n  const tableContent = (\n    <div\n      ref={tableContentRef}\n      className={tableBaseClass.content}\n      style={tableContentStyles}\n      onScroll={onInnerVirtualScroll}\n    >\n      {virtualConfig.isVirtualScroll && <div className={virtualScrollClasses.cursor} style={virtualStyle} />}\n\n      <table\n        ref={tableElmRef}\n        className={classNames(tableElmClasses)}\n        style={{\n          ...tableElementStyles,\n          width:\n            resizable && isWidthOverflow && tableElmWidth.current\n              ? `${tableElmWidth.current}px`\n              : tableElementStyles.width,\n        }}\n      >\n        {renderColGroup(false)}\n        {useMemo(() => {\n          if (!showHeader) return null;\n          return <THead {...{ ...headProps, thWidthList: resizable ? thWidthList.current : {} }} />;\n          // eslint-disable-next-line\n        }, headUseMemoDependencies)}\n\n        {useMemo(\n          () => (\n            <TBody {...tableBodyProps} />\n          ),\n          // eslint-disable-next-line\n          [\n            allTableClasses,\n            tableBodyProps.ellipsisOverlayClassName,\n            tableBodyProps.rowAndColFixedPosition,\n            tableBodyProps.showColumnShadow,\n            tableBodyProps.data,\n            tableBodyProps.columns,\n            tableRef,\n            tableContentRef,\n            tableWidth,\n            isWidthOverflow,\n            virtualConfig,\n            props.rowKey,\n            props.rowClassName,\n            props.rowAttributes,\n            props.loading,\n            props.empty,\n            props.fixedRows,\n            props.firstFullRow,\n            props.lastFullRow,\n            props.rowspanAndColspan,\n            props.scroll,\n            props.cellEmptyContent,\n          ],\n        )}\n\n        {useMemo(\n          () => (\n            <TFoot\n              rowKey={props.rowKey}\n              isFixedHeader={isFixedHeader}\n              rowAndColFixedPosition={rowAndColFixedPosition}\n              footData={props.footData}\n              columns={spansAndLeafNodes?.leafColumns || columns}\n              rowAttributes={props.rowAttributes}\n              rowClassName={props.rowClassName}\n              thWidthList={thWidthList.current}\n              footerSummary={props.footerSummary}\n              rowspanAndColspanInFooter={props.rowspanAndColspanInFooter}\n              virtualScroll={virtualConfig.isVirtualScroll}\n            ></TFoot>\n          ),\n          // eslint-disable-next-line\n          [\n            isFixedHeader,\n            rowAndColFixedPosition,\n            spansAndLeafNodes,\n            columns,\n            thWidthList,\n            props.rowKey,\n            props.footData,\n            props.rowAttributes,\n            props.rowClassName,\n            props.footerSummary,\n            virtualConfig.isVirtualScroll,\n          ],\n        )}\n      </table>\n    </div>\n  );\n\n  const { loading, loadingProps } = props;\n  const customLoadingText = loading;\n  const loadingContent = tableRef.current && loading !== undefined && (\n    <Loading\n      loading={!!loading}\n      text={customLoadingText}\n      attach={() => tableRef.current}\n      showOverlay\n      size=\"small\"\n      {...loadingProps}\n    />\n  );\n\n  const { topContent, bottomContent } = props;\n  const paginationNode = pagination ? (\n    <div ref={paginationRef} className={tableBaseClass.paginationWrap} style={{ opacity: Number(showAffixPagination) }}>\n      {renderPagination()}\n    </div>\n  ) : null;\n  const bottom = !!bottomContent && (\n    <div ref={bottomContentRef} className={tableBaseClass.bottomContent}>\n      {bottomContent}\n    </div>\n  );\n\n  const affixedHeaderContent = useMemo(\n    renderAffixedHeader,\n    // eslint-disable-next-line\n    [\n      // eslint-disable-next-line\n      ...headUseMemoDependencies,\n      showAffixHeader,\n      tableWidth,\n      tableElmWidth,\n      affixHeaderRef,\n      affixedLeftBorder,\n      tableElmClasses,\n      tableElementStyles,\n      columns,\n      spansAndLeafNodes,\n      showHeader,\n      props.headerAffixedTop,\n    ],\n  );\n\n  const affixedFooterContent = useMemo(\n    renderAffixedFooter,\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n      showAffixFooter,\n      isFixedHeader,\n      rowAndColFixedPosition,\n      spansAndLeafNodes,\n      columns,\n      thWidthList,\n      tableBaseClass,\n      tableElementStyles,\n      tableElmWidth,\n      affixFooterRef,\n      affixedLeftBorder,\n      bordered,\n      isWidthOverflow,\n      scrollbarWidth,\n      tableElmClasses,\n      tableFootHeight,\n      lastTrHeight,\n      tableWidth,\n      virtualConfig.isVirtualScroll,\n      props.rowKey,\n      props.footData,\n      props.rowAttributes,\n      props.rowClassName,\n      props.footerSummary,\n      props.footerAffixedBottom,\n      props.rowspanAndColspanInFooter,\n      tableWidth.current,\n    ],\n  );\n\n  const scrollbarDivider = useMemo(() => {\n    if (!showRightDivider) return null;\n    return (\n      <div\n        className={tableBaseClass.scrollbarDivider}\n        style={{\n          right: `${scrollbarWidth}px`,\n          bottom: dividerBottom ? `${dividerBottom}px` : undefined,\n          height: `${tableContentRef.current?.getBoundingClientRect().height}px`,\n        }}\n      ></div>\n    );\n  }, [tableBaseClass, showRightDivider, scrollbarWidth, dividerBottom, tableContentRef]);\n\n  const affixedScrollbar = props.horizontalScrollAffixedBottom && (\n    <Affix\n      offsetBottom={0}\n      {...getAffixProps(props.horizontalScrollAffixedBottom)}\n      ref={horizontalScrollAffixRef}\n      style={{ marginTop: `-${scrollbarWidth * 2}px` }}\n    >\n      <div\n        ref={horizontalScrollbarRef}\n        className={classNames(['scrollbar', tableBaseClass.obviousScrollbar])}\n        style={{\n          width: `${tableWidth.current}px`,\n          overflow: 'auto',\n          opacity: Number(showAffixFooter),\n        }}\n      >\n        <div style={{ width: `${tableElmWidth.current}px`, height: '5px' }}></div>\n      </div>\n    </Affix>\n  );\n\n  const affixedPaginationContent = props.paginationAffixedBottom ? (\n    <Affix offsetBottom={0} {...getAffixProps(props.paginationAffixedBottom)} ref={paginationAffixRef}>\n      {paginationNode}\n    </Affix>\n  ) : (\n    paginationNode\n  );\n\n  const tableElements = (\n    <>\n      {!!topContent && <div className={tableBaseClass.topContent}>{topContent}</div>}\n\n      {affixedHeaderContent}\n\n      {tableContent}\n\n      {affixedFooterContent}\n\n      {loadingContent}\n\n      {scrollbarDivider}\n\n      {bottom}\n\n      {/* 吸底的滚动条 */}\n      {affixedScrollbar}\n\n      {/* 吸底的分页器 */}\n      {affixedPaginationContent}\n\n      {/* 调整列宽时的指示线。由于层级需要比较高，因而放在根节点，避免被吸顶表头覆盖。非必要情况，请勿调整辅助线位置 */}\n      {resizable && <div ref={resizeLineRef} className={tableBaseClass.resizeLine} style={resizeLineStyle}></div>}\n    </>\n  );\n\n  if (resizable && tableLayout === 'auto') {\n    log.warn(\n      'Table',\n      'table-layout can not be `auto`, cause you are using column resizable, set `table-layout: fixed` please.',\n    );\n  }\n\n  if (!showElement) {\n    <div ref={tableRef}></div>;\n  }\n\n  return (\n    <div ref={tableRef} className={classNames(dynamicBaseTableClasses)} style={{ position: 'relative', ...style }}>\n      {tableElements}\n    </div>\n  );\n});\n\nBaseTable.displayName = 'BaseTable';\n\nexport default BaseTable as <T extends TableRowData = TableRowData>(\n  props: BaseTableProps<T> & RefAttributes<BaseTableRef>,\n) => React.ReactElement;\n"],"names":["BASE_TABLE_EVENTS","BASE_TABLE_ALL_EVENTS","ROW_LISTENERS","map","t","concat","BaseTable","forwardRef","originalProps","ref","_affixHeaderRef$curre","props","useDefaultProps","baseTableDefaultProps","_props$showHeader","showHeader","tableLayout","height","data","columns","style","headerAffixedTop","bordered","resizable","lazyLoad","pagination","tableRef","useRef","tableElmRef","bottomContentRef","_useState","useState","_useState2","_slicedToArray","tableFootHeight","setTableFootHeight","_useState3","_useState4","lastTrHeight","setLastTrHeight","allTableClasses","useClassName","classPrefix","virtualScrollClasses","tableLayoutClasses","tableBaseClass","tableColFixedClasses","_useStyle","useStyle","tableClasses","sizeClassNames","tableContentStyles","tableElementStyles","_useTableHeader","useTableHeader","isMultipleHeader","spansAndLeafNodes","thList","finalColumns","useMemo","leafColumns","_useElementLazyRender","useElementLazyRender","showElement","paginationAffixRef","horizontalScrollAffixRef","headerTopAffixRef","footerBottomAffixRef","_useAffix","useAffix","affixHeaderRef","affixFooterRef","horizontalScrollbarRef","paginationRef","showAffixHeader","showAffixFooter","showAffixPagination","onHorizontalScroll","setTableContentRef","updateAffixHeaderOrFooter","_useFixed","useFixed","scrollbarWidth","tableWidth","tableElmWidth","tableContentRef","isFixedHeader","isWidthOverflow","isFixedColumn","thWidthList","showColumnShadow","rowAndColFixedPosition","setData","refreshTable","setTableElmWidth","emitScrollEvent","setUseFixedTableElmRef","updateColumnFixedShadow","getThWidthList","updateThWidthList","addTableResizeObserver","updateTableAfterColumnResize","_usePagination","usePagination","dataSource","innerPagination","isPaginateData","renderPagination","columnResizeParams","useColumnResize","onColumnResizeChange","resizeLineRef","resizeLineStyle","setEffectColMap","updateTableWidthOnColumnChange","dynamicBaseTableClasses","classNames","_defineProperty","headerFixed","columnFixed","widthOverflow","multipleHeader","leftShadow","left","rightShadow","right","columnResizableTable","tableElmClasses","fullHeight","showRightDivider","_useState5","_useState6","dividerBottom","setDividerBottom","useEffect","_bottomContentRef$cur","_paginationRef$curren","bottomRect","current","getBoundingClientRect","paginationRect","bottom","_useState7","_useState8","lastLeafColumns","setLastLeafColumns","colKey","join","_props$onLeafColumnsC","onLeafColumnsChange","call","onFixedChange","timer","setTimeout","clearTimeout","virtualScrollParams","scroll","fixedRows","virtualConfig","useVirtualScroll","lastScrollY","onInnerVirtualScroll","e","target","top","scrollTop","isVirtualScroll","handleScroll","scrollColumnIntoView","thDom","querySelector","fixedThDom","querySelectorAll","totalWidth","i","len","length","width","domRect","contentRect","distance","scrollTo","behavior","useImperativeHandle","tableElement","tableHtmlElement","tableContentElement","affixHeaderElement","scrollToElement","getTFootHeight","requestAnimationFrame","_tableElmRef$current$","offsetHeight","getLastTrHeight","firstFullRow","tbody","allTr","lastTr","footData","footerSummary","newData","renderColGroup","React","createElement","col","index","formatCSSUnit","minWidth","key","headProps","maxHeight","ellipsisOverlayClassName","size","attach","thDraggable","headUseMemoDependencies","affixedLeftBorder","IEHeaderWrap","getIEVersion","affixHeaderHeight","renderFixedHeader","headerOpacity","Number","barWidth","affixHeaderWrapHeight","affixHeaderWrapHeightStyle","opacity","affixedHeader","Boolean","className","affixedHeaderElm","_objectSpread","THead","affixHeaderWithWrap","affixedHeaderWrap","renderAffixedHeader","Affix","offsetTop","getAffixProps","headerAffixProps","renderAffixedFooter","_props$footData","marginScrollbarWidth","totalMarginTop","affixedFooter","footerAffixedBottom","affixedFooterWrap","offsetBottom","marginTop","affixedFooterElm","TFoot","rowKey","rowAttributes","rowClassName","rowspanAndColspanInFooter","tableBodyProps","handleRowMounted","cellEmptyContent","renderExpandedRow","pick","extendTableProps","translate","scrollHeight","virtualStyle","transform","msTransform","MozTransform","WebkitTransform","tableContent","content","onScroll","cursor","TBody","loading","empty","lastFullRow","rowspanAndColspan","virtualScroll","loadingProps","customLoadingText","loadingContent","Loading","text","showOverlay","topContent","bottomContent","paginationNode","paginationWrap","affixedHeaderContent","affixedFooterContent","scrollbarDivider","_tableContentRef$curr","affixedScrollbar","horizontalScrollAffixedBottom","obviousScrollbar","overflow","affixedPaginationContent","paginationAffixedBottom","tableElements","Fragment","resizeLine","log","warn","position","displayName"],"mappings":"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"}